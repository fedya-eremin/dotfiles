((elpaca--cache-version . 0.1) (elpaca-menu-extensions (elpaca-use-package :source "Elpaca extensions" :description "Elpaca use-package support." :recipe (:package "elpaca-use-package" :wait t :repo "https://github.com/progfolio/elpaca.git" :files ("extensions/elpaca-use-package.el") :main "extensions/elpaca-use-package.el" :build (:not elpaca--compile-info)))) (elpaca-menu-org (org :source "Org" :description "Outline-based notes management and organizer" :url "https:/orgmode.org" :recipe (:package "org" :repo ("https://git.savannah.gnu.org/git/emacs/org-mode.git" . "org") :pre-build (progn (require 'elpaca-menu-org) (elpaca-menu-org--build)) :autoloads "org-loaddefs.el" :build (:not elpaca--generate-autoloads-async) :files (:defaults ("etc/styles/" "etc/styles/*" "doc/*.texi")))) (org-contrib :source "Org" :description "Contributed Org packages in search of new maintainers" :url "https://git.sr.ht/~bzg/org-contrib" :recipe (:package "org-contrib" :repo ("https://git.sr.ht/~bzg/org-contrib" . "org-contrib") :files (:defaults)))) (elpaca-menu-melpa (0blayout :source "MELPA" :recipe (:package "0blayout" :repo "etu/0blayout-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Layout grouping with ease" :date (23835 50640) :url "https://github.com/etu/0blayout-mode") (0x0 :source "MELPA" :recipe (:package "0x0" :fetcher sourcehut :repo "willvaughn/emacs-0x0" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Upload sharing to 0x0.st" :date (25829 8656) :url "https://git.sr.ht/~willvaughn/emacs-0x0") (0xc :source "MELPA" :recipe (:package "0xc" :fetcher github :repo "AdamNiederer/0xc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Base conversion made easy" :date (24468 38352) :url "https://github.com/AdamNiederer/0xc") (2bit :source "MELPA" :recipe (:package "2bit" :fetcher github :repo "davep/2bit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library for reading data from 2bit files" :date (24430 23120) :url "https://github.com/davep/2bit.el") (750words :source "MELPA" :recipe (:package "750words" :fetcher github :repo "zzamboni/750words-client" :files ("750words.el")) :description "Emacs integration and Org exporter for 750words.com" :date (25270 9680) :url "https://github.com/zzamboni/750words-client") (@ :source "MELPA" :recipe (:package "@" :fetcher github :repo "skeeto/at-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple-inheritance prototype-based objects DSL" :date (26352 34128) :url "https://github.com/skeeto/at-el") (a :source "MELPA" :recipe (:package "a" :repo "plexus/a.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Associative data structure functions" :date (24915 33360) :url "https://github.com/plexus/a.el") (aa-edit-mode :source "MELPA" :recipe (:package "aa-edit-mode" :fetcher github :repo "zonuexe/aa-edit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing AA(S_JIS Art) and .mlt file" :date (22655 55120) :url "https://github.com/zonuexe/aa-edit-mode") (aangit :source "MELPA" :recipe (:package "aangit" :fetcher github :repo "stephenwithav/aangit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly scaffold new Angular apps with Aangit" :date (25928 592) :url "https://github.com/stephenwithav/aangit") (aas :source "MELPA" :recipe (:package "aas" :fetcher github :repo "ymarco/auto-activating-snippets" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Snippet expansions mid-typing" :date (25601 3664) :url "https://github.com/ymarco/auto-activating-snippets") (abc-mode :source "MELPA" :recipe (:package "abc-mode" :fetcher github :repo "mkjunker/abc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing abc music files" :date (25293 57552) :url "https://github.com/mkjunker/abc-mode") (abgaben :source "MELPA" :recipe (:package "abgaben" :repo "akoehn/abgaben" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Review and correct assignments received by mail" :date (23056 40784) :url "https://gitlab.com/akoehn/abgaben") (abl-mode :source "MELPA" :recipe (:package "abl-mode" :fetcher github :repo "afroisalreadyinu/abl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python TDD minor mode" :date (26150 53200) :url "https://github.com/afroisalreadyinu/abl-mode") (abridge-diff :source "MELPA" :recipe (:package "abridge-diff" :repo "jdtsmith/abridge-diff" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Abridge long line-based diff hunks, including in magit" :date (25606 21584) :url "https://github.com/jdtsmith/abridge-diff") (abs-mode :source "MELPA" :recipe (:package "abs-mode" :repo "abstools/abs-mode" :fetcher github :files ("abs-mode.el" "snippets")) :description "Major mode for the modeling language Abs" :date (26270 51280) :url "https://github.com/abstools/abs-mode") (abyss-theme :source "MELPA" :recipe (:package "abyss-theme" :fetcher github :repo "mgrbyte/emacs-abyss-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme with contrasting colours" :date (22920 54480) :url "https://github.com/mgrbyte/emacs-abyss-theme") (ac-alchemist :source "MELPA" :recipe (:package "ac-alchemist" :fetcher github :repo "emacsorphanage/ac-alchemist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source for alchemist" :date (21997 64208) :url "https://github.com/emacsorphanage/ac-alchemist") (ac-c-headers :source "MELPA" :recipe (:package "ac-c-headers" :repo "zk-phi/ac-c-headers" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source for C headers" :date (24376 19664) :url "https://github.com/zk-phi/ac-c-headers") (ac-capf :source "MELPA" :recipe (:package "ac-capf" :fetcher github :repo "emacsorphanage/ac-capf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source with completion-at-point" :date (22069 11216) :url "https://github.com/emacsorphanage/ac-capf") (ac-clang :source "MELPA" :recipe (:package "ac-clang" :fetcher github :repo "yaruopooner/ac-clang" :files (:defaults "*.png" "build" "clang-server")) :description "Auto Completion source by libclang for GNU Emacs" :date (23363 52432) :url "https://github.com/yaruopooner/ac-clang") (ac-dcd :source "MELPA" :recipe (:package "ac-dcd" :repo "atilaneves/ac-dcd" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto Completion source for dcd for GNU Emacs" :date (24712 31568) :url "https://github.com/atilaneves/ac-dcd") (ac-emacs-eclim :source "MELPA" :recipe (:package "ac-emacs-eclim" :fetcher github :repo "emacs-eclim/emacs-eclim" :files ("ac-emacs-eclim.el")) :description "Auto-complete source for eclim" :date (23446 56144) :url "https://github.com/emacs-eclim/emacs-eclim") (ac-emmet :source "MELPA" :recipe (:package "ac-emmet" :repo "yasuyk/ac-emmet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete sources for emmet-mode's snippets" :date (21084 19776) :url "https://github.com/yasuyk/ac-emmet") (ac-emoji :source "MELPA" :recipe (:package "ac-emoji" :fetcher github :repo "emacsorphanage/ac-emoji" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source of Emoji" :date (21976 58064) :url "https://github.com/emacsorphanage/ac-emoji") (ac-etags :source "MELPA" :recipe (:package "ac-etags" :fetcher github :repo "emacsorphanage/ac-etags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Etags/ctags completion source for auto-complete" :date (22510 53840) :url "https://github.com/emacsorphanage/ac-etags") (ac-geiser :source "MELPA" :recipe (:package "ac-geiser" :fetcher github :repo "xiaohanyu/ac-geiser" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete backend for geiser" :date (24177 14928) :url "https://github.com/xiaohanyu/ac-geiser") (ac-haskell-process :source "MELPA" :recipe (:package "ac-haskell-process" :fetcher github :repo "purcell/ac-haskell-process" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haskell auto-complete source which uses the current haskell process" :date (21816 3024) :url "https://github.com/purcell/ac-haskell-process") (ac-helm :source "MELPA" :recipe (:package "ac-helm" :repo "yasuyk/ac-helm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for auto-complete" :date (22252 27728) :url "https://github.com/yasuyk/ac-helm") (ac-html :source "MELPA" :recipe (:package "ac-html" :fetcher github :repo "victorteokw/ac-html" :files (:defaults "completion-data")) :description "Auto complete source for html tags and attributes" :date (22033 37712) :url "https://github.com/victorteokw/ac-html") (ac-html-angular :source "MELPA" :recipe (:package "ac-html-angular" :fetcher github :repo "osv/ac-html-angular" :files (:defaults "html-stuff")) :description "Auto complete angular15 data for `ac-html' and `company-web'" :date (22140 23760) :url "https://github.com/osv/ac-html-angular") (ac-html-bootstrap :source "MELPA" :recipe (:package "ac-html-bootstrap" :fetcher github :repo "osv/ac-html-bootstrap" :files ("*.el" "html-stuff" "fa-html-stuff")) :description "Auto complete bootstrap3/fontawesome classes for `ac-html' and `company-web'" :date (22230 720) :url "https://github.com/osv/ac-html-bootstrap") (ac-html-csswatcher :source "MELPA" :recipe (:package "ac-html-csswatcher" :fetcher github :repo "osv/ac-html-csswatcher" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Css/less class/id completion with `ac-html' or `company-web'" :date (22117 62288) :url "https://github.com/osv/ac-html-csswatcher") (ac-inf-ruby :source "MELPA" :recipe (:package "ac-inf-ruby" :fetcher github :repo "purcell/ac-inf-ruby" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable auto-complete in inf-ruby sessions" :date (21125 11200) :url "https://github.com/purcell/ac-inf-ruby") (ac-ispell :source "MELPA" :recipe (:package "ac-ispell" :fetcher github :repo "emacsorphanage/ac-ispell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ispell completion source for auto-complete" :date (22069 11216) :url "https://github.com/emacsorphanage/ac-ispell") (ac-js2 :source "MELPA" :recipe (:package "ac-js2" :fetcher github :repo "ScottyB/ac-js2" :files ("*.js" "*.el")) :description "Auto-complete source for Js2-mode, with navigation" :date (23594 33616) :url "https://github.com/ScottyB/ac-js2") (ac-math :source "MELPA" :recipe (:package "ac-math" :repo "vspinu/ac-math" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete sources for input of mathematical symbols and latex tags" :date (21607 48848) :url "https://github.com/vspinu/ac-math") (ac-mozc :source "MELPA" :recipe (:package "ac-mozc" :fetcher github :repo "igjit/ac-mozc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete sources for Japanese input using Mozc" :date (21743 35152) :url "https://github.com/igjit/ac-mozc") (ac-octave :source "MELPA" :recipe (:package "ac-octave" :fetcher github :repo "coldnew/ac-octave" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-complete source for Octave" :date (23238 36432) :url "https://github.com/coldnew/ac-octave") (ac-php :source "MELPA" :recipe (:package "ac-php" :repo "xcwen/ac-php" :fetcher github :files ("ac-php.el")) :description "Auto Completion source for PHP" :date (26116 35024) :url "https://github.com/xcwen/ac-php") (ac-php-core :source "MELPA" :recipe (:package "ac-php-core" :fetcher github :repo "xcwen/ac-php" :files ("ac-php-comm-tags-data.el" "ac-php-core.el" "phpctags" "*.json")) :description "The core library of the ac-php" :date (26154 50256) :url "https://github.com/xcwen/ac-php") (ac-racer :source "MELPA" :recipe (:package "ac-racer" :fetcher github :repo "emacsorphanage/ac-racer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source of racer" :date (22649 16336) :url "https://github.com/emacsorphanage/ac-racer") (ac-rtags :source "MELPA" :recipe (:package "ac-rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/ac-rtags.el")) :description "Auto-complete back-end for RTags" :date (24062 34768) :url "https://github.com/Andersbakken/rtags") (ac-skk :source "MELPA" :recipe (:package "ac-skk" :repo "myuhe/ac-skk.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete-mode source for DDSKK a.k.a Japanese input method" :date (21665 49360) :url "https://github.com/myuhe/ac-skk.el") (ac-slime :source "MELPA" :recipe (:package "ac-slime" :repo "purcell/ac-slime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-complete source using slime completions" :date (23026 19664) :url "https://github.com/purcell/ac-slime") (ac-sly :source "MELPA" :recipe (:package "ac-sly" :fetcher github :repo "qoocku/ac-sly" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-complete source using sly completions" :date (22906 21584) :url "https://github.com/qoocku/ac-sly") (academic-phrases :source "MELPA" :recipe (:package "academic-phrases" :fetcher github :repo "nashamri/academic-phrases" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bypass that mental block when writing your papers" :date (23380 61520) :url "https://github.com/nashamri/academic-phrases") (accent :source "MELPA" :recipe (:package "accent" :repo "eliascotto/accent" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Popup for accented characters (diacritics)" :date (26040 4560) :url "https://github.com/eliascotto/accent") (ace-flyspell :source "MELPA" :recipe (:package "ace-flyspell" :repo "cute-jumper/ace-flyspell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to and correct spelling errors using `ace-jump-mode' and flyspell" :date (22720 28880) :url "https://github.com/cute-jumper/ace-flyspell") (ace-isearch :source "MELPA" :recipe (:package "ace-isearch" :repo "tam17aki/ace-isearch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A seamless bridge between isearch, ace-jump-mode, avy, helm-swoop and swiper" :date (25329 31056) :url "https://github.com/tam17aki/ace-isearch") (ace-jump-buffer :source "MELPA" :recipe (:package "ace-jump-buffer" :repo "waymondo/ace-jump-buffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast buffer switching extension to `avy'" :date (23031 37584) :url "https://github.com/waymondo/ace-jump-buffer") (ace-jump-helm-line :source "MELPA" :recipe (:package "ace-jump-helm-line" :repo "cute-jumper/ace-jump-helm-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ace-jump to a candidate in helm window" :date (22493 44752) :url "https://github.com/cute-jumper/ace-jump-helm-line") (ace-jump-mode :source "MELPA" :recipe (:package "ace-jump-mode" :repo "winterTTr/ace-jump-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A quick cursor location minor mode for emacs" :date (21405 64320) :url "https://github.com/winterTTr/ace-jump-mode") (ace-jump-zap :source "MELPA" :recipe (:package "ace-jump-zap" :repo "waymondo/ace-jump-zap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Character zapping, `ace-jump-mode` style" :date (22891 54224) :url "https://github.com/waymondo/ace-jump-zap") (ace-link :source "MELPA" :recipe (:package "ace-link" :repo "abo-abo/ace-link" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly follow links" :date (26403 61392) :url "https://github.com/abo-abo/ace-link") (ace-mc :source "MELPA" :recipe (:package "ace-mc" :repo "mm--/ace-mc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add multiple cursors quickly using ace jump" :date (23641 63824) :url "https://github.com/mm--/ace-mc") (ace-pinyin :source "MELPA" :recipe (:package "ace-pinyin" :repo "cute-jumper/ace-pinyin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to Chinese characters using avy or ace-jump-mode" :date (24872 208) :url "https://github.com/cute-jumper/ace-pinyin") (ace-popup-menu :source "MELPA" :recipe (:package "ace-popup-menu" :repo "mrkkrp/ace-popup-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace GUI popup menu with something more efficient" :date (25726 19664) :url "https://github.com/mrkkrp/ace-popup-menu") (ace-window :source "MELPA" :recipe (:package "ace-window" :repo "abo-abo/ace-window" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly switch windows" :date (25372 64208) :url "https://github.com/abo-abo/ace-window") (achievements :source "MELPA" :recipe (:package "achievements" :fetcher gitlab :repo "gvol/emacs-achievements" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Achievements for emacs usage" :date (26244 27216) :url "https://gitlab.com/gvol/emacs-achievements") (ack-menu :source "MELPA" :recipe (:package "ack-menu" :fetcher github :repo "chumpage/ack-menu" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A menu-based front-end for ack" :date (21830 35920) :url "https://github.com/chumpage/ack-menu") (acme-theme :source "MELPA" :recipe (:package "acme-theme" :fetcher github :repo "ianyepan/acme-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme based on Acme & Sam from Plan 9" :date (24715 7760) :url "https://github.com/ianyepan/acme-emacs-theme") (act-mode :source "MELPA" :recipe (:package "act-mode" :repo "rafaelcn/act" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the ACT programming language" :date (26264 12496) :url "https://github.com/rafaelcn/act") (actionscript-mode :source "MELPA" :recipe (:package "actionscript-mode" :fetcher github :repo "austinhaas/actionscript-mode" :files ("actionscript-mode.el")) :description "A simple mode for editing Actionscript 3 files" :date (23305 51920) :url "https://github.com/austinhaas/actionscript-mode") (activity-watch-mode :source "MELPA" :recipe (:package "activity-watch-mode" :fetcher github :repo "pauldub/activity-watch-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic time tracking extension" :date (26096 49744) :url "https://github.com/pauldub/activity-watch-mode") (ada-ts-mode :source "MELPA" :recipe (:package "ada-ts-mode" :fetcher github :repo "brownts/ada-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Ada using Tree-sitter" :date (26341 63824) :url "https://github.com/brownts/ada-ts-mode") (adafruit-wisdom :source "MELPA" :recipe (:package "adafruit-wisdom" :fetcher github :repo "gonewest818/adafruit-wisdom.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get/display adafruit.com quotes" :date (24137 44368) :url "https://github.com/gonewest818/adafruit-wisdom.el") (add-hooks :source "MELPA" :recipe (:package "add-hooks" :repo "nickserv/add-hooks" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions for setting multiple hooks" :date (23093 35152) :url "https://github.com/nickserv/add-hooks") (add-node-modules-path :source "MELPA" :recipe (:package "add-node-modules-path" :repo "codesuki/add-node-modules-path" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add node_modules to your exec-path" :date (25606 21584) :url "https://github.com/codesuki/add-node-modules-path") (addressbook-bookmark :source "MELPA" :recipe (:package "addressbook-bookmark" :fetcher github :repo "thierryvolpiatto/addressbook-bookmark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An address book based on Standard Emacs bookmarks" :date (26149 32336) :url "https://github.com/thierryvolpiatto/addressbook-bookmark") (ado-mode :source "MELPA" :recipe (:package "ado-mode" :fetcher github :repo "louabill/ado-mode" :files (:defaults "scripts" "templates")) :description "Major mode for editing Stata-related files" :date (26355 10320) :url "https://github.com/louabill/ado-mode") (adoc-mode :source "MELPA" :recipe (:package "adoc-mode" :fetcher github :repo "bbatsov/adoc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing AsciiDoc files" :date (26065 7760) :url "https://github.com/bbatsov/adoc-mode") (adwaita-dark-theme :source "MELPA" :recipe (:package "adwaita-dark-theme" :fetcher gitlab :repo "jessieh/adwaita-dark-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark color scheme inspired by Adwaita" :date (25971 33744) :url "https://gitlab.com/jessieh/adwaita-dark-theme") (aes :source "MELPA" :recipe (:package "aes" :repo "Sauermann/emacs-aes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Implementation of AES" :date (25002 34128) :url "https://github.com/Sauermann/emacs-aes") (affe :source "MELPA" :recipe (:package "affe" :repo "minad/affe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Asynchronous Fuzzy Finder for Emacs" :date (26356 31184) :url "https://github.com/minad/affe") (afterglow :source "MELPA" :recipe (:package "afterglow" :fetcher github :repo "ernstvanderlinden/emacs-afterglow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Temporary Highlighting after Function Calls" :date (26095 28880) :url "https://github.com/ernstvanderlinden/emacs-afterglow") (afternoon-theme :source "MELPA" :recipe (:package "afternoon-theme" :fetcher github :repo "ozanmakes/emacs-afternoon-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme with a deep blue background" :date (21191 5824) :url "https://github.com/ozanmakes/emacs-afternoon-theme") (ag :source "MELPA" :recipe (:package "ag" :repo "Wilfred/ag.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A front-end for ag ('the silver searcher'), the C ack replacement" :date (24476 32464) :url "https://github.com/Wilfred/ag.el") (agda-editor-tactics :source "MELPA" :recipe (:package "agda-editor-tactics" :fetcher github :repo "alhassy/next-700-module-systems" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An editor tactic to produce Σ-types from Agda records" :date (24948 30672) :url "https://github.com/alhassy/next-700-module-systems") (age :source "MELPA" :recipe (:package "age" :fetcher github :repo "anticomputer/age.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Age Encryption Library" :date (26133 44112) :url "https://github.com/anticomputer/age.el") (agenix :source "MELPA" :recipe (:package "agenix" :repo "t4ccer/agenix.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Decrypt and encrypt agenix secrets" :date (26202 14928) :url "https://github.com/t4ccer/agenix.el") (aggressive-fill-paragraph :source "MELPA" :recipe (:package "aggressive-fill-paragraph" :fetcher github :repo "davidshepherd7/aggressive-fill-paragraph-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode to automatically keep paragraphs filled" :date (26058 34512) :url "https://github.com/davidshepherd7/aggressive-fill-paragraph-mode") (aggressive-indent :source "MELPA" :recipe (:package "aggressive-indent" :repo "Malabarba/aggressive-indent-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to aggressively keep your code always indented" :date (25535 9040) :url "https://github.com/Malabarba/aggressive-indent-mode") (agtags :source "MELPA" :recipe (:package "agtags" :repo "vietor/agtags" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A frontend to GNU Global" :date (26241 51024) :url "https://github.com/vietor/agtags") (ah :source "MELPA" :recipe (:package "ah" :repo "takaxp/ah" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Additional hooks" :date (25316 19024) :url "https://github.com/takaxp/ah") (ahg :source "MELPA" :recipe (:package "ahg" :fetcher git :url "https://bitbucket.org/agriggio/ahg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alberto's Emacs interface for Mercurial (Hg)" :date (25844 62416) :url "https://bitbucket.org/agriggio/ahg") (ahk-mode :source "MELPA" :recipe (:package "ahk-mode" :fetcher github :repo "punassuming/ahk-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing AHK (AutoHotkey and AutoHotkey_L)" :date (24210 12240) :url "https://github.com/punassuming/ahk-mode") (ahungry-theme :source "MELPA" :recipe (:package "ahungry-theme" :repo "ahungry/color-theme-ahungry" :files ("ahungry-theme.el") :fetcher github) :description "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)" :date (23152 56528) :url "https://github.com/ahungry/color-theme-ahungry") (aiken-mode :source "MELPA" :recipe (:package "aiken-mode" :fetcher github :repo "aiken-lang/aiken-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Aiken" :date (25866 3024) :url "https://github.com/aiken-lang/aiken-mode") (aio :source "MELPA" :recipe (:package "aio" :fetcher github :repo "skeeto/emacs-aio" :files ("aio.el" "README.md" "UNLICENSE")) :description "Async/await for Emacs Lisp" :date (24287 63568) :url "https://github.com/skeeto/emacs-aio") (airline-themes :source "MELPA" :recipe (:package "airline-themes" :fetcher github :repo "AnthonyDiGirolamo/airline-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim-airline themes for emacs powerline" :date (26199 38736) :url "https://github.com/AnthonyDiGirolamo/airline-themes") (airplay :source "MELPA" :recipe (:package "airplay" :fetcher github :repo "gongo/airplay-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Airplay bindings to Emacs" :date (20761 19904) :url "https://github.com/gongo/airplay-el") (alan-mode :source "MELPA" :recipe (:package "alan-mode" :fetcher github :repo "alan-platform/AlanForEmacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Alan files" :date (26091 31824) :url "https://github.com/alan-platform/AlanForEmacs") (alarm-clock :source "MELPA" :recipe (:package "alarm-clock" :fetcher github :repo "wlemuel/alarm-clock" :files (:defaults "*.mp3")) :description "Alarm Clock" :date (26018 63952) :url "https://github.com/wlemuel/alarm-clock") (alchemist :source "MELPA" :recipe (:package "alchemist" :fetcher github :repo "tonini/alchemist.el" :files (:defaults "*.exs" "alchemist-server")) :description "Elixir tooling integration into Emacs" :date (23205 39120) :url "https://github.com/tonini/alchemist.el") (alda-mode :source "MELPA" :recipe (:package "alda-mode" :fetcher gitlab :repo "jgkamat/alda-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Alda major mode" :date (25645 57680) :url "https://gitlab.com/jgkamat/alda-mode") (alect-themes :source "MELPA" :recipe (:package "alect-themes" :repo "alezost/alect-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configurable light, dark and black themes for Emacs 24 or later" :date (24945 54480) :url "https://github.com/alezost/alect-themes") (alectryon :source "MELPA" :recipe (:package "alectryon" :fetcher github :repo "cpitclaudel/alectryon" :files ("etc/elisp/alectryon*.el")) :description "Toggle between Coq and reStructuredText" :date (25391 28624) :url "https://github.com/cpitclaudel/alectryon") (alert :source "MELPA" :recipe (:package "alert" :fetcher github :repo "jwiegley/alert" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Growl-style notification system for Emacs" :date (25495 38480) :url "https://github.com/jwiegley/alert") (alert-termux :source "MELPA" :recipe (:package "alert-termux" :fetcher github :repo "gergelypolonkai/alert-termux" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alert.el notifications on Termux" :date (23537 53968) :url "https://github.com/gergelypolonkai/alert-termux") (alert-toast :source "MELPA" :recipe (:package "alert-toast" :fetcher github :repo "gkowzan/alert-toast" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Windows 10 toast notifications" :date (25131 47184) :url "https://github.com/gkowzan/alert-toast") (align-cljlet :source "MELPA" :recipe (:package "align-cljlet" :repo "gstamp/align-cljlet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Space align various Clojure forms" :date (22164 6096) :url "https://github.com/gstamp/align-cljlet") (all-ext :source "MELPA" :recipe (:package "all-ext" :repo "rubikitch/all-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "M-x all with helm-swoop/anything/multiple-cursors/line-number" :date (24173 17872) :url "https://github.com/rubikitch/all-ext") (all-the-icons :source "MELPA" :recipe (:package "all-the-icons" :repo "domtronn/all-the-icons.el" :fetcher github :files (:defaults "data")) :description "A library for inserting Developer icons" :date (26231 15184) :url "https://github.com/domtronn/all-the-icons.el") (all-the-icons-completion :source "MELPA" :recipe (:package "all-the-icons-completion" :repo "iyefrat/all-the-icons-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add icons to completion candidates" :date (26037 28368) :url "https://github.com/iyefrat/all-the-icons-completion") (all-the-icons-dired :source "MELPA" :recipe (:package "all-the-icons-dired" :repo "wyuenho/all-the-icons-dired" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows icons for each file in dired mode" :date (25968 57552) :url "https://github.com/wyuenho/all-the-icons-dired") (all-the-icons-gnus :source "MELPA" :recipe (:package "all-the-icons-gnus" :repo "nlamirault/all-the-icons-gnus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows icons for in Gnus" :date (23284 45776) :url "https://github.com/nlamirault/all-the-icons-gnus") (all-the-icons-ibuffer :source "MELPA" :recipe (:package "all-the-icons-ibuffer" :repo "seagle0128/all-the-icons-ibuffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display icons for all buffers in ibuffer" :date (25681 31184) :url "https://github.com/seagle0128/all-the-icons-ibuffer") (all-the-icons-ivy :source "MELPA" :recipe (:package "all-the-icons-ivy" :repo "asok/all-the-icons-ivy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows icons while using ivy and counsel" :date (23761 61904) :url "https://github.com/asok/all-the-icons-ivy") (all-the-icons-ivy-rich :source "MELPA" :recipe (:package "all-the-icons-ivy-rich" :fetcher github :repo "seagle0128/all-the-icons-ivy-rich" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better experience with icons for ivy" :date (25664 22096) :url "https://github.com/seagle0128/all-the-icons-ivy-rich") (all-the-icons-nerd-fonts :source "MELPA" :recipe (:package "all-the-icons-nerd-fonts" :fetcher github :repo "mohkale/all-the-icons-nerd-fonts" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Nerd font integration for all-the-icons" :date (26054 37456) :url "https://github.com/mohkale/all-the-icons-nerd-fonts") (almost-mono-themes :source "MELPA" :recipe (:package "almost-mono-themes" :repo "cryon/almost-mono-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Almost monochromatic color themes" :date (25185 50640) :url "https://github.com/cryon/almost-mono-themes") (alsamixer :source "MELPA" :recipe (:package "alsamixer" :fetcher github :repo "remvee/alsamixer-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions to call out to amixer" :date (23955 48720) :url "https://github.com/remvee/alsamixer-el") (alt-codes :source "MELPA" :recipe (:package "alt-codes" :repo "jcs-elpa/alt-codes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert alt codes using meta key" :date (26001 54864) :url "https://github.com/jcs-elpa/alt-codes") (amd-mode :source "MELPA" :recipe (:package "amd-mode" :fetcher github :repo "NicolasPetton/amd-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for handling JavaScript AMD module requirements" :date (23126 32464) :url "https://github.com/NicolasPetton/amd-mode.el") (ameba :source "MELPA" :recipe (:package "ameba" :fetcher github :repo "crystal-ameba/ameba.el" :files ("ameba.el")) :description "An interface to Crystal Ameba linter" :date (24078 22992) :url "https://github.com/crystal-ameba/ameba.el") (ample-regexps :source "MELPA" :recipe (:package "ample-regexps" :fetcher github :repo "immerrr/ample-regexps.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ample regular expressions for Emacs" :date (24244 30416) :url "https://github.com/immerrr/ample-regexps.el") (ample-theme :source "MELPA" :recipe (:package "ample-theme" :fetcher github :repo "jordonbiondo/ample-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calm Dark Theme for Emacs" :date (26154 50256) :url "https://github.com/jordonbiondo/ample-theme") (ample-zen-theme :source "MELPA" :recipe (:package "ample-zen-theme" :fetcher github :repo "mjwall/ample-zen" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "AmpleZen Theme for Emacs 24" :date (21692 7888) :url "https://github.com/mjwall/ample-zen") (amread-mode :source "MELPA" :recipe (:package "amread-mode" :url "https://repo.or.cz/amread-mode.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode helper user speed-reading" :date (26326 10064) :url "https://repo.or.cz/amread-mode.git") (amsreftex :source "MELPA" :recipe (:package "amsreftex" :fetcher github :repo "franburstall/amsreftex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add amsrefs bibliography support for reftex" :date (26175 56400) :url "https://github.com/franburstall/amsreftex") (amx :source "MELPA" :recipe (:package "amx" :repo "DarwinAwardWinner/amx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alternative M-x with extra features" :date (25655 7120) :url "https://github.com/DarwinAwardWinner/amx") (anaconda-mode :source "MELPA" :recipe (:package "anaconda-mode" :fetcher github :repo "pythonic-emacs/anaconda-mode" :files (:defaults "anaconda-mode.py")) :description "Code navigation, documentation lookup and completion for Python" :date (25950 27600) :url "https://github.com/pythonic-emacs/anaconda-mode") (anakondo :source "MELPA" :recipe (:package "anakondo" :fetcher github :repo "didibus/anakondo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds clj-kondo based Clojure[Script] editing facilities" :date (24625 30800) :url "https://github.com/didibus/anakondo") (anaphora :source "MELPA" :recipe (:package "anaphora" :repo "rolandwalker/anaphora" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Anaphoric macros providing implicit temp variables" :date (26026 58064) :url "https://github.com/rolandwalker/anaphora") (ancient-one-dark-theme :source "MELPA" :recipe (:package "ancient-one-dark-theme" :fetcher github :repo "sigvt/ancient-one-dark-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme based off uetchy's Ancient One Dark Theme" :date (24956 24784) :url "https://github.com/sigvt/ancient-one-dark-emacs") (android-env :source "MELPA" :recipe (:package "android-env" :fetcher github :repo "fernando-jascovich/android-env.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helper functions for working in android" :date (25330 51920) :url "https://github.com/fernando-jascovich/android-env.el") (android-mode :source "MELPA" :recipe (:package "android-mode" :fetcher github :repo "remvee/android-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Android application development" :date (23917 33488) :url "https://github.com/remvee/android-mode") (angry-police-captain :source "MELPA" :recipe (:package "angry-police-captain" :fetcher github :repo "rolpereira/angry-police-captain-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show quote from http://theangrypolicecaptain.com in the minibuffer" :date (20541 9024) :url "https://github.com/rolpereira/angry-police-captain-el") (angular-mode :source "MELPA" :recipe (:package "angular-mode" :fetcher github :repo "emacsattic/angular-mode" :files (:defaults "snippets") :old-names (angularjs-mode)) :description "Major mode for Angular.js" :date (22108 47312) :url "https://github.com/emacsattic/angular-mode") (angular-snippets :source "MELPA" :recipe (:package "angular-snippets" :fetcher github :repo "magnars/angular-snippets.el" :files ("*.el" "*.info" "dir" "snippets")) :description "Yasnippets for AngularJS" :date (21362 31168) :url "https://github.com/magnars/angular-snippets.el") (anki-connect :source "MELPA" :recipe (:package "anki-connect" :fetcher github :repo "lujun9972/anki-connect.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "AnkiConnect API" :date (24024 19536) :url "https://github.com/lujun9972/anki-connect.el") (anki-editor :source "MELPA" :recipe (:package "anki-editor" :fetcher github :repo "anki-editor/anki-editor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for making Anki cards with Org" :date (26386 52304) :url "https://github.com/anki-editor/anki-editor") (anki-editor-view :source "MELPA" :recipe (:package "anki-editor-view" :fetcher gitlab :repo "vherrmann/anki-editor-view" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open anki-editor notes from Anki" :date (25808 2512) :url "https://gitlab.com/vherrmann/anki-editor-view") (anki-mode :source "MELPA" :recipe (:package "anki-mode" :repo "davidshepherd7/anki-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for creating anki cards" :date (24546 24144) :url "https://github.com/davidshepherd7/anki-mode") (anki-vocabulary :source "MELPA" :recipe (:package "anki-vocabulary" :fetcher github :repo "lujun9972/anki-vocabulary.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help you to create vocabulary cards in Anki" :date (24078 22992) :url "https://github.com/lujun9972/anki-vocabulary.el") (annalist :source "MELPA" :recipe (:package "annalist" :fetcher github :repo "noctuid/annalist.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Record and display information such as keybindings" :date (26161 23504) :url "https://github.com/noctuid/annalist.el") (annotate :source "MELPA" :recipe (:package "annotate" :fetcher github :repo "bastibe/annotate.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Annotate files without changing them" :date (26384 10576) :url "https://github.com/bastibe/annotate.el") (annotate-depth :source "MELPA" :recipe (:package "annotate-depth" :fetcher github :repo "netromdk/annotate-depth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Annotate buffer if indentation depth is beyond threshold" :date (22334 10576) :url "https://github.com/netromdk/annotate-depth") (annotation :source "MELPA" :recipe (:package "annotation" :fetcher github :repo "agda/agda" :files ("src/data/emacs-mode/annotation.el")) :description "Functions for annotating text with faces and help bubbles" :date (24414 34896) :url "https://github.com/agda/agda") (annoying-arrows-mode :source "MELPA" :recipe (:package "annoying-arrows-mode" :repo "magnars/annoying-arrows-mode.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ring the bell if using arrows too much" :date (22541 9424) :url "https://github.com/magnars/annoying-arrows-mode.el") (ansi :source "MELPA" :recipe (:package "ansi" :repo "rejeep/ansi.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Turn string into ansi strings" :date (25605 720) :url "https://github.com/rejeep/ansi.el") (ansible :source "MELPA" :recipe (:package "ansible" :fetcher gitlab :repo "emacs-ansible/emacs-ansible" :files (:defaults "snippets" "dict")) :description "Ansible minor mode" :date (26356 31184) :url "https://gitlab.com/emacs-ansible/emacs-ansible") (ansible-doc :source "MELPA" :recipe (:package "ansible-doc" :repo "emacsorphanage/ansible-doc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ansible documentation Minor Mode" :date (22501 38864) :url "https://github.com/emacsorphanage/ansible-doc") (ansible-vault :source "MELPA" :recipe (:package "ansible-vault" :fetcher github :repo "zellio/ansible-vault-mode" :branch "master" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing ansible vault files" :date (24982 48848) :url "https://github.com/zellio/ansible-vault-mode") (ansilove :source "MELPA" :recipe (:package "ansilove" :fetcher gitlab :repo "xgqt/emacs-ansilove" :files ("src/*")) :description "Display buffers as PNG images using ansilove" :date (25573 24272) :url "https://gitlab.com/xgqt/emacs-ansilove") (ant :source "MELPA" :recipe (:package "ant" :fetcher github :repo "apg/ant-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers for compiling with ant" :date (22203 42192) :url "https://github.com/apg/ant-el") (anti-zenburn-theme :source "MELPA" :recipe (:package "anti-zenburn-theme" :repo "m00natic/anti-zenburn-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low-contrast Zenburn-inverted theme" :date (23366 28624) :url "https://github.com/m00natic/anti-zenburn-theme") (anx-api :source "MELPA" :recipe (:package "anx-api" :fetcher github :repo "rmloveland/emacs-appnexus-api" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with the AppNexus API from Emacs" :date (21237 15168) :url "https://github.com/rmloveland/emacs-appnexus-api") (anybar :source "MELPA" :recipe (:package "anybar" :fetcher github :repo "tie-rack/anybar-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control AnyBar from Emacs" :date (22450 11600) :url "https://github.com/tie-rack/anybar-el") (anyins :source "MELPA" :recipe (:package "anyins" :fetcher github :repo "antham/anyins" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert content at multiple places from shell command or kill-ring" :date (21183 11712) :url "https://github.com/antham/anyins") (anzu :source "MELPA" :recipe (:package "anzu" :fetcher github :repo "emacsorphanage/anzu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show number of matches in mode-line while searching" :date (26360 28240) :url "https://github.com/emacsorphanage/anzu") (aozora-view :source "MELPA" :recipe (:package "aozora-view" :fetcher github :repo "kawabata/aozora-view" :files (:defaults "*.txt")) :description "Aozora Bunko text Emacs viewer" :date (21276 51264) :url "https://github.com/kawabata/aozora-view") (apache-mode :source "MELPA" :recipe (:package "apache-mode" :fetcher github :repo "emacs-php/apache-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Apache httpd configuration files" :date (24740 10960) :url "https://github.com/emacs-php/apache-mode") (apdl-mode :source "MELPA" :recipe (:package "apdl-mode" :fetcher github :repo "dieter-wilhelm/apdl-mode" :files (:defaults "matlib" "template")) :description "Major mode for the APDL programming language" :date (24947 9808) :url "https://github.com/dieter-wilhelm/apdl-mode") (apel :source "MELPA" :recipe (:package "apel" :fetcher github :repo "wanderlust/apel" :version-regexp "ignore-all-tags" :files ("alist.el" "apel-ver.el" "apel-pkg.el" "broken.el" "calist.el" "emu.el" "filename.el" "install.el" "inv-23.el" "invisible.el" "mcharset.el" "mcs-20.el" "mcs-e20.el" "mule-caesar.el" "path-util.el" "pccl-20.el" "pccl.el" "pces-20.el" "pces-e20.el" "pces.el" "pcustom.el" "poe.el" "poem-e20.el" "poem-e20_3.el" "poem.el" "product.el" "pym.el" "richtext.el" "static.el")) :description "A Portable Emacs Library provides support for portable Emacs Lisp programs" :date (25496 59344) :url "https://github.com/wanderlust/apel") (apheleia :source "MELPA" :recipe (:package "apheleia" :fetcher github :repo "radian-software/apheleia" :files (:defaults ("scripts" "scripts/formatters"))) :description "Reformat buffer stably" :date (26385 31440) :url "https://github.com/radian-software/apheleia") (apib-mode :source "MELPA" :recipe (:package "apib-mode" :fetcher github :repo "w-vi/apib-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for API Blueprint files" :date (24075 46800) :url "https://github.com/w-vi/apib-mode") (apiwrap :source "MELPA" :recipe (:package "apiwrap" :fetcher github :repo "vermiculus/apiwrap.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Api-wrapping macros" :date (23313 46032) :url "https://github.com/vermiculus/apiwrap.el") (app-monochrome-themes :source "MELPA" :recipe (:package "app-monochrome-themes" :fetcher github :repo "Greybeard-Entertainment/app-monochrome" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low contrast monochrome themes" :date (26215 26960) :url "https://github.com/Greybeard-Entertainment/app-monochrome") (apparmor-mode :source "MELPA" :recipe (:package "apparmor-mode" :fetcher gitlab :repo "apparmor/apparmor-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing AppArmor policy files" :date (26380 13520) :url "https://gitlab.com/apparmor/apparmor-mode") (apples-mode :source "MELPA" :recipe (:package "apples-mode" :fetcher github :repo "tequilasunset/apples-mode" :files ("*.el" "apples-mode")) :description "Major mode for editing and executing AppleScript code" :date (19768 41552) :url "https://github.com/tequilasunset/apples-mode") (applescript-mode :source "MELPA" :recipe (:package "applescript-mode" :fetcher github :repo "emacsorphanage/applescript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing AppleScript source" :date (24839 2896) :url "https://github.com/emacsorphanage/applescript-mode") (aproject :source "MELPA" :recipe (:package "aproject" :repo "vietor/aproject" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic project framework for Emacs" :date (25169 62416) :url "https://github.com/vietor/aproject") (apropospriate-theme :source "MELPA" :recipe (:package "apropospriate-theme" :fetcher github :repo "waymondo/apropospriate-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A colorful, low-contrast, light & dark theme set for Emacs with a fun name" :date (26349 57936) :url "https://github.com/waymondo/apropospriate-theme") (apt-sources-list :source "MELPA" :recipe (:package "apt-sources-list" :fetcher git :url "https://git.korewanetadesu.com/apt-sources-list.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing APT source.list files" :date (23305 51920) :url "https://git.korewanetadesu.com/apt-sources-list.git") (aqi :source "MELPA" :recipe (:package "aqi" :repo "zzkt/aqi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Air quality data from the World Air Quality Index" :date (25717 4688) :url "https://github.com/zzkt/aqi") (arch-packer :source "MELPA" :recipe (:package "arch-packer" :repo "brotzeit/arch-packer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Arch Linux package management frontend" :date (22908 63312) :url "https://github.com/brotzeit/arch-packer") (archive-phar :source "MELPA" :recipe (:package "archive-phar" :repo "emacs-php/archive-phar.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Phar file support for archive-mode" :date (25409 58576) :url "https://github.com/emacs-php/archive-phar.el") (archive-region :source "MELPA" :recipe (:package "archive-region" :repo "rubikitch/archive-region" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Move region to archive file instead of killing" :date (24174 38736) :url "https://github.com/rubikitch/archive-region") (archive-rpm :source "MELPA" :recipe (:package "archive-rpm" :repo "nbarrientos/archive-rpm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RPM and CPIO support for archive-mode" :date (25231 59984) :url "https://github.com/nbarrientos/archive-rpm") (arduino-cli-mode :source "MELPA" :recipe (:package "arduino-cli-mode" :fetcher github :repo "motform/arduino-cli-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Arduino-CLI command wrapper" :date (26218 3152) :url "https://github.com/motform/arduino-cli-mode") (arduino-mode :source "MELPA" :recipe (:package "arduino-mode" :fetcher git :url "https://repo.or.cz/arduino-mode.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Arduino code" :date (26195 41680) :url "https://repo.or.cz/arduino-mode.git") (aria2 :source "MELPA" :recipe (:package "aria2" :fetcher github :repo "ukaszg/aria2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control aria2c commandline tool from Emacs" :date (25615 36560) :url "https://github.com/ukaszg/aria2") (ariadne :source "MELPA" :recipe (:package "ariadne" :fetcher github :repo "manzyuk/ariadne-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ariadne plugin for Emacs" :date (21127 52928) :url "https://github.com/manzyuk/ariadne-el") (arjen-grey-theme :source "MELPA" :recipe (:package "arjen-grey-theme" :repo "credmp/arjen-grey-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A soothing dark grey theme" :date (22817 65488) :url "https://github.com/credmp/arjen-grey-theme") (arscript-mode :source "MELPA" :recipe (:package "arscript-mode" :fetcher github :repo "captainflasmr/arscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing arscript files" :date (26306 24784) :url "https://github.com/captainflasmr/arscript-mode") (artbollocks-mode :source "MELPA" :recipe (:package "artbollocks-mode" :repo "sachac/artbollocks-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve your writing (especially about art)" :date (22820 41680) :url "https://github.com/sachac/artbollocks-mode") (arview :source "MELPA" :recipe (:package "arview" :repo "afainer/arview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extract and view archives in the temporary directory" :date (22293 19152) :url "https://github.com/afainer/arview") (arxiv-citation :source "MELPA" :recipe (:package "arxiv-citation" :fetcher gitlab :repo "slotThe/arxiv-citation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility functions for dealing with arXiv papers" :date (25775 5200) :url "https://gitlab.com/slotThe/arxiv-citation") (arxiv-mode :source "MELPA" :recipe (:package "arxiv-mode" :fetcher github :repo "fizban007/arxiv-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read and search for articles on arXiv.org" :date (26015 1360) :url "https://github.com/fizban007/arxiv-mode") (ascii-table :source "MELPA" :recipe (:package "ascii-table" :fetcher github :repo "lassik/emacs-ascii-table" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive ASCII table" :date (25979 27856) :url "https://github.com/lassik/emacs-ascii-table") (asilea :source "MELPA" :recipe (:package "asilea" :fetcher github :repo "Fanael/asilea" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find best compiler options using simulated annealing" :date (21673 43472) :url "https://github.com/Fanael/asilea") (asm-blox :source "MELPA" :recipe (:package "asm-blox" :fetcher github :repo "zkry/asm-blox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Programming game involving WAT" :date (26008 28112) :url "https://github.com/zkry/asm-blox") (asn1-mode :source "MELPA" :recipe (:package "asn1-mode" :fetcher github :repo "kawabata/asn1-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ASN.1/GDMO mode for GNU Emacs" :date (22907 42448) :url "https://github.com/kawabata/asn1-mode") (assess :source "MELPA" :recipe (:package "assess" :fetcher github :repo "phillord/assess" :old-names (sisyphus) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Test support functions" :date (26083 37712) :url "https://github.com/phillord/assess") (astro-ts-mode :source "MELPA" :recipe (:package "astro-ts-mode" :fetcher github :repo "Sorixelle/astro-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Astro templates" :date (26272 6608) :url "https://github.com/Sorixelle/astro-ts-mode") (astute :source "MELPA" :recipe (:package "astute" :fetcher github :repo "rnkn/astute" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to redisplay `smart' typography" :date (26335 25040) :url "https://github.com/rnkn/astute") (astyle :source "MELPA" :recipe (:package "astyle" :repo "storvik/emacs-astyle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Astyle formatter functions" :date (24190 26960) :url "https://github.com/storvik/emacs-astyle") (asx :source "MELPA" :recipe (:package "asx" :repo "ragone/asx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ask StackExchange/StackOverflow" :date (23984 48976) :url "https://github.com/ragone/asx") (async :source "MELPA" :recipe (:package "async" :repo "jwiegley/emacs-async" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Asynchronous processing in Emacs" :date (26368 22352) :url "https://github.com/jwiegley/emacs-async") (async-await :source "MELPA" :recipe (:package "async-await" :repo "chuntaro/emacs-async-await" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Async/Await" :date (25353 13392) :url "https://github.com/chuntaro/emacs-async-await") (async-backup :source "MELPA" :recipe (:package "async-backup" :fetcher codeberg :repo "contrapunctus/async-backup" :branch "development" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backup on each save without freezing Emacs" :date (25653 51792) :url "https://codeberg.org/contrapunctus/async-backup") (async-job-queue :source "MELPA" :recipe (:package "async-job-queue" :repo "owinebar/emacs-async-job-queue" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dispatch queue of async jobs to a fixed number of slots" :date (25673 37072) :url "https://github.com/owinebar/emacs-async-job-queue") (async-status :source "MELPA" :recipe (:package "async-status" :repo "seokbeomKim/async-status" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for indicator support" :date (25826 32464) :url "https://github.com/seokbeomKim/async-status") (asyncloop :source "MELPA" :recipe (:package "asyncloop" :fetcher github :repo "meedstrom/asyncloop" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Non-blocking series of functions" :date (26305 3920) :url "https://github.com/meedstrom/asyncloop") (atcoder-tools :source "MELPA" :recipe (:package "atcoder-tools" :repo "sei40kr/emacs-atcoder-tools" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An atcoder-tools client" :date (24086 17104) :url "https://github.com/sei40kr/emacs-atcoder-tools") (atl-long-lines :source "MELPA" :recipe (:package "atl-long-lines" :repo "jcs-legacy/atl-long-lines" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Turn off truncate-lines when the line is long" :date (26001 54864) :url "https://github.com/jcs-legacy/atl-long-lines") (atl-markup :source "MELPA" :recipe (:package "atl-markup" :repo "jcs-legacy/atl-markup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically truncate lines for markup languages" :date (26001 54864) :url "https://github.com/jcs-legacy/atl-markup") (atom-dark-theme :source "MELPA" :recipe (:package "atom-dark-theme" :fetcher github :repo "whitlockjc/atom-dark-theme-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs port of the Atom Dark theme from Atom.io" :date (25056 37584) :url "https://github.com/whitlockjc/atom-dark-theme-emacs") (atom-one-dark-theme :source "MELPA" :recipe (:package "atom-one-dark-theme" :fetcher github :repo "jonathanchu/atom-one-dark-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Atom One Dark color theme" :date (24593 54352) :url "https://github.com/jonathanchu/atom-one-dark-theme") (atomic-chrome :source "MELPA" :recipe (:package "atomic-chrome" :repo "alpha22jp/atomic-chrome" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Chrome text area with Emacs using Atomic Chrome" :date (25602 24528) :url "https://github.com/alpha22jp/atomic-chrome") (attrap :source "MELPA" :recipe (:package "attrap" :repo "jyp/attrap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ATtempt To Repair At Point" :date (25811 65104) :url "https://github.com/jyp/attrap") (auctex-cluttex :source "MELPA" :recipe (:package "auctex-cluttex" :fetcher github :repo "tsuu32/auctex-cluttex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ClutTeX support for AUCTeX" :date (26185 5840) :url "https://github.com/tsuu32/auctex-cluttex") (auctex-latexmk :source "MELPA" :recipe (:package "auctex-latexmk" :fetcher github :repo "emacsmirror/auctex-latexmk" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add LatexMk support to AUCTeX" :date (25430 64720) :url "https://github.com/emacsmirror/auctex-latexmk") (auctex-lua :source "MELPA" :recipe (:package "auctex-lua" :repo "vermiculus/auctex-lua" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lua editing support for AUCTeX" :date (22095 35280) :url "https://github.com/vermiculus/auctex-lua") (audacious :source "MELPA" :recipe (:package "audacious" :repo "shishimaru/audacious.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to control audacious" :date (24899 45136) :url "https://github.com/shishimaru/audacious.el") (audio-notes-mode :source "MELPA" :recipe (:package "audio-notes-mode" :repo "Malabarba/audio-notes-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play audio notes synced from somewhere else" :date (22844 24016) :url "https://github.com/Malabarba/audio-notes-mode") (aurel :source "MELPA" :recipe (:package "aurel" :repo "alezost/aurel" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search, get info, vote for and download AUR packages" :date (22649 16336) :url "https://github.com/alezost/aurel") (aurora-config-mode :source "MELPA" :recipe (:package "aurora-config-mode" :fetcher github :repo "bdd/aurora-config-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Apache Aurora configuration files" :date (23173 62672) :url "https://github.com/bdd/aurora-config-mode.el") (auth-source-1password :source "MELPA" :recipe (:package "auth-source-1password" :fetcher github :repo "dlobraico/auth-source-1password" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "1password integration for auth-source" :date (25715 49360) :url "https://github.com/dlobraico/auth-source-1password") (auth-source-gopass :source "MELPA" :recipe (:package "auth-source-gopass" :fetcher github :repo "triplem/auth-source-gopass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gopass integration for auth-source" :date (25531 11984) :url "https://github.com/triplem/auth-source-gopass") (auth-source-keytar :source "MELPA" :recipe (:package "auth-source-keytar" :repo "emacs-grammarly/auth-source-keytar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate auth-source with keytar" :date (26001 54864) :url "https://github.com/emacs-grammarly/auth-source-keytar") (auth-source-kwallet :source "MELPA" :recipe (:package "auth-source-kwallet" :fetcher github :repo "vaartis/auth-source-kwallet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "KWallet integration for auth-source" :date (24762 37968) :url "https://github.com/vaartis/auth-source-kwallet") (auth-source-xoauth2 :source "MELPA" :recipe (:package "auth-source-xoauth2" :fetcher github :repo "ccrusius/auth-source-xoauth2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate auth-source with XOAUTH2" :date (25322 57808) :url "https://github.com/ccrusius/auth-source-xoauth2") (auto-async-byte-compile :source "MELPA" :recipe (:package "auto-async-byte-compile" :repo "rubikitch/auto-async-byte-compile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically byte-compile when saved" :date (22491 3024) :url "https://github.com/rubikitch/auto-async-byte-compile") (auto-auto-indent :source "MELPA" :recipe (:package "auto-auto-indent" :repo "sabof/auto-auto-indent" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Indents code as you type" :date (21113 20032) :url "https://github.com/sabof/auto-auto-indent") (auto-compile :source "MELPA" :recipe (:package "auto-compile" :repo "emacscollective/auto-compile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically compile Emacs Lisp libraries" :date (26287 60368) :url "https://github.com/emacscollective/auto-compile") (auto-complete :source "MELPA" :recipe (:package "auto-complete" :fetcher github :repo "auto-complete/auto-complete" :files ("*.el" "dict")) :description "Auto Completion for GNU Emacs" :date (26105 64720) :url "https://github.com/auto-complete/auto-complete") (auto-complete-auctex :source "MELPA" :recipe (:package "auto-complete-auctex" :fetcher github :repo "emacsattic/auto-complete-auctex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-completion for auctex" :date (21257 448) :url "https://github.com/emacsattic/auto-complete-auctex") (auto-complete-c-headers :source "MELPA" :recipe (:package "auto-complete-c-headers" :fetcher github :repo "mooz/auto-complete-c-headers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-complete source for C/C++ header files" :date (22003 16592) :url "https://github.com/mooz/auto-complete-c-headers") (auto-complete-chunk :source "MELPA" :recipe (:package "auto-complete-chunk" :fetcher github :repo "tkf/auto-complete-chunk" :files ("auto-complete-chunk.el")) :description "Auto-completion for dot.separated.words" :date (21259 42176) :url "https://github.com/tkf/auto-complete-chunk") (auto-complete-clang :source "MELPA" :recipe (:package "auto-complete-clang" :repo "brianjcj/auto-complete-clang" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto Completion source for clang for GNU Emacs" :date (21316 21824) :url "https://github.com/brianjcj/auto-complete-clang") (auto-complete-clang-async :source "MELPA" :recipe (:package "auto-complete-clang-async" :fetcher github :repo "Golevka/emacs-clang-complete-async" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto Completion source for clang for GNU Emacs" :date (20897 6208) :url "https://github.com/Golevka/emacs-clang-complete-async") (auto-complete-distel :source "MELPA" :recipe (:package "auto-complete-distel" :fetcher github :repo "sebastiw/distel-completion" :files ("auto-complete-distel.el")) :description "Erlang/distel completion backend for auto-complete-mode" :date (23427 5328) :url "https://github.com/sebastiw/distel-completion") (auto-complete-exuberant-ctags :source "MELPA" :recipe (:package "auto-complete-exuberant-ctags" :repo "k1LoW/auto-complete-exuberant-ctags" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Exuberant ctags auto-complete.el source" :date (21289 63296) :url "https://github.com/k1LoW/auto-complete-exuberant-ctags") (auto-complete-nxml :source "MELPA" :recipe (:package "auto-complete-nxml" :fetcher github :repo "aki2o/auto-complete-nxml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Do completion by auto-complete.el on nXML-mode" :date (21254 24256) :url "https://github.com/aki2o/auto-complete-nxml") (auto-complete-pcmp :source "MELPA" :recipe (:package "auto-complete-pcmp" :repo "aki2o/auto-complete-pcmp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide auto-complete sources using pcomplete results" :date (21267 36288) :url "https://github.com/aki2o/auto-complete-pcmp") (auto-complete-rst :source "MELPA" :recipe (:package "auto-complete-rst" :fetcher github :repo "tkf/auto-complete-rst" :files ("*.el" "*.py")) :description "Auto-complete extension for ReST and Sphinx" :date (21259 42176) :url "https://github.com/tkf/auto-complete-rst") (auto-complete-sage :source "MELPA" :recipe (:package "auto-complete-sage" :fetcher github :repo "sagemath/auto-complete-sage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-complete source for sage-shell-mode" :date (22326 16464) :url "https://github.com/sagemath/auto-complete-sage") (auto-dark :source "MELPA" :recipe (:package "auto-dark" :repo "LionyxML/auto-dark-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically sets the dark-mode theme based on macOS/Linux/Windows status" :date (26357 52048) :url "https://github.com/LionyxML/auto-dark-emacs") (auto-dictionary :source "MELPA" :recipe (:package "auto-dictionary" :fetcher github :repo "nschum/auto-dictionary-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic dictionary switcher for flyspell" :date (21798 59472) :url "https://github.com/nschum/auto-dictionary-mode") (auto-dim-other-buffers :source "MELPA" :recipe (:package "auto-dim-other-buffers" :fetcher github :repo "mina86/auto-dim-other-buffers.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Makes windows without focus less prominent" :date (25090 55760) :url "https://github.com/mina86/auto-dim-other-buffers.el") (auto-highlight-symbol :source "MELPA" :recipe (:package "auto-highlight-symbol" :repo "elp-revive/auto-highlight-symbol" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic highlighting current symbol minor mode" :date (26236 33104) :url "https://github.com/elp-revive/auto-highlight-symbol") (auto-indent-mode :source "MELPA" :recipe (:package "auto-indent-mode" :fetcher github :repo "mattfidler/auto-indent-mode.el" :files (:defaults (:exclude "*.texi"))) :description "Auto indent Minor mode" :date (24955 3920) :url "https://github.com/mattfidler/auto-indent-mode.el") (auto-minor-mode :source "MELPA" :recipe (:package "auto-minor-mode" :repo "joewreschnig/auto-minor-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable minor modes by file name and contents" :date (23305 51920) :url "https://github.com/joewreschnig/auto-minor-mode") (auto-org-md :source "MELPA" :recipe (:package "auto-org-md" :repo "jamcha-aa/auto-org-md" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export a markdown file automatically when you save an org-file" :date (23170 80) :url "https://github.com/jamcha-aa/auto-org-md") (auto-package-update :source "MELPA" :recipe (:package "auto-package-update" :fetcher github :repo "rranelli/auto-package-update.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically update Emacs packages" :date (24968 15952) :url "https://github.com/rranelli/auto-package-update.el") (auto-pause :source "MELPA" :recipe (:package "auto-pause" :fetcher github :repo "lujun9972/auto-pause" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run processes which will be paused when Emacs is idle" :date (22302 34128) :url "https://github.com/lujun9972/auto-pause") (auto-read-only :source "MELPA" :recipe (:package "auto-read-only" :fetcher github :repo "zonuexe/auto-read-only.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically make the buffer to read-only" :date (24390 52560) :url "https://github.com/zonuexe/auto-read-only.el") (auto-rename-tag :source "MELPA" :recipe (:package "auto-rename-tag" :repo "emacs-vs/auto-rename-tag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically rename paired HTML/XML tag" :date (26026 58064) :url "https://github.com/emacs-vs/auto-rename-tag") (auto-save-buffers-enhanced :source "MELPA" :recipe (:package "auto-save-buffers-enhanced" :repo "kentaro/auto-save-buffers-enhanced" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically save buffers in a decent way" :date (22562 15568) :url "https://github.com/kentaro/auto-save-buffers-enhanced") (auto-shell-command :source "MELPA" :recipe (:package "auto-shell-command" :repo "ongaeshi/auto-shell-command" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run the shell command asynchronously that you specified when you save the file" :date (23413 58832) :url "https://github.com/ongaeshi/auto-shell-command") (auto-sort-mode :source "MELPA" :recipe (:package "auto-sort-mode" :fetcher github :repo "rweir/auto-sort-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically sort lines between two delimiters" :date (25834 26576) :url "https://github.com/rweir/auto-sort-mode") (auto-sudoedit :source "MELPA" :recipe (:package "auto-sudoedit" :repo "ncaq/auto-sudoedit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto sudo edit by tramp" :date (25848 59472) :url "https://github.com/ncaq/auto-sudoedit") (auto-virtualenv :source "MELPA" :recipe (:package "auto-virtualenv" :fetcher github :repo "marcwebbie/auto-virtualenv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically activate Python virtualenvs based on project directory" :date (26401 19664) :url "https://github.com/marcwebbie/auto-virtualenv") (auto-virtualenvwrapper :source "MELPA" :recipe (:package "auto-virtualenvwrapper" :fetcher github :repo "robert-zaremba/auto-virtualenvwrapper.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight auto activate python virtualenvs" :date (25619 33616) :url "https://github.com/robert-zaremba/auto-virtualenvwrapper.el") (auto-yasnippet :source "MELPA" :recipe (:package "auto-yasnippet" :fetcher github :repo "abo-abo/auto-yasnippet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly create disposable yasnippets" :date (25570 48080) :url "https://github.com/abo-abo/auto-yasnippet") (autobookmarks :source "MELPA" :recipe (:package "autobookmarks" :fetcher github :repo "Fuco1/autobookmarks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save recently visited files and buffers" :date (25208 12112) :url "https://github.com/Fuco1/autobookmarks") (autobuild :source "MELPA" :recipe (:package "autobuild" :fetcher github :repo "erjoalgo/autobuild" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define and execute build rules and compilation pipelines" :date (26160 2640) :url "https://github.com/erjoalgo/autobuild") (autodisass-java-bytecode :source "MELPA" :recipe (:package "autodisass-java-bytecode" :fetcher github :repo "gbalats/autodisass-java-bytecode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically disassemble Java bytecode" :date (25848 59472) :url "https://github.com/gbalats/autodisass-java-bytecode") (autodisass-llvm-bitcode :source "MELPA" :recipe (:package "autodisass-llvm-bitcode" :fetcher github :repo "gbalats/autodisass-llvm-bitcode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically disassemble LLVM bitcode" :date (21800 14800) :url "https://github.com/gbalats/autodisass-llvm-bitcode") (autoscratch :source "MELPA" :recipe (:package "autoscratch" :repo "TLINDEN/autoscratch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically switch scratch buffer mode" :date (25734 13776) :url "https://github.com/TLINDEN/autoscratch") (autotetris-mode :source "MELPA" :recipe (:package "autotetris-mode" :fetcher github :repo "skeeto/autotetris-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically play tetris" :date (21605 7120) :url "https://github.com/skeeto/autotetris-mode") (autothemer :source "MELPA" :recipe (:package "autothemer" :fetcher github :repo "jasonm23/autothemer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Conveniently define themes" :date (25656 27984) :url "https://github.com/jasonm23/autothemer") (autumn-light-theme :source "MELPA" :recipe (:package "autumn-light-theme" :fetcher github :repo "aalpern/emacs-color-theme-autumn-light" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light color theme with muted, autumnal colors" :date (21845 3280) :url "https://github.com/aalpern/emacs-color-theme-autumn-light") (avandu :source "MELPA" :recipe (:package "avandu" :fetcher github :repo "ryuslash/avandu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gateway to Tiny Tiny RSS" :date (25446 52944) :url "https://github.com/ryuslash/avandu") (avk-emacs-themes :source "MELPA" :recipe (:package "avk-emacs-themes" :fetcher github :repo "avkoval/avk-emacs-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Collection of avk themes" :date (25831 50384) :url "https://github.com/avkoval/avk-emacs-themes") (avy :source "MELPA" :recipe (:package "avy" :repo "abo-abo/avy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to arbitrary positions in visible text and select text quickly" :date (26403 61392) :url "https://github.com/abo-abo/avy") (avy-embark-collect :source "MELPA" :recipe (:package "avy-embark-collect" :repo "oantolin/embark" :fetcher github :files ("avy-embark-collect.el")) :description "Use avy to jump to Embark Collect entries" :date (26145 35280) :url "https://github.com/oantolin/embark") (avy-flycheck :source "MELPA" :recipe (:package "avy-flycheck" :repo "magicdirac/avy-flycheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to and fix syntax errors using `flycheck' with `avy' interface" :date (22414 38096) :url "https://github.com/magicdirac/avy-flycheck") (avy-menu :source "MELPA" :recipe (:package "avy-menu" :repo "mrkkrp/avy-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library providing avy-powered popup menu" :date (25726 19664) :url "https://github.com/mrkkrp/avy-menu") (avy-migemo :source "MELPA" :recipe (:package "avy-migemo" :fetcher github :repo "momomo5717/avy-migemo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Avy with migemo" :date (23371 46544) :url "https://github.com/momomo5717/avy-migemo") (avy-zap :source "MELPA" :recipe (:package "avy-zap" :repo "cute-jumper/avy-zap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zap to char using `avy'" :date (23874 336) :url "https://github.com/cute-jumper/avy-zap") (awk-ts-mode :source "MELPA" :recipe (:package "awk-ts-mode" :repo "nverno/awk-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for awk using tree-sitter" :date (26182 29648) :url "https://github.com/nverno/awk-ts-mode") (awk-yasnippets :source "MELPA" :recipe (:package "awk-yasnippets" :fetcher github :repo "uberkael/awk-yasnippets" :files (:defaults "awk-mode")) :description "Yasnippets for AWK" :date (25697 19408) :url "https://github.com/uberkael/awk-yasnippets") (aws-ec2 :source "MELPA" :recipe (:package "aws-ec2" :fetcher github :repo "Yuki-Inoue/aws.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage AWS EC2 instances" :date (25412 34768) :url "https://github.com/Yuki-Inoue/aws.el") (aws-snippets :source "MELPA" :recipe (:package "aws-snippets" :repo "baron42bba/aws-snippets" :fetcher github :files (:defaults "snippets")) :description "Yasnippets for AWS" :date (24037 31568) :url "https://github.com/baron42bba/aws-snippets") (awscli-capf :source "MELPA" :recipe (:package "awscli-capf" :repo "sebasmonia/awscli-capf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion at point function for the AWS CLI" :date (23953 6992) :url "https://github.com/sebasmonia/awscli-capf") (axe :source "MELPA" :recipe (:package "axe" :repo "cniles/axe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "AWS Extensions" :date (25545 44880) :url "https://github.com/cniles/axe") (axiom-environment :source "MELPA" :recipe (:package "axiom-environment" :fetcher git :url "https://bitbucket.org/pdo/axiom-environment" :files ("*.el" ("data" "data/*.el") ("themes" "themes/*.el") (:exclude "axiom.el" "axiom-build-utils.el" "ob-axiom.el" "company-axiom.el"))) :description "An environment for using Axiom/OpenAxiom/FriCAS" :date (25253 592) :url "https://bitbucket.org/pdo/axiom-environment") (ayu-theme :source "MELPA" :recipe (:package "ayu-theme" :repo "vutran1710/Ayu-Theme-Emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ayu theme" :date (25605 720) :url "https://github.com/vutran1710/Ayu-Theme-Emacs") (babashka :source "MELPA" :recipe (:package "babashka" :repo "licht1stein/babashka.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babashka Tasks Interface" :date (26195 41680) :url "https://github.com/licht1stein/babashka.el") (babel :source "MELPA" :recipe (:package "babel" :fetcher github :repo "juergenhoetzel/babel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to web translation services such as Babelfish" :date (24771 52944) :url "https://github.com/juergenhoetzel/babel") (babel-repl :source "MELPA" :recipe (:package "babel-repl" :fetcher github :repo "hung-phan/babel-repl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run babel REPL" :date (22313 4432) :url "https://github.com/hung-phan/babel-repl") (back-button :source "MELPA" :recipe (:package "back-button" :repo "rolandwalker/back-button" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual navigation through mark rings" :date (25353 13392) :url "https://github.com/rolandwalker/back-button") (backlight :source "MELPA" :recipe (:package "backlight" :fetcher github :repo "mschuldt/backlight.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backlight brightness adjustment on GNU/Linux" :date (24732 16848) :url "https://github.com/mschuldt/backlight.el") (backline :source "MELPA" :recipe (:package "backline" :fetcher github :repo "tarsius/backline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preserve appearance of outline headings" :date (26287 60368) :url "https://github.com/tarsius/backline") (backup-each-save :source "MELPA" :recipe (:package "backup-each-save" :fetcher github :repo "conornash/backup-each-save" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backup each savepoint of a file" :date (23188 30032) :url "https://github.com/conornash/backup-each-save") (backup-walker :source "MELPA" :recipe (:package "backup-walker" :fetcher github :repo "lewang/backup-walker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly traverse all backups of a file" :date (20969 39616) :url "https://github.com/lewang/backup-walker") (backward-forward :source "MELPA" :recipe (:package "backward-forward" :fetcher gitlab :repo "vancan1ty/emacs-backward-forward" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigation backwards and forwards across marks" :date (22628 10192) :url "https://gitlab.com/vancan1ty/emacs-backward-forward") (badger-theme :source "MELPA" :recipe (:package "badger-theme" :repo "ccann/badger-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme for Emacs 24" :date (21446 55744) :url "https://github.com/ccann/badger-theme") (badwolf-theme :source "MELPA" :recipe (:package "badwolf-theme" :repo "bkruczyk/badwolf-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bad Wolf color theme" :date (22514 50896) :url "https://github.com/bkruczyk/badwolf-emacs") (baff :source "MELPA" :recipe (:package "baff" :repo "dave-f/baff" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create a byte array from a file" :date (24386 55504) :url "https://github.com/dave-f/baff") (baidu-translate :source "MELPA" :recipe (:package "baidu-translate" :repo "suxiaogang223/baidu-translate" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A plugin using baidu-translate-api" :date (24997 16208) :url "https://github.com/suxiaogang223/baidu-translate") (balanced-windows :source "MELPA" :recipe (:package "balanced-windows" :fetcher github :repo "wbolster/emacs-balanced-windows" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep windows balanced" :date (23917 33488) :url "https://github.com/wbolster/emacs-balanced-windows") (banner-comment :source "MELPA" :recipe (:package "banner-comment" :repo "WJCFerguson/banner-comment" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "For producing banner comments" :date (23800 11600) :url "https://github.com/WJCFerguson/banner-comment") (bap-mode :source "MELPA" :recipe (:package "bap-mode" :fetcher github :repo "BinaryAnalysisPlatform/bap-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for BAP's IR" :date (24111 20304) :url "https://github.com/BinaryAnalysisPlatform/bap-mode") (bar-cursor :source "MELPA" :recipe (:package "bar-cursor" :repo "ajsquared/bar-cursor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package used to switch block cursor to a bar" :date (24521 20944) :url "https://github.com/ajsquared/bar-cursor") (bart-mode :source "MELPA" :recipe (:package "bart-mode" :fetcher github :repo "mschuldt/bart-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Real time BART departures info" :date (23793 38352) :url "https://github.com/mschuldt/bart-mode") (base16-theme :source "MELPA" :recipe (:package "base16-theme" :repo "tinted-theming/base16-emacs" :fetcher github :files (:defaults "build/*.el")) :description "Collection of themes built on combinations of 16 base colors" :date (26332 48848) :url "https://github.com/tinted-theming/base16-emacs") (base32 :source "MELPA" :recipe (:package "base32" :fetcher gitlab :files ("base32.el") :repo "fledermaus/totp.el") :description "Base32 support" :date (26076 64464) :url "https://gitlab.com/fledermaus/totp.el") (bash-completion :source "MELPA" :recipe (:package "bash-completion" :repo "szermatt/emacs-bash-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bash completion for the shell buffer" :date (25734 13776) :url "https://github.com/szermatt/emacs-bash-completion") (basic-c-compile :source "MELPA" :recipe (:package "basic-c-compile" :repo "nick96/basic-c-compile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly create a Makefile, compile and run C" :date (22711 13904) :url "https://github.com/nick96/basic-c-compile") (basic-ide :source "MELPA" :recipe (:package "basic-ide" :fetcher gitlab :repo "sasanidas/emacs-c64-basic-ide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "BASIC IDE c64" :date (25543 3152) :url "https://gitlab.com/sasanidas/emacs-c64-basic-ide") (basic-mode :source "MELPA" :recipe (:package "basic-mode" :repo "dykstrom/basic-mode" :fetcher github :files ("src/*.el")) :description "Major mode for editing BASIC code" :date (25953 3792) :url "https://github.com/dykstrom/basic-mode") (basic-theme :source "MELPA" :recipe (:package "basic-theme" :fetcher github :repo "fgeller/basic-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic light color theme" :date (22451 32464) :url "https://github.com/fgeller/basic-theme.el") (bats-mode :source "MELPA" :recipe (:package "bats-mode" :repo "dougm/bats-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs mode for editing and running Bats tests" :date (25630 3920) :url "https://github.com/dougm/bats-mode") (battery-notifier :source "MELPA" :recipe (:package "battery-notifier" :repo "jasonmj/battery-notifier" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Notify when battery capacity is low" :date (25283 21712) :url "https://github.com/jasonmj/battery-notifier") (battle-haxe :source "MELPA" :recipe (:package "battle-haxe" :fetcher github :repo "AlonTzarafi/battle-haxe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Haxe development system, with code completion and more" :date (24622 54608) :url "https://github.com/AlonTzarafi/battle-haxe") (bazel :source "MELPA" :recipe (:package "bazel" :repo "bazelbuild/emacs-bazel-mode" :fetcher github :old-names (bazel-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bazel support for Emacs" :date (25864 47696) :url "https://github.com/bazelbuild/emacs-bazel-mode") (bbcode-mode :source "MELPA" :recipe (:package "bbcode-mode" :fetcher github :repo "lassik/emacs-bbcode-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for phpBB posts (BBCode markup)" :date (25979 27856) :url "https://github.com/lassik/emacs-bbcode-mode") (bbdb :source "MELPA" :recipe (:package "bbdb" :fetcher git :url "https://git.savannah.nongnu.org/git/bbdb.git" :files (:defaults (:rename "lisp/bbdb-site.el.in" "bbdb-site.el"))) :description "Big Brother DataBase" :date (25949 6736) :url "https://git.savannah.nongnu.org/git/bbdb.git") (bbdb- :source "MELPA" :recipe (:package "bbdb-" :repo "aki2o/bbdb-" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide interface for more easily search/choice than BBDB" :date (21254 24256) :url "https://github.com/aki2o/bbdb-") (bbdb-csv-import :source "MELPA" :recipe (:package "bbdb-csv-import" :fetcher sourcehut :repo "iank/bbdb-csv-import" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import csv to bbdb version 3+" :date (21467 61888) :url "https://git.sr.ht/~iank/bbdb-csv-import") (bbdb-ext :source "MELPA" :recipe (:package "bbdb-ext" :fetcher github :repo "vapniks/bbdb-ext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra commands for BBDB" :date (22133 50512) :url "https://github.com/vapniks/bbdb-ext") (bbdb-vcard :source "MELPA" :recipe (:package "bbdb-vcard" :repo "tohojo/bbdb-vcard" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VCard import/export for BBDB" :date (24667 43088) :url "https://github.com/tohojo/bbdb-vcard") (bbdb2erc :source "MELPA" :recipe (:package "bbdb2erc" :fetcher github :repo "unhammer/bbdb2erc" :version-regexp "v\\.%v" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make bbdb show if pal is online with ERC, click i to chat" :date (23901 45264) :url "https://github.com/unhammer/bbdb2erc") (bbww :source "MELPA" :recipe (:package "bbww" :fetcher github :repo "natelastname/bbww" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved word-jumping functions" :date (25680 10320) :url "https://github.com/natelastname/bbww") (bbyac :source "MELPA" :recipe (:package "bbyac" :fetcher github :repo "baohaojun/bbyac" :files (:defaults "*.bbyac")) :description "Type a little Bit, and Bang! You Are Completed" :date (23160 50640) :url "https://github.com/baohaojun/bbyac") (beacon :source "MELPA" :recipe (:package "beacon" :fetcher github :repo "Malabarba/beacon" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the cursor whenever the window scrolls" :date (25316 19024) :url "https://github.com/Malabarba/beacon") (beans :source "MELPA" :recipe (:package "beans" :fetcher github :repo "jthulhu/emacs-beans" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Beans grammar" :date (25457 23248) :url "https://github.com/jthulhu/emacs-beans") (bech32 :source "MELPA" :recipe (:package "bech32" :fetcher github :repo "Titan-C/cardano.el" :files ("bech32.el")) :description "Bech32 library" :date (25491 41424) :url "https://github.com/Titan-C/cardano.el") (beef-mode :source "MELPA" :recipe (:package "beef-mode" :repo "thechampagne/beef-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Beef programming language" :date (25514 2896) :url "https://github.com/thechampagne/beef-mode") (beeminder :source "MELPA" :recipe (:package "beeminder" :repo "Sodaware/beeminder.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface for Beeminder" :date (24551 42064) :url "https://github.com/Sodaware/beeminder.el") (beginend :source "MELPA" :recipe (:package "beginend" :fetcher github :repo "DamienCassou/beginend" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Redefine M-< and M-> for some modes" :date (25842 20688) :url "https://github.com/DamienCassou/beginend") (belarus-holidays :source "MELPA" :recipe (:package "belarus-holidays" :fetcher git :url "https://bitbucket.org/EugeneMakei/belarus-holidays.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Belarus holidays whith transfers" :date (23595 54480) :url "https://bitbucket.org/EugeneMakei/belarus-holidays.el") (benchmark-init :source "MELPA" :recipe (:package "benchmark-init" :fetcher github :repo "dholm/benchmark-init-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Benchmarks for require and load calls" :date (26105 64720) :url "https://github.com/dholm/benchmark-init-el") (benchstat :source "MELPA" :recipe (:package "benchstat" :repo "quasilyte/benchstat.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Proper benchmarking made simple" :date (23009 10576) :url "https://github.com/quasilyte/benchstat.el") (bencode :source "MELPA" :recipe (:package "bencode" :fetcher github :repo "rorokimdim/emacs-bencode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bencode encoding / decoding" :date (23693 25552) :url "https://github.com/rorokimdim/emacs-bencode") (bencoding :source "MELPA" :recipe (:package "bencoding" :fetcher github :repo "xuchunyang/bencoding.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bencoding decoding and encoding" :date (24194 24016) :url "https://github.com/xuchunyang/bencoding.el") (berrys-theme :source "MELPA" :recipe (:package "berrys-theme" :fetcher github :repo "vbuzin/berrys-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light, clean and elegant theme" :date (24034 55376) :url "https://github.com/vbuzin/berrys-theme") (bert :source "MELPA" :recipe (:package "bert" :fetcher github :repo "manzyuk/bert-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "BERT serialization library for Emacs" :date (21127 52928) :url "https://github.com/manzyuk/bert-el") (better-defaults :source "MELPA" :recipe (:package "better-defaults" :fetcher sourcehut :repo "technomancy/better-defaults" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fixing weird quirks and poor defaults" :date (26398 43472) :url "https://git.sr.ht/~technomancy/better-defaults") (better-jumper :source "MELPA" :recipe (:package "better-jumper" :repo "gilbertw1/better-jumper" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configurable jump list" :date (26373 40272) :url "https://github.com/gilbertw1/better-jumper") (better-scroll :source "MELPA" :recipe (:package "better-scroll" :repo "jcs-elpa/better-scroll" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve user experience when scrolling window" :date (26001 54864) :url "https://github.com/jcs-elpa/better-scroll") (better-shell :source "MELPA" :recipe (:package "better-shell" :fetcher github :repo "killdash9/better-shell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better shell management" :date (23986 4304) :url "https://github.com/killdash9/better-shell") (bf-mode :source "MELPA" :recipe (:package "bf-mode" :repo "emacs-jp/bf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse file persistently on dired" :date (20827 14528) :url "https://github.com/emacs-jp/bf-mode") (bfbuilder :source "MELPA" :recipe (:package "bfbuilder" :fetcher github :repo "zk-phi/bfbuilder" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A brainfuck development environment with interactive debugger" :date (24634 45776) :url "https://github.com/zk-phi/bfbuilder") (bibclean-format :source "MELPA" :recipe (:package "bibclean-format" :fetcher github :repo "peterwvj/bibclean-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat BibTeX and Scribe using bibclean" :date (23673 40272) :url "https://github.com/peterwvj/bibclean-format") (biblio :source "MELPA" :recipe (:package "biblio" :repo "cpitclaudel/biblio.el" :fetcher github :files (:defaults (:exclude "biblio-core.el"))) :description "Browse and import bibliographic references from CrossRef, arXiv, DBLP, HAL, Dissemin, and doi.org" :date (25562 53968) :url "https://github.com/cpitclaudel/biblio.el") (biblio-bibsonomy :source "MELPA" :recipe (:package "biblio-bibsonomy" :fetcher github :repo "andreasjansson/biblio-bibsonomy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lookup bibliographic entries from Bibsonomy" :date (23599 51536) :url "https://github.com/andreasjansson/biblio-bibsonomy.el") (biblio-core :source "MELPA" :recipe (:package "biblio-core" :repo "cpitclaudel/biblio.el" :fetcher github :files ("biblio-core.el")) :description "A framework for looking up and displaying bibliographic entries" :date (25562 53968) :url "https://github.com/cpitclaudel/biblio.el") (biblio-gbooks :source "MELPA" :recipe (:package "biblio-gbooks" :fetcher github :repo "jrasband/biblio-gbooks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Google Books backend for biblio.el" :date (26394 46416) :url "https://github.com/jrasband/biblio-gbooks") (bibliothek :source "MELPA" :recipe (:package "bibliothek" :fetcher codeberg :repo "kutuptiyini/elisp" :files ("bibliothek.el")) :description "Managing a digital library of PDFs" :date (23624 54736) :url "https://codeberg.org/kutuptiyini/elisp") (bibretrieve :source "MELPA" :recipe (:package "bibretrieve" :repo "pzorin/bibretrieve" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Retrieve BibTeX entries from the internet" :date (24025 40400) :url "https://github.com/pzorin/bibretrieve") (bibslurp :source "MELPA" :recipe (:package "bibslurp" :fetcher github :repo "mkmcc/bibslurp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Retrieve BibTeX entries from NASA ADS" :date (22110 2640) :url "https://github.com/mkmcc/bibslurp") (bibtex-capf :source "MELPA" :recipe (:package "bibtex-capf" :fetcher github :repo "mclear-tools/bibtex-capf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion at point for bibtex" :date (26029 34256) :url "https://github.com/mclear-tools/bibtex-capf") (bibtex-completion :source "MELPA" :recipe (:package "bibtex-completion" :fetcher github :repo "tmalsburg/helm-bibtex" :files ("bibtex-completion.el")) :description "A BibTeX backend for completion frameworks" :date (26067 49488) :url "https://github.com/tmalsburg/helm-bibtex") (bibtex-utils :source "MELPA" :recipe (:package "bibtex-utils" :fetcher github :repo "plantarum/bibtex-utils" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides utilities for extending BibTeX mode" :date (23835 50640) :url "https://github.com/plantarum/bibtex-utils") (bicycle :source "MELPA" :recipe (:package "bicycle" :fetcher github :repo "tarsius/bicycle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle outline and code visibility" :date (26322 13008) :url "https://github.com/tarsius/bicycle") (bifocal :source "MELPA" :recipe (:package "bifocal" :repo "riscy/bifocal-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Split-screen scrolling for comint-mode buffers" :date (24186 29904) :url "https://github.com/riscy/bifocal-mode") (binclock :source "MELPA" :recipe (:package "binclock" :fetcher github :repo "davep/binclock.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the current time using a binary clock" :date (22912 60368) :url "https://github.com/davep/binclock.el") (bind :source "MELPA" :recipe (:package "bind" :fetcher github :repo "repelliuss/bind" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bind commands to keys" :date (25880 35920) :url "https://github.com/repelliuss/bind") (bind-chord :source "MELPA" :recipe (:package "bind-chord" :repo "jwiegley/use-package" :fetcher github :files ("bind-chord.el")) :description "Key-chord binding helper for use-package-chords" :date (25461 20304) :url "https://github.com/jwiegley/use-package") (bind-key :source "MELPA" :recipe (:package "bind-key" :fetcher github :repo "jwiegley/use-package" :files ("bind-key.el")) :description "A simple way to manage personal keybindings" :date (25564 9296) :url "https://github.com/jwiegley/use-package") (bind-map :source "MELPA" :recipe (:package "bind-map" :repo "justbur/emacs-bind-map" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bind personal keymaps in multiple locations" :date (26090 10960) :url "https://github.com/justbur/emacs-bind-map") (binder :source "MELPA" :recipe (:package "binder" :fetcher codeberg :repo "divyaranjan/binder" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Global minor mode to facilitate multi-file writing projects" :date (26392 4688) :url "https://codeberg.org/divyaranjan/binder") (bing-dict :source "MELPA" :recipe (:package "bing-dict" :repo "cute-jumper/bing-dict.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalists' English-Chinese Bing dictionary" :date (24136 23504) :url "https://github.com/cute-jumper/bing-dict.el") (binky :source "MELPA" :recipe (:package "binky" :fetcher github :repo "liuyinz/binky.el" :old-names (binky-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump between points like a rabbit" :date (26399 64336) :url "https://github.com/liuyinz/binky.el") (biome :source "MELPA" :recipe (:package "biome" :fetcher github :repo "SqrtMinusOne/biome" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bountiful Interface to Open Meteo for Emacs" :date (26185 5840) :url "https://github.com/SqrtMinusOne/biome") (biomejs-format :source "MELPA" :recipe (:package "biomejs-format" :fetcher github :repo "yadex205/emacs-biomejs-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to format JS code with Biome on file save" :date (26121 52944) :url "https://github.com/yadex205/emacs-biomejs-format") (birds-of-paradise-plus-theme :source "MELPA" :recipe (:package "birds-of-paradise-plus-theme" :repo "jimeh/birds-of-paradise-plus-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A brown/orange light-on-dark theme for Emacs 24 (deftheme)" :date (20848 20672) :url "https://github.com/jimeh/birds-of-paradise-plus-theme.el") (bison-mode :source "MELPA" :recipe (:package "bison-mode" :repo "Wilfred/bison-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing bison, yacc and lex files" :date (24750 46800) :url "https://github.com/Wilfred/bison-mode") (bitbake :source "MELPA" :recipe (:package "bitbake" :fetcher github :repo "canatella/bitbake-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running bitbake from emacs" :date (26207 32848) :url "https://github.com/canatella/bitbake-el") (bitbake-ts-mode :source "MELPA" :recipe (:package "bitbake-ts-mode" :fetcher github :repo "seokbeomKim/bitbake-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode to use bitbake tree-sitter" :date (26332 48848) :url "https://github.com/seokbeomKim/bitbake-ts-mode") (bitlbee :source "MELPA" :recipe (:package "bitlbee" :repo "pjones/bitlbee-el" :fetcher github :files ("lisp/bitlbee.el")) :description "Help get Bitlbee (http://www.bitlbee.org) up and running" :date (22111 23504) :url "https://github.com/pjones/bitlbee-el") (bitpack :source "MELPA" :recipe (:package "bitpack" :fetcher github :repo "skeeto/bitpack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bit packing functions" :date (25660 25040) :url "https://github.com/skeeto/bitpack") (blackboard-bold-mode :source "MELPA" :recipe (:package "blackboard-bold-mode" :repo "grettke/blackboard-bold-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily insert Unicode mathematical double-struck characters" :date (22446 14544) :url "https://github.com/grettke/blackboard-bold-mode") (blackboard-theme :source "MELPA" :recipe (:package "blackboard-theme" :fetcher github :repo "don9z/blackboard-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TextMate Blackboard Theme" :date (22611 1104) :url "https://github.com/don9z/blackboard-theme") (blacken :source "MELPA" :recipe (:package "blacken" :fetcher github :repo "pythonic-emacs/blacken" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat python buffers using the \"black\" formatter" :date (25958 21712) :url "https://github.com/pythonic-emacs/blacken") (blackjack :source "MELPA" :recipe (:package "blackjack" :fetcher github :repo "gdonald/blackjack-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The game of Blackjack" :date (25826 32464) :url "https://github.com/gdonald/blackjack-el") (blackout :source "MELPA" :recipe (:package "blackout" :fetcher github :repo "radian-software/blackout" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better mode lighter overriding" :date (25208 12112) :url "https://github.com/radian-software/blackout") (blamer :source "MELPA" :recipe (:package "blamer" :repo "Artawower/blamer.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show git blame info about current line" :date (26345 60880) :url "https://github.com/Artawower/blamer.el") (blgrep :source "MELPA" :recipe (:package "blgrep" :repo "ataka/blgrep" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Block grep" :date (21787 2768) :url "https://github.com/ataka/blgrep") (blimp :source "MELPA" :recipe (:package "blimp" :fetcher github :repo "walseb/blimp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bustling Image Manipulation Package" :date (23436 20304) :url "https://github.com/walseb/blimp") (bliss-theme :source "MELPA" :recipe (:package "bliss-theme" :fetcher github :repo "emacsfodder/emacs-bliss-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Bliss (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-bliss-theme") (blitzmax-mode :source "MELPA" :recipe (:package "blitzmax-mode" :repo "Sodaware/blitzmax-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing BlitzMax source code" :date (24994 40016) :url "https://github.com/Sodaware/blitzmax-mode") (bln-mode :source "MELPA" :recipe (:package "bln-mode" :repo "mgrachten/bln-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Binary line navigation minor mode for cursor movement in long lines" :date (23540 30160) :url "https://github.com/mgrachten/bln-mode") (block-nav :source "MELPA" :recipe (:package "block-nav" :fetcher github :repo "nixin72/block-nav.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump across indentation levels for quick navigation" :date (24442 14288) :url "https://github.com/nixin72/block-nav.el") (blockdiag-mode :source "MELPA" :recipe (:package "blockdiag-mode" :fetcher github :repo "xcezx/blockdiag-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing blockdiag files" :date (22303 54992) :url "https://github.com/xcezx/blockdiag-mode") (blog-admin :source "MELPA" :recipe (:package "blog-admin" :fetcher github :repo "xcodebuild/blog-admin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Blog admin for emacs with hexo/org-page supported" :date (22981 31184) :url "https://github.com/xcodebuild/blog-admin") (blog-minimal :source "MELPA" :recipe (:package "blog-minimal" :fetcher github :repo "thiefuniverse/blog-minimal" :files (:defaults "media" "templates" "about.org")) :description "A simple static site generator based on org mode" :date (23499 38736) :url "https://github.com/thiefuniverse/blog-minimal") (blox :source "MELPA" :recipe (:package "blox" :fetcher github :repo "kennethloeffler/blox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interaction with Roblox tooling" :date (25224 336) :url "https://github.com/kennethloeffler/blox") (bluesound :source "MELPA" :recipe (:package "bluesound" :fetcher sourcehut :repo "rwv/bluesound-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play, pause, resume music on a Bluesound player" :date (25951 48464) :url "https://git.sr.ht/~rwv/bluesound-el") (bm :source "MELPA" :recipe (:package "bm" :repo "joodland/bm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visible bookmarks in buffer" :date (25889 50896) :url "https://github.com/joodland/bm") (bmx-mode :source "MELPA" :recipe (:package "bmx-mode" :repo "josteink/bmx-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Batch Mode eXtras" :date (24659 48976) :url "https://github.com/josteink/bmx-mode") (bnf-mode :source "MELPA" :recipe (:package "bnf-mode" :repo "sergeyklay/bnf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing BNF grammars" :date (26341 63824) :url "https://github.com/sergeyklay/bnf-mode") (bnfc :source "MELPA" :recipe (:package "bnfc" :repo "jmitchell/bnfc-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define context-free grammars for the BNFC tool" :date (22355 16720) :url "https://github.com/jmitchell/bnfc-mode") (boa-ide :source "MELPA" :recipe (:package "boa-ide" :fetcher github :repo "boalang/syntax-highlight" :files ("boa-ide-sc.el" "boa-ide.el" "boa-ide-study-config.el")) :description "Mode for boa language files" :date (25815 62160) :url "https://github.com/boalang/syntax-highlight") (boa-mode :source "MELPA" :recipe (:package "boa-mode" :fetcher github :repo "boalang/syntax-highlight" :files ("boa-mode.el" "boa-doc.el" "emacs-snippets")) :description "Mode for boa language files" :date (25797 32208) :url "https://github.com/boalang/syntax-highlight") (bog :source "MELPA" :recipe (:package "bog" :fetcher github :repo "kyleam/bog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for research notes in Org mode" :date (26061 10704) :url "https://github.com/kyleam/bog") (bolt-mode :source "MELPA" :recipe (:package "bolt-mode" :repo "mpontus/bolt-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Editing support for Bolt language" :date (23202 62928) :url "https://github.com/mpontus/bolt-mode") (bongo :source "MELPA" :recipe (:package "bongo" :fetcher github :repo "dbrock/bongo" :files ("*.el" "*.texi" "images" "*.rb")) :description "Play music with Emacs" :date (24438 17232) :url "https://github.com/dbrock/bongo") (bonjourmadame :source "MELPA" :recipe (:package "bonjourmadame" :repo "pierre-lecocq/bonjourmadame" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Say \"Hello ma'am!\"" :date (22976 13264) :url "https://github.com/pierre-lecocq/bonjourmadame") (boogie-friends :source "MELPA" :recipe (:package "boogie-friends" :fetcher github :repo "boogie-org/boogie-friends" :files ("emacs/*.el" "emacs/etc")) :description "A collection of programming modes for Boogie, Dafny, and Z3 (SMTLIB v2)" :date (25458 44112) :url "https://github.com/boogie-org/boogie-friends") (bookmark-frecency :source "MELPA" :recipe (:package "bookmark-frecency" :fetcher github :repo "akirak/bookmark-frecency.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort bookmarks by frecency" :date (25954 24656) :url "https://github.com/akirak/bookmark-frecency.el") (bookmark-in-project :source "MELPA" :recipe (:package "bookmark-in-project" :fetcher codeberg :repo "ideasman42/emacs-bookmark-in-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmark access within a project" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-bookmark-in-project") (bookmark-view :source "MELPA" :recipe (:package "bookmark-view" :repo "minad/bookmark-view" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmark views" :date (26003 10192) :url "https://github.com/minad/bookmark-view") (bool-flip :source "MELPA" :recipe (:package "bool-flip" :repo "michaeljb/bool-flip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flip the boolean under the point" :date (22609 45776) :url "https://github.com/michaeljb/bool-flip") (boon :source "MELPA" :recipe (:package "boon" :fetcher github :repo "jyp/boon" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ergonomic Command Mode for Emacs" :date (26237 53968) :url "https://github.com/jyp/boon") (borg :source "MELPA" :recipe (:package "borg" :fetcher github :repo "emacscollective/borg" :files (:defaults "borg.mk")) :description "Assimilate Emacs packages as Git submodules" :date (26405 16720) :url "https://github.com/emacscollective/borg") (borland-blue-theme :source "MELPA" :recipe (:package "borland-blue-theme" :fetcher codeberg :repo "fourier/borland-blue-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Blue/yellow theme based on old DOS Borland/Turbo C IDE" :date (22170 44880) :url "https://codeberg.org/fourier/borland-blue-theme") (boron-theme :source "MELPA" :recipe (:package "boron-theme" :fetcher github :repo "emacsfodder/emacs-boron-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Boron (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-boron-theme") (boxes :source "MELPA" :recipe (:package "boxes" :fetcher github :repo "ascii-boxes/boxes" :files ("doc/*.el")) :description "ASCII boxes unlimited!" :date (26365 46160) :url "https://github.com/ascii-boxes/boxes") (boxquote :source "MELPA" :recipe (:package "boxquote" :fetcher github :repo "davep/boxquote.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quote text with a semi-box" :date (25980 48720) :url "https://github.com/davep/boxquote.el") (bpe :source "MELPA" :recipe (:package "bpe" :fetcher github :repo "yuutayamada/bpe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Blog from Org mode to Blogger" :date (21663 7632) :url "https://github.com/yuutayamada/bpe") (bpftrace-mode :source "MELPA" :recipe (:package "bpftrace-mode" :fetcher gitlab :repo "jgkamat/bpftrace-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing bpftrace script files" :date (23802 53328) :url "https://gitlab.com/jgkamat/bpftrace-mode") (bpr :source "MELPA" :recipe (:package "bpr" :repo "iliabv/emacs-bpr" :fetcher github :files (:defaults (:exclude "test-bpr.el"))) :description "Background Process Runner" :date (23179 15056) :url "https://github.com/iliabv/emacs-bpr") (bqn-mode :source "MELPA" :recipe (:package "bqn-mode" :fetcher github :repo "museoa/bqn-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs mode for BQN" :date (26377 37328) :url "https://github.com/museoa/bqn-mode") (bracketed-paste :source "MELPA" :recipe (:package "bracketed-paste" :fetcher github :repo "hchbaw/bracketed-paste.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bracketed paste mode support within emacs -nw" :date (22277 30928) :url "https://github.com/hchbaw/bracketed-paste.el") (brainfuck-mode :source "MELPA" :recipe (:package "brainfuck-mode" :repo "tom-tan/brainfuck-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brainfuck mode for Emacs" :date (21684 13776) :url "https://github.com/tom-tan/brainfuck-mode") (brazilian-holidays :source "MELPA" :recipe (:package "brazilian-holidays" :repo "jadler/brazilian-holidays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brazilian holidays" :date (25354 34256) :url "https://github.com/jadler/brazilian-holidays") (brec-mode :source "MELPA" :recipe (:package "brec-mode" :repo "Michael-Allan/Breccia.Emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Breccian text" :date (26227 18128) :url "https://github.com/Michael-Allan/Breccia.Emacs") (brf :source "MELPA" :recipe (:package "brf" :fetcher git :url "https://bitbucket.org/MikeWoolley/brf-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brf-mode provides features from the legendary editor Brief" :date (26243 6352) :url "https://bitbucket.org/MikeWoolley/brf-mode") (brightscript-mode :source "MELPA" :recipe (:package "brightscript-mode" :repo "viseztrance/brightscript-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Brightscript files" :date (25366 25424) :url "https://github.com/viseztrance/brightscript-mode") (bril-mode :source "MELPA" :recipe (:package "bril-mode" :repo "nverno/bril-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Bril text format" :date (26099 25936) :url "https://github.com/nverno/bril-mode") (broadcast :source "MELPA" :recipe (:package "broadcast" :fetcher github :repo "killdash9/broadcast.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Links buffers together for simultaneous editing" :date (22113 65232) :url "https://github.com/killdash9/broadcast.el") (browse-at-remote :source "MELPA" :recipe (:package "browse-at-remote" :repo "rmuslimov/browse-at-remote" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open github/gitlab/bitbucket/stash/gist/phab/sourcehut page from Emacs" :date (25590 33360) :url "https://github.com/rmuslimov/browse-at-remote") (browse-kill-ring :source "MELPA" :recipe (:package "browse-kill-ring" :repo "browse-kill-ring/browse-kill-ring" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively insert items from kill-ring" :date (25925 24400) :url "https://github.com/browse-kill-ring/browse-kill-ring") (browse-url-dwim :source "MELPA" :recipe (:package "browse-url-dwim" :repo "rolandwalker/browse-url-dwim" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Context-sensitive external browse URL or Internet search" :date (21465 20160) :url "https://github.com/rolandwalker/browse-url-dwim") (browser-hist :source "MELPA" :recipe (:package "browser-hist" :fetcher github :repo "agzam/browser-hist.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search through the Browser history" :date (26210 9040) :url "https://github.com/agzam/browser-hist.el") (brutalist-theme :source "MELPA" :recipe (:package "brutalist-theme" :fetcher git :url "https://git.madhouse-project.org/algernon/brutalist-theme.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brutalist theme" :date (25946 30544) :url "https://git.madhouse-project.org/algernon/brutalist-theme.el.git") (bshell :source "MELPA" :recipe (:package "bshell" :fetcher github :repo "plandes/bshell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage and track multiple inferior shells" :date (26016 22224) :url "https://github.com/plandes/bshell") (bts :source "MELPA" :recipe (:package "bts" :repo "aki2o/emacs-bts" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A unified UI for various bug tracking systems" :date (22079 47056) :url "https://github.com/aki2o/emacs-bts") (bts-github :source "MELPA" :recipe (:package "bts-github" :repo "aki2o/emacs-bts-github" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A plugin of bts.el for GitHub" :date (22750 50000) :url "https://github.com/aki2o/emacs-bts-github") (bubbleberry-theme :source "MELPA" :recipe (:package "bubbleberry-theme" :fetcher github :repo "emacsfodder/emacs-bubbleberry-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme based on LightTable for Emacs24" :date (21568 9152) :url "https://github.com/emacsfodder/emacs-bubbleberry-theme") (buckwalter :source "MELPA" :recipe (:package "buckwalter" :fetcher github :repo "joehakimrahme/buckwalter.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write arabic using Buckwalter transliteration" :date (24019 1616) :url "https://github.com/joehakimrahme/buckwalter.el") (buffer-buttons :source "MELPA" :recipe (:package "buffer-buttons" :fetcher github :repo "rpav/buffer-buttons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define, save, and load code-safe buttons in files for emacs" :date (21674 64336) :url "https://github.com/rpav/buffer-buttons") (buffer-env :source "MELPA" :recipe (:package "buffer-env" :fetcher github :repo "astoff/buffer-env" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Buffer-local process environments" :date (26109 61776) :url "https://github.com/astoff/buffer-env") (buffer-flip :source "MELPA" :recipe (:package "buffer-flip" :fetcher github :repo "killdash9/buffer-flip.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle through buffers like Alt-Tab in Windows" :date (25300 30800) :url "https://github.com/killdash9/buffer-flip.el") (buffer-manage :source "MELPA" :recipe (:package "buffer-manage" :fetcher github :repo "plandes/buffer-manage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage buffers" :date (24986 45904) :url "https://github.com/plandes/buffer-manage") (buffer-move :source "MELPA" :recipe (:package "buffer-move" :fetcher github :repo "lukhas/buffer-move" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily swap buffers" :date (25212 9168) :url "https://github.com/lukhas/buffer-move") (buffer-name-relative :source "MELPA" :recipe (:package "buffer-name-relative" :fetcher codeberg :repo "ideasman42/emacs-buffer-name-relative" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Relative buffer names" :date (26381 34384) :url "https://codeberg.org/ideasman42/emacs-buffer-name-relative") (buffer-ring :source "MELPA" :recipe (:package "buffer-ring" :repo "countvajhula/buffer-ring" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rings and tori for buffer navigation" :date (25064 31696) :url "https://github.com/countvajhula/buffer-ring") (buffer-sets :source "MELPA" :recipe (:package "buffer-sets" :fetcher sourcehut :repo "swflint/buffer-sets" :files ("buffer-sets.el")) :description "Sets of Buffers for Buffer Management" :date (25622 9808) :url "https://git.sr.ht/~swflint/buffer-sets") (buffer-utils :source "MELPA" :recipe (:package "buffer-utils" :repo "rolandwalker/buffer-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Buffer-manipulation utility functions" :date (21359 54976) :url "https://github.com/rolandwalker/buffer-utils") (buffer-watcher :source "MELPA" :recipe (:package "buffer-watcher" :fetcher github :repo "NicolasPetton/buffer-watcher" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily run shell scripts per filetype/directory when a buffer is saved" :date (22968 19152) :url "https://github.com/NicolasPetton/buffer-watcher") (buffer-wrap :source "MELPA" :recipe (:package "buffer-wrap" :repo "jcs-elpa/buffer-wrap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wrap the beginning and the end of buffer" :date (26001 54864) :url "https://github.com/jcs-elpa/buffer-wrap") (bufferbin :source "MELPA" :recipe (:package "bufferbin" :fetcher github :repo "blueridge-data/bufferbin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick mouse access to buffers" :date (25765 55760) :url "https://github.com/blueridge-data/bufferbin") (bufler :source "MELPA" :recipe (:package "bufler" :fetcher github :repo "alphapapa/bufler.el" :files (:defaults (:exclude "helm-bufler.el"))) :description "Group buffers into workspaces with programmable rules" :date (26095 28880) :url "https://github.com/alphapapa/bufler.el") (bufshow :source "MELPA" :recipe (:package "bufshow" :fetcher github :repo "pjones/bufshow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple presentation tool for Emacs" :date (20977 33728) :url "https://github.com/pjones/bufshow") (bug-reference-github :source "MELPA" :recipe (:package "bug-reference-github" :fetcher github :repo "arnested/bug-reference-github" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set `bug-reference-url-format' in Github repos" :date (24123 11472) :url "https://github.com/arnested/bug-reference-github") (bui :source "MELPA" :recipe (:package "bui" :repo "alezost/bui.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Buffer interface library" :date (24567 30288) :url "https://github.com/alezost/bui.el") (build-farm :source "MELPA" :recipe (:package "build-farm" :repo "alezost/build-farm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for Nix and Guix build farms (Hydra and Cuirass)" :date (23576 3664) :url "https://github.com/alezost/build-farm.el") (build-helper :source "MELPA" :recipe (:package "build-helper" :repo "afonso360/build-helper" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities to help build code" :date (22521 24144) :url "https://github.com/afonso360/build-helper") (build-status :source "MELPA" :recipe (:package "build-status" :fetcher github :repo "sshaw/build-status" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode line build status indicator" :date (23881 59984) :url "https://github.com/sshaw/build-status") (bundler :source "MELPA" :recipe (:package "bundler" :repo "endofunky/bundler.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with Bundler from Emacs" :date (24112 41168) :url "https://github.com/endofunky/bundler.el") (burly :source "MELPA" :recipe (:package "burly" :fetcher github :repo "alphapapa/burly.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save and restore frame/window configurations with buffers" :date (26276 3664) :url "https://github.com/alphapapa/burly.el") (burnt-toast :source "MELPA" :recipe (:package "burnt-toast" :fetcher github :repo "cedarbaum/burnt-toast.el" :files (:defaults ("icons" "icons/*.png"))) :description "Elisp integration with the BurntToast PowerShell module" :date (24493 41552) :url "https://github.com/cedarbaum/burnt-toast.el") (bury-successful-compilation :source "MELPA" :recipe (:package "bury-successful-compilation" :fetcher github :repo "EricCrosson/bury-successful-compilation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bury the *compilation* buffer after successful compilation" :date (23520 44880) :url "https://github.com/EricCrosson/bury-successful-compilation") (buster-mode :source "MELPA" :recipe (:package "buster-mode" :repo "magnars/buster-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to speed up development when writing tests with Buster.js" :date (21543 5952) :url "https://github.com/magnars/buster-mode") (buster-snippets :source "MELPA" :recipe (:package "buster-snippets" :fetcher github :repo "magnars/buster-snippets.el" :files ("*.el" "snippets")) :description "Yasnippets for the Buster javascript testing framework" :date (22100 53200) :url "https://github.com/magnars/buster-snippets.el") (busybee-theme :source "MELPA" :recipe (:package "busybee-theme" :fetcher github :repo "mswift42/busybee-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of vim's mustang theme" :date (22894 30416) :url "https://github.com/mswift42/busybee-theme") (butler :source "MELPA" :recipe (:package "butler" :fetcher github :repo "AshtonKem/Butler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client for Jenkins" :date (24914 12496) :url "https://github.com/AshtonKem/Butler") (buttercup :source "MELPA" :recipe (:package "buttercup" :fetcher github :repo "jorgenschaefer/emacs-buttercup" :files (:defaults "bin")) :description "Behavior-Driven Emacs Lisp Testing" :date (26327 30928) :url "https://github.com/jorgenschaefer/emacs-buttercup") (buttercup-junit :source "MELPA" :recipe (:package "buttercup-junit" :fetcher git :url "https://bitbucket.org/olanilsson/buttercup-junit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JUnit reporting for Buttercup" :date (26150 53200) :url "https://bitbucket.org/olanilsson/buttercup-junit") (button-lock :source "MELPA" :recipe (:package "button-lock" :repo "rolandwalker/button-lock" :fetcher github :files ("button-lock.el")) :description "Clickable text defined by regular expression" :date (25602 24528) :url "https://github.com/rolandwalker/button-lock") (buttons :source "MELPA" :recipe (:package "buttons" :fetcher github :repo "erjoalgo/emacs-buttons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define and visualize hierarchies of keymaps" :date (25847 38608) :url "https://github.com/erjoalgo/emacs-buttons") (c-c-combo :source "MELPA" :recipe (:package "c-c-combo" :fetcher github :repo "CestDiego/c-c-combo.el" :files (:defaults "*.wav")) :description "Make stuff happen when you reach a target wpm" :date (22139 2896) :url "https://github.com/CestDiego/c-c-combo.el") (c-eldoc :source "MELPA" :recipe (:package "c-eldoc" :repo "nflath/c-eldoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpful description of the arguments to C functions" :date (24440 58960) :url "https://github.com/nflath/c-eldoc") (c-eval :source "MELPA" :recipe (:package "c-eval" :fetcher github :repo "lassik/emacs-c-eval" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compile and run one-off C code snippets" :date (24770 32080) :url "https://github.com/lassik/emacs-c-eval") (c0-mode :source "MELPA" :recipe (:package "c0-mode" :fetcher github :repo "catern/c0-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing C0 files" :date (22081 2384) :url "https://github.com/catern/c0-mode") (ca65-mode :source "MELPA" :recipe (:package "ca65-mode" :fetcher github :repo "wendelscardua/ca65-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for ca65 assembly files" :date (24621 33744) :url "https://github.com/wendelscardua/ca65-mode") (cabledolphin :source "MELPA" :recipe (:package "cabledolphin" :fetcher github :repo "legoscia/cabledolphin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Capture Emacs network traffic" :date (22194 27216) :url "https://github.com/legoscia/cabledolphin") (cache :source "MELPA" :recipe (:package "cache" :fetcher github :repo "nflath/cache" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Implementation of a hash table whose key-value pairs expire" :date (20125 56000) :url "https://github.com/nflath/cache") (cacoo :source "MELPA" :recipe (:package "cacoo" :fetcher github :repo "kiwanami/emacs-cacoo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Cacoo : http://cacoo.com" :date (20326 16064) :url "https://github.com/kiwanami/emacs-cacoo") (caddyfile-mode :source "MELPA" :recipe (:package "caddyfile-mode" :fetcher github :repo "Schnouki/caddyfile-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Caddy configuration files" :date (25271 30544) :url "https://github.com/Schnouki/caddyfile-mode") (cake-inflector :source "MELPA" :recipe (:package "cake-inflector" :fetcher github :repo "k1LoW/emacs-cake-inflector" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lazy porting CakePHP infrector.php to el" :date (21324 15936) :url "https://github.com/k1LoW/emacs-cake-inflector") (cakecrumbs :source "MELPA" :recipe (:package "cakecrumbs" :fetcher github :repo "kuanyui/cakecrumbs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show parents on header for HTML/Jade/Sass/Stylus" :date (23470 38480) :url "https://github.com/kuanyui/cakecrumbs.el") (cal-china-x :source "MELPA" :recipe (:package "cal-china-x" :repo "xwl/cal-china-x" :fetcher github :files (:defaults "jieqi.txt")) :description "Chinese localization, lunar/horoscope/zodiac info and more.." :date (24427 46928) :url "https://github.com/xwl/cal-china-x") (calc-at-point :source "MELPA" :recipe (:package "calc-at-point" :fetcher github :repo "walseb/calc-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perform calculations at point or over selection" :date (24622 54608) :url "https://github.com/walseb/calc-at-point") (calc-prog-utils :source "MELPA" :recipe (:package "calc-prog-utils" :fetcher github :repo "Jesse-Millwood/calc-prog-utils" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calc programmers utilities" :date (25343 63952) :url "https://github.com/Jesse-Millwood/calc-prog-utils") (calendar-norway :source "MELPA" :recipe (:package "calendar-norway" :fetcher github :repo "unhammer/calendar-norway.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Norwegian calendar" :date (25093 31952) :url "https://github.com/unhammer/calendar-norway.el") (calfw :source "MELPA" :recipe (:package "calfw" :repo "kiwanami/emacs-calfw" :fetcher github :files ("calfw.el")) :description "Calendar view framework on Emacs" :date (23135 47440) :url "https://github.com/kiwanami/emacs-calfw") (calfw-cal :source "MELPA" :recipe (:package "calfw-cal" :repo "kiwanami/emacs-calfw" :fetcher github :files ("calfw-cal.el")) :description "Calendar view for emacs diary" :date (22763 62032) :url "https://github.com/kiwanami/emacs-calfw") (calfw-gcal :source "MELPA" :recipe (:package "calfw-gcal" :fetcher github :repo "myuhe/calfw-gcal.el" :files ("*.el" "*.py")) :description "Edit Google calendar for calfw.el" :date (20236 39104) :url "https://github.com/myuhe/calfw-gcal.el") (calfw-howm :source "MELPA" :recipe (:package "calfw-howm" :repo "kiwanami/emacs-calfw" :fetcher github :files ("calfw-howm.el")) :description "Calendar view for howm" :date (22874 45136) :url "https://github.com/kiwanami/emacs-calfw") (calfw-ical :source "MELPA" :recipe (:package "calfw-ical" :repo "kiwanami/emacs-calfw" :fetcher github :files ("calfw-ical.el")) :description "Calendar view for ical format" :date (22763 62032) :url "https://github.com/kiwanami/emacs-calfw") (calfw-org :source "MELPA" :recipe (:package "calfw-org" :repo "kiwanami/emacs-calfw" :fetcher github :files ("calfw-org.el")) :description "Calendar view for org-agenda" :date (22763 62032) :url "https://github.com/kiwanami/emacs-calfw") (calibredb :source "MELPA" :recipe (:package "calibredb" :fetcher github :repo "chenyanming/calibredb.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another calibre client" :date (26258 60112) :url "https://github.com/chenyanming/calibredb.el") (call-graph :source "MELPA" :recipe (:package "call-graph" :fetcher github :repo "emacsattic/call-graph" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate call graph for c/c++ functions" :date (25589 12496) :url "https://github.com/emacsattic/call-graph") (calmer-forest-theme :source "MELPA" :recipe (:package "calmer-forest-theme" :repo "caldwell/calmer-forest-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Darkish theme with green/orange tint" :date (25599 48336) :url "https://github.com/caldwell/calmer-forest-theme") (camcorder :source "MELPA" :recipe (:package "camcorder" :repo "Malabarba/camcorder.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Record screencasts in gif or other formats" :date (23693 25552) :url "https://github.com/Malabarba/camcorder.el") (caml :source "MELPA" :recipe (:package "caml" :repo "ocaml/caml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Caml mode for GNU Emacs" :date (25893 47952) :url "https://github.com/ocaml/caml-mode") (cangjie :source "MELPA" :recipe (:package "cangjie" :repo "kisaragi-hiu/cangjie.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Retrieve cangjie code for han characters" :date (25585 15440) :url "https://github.com/kisaragi-hiu/cangjie.el") (cape :source "MELPA" :recipe (:package "cape" :repo "minad/cape" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion At Point Extensions" :date (26409 13776) :url "https://github.com/minad/cape") (capnp-mode :source "MELPA" :recipe (:package "capnp-mode" :repo "capnproto/capnproto" :fetcher github :files ("highlighting/emacs/capnp-mode.el")) :description "Major mode for editing Capn' Proto Files" :date (24804 50256) :url "https://github.com/capnproto/capnproto") (capture :source "MELPA" :recipe (:package "capture" :fetcher github :repo "pashinin/capture.el" :files ("src/*.el")) :description "Screencasting with \"avconv\" or \"ffmpeg\"" :date (21021 1344) :url "https://github.com/pashinin/capture.el") (carbon-now-sh :source "MELPA" :recipe (:package "carbon-now-sh" :repo "veelenga/carbon-now-sh.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Https://carbon.now.sh integration" :date (25278 3792) :url "https://github.com/veelenga/carbon-now-sh.el") (cardano-tx :source "MELPA" :recipe (:package "cardano-tx" :fetcher github :repo "Titan-C/cardano.el" :files (:defaults "snippets" (:exclude "cbor.el" "bech32.el" "readable-numbers.el" "cardano-wallet.el" "ouroboros.el"))) :description "Cardano transaction editor" :date (25726 19664) :url "https://github.com/Titan-C/cardano.el") (cardano-wallet :source "MELPA" :recipe (:package "cardano-wallet" :fetcher github :repo "Titan-C/cardano.el" :files ("cardano-wallet.el")) :description "Interact with cardano wallet" :date (25726 19664) :url "https://github.com/Titan-C/cardano.el") (cargo :source "MELPA" :recipe (:package "cargo" :repo "kwrooijen/cargo.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Minor Mode for Cargo, Rust's Package Manager" :date (25997 57808) :url "https://github.com/kwrooijen/cargo.el") (cargo-mode :source "MELPA" :recipe (:package "cargo-mode" :fetcher github :repo "ayrat555/cargo-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cargo Major Mode. Cargo is the Rust package manager" :date (26359 7376) :url "https://github.com/ayrat555/cargo-mode") (cargo-transient :source "MELPA" :recipe (:package "cargo-transient" :repo "peterstuart/cargo-transient" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A transient UI for Cargo, Rust's package manager" :date (25693 22352) :url "https://github.com/peterstuart/cargo-transient") (caroline-theme :source "MELPA" :recipe (:package "caroline-theme" :fetcher github :repo "xjackk/caroline-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A trip down to New Orleans.." :date (22251 6864) :url "https://github.com/xjackk/caroline-theme") (cascading-dir-locals :source "MELPA" :recipe (:package "cascading-dir-locals" :fetcher github :repo "fritzgrabo/cascading-dir-locals" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply all (!) .dir-locals.el from root to current directory" :date (24933 63312) :url "https://github.com/fritzgrabo/cascading-dir-locals") (caseformat :source "MELPA" :recipe (:package "caseformat" :repo "HKey/caseformat" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format based letter case converter" :date (22168 3152) :url "https://github.com/HKey/caseformat") (cask-mode :source "MELPA" :recipe (:package "cask-mode" :repo "Wilfred/cask-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Cask files" :date (22281 27984) :url "https://github.com/Wilfred/cask-mode") (cask-package-toolset :source "MELPA" :recipe (:package "cask-package-toolset" :fetcher github :repo "AdrieanKhisbe/cask-package-toolset.el" :files (:defaults "bin" "templates")) :description "Toolsettize your package" :date (22978 54992) :url "https://github.com/AdrieanKhisbe/cask-package-toolset.el") (caskxy :source "MELPA" :recipe (:package "caskxy" :repo "aki2o/caskxy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Cask in Emacs" :date (21361 10304) :url "https://github.com/aki2o/caskxy") (casual :source "MELPA" :recipe (:package "casual" :fetcher github :repo "kickingvegas/casual" :old-names (casual-agenda casual-bookmarks casual-calc casual-dired casual-editkit casual-ibuffer casual-info casual-isearch cc-isearch-menu casual-lib casual-re-builder) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient user interfaces for various modes" :date (26393 25552) :url "https://github.com/kickingvegas/casual") (casual-avy :source "MELPA" :recipe (:package "casual-avy" :fetcher github :repo "kickingvegas/casual-avy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient UI for Avy" :date (26389 28496) :url "https://github.com/kickingvegas/casual-avy") (casual-suite :source "MELPA" :recipe (:package "casual-suite" :fetcher github :repo "kickingvegas/casual-suite" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A suite of opinionated Transient UIs" :date (26390 49360) :url "https://github.com/kickingvegas/casual-suite") (casual-symbol-overlay :source "MELPA" :recipe (:package "casual-symbol-overlay" :fetcher github :repo "kickingvegas/casual-symbol-overlay" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient UI for Symbol Overlay" :date (26389 28496) :url "https://github.com/kickingvegas/casual-symbol-overlay") (catmacs :source "MELPA" :recipe (:package "catmacs" :url "https://bitbucket.org/pymaximus/catmacs" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple CAT interface for Yaesu Transceivers" :date (22944 36816) :url "https://bitbucket.org/pymaximus/catmacs") (catppuccin-theme :source "MELPA" :recipe (:package "catppuccin-theme" :fetcher github :repo "catppuccin/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Catppuccin for Emacs - 🍄 Soothing pastel theme for Emacs" :date (26382 55248) :url "https://github.com/catppuccin/emacs") (cats :source "MELPA" :recipe (:package "cats" :fetcher github :repo "Fuco1/emacs-cats" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Monads for Elisp" :date (25647 13008) :url "https://github.com/Fuco1/emacs-cats") (cbm :source "MELPA" :recipe (:package "cbm" :repo "akermu/cbm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch to similar buffers" :date (23052 43728) :url "https://github.com/akermu/cbm.el") (cbor :source "MELPA" :recipe (:package "cbor" :fetcher github :repo "Titan-C/cardano.el" :files ("cbor.el")) :description "CBOR utilities" :date (25811 65104) :url "https://github.com/Titan-C/cardano.el") (cc-cedict :source "MELPA" :recipe (:package "cc-cedict" :fetcher github :repo "xuchunyang/cc-cedict.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to CC-CEDICT (a Chinese-English dictionary)" :date (25971 33744) :url "https://github.com/xuchunyang/cc-cedict.el") (ccc :source "MELPA" :recipe (:package "ccc" :repo "skk-dev/ddskk" :fetcher github :files ("ccc.el")) :description "Buffer local cursor color control library" :date (24716 28624) :url "https://github.com/skk-dev/ddskk") (ccls :source "MELPA" :recipe (:package "ccls" :repo "emacs-lsp/emacs-ccls" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ccls client for lsp-mode" :date (26120 32080) :url "https://github.com/emacs-lsp/emacs-ccls") (cd-compile :source "MELPA" :recipe (:package "cd-compile" :repo "jamienicol/emacs-cd-compile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run compile in a specific directory" :date (21597 13008) :url "https://github.com/jamienicol/emacs-cd-compile") (cdb :source "MELPA" :recipe (:package "cdb" :repo "skk-dev/ddskk" :fetcher github :files ("cdb.el")) :description "Constant database (cdb) reader for Emacs Lisp" :date (25620 54480) :url "https://github.com/skk-dev/ddskk") (cdlatex :source "MELPA" :recipe (:package "cdlatex" :fetcher github :repo "cdominik/cdlatex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast input methods for LaTeX environments and math" :date (26370 64080) :url "https://github.com/cdominik/cdlatex") (cdnjs :source "MELPA" :recipe (:package "cdnjs" :fetcher github :repo "yasuyk/cdnjs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A front end for http://cdnjs.com" :date (22550 24400) :url "https://github.com/yasuyk/cdnjs.el") (cedit :source "MELPA" :recipe (:package "cedit" :fetcher github :repo "zk-phi/cedit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paredit-like commands for c-like languages" :date (24376 19664) :url "https://github.com/zk-phi/cedit") (celery :source "MELPA" :recipe (:package "celery" :fetcher github :repo "ardumont/emacs-celery" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to draw stats from celery and more?" :date (22704 40656) :url "https://github.com/ardumont/emacs-celery") (celestial-mode-line :source "MELPA" :recipe (:package "celestial-mode-line" :fetcher github :repo "ecraven/celestial-mode-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show lunar phase and sunrise/-set time in modeline" :date (25627 27728) :url "https://github.com/ecraven/celestial-mode-line") (centaur-tabs :source "MELPA" :recipe (:package "centaur-tabs" :repo "ema2159/centaur-tabs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Aesthetic, modern looking customizable tabs plugin" :date (26349 57936) :url "https://github.com/ema2159/centaur-tabs") (centered-cursor-mode :source "MELPA" :recipe (:package "centered-cursor-mode" :fetcher github :repo "andre-r/centered-cursor-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cursor stays vertically centered" :date (25858 8912) :url "https://github.com/andre-r/centered-cursor-mode.el") (centered-window :source "MELPA" :recipe (:package "centered-window" :fetcher github :repo "anler/centered-window-mode" :old-names (centered-window-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Center the text when there's only one window" :date (25071 4944) :url "https://github.com/anler/centered-window-mode") (centimacro :source "MELPA" :recipe (:package "centimacro" :repo "abo-abo/centimacro" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Assign multiple macros as global key bindings" :date (24549 336) :url "https://github.com/abo-abo/centimacro") (cerbere :source "MELPA" :recipe (:package "cerbere" :fetcher github :repo "nlamirault/cerbere" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unit testing in Emacs for several programming languages" :date (23529 59856) :url "https://github.com/nlamirault/cerbere") (cern-ldap :source "MELPA" :recipe (:package "cern-ldap" :fetcher sourcehut :repo "nbarrientos/cern-ldap.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library to interact with CERN's LDAP servers" :date (25752 43728) :url "https://git.sr.ht/~nbarrientos/cern-ldap.el") (cern-root-mode :source "MELPA" :recipe (:package "cern-root-mode" :fetcher github :repo "jaypmorgan/cern-root-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for running C++ code with ROOT" :date (26134 64976) :url "https://github.com/jaypmorgan/cern-root-mode") (ceylon-mode :source "MELPA" :recipe (:package "ceylon-mode" :fetcher github :repo "lucaswerkmeister/ceylon-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Ceylon source code" :date (23318 63952) :url "https://github.com/lucaswerkmeister/ceylon-mode") (cfengine-code-style :source "MELPA" :recipe (:package "cfengine-code-style" :fetcher github :repo "cfengine/cfengine-code-style" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "C code style for CFEngine project" :date (23046 4944) :url "https://github.com/cfengine/cfengine-code-style") (cff :source "MELPA" :recipe (:package "cff" :fetcher codeberg :repo "fourier/cff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search of the C/C++ file header by the source and vice versa" :date (22172 208) :url "https://codeberg.org/fourier/cff") (cfml-mode :source "MELPA" :recipe (:package "cfml-mode" :fetcher github :repo "amyers634/cfml-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs mode for editing CFML files" :date (23814 44496) :url "https://github.com/amyers634/cfml-mode") (cfn-mode :source "MELPA" :recipe (:package "cfn-mode" :fetcher gitlab :repo "worr/cfn-mode" :files ("cfn-mode/cfn-mode.el" "cfn-mode/cfn-properties.dat" "cfn-mode/cfn-resources.dat")) :description "AWS cloudformation mode" :date (26378 58192) :url "https://gitlab.com/worr/cfn-mode") (cframe :source "MELPA" :recipe (:package "cframe" :fetcher github :repo "plandes/cframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Customize a frame and fast switch size and positions" :date (26071 46544) :url "https://github.com/plandes/cframe") (cfrs :source "MELPA" :recipe (:package "cfrs" :repo "Alexander-Miller/cfrs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Child-frame based read-string" :date (25076 22864) :url "https://github.com/Alexander-Miller/cfrs") (cg :source "MELPA" :recipe (:package "cg" :fetcher github :repo "GrammarSoft/cg3" :files ("emacs/*.el")) :description "Major mode for editing Constraint Grammar files" :date (26291 57424) :url "https://github.com/GrammarSoft/cg3") (challenger-deep-theme :source "MELPA" :recipe (:package "challenger-deep-theme" :fetcher github :repo "challenger-deep-theme/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Challenger-deep Theme" :date (26339 22096) :url "https://github.com/challenger-deep-theme/emacs") (champagne :source "MELPA" :recipe (:package "champagne" :fetcher github :repo "positron-solutions/champagne" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Graphical countdowns" :date (26179 53456) :url "https://github.com/positron-solutions/champagne") (change-inner :source "MELPA" :recipe (:package "change-inner" :repo "magnars/change-inner.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change contents based on semantic units" :date (25963 39632) :url "https://github.com/magnars/change-inner.el") (chaos-mode :source "MELPA" :recipe (:package "chaos-mode" :repo "thechampagne/chaos-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Chaos programming language" :date (25514 2896) :url "https://github.com/thechampagne/chaos-mode") (chapel-mode :source "MELPA" :recipe (:package "chapel-mode" :fetcher github :repo "damon-kwok/chapel-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Chapel programming language" :date (24732 16848) :url "https://github.com/damon-kwok/chapel-mode") (char-menu :source "MELPA" :recipe (:package "char-menu" :repo "mrkkrp/char-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create your own menu for fast insertion of arbitrary symbols" :date (24662 25168) :url "https://github.com/mrkkrp/char-menu") (charmap :source "MELPA" :recipe (:package "charmap" :fetcher github :repo "lateau/charmap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unicode table for Emacs" :date (24295 57680) :url "https://github.com/lateau/charmap") (chatgpt-shell :source "MELPA" :recipe (:package "chatgpt-shell" :fetcher github :repo "xenodium/chatgpt-shell" :files ("chatgpt-shell.el")) :description "ChatGPT shell + buffer insert commands" :date (26405 16720) :url "https://github.com/xenodium/chatgpt-shell") (chatu :source "MELPA" :recipe (:package "chatu" :repo "kimim/chatu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert and insert any images to org-mode or markdown buffer" :date (26183 50512) :url "https://github.com/kimim/chatu") (chatwork :source "MELPA" :recipe (:package "chatwork" :repo "ataka/chatwork" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ChatWork client for Emacs" :date (26335 25040) :url "https://github.com/ataka/chatwork") (cheat-sh :source "MELPA" :recipe (:package "cheat-sh" :fetcher github :repo "davep/cheat-sh.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with cheat.sh" :date (24765 14160) :url "https://github.com/davep/cheat-sh.el") (cheatsheet :source "MELPA" :recipe (:package "cheatsheet" :repo "mykyta-shyrin/cheatsheet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create your own cheatsheet" :date (22665 4560) :url "https://github.com/mykyta-shyrin/cheatsheet") (checkbox :source "MELPA" :recipe (:package "checkbox" :repo "camdez/checkbox.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick manipulation of textual checkboxes" :date (21609 4176) :url "https://github.com/camdez/checkbox.el") (chee :source "MELPA" :recipe (:package "chee" :fetcher github :repo "eikek/chee" :files ("emacs/*.el")) :description "Interface to chee using dired and image-dired" :date (23061 58704) :url "https://github.com/eikek/chee") (cheerilee :source "MELPA" :recipe (:package "cheerilee" :fetcher github :repo "Vannil/cheerilee.el" :files (:defaults (:exclude "cheerilee.texi"))) :description "Toolkit library" :date (22244 33616) :url "https://github.com/Vannil/cheerilee.el") (chef-mode :source "MELPA" :recipe (:package "chef-mode" :repo "mpasternacki/chef-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing an opscode chef repository" :date (23347 64208) :url "https://github.com/mpasternacki/chef-mode") (chembalance :source "MELPA" :recipe (:package "chembalance" :fetcher github :repo "sergiruiztrepat/chembalance" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Balance chemical equations" :date (24757 20048) :url "https://github.com/sergiruiztrepat/chembalance") (chemtable :source "MELPA" :recipe (:package "chemtable" :fetcher github :repo "sergiruiztrepat/chemtable" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Periodic table of the elements" :date (25615 36560) :url "https://github.com/sergiruiztrepat/chemtable") (cherry-blossom-theme :source "MELPA" :recipe (:package "cherry-blossom-theme" :fetcher github :repo "inlinestyle/emacs-cherry-blossom-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A soothing color theme for Emacs24" :date (21895 9680) :url "https://github.com/inlinestyle/emacs-cherry-blossom-theme") (chezmoi :source "MELPA" :recipe (:package "chezmoi" :fetcher github :repo "tuh8888/chezmoi.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for interacting with chezmoi" :date (25792 14288) :url "https://github.com/tuh8888/chezmoi.el") (chinese-conv :source "MELPA" :recipe (:package "chinese-conv" :fetcher github :repo "gucong/emacs-chinese-conv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Conversion between Chinese Characters with opencc or cconv" :date (22919 33616) :url "https://github.com/gucong/emacs-chinese-conv") (chinese-number :source "MELPA" :recipe (:package "chinese-number" :repo "zhcosin/chinese-number" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert numbers between Arabic and Chinese formats" :date (22520 3280) :url "https://github.com/zhcosin/chinese-number") (chinese-wbim :source "MELPA" :recipe (:package "chinese-wbim" :fetcher github :repo "zilongshanren/chinese-wbim" :files (:defaults "wb.txt" "wbpy.txt")) :description "Enable Wubi Input Method in Emacs" :date (23867 27088) :url "https://github.com/zilongshanren/chinese-wbim") (chinese-word-at-point :source "MELPA" :recipe (:package "chinese-word-at-point" :repo "xuchunyang/chinese-word-at-point.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add `chinese-word' thing to `thing-at-point'" :date (22924 51536) :url "https://github.com/xuchunyang/chinese-word-at-point.el") (chinese-yasdcv :source "MELPA" :recipe (:package "chinese-yasdcv" :fetcher github :repo "tumashu/chinese-yasdcv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another StarDict frontend" :date (23010 31440) :url "https://github.com/tumashu/chinese-yasdcv") (chip8 :source "MELPA" :recipe (:package "chip8" :fetcher github :repo "gabrielelana/chip8.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A CHIP-8 emulator" :date (26054 37456) :url "https://github.com/gabrielelana/chip8.el") (chocolate-theme :source "MELPA" :recipe (:package "chocolate-theme" :repo "SavchenkoValeriy/emacs-chocolate-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark chocolaty theme" :date (24593 54352) :url "https://github.com/SavchenkoValeriy/emacs-chocolate-theme") (choice-program :source "MELPA" :recipe (:package "choice-program" :fetcher github :repo "plandes/choice-program" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parameter based program" :date (25805 26320) :url "https://github.com/plandes/choice-program") (chordpro-mode :source "MELPA" :recipe (:package "chordpro-mode" :fetcher sourcehut :repo "breatheoutbreathein/chordpro-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for ChordPro lead sheet file format" :date (26306 24784) :url "https://git.sr.ht/~breatheoutbreathein/chordpro-mode.el") (chroma :source "MELPA" :recipe (:package "chroma" :fetcher github :repo "galdor/chroma" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color manipulation library" :date (26261 36304) :url "https://github.com/galdor/chroma") (chronometer :source "MELPA" :recipe (:package "chronometer" :fetcher github :repo "marcelotoledo/chronometer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A [not so] simple chronometer" :date (23676 16464) :url "https://github.com/marcelotoledo/chronometer") (chronometrist :source "MELPA" :recipe (:package "chronometrist" :fetcher codeberg :repo "contrapunctus/chronometrist" :files (:defaults "elisp/*.el" "elisp/*.org" (:exclude "elisp/chronometrist-key-values*" "elisp/chronometrist-spark*" "elisp/chronometrist-goal*"))) :description "Friendly and powerful personal time tracker and analyzer" :date (26290 36560) :url "https://codeberg.org/contrapunctus/chronometrist") (chronometrist-goal :source "MELPA" :recipe (:package "chronometrist-goal" :fetcher codeberg :repo "contrapunctus/chronometrist-goal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds support for time goals to Chronometrist" :date (24728 19792) :url "https://codeberg.org/contrapunctus/chronometrist-goal") (chronometrist-key-values :source "MELPA" :recipe (:package "chronometrist-key-values" :fetcher codeberg :repo "contrapunctus/chronometrist" :branch "dev" :files (:defaults "elisp/chronometrist-key-values.*")) :description "Add key-values to Chronometrist data" :date (25143 38352) :url "https://codeberg.org/contrapunctus/chronometrist") (chronometrist-spark :source "MELPA" :recipe (:package "chronometrist-spark" :fetcher codeberg :repo "contrapunctus/chronometrist" :branch "dev" :files ("elisp/chronometrist-spark.el" "elisp/chronometrist-spark.org")) :description "Show sparklines in Chronometrist buffers" :date (25756 40784) :url "https://codeberg.org/contrapunctus/chronometrist") (chronos :source "MELPA" :recipe (:package "chronos" :fetcher github :repo "DarkBuffalo/chronos" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple simultaneous countdown / countup timers" :date (26192 65488) :url "https://github.com/DarkBuffalo/chronos") (chruby :source "MELPA" :recipe (:package "chruby" :repo "plexus/chruby.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for chruby" :date (23130 29520) :url "https://github.com/plexus/chruby.el") (chyla-dark-theme :source "MELPA" :recipe (:package "chyla-dark-theme" :repo "chyla/ChylaDarkThemeForEmacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Chyla.org - dark green color theme" :date (26312 63568) :url "https://github.com/chyla/ChylaDarkThemeForEmacs") (chyla-theme :source "MELPA" :recipe (:package "chyla-theme" :repo "chyla/ChylaThemeForEmacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Chyla.org - green color theme" :date (26251 464) :url "https://github.com/chyla/ChylaThemeForEmacs") (cider :source "MELPA" :recipe (:package "cider" :fetcher github :repo "clojure-emacs/cider" :files ("lisp/*.el" "bin/*.sh" "*.el" "clojure.sh" "lein.sh" (:exclude ".dir-locals.el")) :old-names (nrepl)) :description "Clojure Interactive Development Environment that Rocks" :date (26402 40528) :url "https://github.com/clojure-emacs/cider") (cider-decompile :source "MELPA" :recipe (:package "cider-decompile" :repo "clojure-emacs/cider-decompile" :fetcher github :old-names (nrepl-decompile) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Decompilation extension for cider" :date (22096 56144) :url "https://github.com/clojure-emacs/cider-decompile") (cider-eval-sexp-fu :source "MELPA" :recipe (:package "cider-eval-sexp-fu" :repo "clojure-emacs/cider-eval-sexp-fu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Briefly highlights an evaluated sexp" :date (23685 31440) :url "https://github.com/clojure-emacs/cider-eval-sexp-fu") (cider-hydra :source "MELPA" :recipe (:package "cider-hydra" :fetcher github :repo "clojure-emacs/cider-hydra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hydras for CIDER" :date (23893 51152) :url "https://github.com/clojure-emacs/cider-hydra") (ciel :source "MELPA" :recipe (:package "ciel" :repo "takumatt/ciel.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A command that is clone of \"ci\" in vim" :date (23450 53200) :url "https://github.com/takumatt/ciel.el") (cil-mode :source "MELPA" :recipe (:package "cil-mode" :repo "ForNeVeR/cil-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Common Intermediate Language mode" :date (22377 43728) :url "https://github.com/ForNeVeR/cil-mode") (cilk-mode :source "MELPA" :recipe (:package "cilk-mode" :repo "ailiop/cilk-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Cilk code editing" :date (25326 54864) :url "https://github.com/ailiop/cilk-mode") (cinspect :source "MELPA" :recipe (:package "cinspect" :fetcher github :repo "inlinestyle/cinspect-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use cinspect to look at the CPython source of builtins and other C objects!" :date (21926 51664) :url "https://github.com/inlinestyle/cinspect-mode") (circadian :source "MELPA" :recipe (:package "circadian" :fetcher github :repo "guidoschmidt/circadian.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme-switching based on daytime" :date (26204 56656) :url "https://github.com/guidoschmidt/circadian.el") (circe :source "MELPA" :recipe (:package "circe" :repo "emacs-circe/circe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for IRC in Emacs" :date (26403 61392) :url "https://github.com/emacs-circe/circe") (circe-notifications :source "MELPA" :recipe (:package "circe-notifications" :fetcher github :repo "eqyiel/circe-notifications" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add desktop notifications to Circe" :date (23114 41296) :url "https://github.com/eqyiel/circe-notifications") (circleci-api :source "MELPA" :recipe (:package "circleci-api" :fetcher github :repo "sulami/circleci-api.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bindings for the CircleCI API" :date (24633 24912) :url "https://github.com/sulami/circleci-api.el") (citar :source "MELPA" :recipe (:package "citar" :repo "emacs-citar/citar" :fetcher github :files (:defaults (:exclude "citar-embark.el")) :old-names (bibtex-actions)) :description "Citation-related commands for org, latex, markdown" :date (26397 22608) :url "https://github.com/emacs-citar/citar") (citar-denote :source "MELPA" :recipe (:package "citar-denote" :repo "pprevos/citar-denote" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode integrating Citar and Denote" :date (26332 48848) :url "https://github.com/pprevos/citar-denote") (citar-embark :source "MELPA" :recipe (:package "citar-embark" :repo "emacs-citar/citar" :fetcher github :files ("citar-embark.el")) :description "Citar/Embark integration" :date (25949 6736) :url "https://github.com/emacs-citar/citar") (citar-org-roam :source "MELPA" :recipe (:package "citar-org-roam" :repo "emacs-citar/citar-org-roam" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Citar/org-roam integration" :date (26057 13648) :url "https://github.com/emacs-citar/citar-org-roam") (citeproc :source "MELPA" :recipe (:package "citeproc" :fetcher github :repo "andras-simonyi/citeproc-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A CSL 1.0.2 Citation Processor" :date (26269 30416) :url "https://github.com/andras-simonyi/citeproc-el") (citeproc-org :source "MELPA" :recipe (:package "citeproc-org" :repo "andras-simonyi/citeproc-org" :fetcher github :files (:defaults "chicago-author-date.csl" "locales-en-US.xml")) :description "Render org-mode references in CSL styles" :date (24415 55760) :url "https://github.com/andras-simonyi/citeproc-org") (citre :source "MELPA" :recipe (:package "citre" :repo "universal-ctags/citre" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Superior code reading & auto-completion tool with pluggable backends" :date (26398 43472) :url "https://github.com/universal-ctags/citre") (cl-format :source "MELPA" :recipe (:package "cl-format" :fetcher gitlab :repo "akater/elisp-cl-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "CL format routine" :date (25822 35408) :url "https://gitlab.com/akater/elisp-cl-format") (cl-libify :source "MELPA" :recipe (:package "cl-libify" :fetcher github :repo "purcell/cl-libify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Update elisp code to use cl-lib instead of cl" :date (23552 21328) :url "https://github.com/purcell/cl-libify") (clang-capf :source "MELPA" :recipe (:package "clang-capf" :fetcher sourcehut :repo "pkal/clang-capf" :old-names (cpp-capf) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion-at-point backend for c/c++ using clang" :date (25437 37968) :url "https://git.sr.ht/~pkal/clang-capf") (clang-format :source "MELPA" :recipe (:package "clang-format" :fetcher github :repo "emacsmirror/clang-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format code using clang-format" :date (26386 52304) :url "https://github.com/emacsmirror/clang-format") (clang-format+ :source "MELPA" :recipe (:package "clang-format+" :repo "SavchenkoValeriy/emacs-clang-format-plus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for automatic clang-format application" :date (23904 21456) :url "https://github.com/SavchenkoValeriy/emacs-clang-format-plus") (clang-format-lite :source "MELPA" :recipe (:package "clang-format-lite" :fetcher github :repo "arteen1000/clang-format-lite" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format code on-save with clang-format, supports remote files" :date (26251 464) :url "https://github.com/arteen1000/clang-format-lite") (claude-shell :source "MELPA" :recipe (:package "claude-shell" :fetcher github :repo "arminfriedl/claude-shell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration with Anthropic's Claude LLM" :date (26249 45136) :url "https://github.com/arminfriedl/claude-shell") (claudia :source "MELPA" :recipe (:package "claudia" :fetcher github :repo "mzacho/claudia" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Claude AI integration" :date (26407 58448) :url "https://github.com/mzacho/claudia") (clause :source "MELPA" :recipe (:package "clause" :fetcher codeberg :repo "martianh/clause.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions to move, mark, kill by clause" :date (26388 7632) :url "https://codeberg.org/martianh/clause.el") (clay :source "MELPA" :recipe (:package "clay" :fetcher github :repo "scicloj/clay.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs commands Clay - literate in Clojure" :date (26132 23248) :url "https://github.com/scicloj/clay.el") (clean-aindent-mode :source "MELPA" :recipe (:package "clean-aindent-mode" :fetcher github :repo "pmarinov/clean-aindent-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple indent and unindent, trims indent white-space" :date (23013 7632) :url "https://github.com/pmarinov/clean-aindent-mode") (clean-buffers :source "MELPA" :recipe (:package "clean-buffers" :fetcher github :repo "lujun9972/clean-buffers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clean useless buffers" :date (22346 1744) :url "https://github.com/lujun9972/clean-buffers") (clean-kill-ring :source "MELPA" :recipe (:package "clean-kill-ring" :repo "NicholasBHubbard/clean-kill-ring.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep the kill ring clean" :date (25539 6096) :url "https://github.com/NicholasBHubbard/clean-kill-ring.el") (clear-text :source "MELPA" :recipe (:package "clear-text" :fetcher github :repo "xuchunyang/clear-text.el" :files (:defaults "*.txt")) :description "Make you use clear text" :date (22276 10064) :url "https://github.com/xuchunyang/clear-text.el") (clevercss :source "MELPA" :recipe (:package "clevercss" :fetcher github :repo "jschaf/CleverCSS-Mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing CleverCSS files" :date (21183 11712) :url "https://github.com/jschaf/CleverCSS-Mode") (clhs :source "MELPA" :recipe (:package "clhs" :repo "sam-s/clhs" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access the Common Lisp HyperSpec (CLHS)" :date (24712 31568) :url "https://gitlab.com/sam-s/clhs") (click-mode :source "MELPA" :recipe (:package "click-mode" :fetcher github :repo "bmalehorn/click-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Click Modular Router Project" :date (23325 37200) :url "https://github.com/bmalehorn/click-mode") (clingo-mode :source "MELPA" :recipe (:package "clingo-mode" :fetcher github :repo "llaisdy/clingo-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Answer Set Programs" :date (26272 6608) :url "https://github.com/llaisdy/clingo-mode") (clipetty :source "MELPA" :recipe (:package "clipetty" :repo "spudlyo/clipetty" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send every kill from a TTY frame to the system clipboard" :date (24189 6096) :url "https://github.com/spudlyo/clipetty") (cliphist :source "MELPA" :recipe (:package "cliphist" :fetcher github :repo "redguardtoo/cliphist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste from clipboard managers" :date (25229 18256) :url "https://github.com/redguardtoo/cliphist") (clipmon :source "MELPA" :recipe (:package "clipmon" :fetcher github :repo "bburns/clipmon" :files ("clipmon.el" "clipmon.wav")) :description "Clipboard monitor - watch system clipboard, add changes to kill ring/autoinsert" :date (23150 14800) :url "https://github.com/bburns/clipmon") (clippy :source "MELPA" :recipe (:package "clippy" :fetcher github :repo "Fuco1/clippy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show tooltip with function documentation at point" :date (25827 53328) :url "https://github.com/Fuco1/clippy.el") (clips-mode :source "MELPA" :recipe (:package "clips-mode" :fetcher github :repo "clips-mode/clips-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing CLIPS code and REPL" :date (22963 1232) :url "https://github.com/clips-mode/clips-mode") (clj-decompiler :source "MELPA" :recipe (:package "clj-decompiler" :fetcher github :repo "bsless/clj-decompiler.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clojure Java decompiler expansion" :date (25042 4688) :url "https://github.com/bsless/clj-decompiler.el") (clj-deps-new :source "MELPA" :recipe (:package "clj-deps-new" :fetcher github :repo "jpe90/emacs-clj-deps-new" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create clojure projects from templates" :date (25655 7120) :url "https://github.com/jpe90/emacs-clj-deps-new") (clj-refactor :source "MELPA" :recipe (:package "clj-refactor" :fetcher github :repo "clojure-emacs/clj-refactor.el" :files (:defaults "CHANGELOG.md")) :description "A collection of commands for refactoring Clojure code" :date (26092 52688) :url "https://github.com/clojure-emacs/clj-refactor.el") (cljr-helm :source "MELPA" :recipe (:package "cljr-helm" :repo "philjackson/cljr-helm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wraps clojure refactor commands with helm" :date (25304 27856) :url "https://github.com/philjackson/cljr-helm") (cljr-ivy :source "MELPA" :recipe (:package "cljr-ivy" :repo "wandersoncferreira/cljr-ivy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access clojure refactor with ivy completion" :date (24277 27728) :url "https://github.com/wandersoncferreira/cljr-ivy") (cljsbuild-mode :source "MELPA" :recipe (:package "cljsbuild-mode" :repo "kototama/cljsbuild-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for the ClojureScript 'lein cljsbuild' command" :date (22270 57680) :url "https://github.com/kototama/cljsbuild-mode") (cljstyle-format :source "MELPA" :recipe (:package "cljstyle-format" :fetcher github :repo "dpassen/cljstyle-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat Clojure code using cljstyle" :date (25284 42576) :url "https://github.com/dpassen/cljstyle-format") (clmemo :source "MELPA" :recipe (:package "clmemo" :fetcher github :repo "ataka/clmemo" :files (:defaults (:exclude "doc/*.texi"))) :description "Change Log MEMO" :date (25084 16976) :url "https://github.com/ataka/clmemo") (cloak-mode :source "MELPA" :recipe (:package "cloak-mode" :fetcher github :repo "erickgnavar/cloak-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to cloak sensitive values" :date (25558 56912) :url "https://github.com/erickgnavar/cloak-mode") (cloc :source "MELPA" :recipe (:package "cloc" :fetcher github :repo "cosmicexplorer/cloc-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Count lines of code over emacs buffers" :date (22906 21584) :url "https://github.com/cosmicexplorer/cloc-emacs") (clocker :source "MELPA" :recipe (:package "clocker" :repo "roman/clocker.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Note taker and clock-in enforcer" :date (23652 34128) :url "https://github.com/roman/clocker.el") (clockodo :source "MELPA" :recipe (:package "clockodo" :repo "santifa/clockodo-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A small integration for the clockodo api" :date (25242 30288) :url "https://github.com/santifa/clockodo-el") (clojars :source "MELPA" :recipe (:package "clojars" :fetcher github :repo "joshuamiller/clojars.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clojars.org search interface" :date (23424 29136) :url "https://github.com/joshuamiller/clojars.el") (clojure-essential-ref :source "MELPA" :recipe (:package "clojure-essential-ref" :fetcher github :repo "p3r7/clojure-essential-ref" :files (:defaults (:exclude "clojure-essential-ref-nov.el"))) :description "Cider-doc to \"Clojure, The Essential Reference\"" :date (25498 14672) :url "https://github.com/p3r7/clojure-essential-ref") (clojure-essential-ref-nov :source "MELPA" :recipe (:package "clojure-essential-ref-nov" :fetcher github :repo "p3r7/clojure-essential-ref" :files (:defaults (:exclude "clojure-essential-ref.el"))) :description "Cider-doc to \"Clojure, The Essential Reference\" (EPUB)" :date (25498 14672) :url "https://github.com/p3r7/clojure-essential-ref") (clojure-mode :source "MELPA" :recipe (:package "clojure-mode" :repo "clojure-emacs/clojure-mode" :fetcher github :files ("clojure-mode.el")) :description "Major mode for Clojure code" :date (26194 20816) :url "https://github.com/clojure-emacs/clojure-mode") (clojure-mode-extra-font-locking :source "MELPA" :recipe (:package "clojure-mode-extra-font-locking" :repo "clojure-emacs/clojure-mode" :fetcher github :files ("clojure-mode-extra-font-locking.el")) :description "Extra font-locking for Clojure mode" :date (26194 20816) :url "https://github.com/clojure-emacs/clojure-mode") (clojure-quick-repls :source "MELPA" :recipe (:package "clojure-quick-repls" :repo "symfrog/clojure-quick-repls" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly create Clojure and ClojureScript repls for a project" :date (21965 1360) :url "https://github.com/symfrog/clojure-quick-repls") (clojure-snippets :source "MELPA" :recipe (:package "clojure-snippets" :fetcher github :repo "mpenet/clojure-snippets" :files ("*.el" "snippets")) :description "Yasnippets for clojure" :date (25376 61264) :url "https://github.com/mpenet/clojure-snippets") (clojure-ts-mode :source "MELPA" :recipe (:package "clojure-ts-mode" :repo "clojure-emacs/clojure-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Clojure code" :date (26407 58448) :url "https://github.com/clojure-emacs/clojure-ts-mode") (clomacs :source "MELPA" :recipe (:package "clomacs" :fetcher github :repo "clojure-emacs/clomacs" :files ("src/elisp/*.el")) :description "Simplifies Emacs Lisp interaction with Clojure" :date (25176 35664) :url "https://github.com/clojure-emacs/clomacs") (closql :source "MELPA" :recipe (:package "closql" :fetcher github :repo "magit/closql" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Store EIEIO objects using EmacSQL" :date (26291 57424) :url "https://github.com/magit/closql") (closure-lint-mode :source "MELPA" :recipe (:package "closure-lint-mode" :fetcher github :repo "r0man/closure-lint-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for the Closure Linter" :date (19684 16976) :url "https://github.com/r0man/closure-lint-mode") (cloud-theme :source "MELPA" :recipe (:package "cloud-theme" :fetcher github :repo "vallyscode/cloud-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light colored theme" :date (25085 37840) :url "https://github.com/vallyscode/cloud-theme") (cloud-to-butt-erc :source "MELPA" :recipe (:package "cloud-to-butt-erc" :fetcher github :repo "leathekd/cloud-to-butt-erc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace 'the cloud' with 'my butt'" :date (20939 18496) :url "https://github.com/leathekd/cloud-to-butt-erc") (clues-theme :source "MELPA" :recipe (:package "clues-theme" :fetcher github :repo "emacsfodder/emacs-clues-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme which may well be fully awesome.." :date (22607 4048) :url "https://github.com/emacsfodder/emacs-clues-theme") (cm-mode :source "MELPA" :recipe (:package "cm-mode" :fetcher github :repo "joostkremers/criticmarkup-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for CriticMarkup" :date (26149 32336) :url "https://github.com/joostkremers/criticmarkup-emacs") (cmake-font-lock :source "MELPA" :recipe (:package "cmake-font-lock" :repo "Lindydancer/cmake-font-lock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Advanced, type aware, highlight support for CMake" :date (25602 24528) :url "https://github.com/Lindydancer/cmake-font-lock") (cmake-ide :source "MELPA" :recipe (:package "cmake-ide" :repo "atilaneves/cmake-ide" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calls CMake to find out include paths and other compiler flags" :date (24769 11216) :url "https://github.com/atilaneves/cmake-ide") (cmake-mode :source "MELPA" :recipe (:package "cmake-mode" :fetcher git :url "https://gitlab.kitware.com/cmake/cmake.git" :files ("Auxiliary/*.el")) :description "Major-mode for editing CMake sources" :date (26299 51536) :url "https://gitlab.kitware.com/cmake/cmake.git") (cmake-project :source "MELPA" :recipe (:package "cmake-project" :fetcher github :repo "alamaison/emacs-cmake-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrates CMake build process with Emacs" :date (23059 16976) :url "https://github.com/alamaison/emacs-cmake-project") (cmd-to-echo :source "MELPA" :recipe (:package "cmd-to-echo" :fetcher github :repo "mallt/cmd-to-echo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show the output of long-running commands in the echo area" :date (22593 57552) :url "https://github.com/mallt/cmd-to-echo") (cmm-mode :source "MELPA" :recipe (:package "cmm-mode" :repo "bgamari/cmm-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for C-- source code" :date (21740 58960) :url "https://github.com/bgamari/cmm-mode") (cnfonts :source "MELPA" :recipe (:package "cnfonts" :fetcher github :repo "tumashu/cnfonts" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple Chinese fonts config tool" :date (26160 2640) :url "https://github.com/tumashu/cnfonts") (cobalt :source "MELPA" :recipe (:package "cobalt" :fetcher github :repo "cobalt-org/cobalt.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily use the Cobalt.rs static site generator" :date (23195 3280) :url "https://github.com/cobalt-org/cobalt.el") (cobra-mode :source "MELPA" :recipe (:package "cobra-mode" :fetcher github :repo "Nekroze/cobra-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for .NET-based Cobra language" :date (21206 59584) :url "https://github.com/Nekroze/cobra-mode") (coc-dc :source "MELPA" :recipe (:package "coc-dc" :fetcher github :repo "S0mbr3/coc-damage-calculator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Clash of Clans damage calculator" :date (26407 58448) :url "https://github.com/S0mbr3/coc-damage-calculator") (codcut :source "MELPA" :recipe (:package "codcut" :repo "codcut/codcut-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Share pieces of code to Codcut" :date (23933 21712) :url "https://github.com/codcut/codcut-emacs") (code-archive :source "MELPA" :recipe (:package "code-archive" :fetcher github :repo "mschuldt/code-archive" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git supported code archive and reference for org-mode" :date (23808 5712) :url "https://github.com/mschuldt/code-archive") (code-cells :source "MELPA" :recipe (:package "code-cells" :fetcher github :repo "astoff/code-cells.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight notebooks with support for ipynb files" :date (26403 61392) :url "https://github.com/astoff/code-cells.el") (code-compass :source "MELPA" :recipe (:package "code-compass" :fetcher github :repo "ag91/code-compass" :files (:defaults "scripts" "pages")) :description "Navigate software aided by metrics and visualization" :date (25930 42320) :url "https://github.com/ag91/code-compass") (code-library :source "MELPA" :recipe (:package "code-library" :fetcher github :repo "lujun9972/code-library" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use org-mode to collect code snippets" :date (22302 34128) :url "https://github.com/lujun9972/code-library") (code-review :source "MELPA" :recipe (:package "code-review" :repo "wandersoncferreira/code-review" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perform code review from Github, Gitlab, and Bitbucket Cloud" :date (25486 23504) :url "https://github.com/wandersoncferreira/code-review") (code-stats :source "MELPA" :recipe (:package "code-stats" :fetcher github :repo "xuchunyang/code-stats-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code::Stats plugin" :date (24527 59728) :url "https://github.com/xuchunyang/code-stats-emacs") (codebug :source "MELPA" :recipe (:package "codebug" :fetcher github :repo "shano/emacs-codebug" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with codebug" :date (21544 26816) :url "https://github.com/shano/emacs-codebug") (codesearch :source "MELPA" :recipe (:package "codesearch" :fetcher github :repo "abingham/emacs-codesearch" :files ("codesearch.el" "listing-codesearch.el")) :description "Core support for managing codesearch tools" :date (26318 15952) :url "https://github.com/abingham/emacs-codesearch") (codespaces :source "MELPA" :recipe (:package "codespaces" :fetcher github :repo "patrickt/codespaces.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Connect to GitHub Codespaces via TRAMP" :date (25421 49744) :url "https://github.com/patrickt/codespaces.el") (codex-theme :source "MELPA" :recipe (:package "codex-theme" :repo "hsnovel/codex-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Codex theme, a simple high contrast theme" :date (26340 42960) :url "https://github.com/hsnovel/codex-theme") (codic :source "MELPA" :recipe (:package "codic" :fetcher github :repo "emacsorphanage/codic" :files ("*.el" ("dict" "dict/*.csv"))) :description "Search Codic (codic.jp) naming dictionaries" :date (22021 46544) :url "https://github.com/emacsorphanage/codic") (coercion :source "MELPA" :recipe (:package "coercion" :fetcher github :repo "liuyinz/coercion.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Naming convention style switch" :date (26399 64336) :url "https://github.com/liuyinz/coercion.el") (coffee-fof :source "MELPA" :recipe (:package "coffee-fof" :repo "yasuyk/coffee-fof" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A coffee-mode configuration for `ff-find-other-file'" :date (21080 22720) :url "https://github.com/yasuyk/coffee-fof") (coffee-mode :source "MELPA" :recipe (:package "coffee-mode" :repo "defunkt/coffee-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for CoffeeScript code" :date (24173 17872) :url "https://github.com/defunkt/coffee-mode") (coin-ticker :source "MELPA" :recipe (:package "coin-ticker" :fetcher github :repo "eklitzke/coin-ticker-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show a cryptocurrency price ticker" :date (22844 24016) :url "https://github.com/eklitzke/coin-ticker-mode") (colonoscopy-theme :source "MELPA" :recipe (:package "colonoscopy-theme" :fetcher github :repo "emacsfodder/emacs-colonoscopy-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Colonoscopy (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-colonoscopy-theme") (color-identifiers-mode :source "MELPA" :recipe (:package "color-identifiers-mode" :fetcher github :repo "ankurdave/color-identifiers-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color identifiers based on their names" :date (26392 4688) :url "https://github.com/ankurdave/color-identifiers-mode") (color-moccur :source "MELPA" :recipe (:package "color-moccur" :repo "myuhe/color-moccur.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi-buffer occur (grep) mode" :date (21656 34384) :url "https://github.com/myuhe/color-moccur.el") (color-theme :source "MELPA" :recipe (:package "color-theme" :fetcher github :repo "emacsattic/color-theme" :files (:defaults "themes")) :description "An OBSOLETE color-theme implementation" :date (23660 28240) :url "https://github.com/emacsattic/color-theme") (color-theme-approximate :source "MELPA" :recipe (:package "color-theme-approximate" :repo "tungd/color-theme-approximate" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Makes Emacs theme works on terminal transparently" :date (21263 39232) :url "https://github.com/tungd/color-theme-approximate") (color-theme-buffer-local :source "MELPA" :recipe (:package "color-theme-buffer-local" :fetcher github :repo "vic/color-theme-buffer-local" :files ("color-theme-buffer-local.el")) :description "Install color-themes by buffer" :date (22665 4560) :url "https://github.com/vic/color-theme-buffer-local") (color-theme-modern :source "MELPA" :recipe (:package "color-theme-modern" :repo "emacs-jp/replace-colorthemes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reimplement colortheme with Emacs 24 theme framework" :date (25941 12624) :url "https://github.com/emacs-jp/replace-colorthemes") (color-theme-sanityinc-solarized :source "MELPA" :recipe (:package "color-theme-sanityinc-solarized" :repo "purcell/color-theme-sanityinc-solarized" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A version of Ethan Schoonover's Solarized themes" :date (26256 18384) :url "https://github.com/purcell/color-theme-sanityinc-solarized") (color-theme-sanityinc-tomorrow :source "MELPA" :recipe (:package "color-theme-sanityinc-tomorrow" :repo "purcell/color-theme-sanityinc-tomorrow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A version of Chris Kempson's \"tomorrow\" themes" :date (26398 43472) :url "https://github.com/purcell/color-theme-sanityinc-tomorrow") (color-theme-x :source "MELPA" :recipe (:package "color-theme-x" :repo "ajsquared/color-theme-x" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert color themes to X11 resource settings" :date (24521 20944) :url "https://github.com/ajsquared/color-theme-x") (colorless-themes :source "MELPA" :recipe (:package "colorless-themes" :fetcher sourcehut :repo "lthms/colorless-themes.el" :files ("colorless-themes.el")) :description "A macro to generate mostly colorless themes" :date (24559 36176) :url "https://git.sr.ht/~lthms/colorless-themes.el") (colormaps :source "MELPA" :recipe (:package "colormaps" :fetcher github :repo "lepisma/colormaps.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hex colormaps" :date (23001 16464) :url "https://github.com/lepisma/colormaps.el") (column-enforce-mode :source "MELPA" :recipe (:package "column-enforce-mode" :fetcher github :repo "jordonbiondo/column-enforce-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight text that extends beyond a  column" :date (24281 24784) :url "https://github.com/jordonbiondo/column-enforce-mode") (com-css-sort :source "MELPA" :recipe (:package "com-css-sort" :repo "jcs-elpa/com-css-sort" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Common way of sorting the CSS attributes" :date (26001 54864) :url "https://github.com/jcs-elpa/com-css-sort") (comb :source "MELPA" :recipe (:package "comb" :repo "cyrus-and/comb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive code auditing and grep tool" :date (24448 53072) :url "https://github.com/cyrus-and/comb") (comby :source "MELPA" :recipe (:package "comby" :repo "s-kostyaev/comby.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs comby integration" :date (24313 1232) :url "https://github.com/s-kostyaev/comby.el") (comint-hyperlink :source "MELPA" :recipe (:package "comint-hyperlink" :fetcher github :repo "matthewbauer/comint-hyperlink" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create hyperlinks in comint for SGR URL control sequences" :date (24951 6864) :url "https://github.com/matthewbauer/comint-hyperlink") (comint-intercept :source "MELPA" :recipe (:package "comint-intercept" :repo "hying-caritas/comint-intercept" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intercept input in comint-mode" :date (26389 28496) :url "https://github.com/hying-caritas/comint-intercept") (command-log-mode :source "MELPA" :recipe (:package "command-log-mode" :fetcher github :repo "lewang/command-log-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Log keyboard commands to buffer" :date (22285 25040) :url "https://github.com/lewang/command-log-mode") (command-queue :source "MELPA" :recipe (:package "command-queue" :repo "Yuki-Inoue/command-queue" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shell command queue" :date (22264 18896) :url "https://github.com/Yuki-Inoue/command-queue") (commander :source "MELPA" :recipe (:package "commander" :repo "rejeep/commander.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs command line parser" :date (21212 11968) :url "https://github.com/rejeep/commander.el") (comment-dwim-2 :source "MELPA" :recipe (:package "comment-dwim-2" :fetcher github :repo "remyferre/comment-dwim-2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An all-in-one comment command to rule them all" :date (25797 32208) :url "https://github.com/remyferre/comment-dwim-2") (comment-or-uncomment-sexp :source "MELPA" :recipe (:package "comment-or-uncomment-sexp" :fetcher github :repo "Malabarba/comment-or-uncomment-sexp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command for commenting the sexp under point" :date (23667 1488) :url "https://github.com/Malabarba/comment-or-uncomment-sexp") (comment-tags :source "MELPA" :recipe (:package "comment-tags" :fetcher github :repo "vincekd/comment-tags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight & navigate comment tags like 'TODO'" :date (22964 22096) :url "https://github.com/vincekd/comment-tags") (commentary-theme :source "MELPA" :recipe (:package "commentary-theme" :repo "pzel/commentary-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimal theme with contrasting comments" :date (26227 18128) :url "https://github.com/pzel/commentary-theme") (commenter :source "MELPA" :recipe (:package "commenter" :fetcher github :repo "yuutayamada/commenter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiline-comment support package" :date (22214 12496) :url "https://github.com/yuutayamada/commenter") (commify :source "MELPA" :recipe (:package "commify" :fetcher github :repo "ddoherty03/commify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggle grouping commas in numbers" :date (25739 31696) :url "https://github.com/ddoherty03/commify") (common-lisp-snippets :source "MELPA" :recipe (:package "common-lisp-snippets" :repo "mrkkrp/common-lisp-snippets" :fetcher github :files ("*.el" "snippets")) :description "Yasnippets for Common Lisp" :date (23187 9168) :url "https://github.com/mrkkrp/common-lisp-snippets") (communinfo :source "MELPA" :recipe (:package "communinfo" :fetcher codeberg :repo "mekeor/communinfo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Community maintained Info-url-alist" :date (26252 21328) :url "https://codeberg.org/mekeor/communinfo") (company :source "MELPA" :recipe (:package "company" :fetcher github :repo "company-mode/company-mode" :files (:defaults "icons" ("images/small" "doc/images/small/*.png"))) :description "Modular text completion framework" :date (26356 31184) :url "https://github.com/company-mode/company-mode") (company-anaconda :source "MELPA" :recipe (:package "company-anaconda" :fetcher github :repo "pythonic-emacs/company-anaconda" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Anaconda backend for company-mode" :date (25826 32464) :url "https://github.com/pythonic-emacs/company-anaconda") (company-ansible :source "MELPA" :recipe (:package "company-ansible" :repo "krzysztof-magosa/company-ansible" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A company back-end for ansible" :date (26069 4816) :url "https://github.com/krzysztof-magosa/company-ansible") (company-arduino :source "MELPA" :recipe (:package "company-arduino" :repo "yuutayamada/company-arduino" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode for Arduino" :date (22235 18640) :url "https://github.com/yuutayamada/company-arduino") (company-auctex :source "MELPA" :recipe (:package "company-auctex" :fetcher github :repo "alexeyr/company-auctex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode auto-completion for AUCTeX" :date (24272 9808) :url "https://github.com/alexeyr/company-auctex") (company-axiom :source "MELPA" :recipe (:package "company-axiom" :fetcher git :url "https://bitbucket.org/pdo/axiom-environment" :files ("company-axiom.el")) :description "A company-mode backend for the axiom-environment system" :date (25253 592) :url "https://bitbucket.org/pdo/axiom-environment") (company-bibtex :source "MELPA" :recipe (:package "company-bibtex" :fetcher github :repo "gbgar/company-bibtex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company completion for bibtex keys" :date (23038 10832) :url "https://github.com/gbgar/company-bibtex") (company-box :source "MELPA" :recipe (:package "company-box" :fetcher github :repo "sebastiencs/company-box" :files (:defaults "images")) :description "Company front-end with icons" :date (26105 64720) :url "https://github.com/sebastiencs/company-box") (company-c-headers :source "MELPA" :recipe (:package "company-c-headers" :repo "randomphrase/company-c-headers" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company mode backend for C/C++ header files" :date (23905 42320) :url "https://github.com/randomphrase/company-c-headers") (company-cabal :source "MELPA" :recipe (:package "company-cabal" :fetcher github :repo "iquiw/company-cabal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode cabal backend" :date (22973 37072) :url "https://github.com/iquiw/company-cabal") (company-coq :source "MELPA" :recipe (:package "company-coq" :repo "cpitclaudel/company-coq" :fetcher github :files (:defaults "refman")) :description "A collection of extensions for Proof General's Coq mode" :date (25478 29392) :url "https://github.com/cpitclaudel/company-coq") (company-ctags :source "MELPA" :recipe (:package "company-ctags" :fetcher github :repo "redguardtoo/company-ctags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fastest company-mode completion backend for ctags" :date (26174 35536) :url "https://github.com/redguardtoo/company-ctags") (company-dcd :source "MELPA" :recipe (:package "company-dcd" :repo "tsukimizake/company-dcd" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend for Dlang using DCD" :date (26393 25552) :url "https://github.com/tsukimizake/company-dcd") (company-dict :source "MELPA" :recipe (:package "company-dict" :repo "hlissner/emacs-company-dict" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A backend that emulates ac-source-dictionary" :date (23673 40272) :url "https://github.com/hlissner/emacs-company-dict") (company-distel :source "MELPA" :recipe (:package "company-distel" :fetcher github :repo "sebastiw/distel-completion" :files ("company-distel.el")) :description "Erlang/distel completion backend for company-mode" :date (23427 5328) :url "https://github.com/sebastiw/distel-completion") (company-eask :source "MELPA" :recipe (:package "company-eask" :repo "emacs-eask/company-eask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend for Eask-file" :date (26117 55888) :url "https://github.com/emacs-eask/company-eask") (company-emacs-eclim :source "MELPA" :recipe (:package "company-emacs-eclim" :fetcher github :repo "emacs-eclim/emacs-eclim" :files ("company-emacs-eclim.el")) :description "Eclim company backend" :date (23446 56144) :url "https://github.com/emacs-eclim/emacs-eclim") (company-emoji :source "MELPA" :recipe (:package "company-emoji" :repo "egirl/company-emoji" :fetcher codeberg :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode backend for emoji" :date (26120 32080) :url "https://codeberg.org/egirl/company-emoji") (company-emojify :source "MELPA" :recipe (:package "company-emojify" :repo "jcs-elpa/company-emojify" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company completion for Emojify" :date (26001 54864) :url "https://github.com/jcs-elpa/company-emojify") (company-erlang :source "MELPA" :recipe (:package "company-erlang" :repo "s-kostyaev/company-erlang" :fetcher github :files (:defaults)) :description "Company backend based on ivy-erlang-complete" :date (22661 7504) :url "https://github.com/s-kostyaev/company-erlang") (company-flow :source "MELPA" :recipe (:package "company-flow" :fetcher github :repo "aaronjensen/company-flow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flow backend for company-mode" :date (23185 53840) :url "https://github.com/aaronjensen/company-flow") (company-flx :source "MELPA" :recipe (:package "company-flx" :repo "PythonNut/company-flx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flx based fuzzy matching for company" :date (23115 62160) :url "https://github.com/PythonNut/company-flx") (company-fuzzy :source "MELPA" :recipe (:package "company-fuzzy" :repo "jcs-elpa/company-fuzzy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy matching for `company-mode'" :date (26222 208) :url "https://github.com/jcs-elpa/company-fuzzy") (company-ghci :source "MELPA" :recipe (:package "company-ghci" :fetcher github :repo "horellana/company-ghci" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend which uses the current ghci process" :date (23841 3024) :url "https://github.com/horellana/company-ghci") (company-glsl :source "MELPA" :recipe (:package "company-glsl" :fetcher github :repo "guidoschmidt/company-glsl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support glsl in company-mode" :date (24568 51152) :url "https://github.com/guidoschmidt/company-glsl") (company-go :source "MELPA" :recipe (:package "company-go" :repo "emacsattic/company-go" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode backend for Go (using gocode)" :date (22943 15952) :url "https://github.com/emacsattic/company-go") (company-inf-ruby :source "MELPA" :recipe (:package "company-inf-ruby" :fetcher github :repo "company-mode/company-inf-ruby" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode completion back-end for inf-ruby" :date (21471 58944) :url "https://github.com/company-mode/company-inf-ruby") (company-ipa :source "MELPA" :recipe (:package "company-ipa" :repo "mguzmann89/company-ipa" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "IPA backend for company" :date (24643 60752) :url "https://gitlab.com/mguzmann89/company-ipa") (company-irony :source "MELPA" :recipe (:package "company-irony" :fetcher github :repo "Sarcasm/company-irony" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode completion back-end for irony-mode" :date (23624 54736) :url "https://github.com/Sarcasm/company-irony") (company-irony-c-headers :source "MELPA" :recipe (:package "company-irony-c-headers" :fetcher github :repo "hotpxl/company-irony-c-headers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company mode backend for C/C++ header files with Irony" :date (22050 46800) :url "https://github.com/hotpxl/company-irony-c-headers") (company-jedi :source "MELPA" :recipe (:package "company-jedi" :fetcher github :repo "emacsorphanage/company-jedi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode completion back-end for Python JEDI" :date (24185 9040) :url "https://github.com/emacsorphanage/company-jedi") (company-ledger :source "MELPA" :recipe (:package "company-ledger" :fetcher github :repo "debanjum/company-ledger" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy auto-completion for Ledger & friends" :date (24890 30160) :url "https://github.com/debanjum/company-ledger") (company-lua :source "MELPA" :recipe (:package "company-lua" :fetcher github :repo "ptrv/company-lua" :files (:defaults "lua")) :description "Company backend for Lua" :date (23042 7888) :url "https://github.com/ptrv/company-lua") (company-manually :source "MELPA" :recipe (:package "company-manually" :fetcher github :repo "yanghaoxie/company-manually" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A company backend that lets you manually build candidates" :date (24342 1488) :url "https://github.com/yanghaoxie/company-manually") (company-math :source "MELPA" :recipe (:package "company-math" :fetcher github :repo "vspinu/company-math" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion backends for unicode math symbols and latex tags" :date (25514 2896) :url "https://github.com/vspinu/company-math") (company-maxima :source "MELPA" :recipe (:package "company-maxima" :repo "sasanidas/maxima" :fetcher gitlab :files ("company-maxima.el")) :description "Maxima company integration" :date (25715 49360) :url "https://gitlab.com/sasanidas/maxima") (company-nand2tetris :source "MELPA" :recipe (:package "company-nand2tetris" :fetcher github :repo "CestDiego/nand2tetris.el" :files ("company-nand2tetris.el")) :description "Company backend for nand2tetris major mode" :date (23072 29008) :url "https://github.com/CestDiego/nand2tetris.el") (company-native-complete :source "MELPA" :recipe (:package "company-native-complete" :fetcher github :repo "CeleritasCelery/emacs-native-shell-complete" :files ("company-native-complete.el")) :description "Company completion using native-complete" :date (26302 27728) :url "https://github.com/CeleritasCelery/emacs-native-shell-complete") (company-nginx :source "MELPA" :recipe (:package "company-nginx" :fetcher git :url "https://repo.or.cz/company-nginx.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode keywords support for nginx-mode" :date (25092 11088) :url "https://repo.or.cz/company-nginx.git") (company-ngram :source "MELPA" :recipe (:package "company-ngram" :fetcher github :repo "kshramt/company-ngram" :files (:defaults "ngram.py")) :description "N-gram based completion" :date (22669 1616) :url "https://github.com/kshramt/company-ngram") (company-nixos-options :source "MELPA" :recipe (:package "company-nixos-options" :fetcher github :repo "nix-community/nix-emacs" :files ("company-nixos-options.el")) :description "Company Backend for nixos-options" :date (22208 60112) :url "https://github.com/nix-community/nix-emacs") (company-org-block :source "MELPA" :recipe (:package "company-org-block" :fetcher github :repo "xenodium/company-org-block" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org blocks company backend" :date (25539 6096) :url "https://github.com/xenodium/company-org-block") (company-php :source "MELPA" :recipe (:package "company-php" :repo "xcwen/ac-php" :fetcher github :files ("company-php.el")) :description "A company back-end for PHP" :date (26116 35024) :url "https://github.com/xcwen/ac-php") (company-phpactor :source "MELPA" :recipe (:package "company-phpactor" :repo "emacs-php/phpactor.el" :fetcher github :files ("company-phpactor.el")) :description "A company-mode backend for Phpactor" :date (26129 47056) :url "https://github.com/emacs-php/phpactor.el") (company-plisp :source "MELPA" :recipe (:package "company-plisp" :fetcher gitlab :repo "sasanidas/company-plisp" :files ("company-plisp.el" "company-plisp.l")) :description "Company mode backend for PicoLisp language" :date (24274 51536) :url "https://gitlab.com/sasanidas/company-plisp") (company-plsense :source "MELPA" :recipe (:package "company-plsense" :fetcher github :repo "CeleritasCelery/company-plsense" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend for Perl" :date (23135 47440) :url "https://github.com/CeleritasCelery/company-plsense") (company-pollen :source "MELPA" :recipe (:package "company-pollen" :fetcher github :repo "lijunsong/pollen-mode" :files ("company-pollen.el")) :description "Company-mode completion backend for pollen" :date (22444 59216) :url "https://github.com/lijunsong/pollen-mode") (company-posframe :source "MELPA" :recipe (:package "company-posframe" :fetcher github :repo "tumashu/company-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use a posframe as company candidate menu" :date (25524 38736) :url "https://github.com/tumashu/company-posframe") (company-prescient :source "MELPA" :recipe (:package "company-prescient" :fetcher github :repo "radian-software/prescient.el" :files ("company-prescient.el")) :description "Prescient.el + Company" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (company-qml :source "MELPA" :recipe (:package "company-qml" :repo "cute-jumper/company-qml" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend for QML files" :date (22786 23504) :url "https://github.com/cute-jumper/company-qml") (company-quickhelp :source "MELPA" :recipe (:package "company-quickhelp" :fetcher github :repo "company-mode/company-quickhelp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Popup documentation for completion candidates" :date (25913 33232) :url "https://github.com/company-mode/company-quickhelp") (company-quickhelp-terminal :source "MELPA" :recipe (:package "company-quickhelp-terminal" :repo "jcs-legacy/company-quickhelp-terminal" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Terminal support for `company-quickhelp'" :date (26001 54864) :url "https://github.com/jcs-legacy/company-quickhelp-terminal") (company-racer :source "MELPA" :recipe (:package "company-racer" :fetcher github :repo "emacsattic/company-racer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company integration for racer" :date (23077 46928) :url "https://github.com/emacsattic/company-racer") (company-reftex :source "MELPA" :recipe (:package "company-reftex" :fetcher github :repo "TheBB/company-reftex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend based on RefTeX" :date (24699 19536) :url "https://github.com/TheBB/company-reftex") (company-restclient :source "MELPA" :recipe (:package "company-restclient" :fetcher github :repo "iquiw/company-restclient" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode completion back-end for restclient-mode" :date (23746 8144) :url "https://github.com/iquiw/company-restclient") (company-rtags :source "MELPA" :recipe (:package "company-rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/company-rtags.el")) :description "RTags back-end for company" :date (24062 34768) :url "https://github.com/Andersbakken/rtags") (company-shell :source "MELPA" :recipe (:package "company-shell" :repo "Alexander-Miller/company-shell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company mode backend for shell functions" :date (25527 14928) :url "https://github.com/Alexander-Miller/company-shell") (company-solidity :source "MELPA" :recipe (:package "company-solidity" :fetcher github :repo "ethereum/emacs-solidity" :files ("company-solidity.el")) :description "Company-mode back-end for solidity-mode" :date (24091 35024) :url "https://github.com/ethereum/emacs-solidity") (company-sourcekit :source "MELPA" :recipe (:package "company-sourcekit" :repo "nathankot/company-sourcekit" :fetcher github :files ("company-sourcekit.el")) :description "Company-mode completion backend for SourceKit" :date (24715 7760) :url "https://github.com/nathankot/company-sourcekit") (company-spell :source "MELPA" :recipe (:package "company-spell" :fetcher github :repo "enzuru/company-spell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Autocompleting spelling for Company" :date (25847 38608) :url "https://github.com/enzuru/company-spell") (company-stan :source "MELPA" :recipe (:package "company-stan" :fetcher github :repo "stan-dev/stan-mode" :files ("company-stan/*.el" (:exclude "company-stan/test-*.el"))) :description "A company-mode completion backend for stan" :date (24995 60880) :url "https://github.com/stan-dev/stan-mode") (company-statistics :source "MELPA" :recipe (:package "company-statistics" :repo "company-mode/company-statistics" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort candidates using completion history" :date (22684 55376) :url "https://github.com/company-mode/company-statistics") (company-suggest :source "MELPA" :recipe (:package "company-suggest" :fetcher github :repo "juergenhoetzel/company-suggest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company-mode back-end for search engine suggests" :date (24410 37840) :url "https://github.com/juergenhoetzel/company-suggest") (company-tabnine :source "MELPA" :recipe (:package "company-tabnine" :repo "TommyX12/company-tabnine" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A company-mode backend for TabNine" :date (25581 18384) :url "https://github.com/TommyX12/company-tabnine") (company-terraform :source "MELPA" :recipe (:package "company-terraform" :fetcher github :repo "rafalcieslak/emacs-company-terraform" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A company backend for terraform" :date (25208 12112) :url "https://github.com/rafalcieslak/emacs-company-terraform") (company-try-hard :source "MELPA" :recipe (:package "company-try-hard" :repo "Wilfred/company-try-hard" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get all completions from company backends" :date (24216 51024) :url "https://github.com/Wilfred/company-try-hard") (company-web :source "MELPA" :recipe (:package "company-web" :repo "osv/company-web" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company version of ac-html, complete for web,html,emmet,jade,slim modes" :date (25057 58448) :url "https://github.com/osv/company-web") (company-wordfreq :source "MELPA" :recipe (:package "company-wordfreq" :fetcher github :repo "johannes-mueller/company-wordfreq.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Company backend for human language texts" :date (25163 23632) :url "https://github.com/johannes-mueller/company-wordfreq.el") (company-ycm :source "MELPA" :recipe (:package "company-ycm" :fetcher github :repo "neuromage/ycm.el" :files ("company-ycm.el")) :description "Company-ycm" :date (21511 29504) :url "https://github.com/neuromage/ycm.el") (company-ycmd :source "MELPA" :recipe (:package "company-ycmd" :fetcher github :repo "abingham/emacs-ycmd" :files ("company-ycmd.el")) :description "Company-mode backend for ycmd" :date (23296 36944) :url "https://github.com/abingham/emacs-ycmd") (compdef :source "MELPA" :recipe (:package "compdef" :fetcher github :repo "cyruseuros/compdef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A local completion definer" :date (24158 50512) :url "https://github.com/cyruseuros/compdef") (competitive-programming-snippets :source "MELPA" :recipe (:package "competitive-programming-snippets" :repo "sei40kr/competitive-programming-snippets" :fetcher github :files (:defaults "snippets")) :description "Competitive Programming snippets for yasnippet" :date (24496 17744) :url "https://github.com/sei40kr/competitive-programming-snippets") (compile-multi :source "MELPA" :recipe (:package "compile-multi" :fetcher github :repo "mohkale/compile-multi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A multi target interface to compile" :date (26352 34128) :url "https://github.com/mohkale/compile-multi") (compile-multi-all-the-icons :source "MELPA" :recipe (:package "compile-multi-all-the-icons" :fetcher github :repo "mohkale/compile-multi" :files ("extensions/compile-multi-all-the-icons/compile-multi-all-the-icons*.el")) :description "Affixate `compile-multi' with icons" :date (26352 34128) :url "https://github.com/mohkale/compile-multi") (compile-multi-embark :source "MELPA" :recipe (:package "compile-multi-embark" :fetcher github :repo "mohkale/compile-multi" :files ("extensions/compile-multi-embark/compile-multi-embark*.el")) :description "Integration for `compile-multi' and `embark'" :date (26352 34128) :url "https://github.com/mohkale/compile-multi") (compile-multi-nerd-icons :source "MELPA" :recipe (:package "compile-multi-nerd-icons" :fetcher github :repo "mohkale/compile-multi" :version-regexp "missing-from-latest" :files ("extensions/compile-multi-nerd-icons/compile-multi-nerd-icons.el")) :description "Affixate `compile-multi' with nerd icons" :date (26349 57936) :url "https://github.com/mohkale/compile-multi") (compiler-explorer :source "MELPA" :recipe (:package "compiler-explorer" :fetcher github :repo "mkcms/compiler-explorer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compiler explorer client (godbolt.org)" :date (26406 37584) :url "https://github.com/mkcms/compiler-explorer.el") (composable :source "MELPA" :recipe (:package "composable" :repo "paldepind/composable.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Composable editing" :date (25247 48208) :url "https://github.com/paldepind/composable.el") (composer :source "MELPA" :recipe (:package "composer" :fetcher github :repo "emacs-php/composer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to PHP Composer" :date (26382 55248) :url "https://github.com/emacs-php/composer.el") (comware-router-mode :source "MELPA" :recipe (:package "comware-router-mode" :repo "daviderestivo/comware-router-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Comware configuration files" :date (26004 31056) :url "https://github.com/daviderestivo/comware-router-mode") (conan :source "MELPA" :recipe (:package "conan" :fetcher github :repo "Carl2/conan-elisp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate flags for c++ using conan 2.0" :date (25900 21200) :url "https://github.com/Carl2/conan-elisp") (concurrent :source "MELPA" :recipe (:package "concurrent" :repo "kiwanami/emacs-deferred" :fetcher github :files ("concurrent.el")) :description "Concurrent utility functions for emacs lisp" :date (22831 11984) :url "https://github.com/kiwanami/emacs-deferred") (conda :source "MELPA" :recipe (:package "conda" :repo "necaris/conda.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Work with your conda environments" :date (26368 22352) :url "https://github.com/necaris/conda.el") (config-general-mode :source "MELPA" :recipe (:package "config-general-mode" :repo "TLINDEN/config-general-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Config::General config file mode" :date (23022 22608) :url "https://github.com/TLINDEN/config-general-mode") (config-parser :source "MELPA" :recipe (:package "config-parser" :fetcher github :repo "lujun9972/el-config-parser" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library for parsing config file" :date (22302 34128) :url "https://github.com/lujun9972/el-config-parser") (conkeror-minor-mode :source "MELPA" :recipe (:package "conkeror-minor-mode" :repo "Malabarba/conkeror-minor-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing conkeror javascript files" :date (21685 34640) :url "https://github.com/Malabarba/conkeror-minor-mode") (conllu-mode :source "MELPA" :recipe (:package "conllu-mode" :fetcher github :repo "odanoburu/conllu-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Editing mode for CoNLL-U files" :date (24235 15440) :url "https://github.com/odanoburu/conllu-mode") (connection :source "MELPA" :recipe (:package "connection" :repo "myrkr/dictionary-el" :fetcher github :files ("connection.el")) :description "TCP-based client connection" :date (24008 31312) :url "https://github.com/myrkr/dictionary-el") (conner :source "MELPA" :recipe (:package "conner" :fetcher github :repo "tralph3/conner" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define and run project specific commands" :date (26318 15952) :url "https://github.com/tralph3/conner") (constant-theme :source "MELPA" :recipe (:package "constant-theme" :fetcher github :repo "Jannis/emacs-constant-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A calm, dark, almost monochrome color theme" :date (23460 2640) :url "https://github.com/Jannis/emacs-constant-theme") (consult :source "MELPA" :recipe (:package "consult" :repo "minad/consult" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consulting completing-read" :date (26382 55248) :url "https://github.com/minad/consult") (consult-ag :source "MELPA" :recipe (:package "consult-ag" :fetcher github :repo "yadex205/consult-ag" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The silver searcher integration using Consult" :date (25595 51280) :url "https://github.com/yadex205/consult-ag") (consult-codesearch :source "MELPA" :recipe (:package "consult-codesearch" :fetcher github :repo "youngker/consult-codesearch.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult interface for codesearch" :date (25616 57424) :url "https://github.com/youngker/consult-codesearch.el") (consult-company :source "MELPA" :recipe (:package "consult-company" :fetcher github :repo "mohkale/consult-company" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult frontend for company" :date (25726 19664) :url "https://github.com/mohkale/consult-company") (consult-compile-multi :source "MELPA" :recipe (:package "consult-compile-multi" :fetcher github :repo "mohkale/compile-multi" :files ("extensions/consult-compile-multi/*.el")) :description "Consulting read support for `compile-multi'" :date (26352 34128) :url "https://github.com/mohkale/compile-multi") (consult-dash :source "MELPA" :recipe (:package "consult-dash" :fetcher codeberg :repo "ravi/consult-dash" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult front-end for dash-docs" :date (25715 49360) :url "https://codeberg.org/ravi/consult-dash") (consult-dir :source "MELPA" :recipe (:package "consult-dir" :fetcher github :repo "karthink/consult-dir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert paths into the minibuffer prompt" :date (26167 62288) :url "https://github.com/karthink/consult-dir") (consult-eglot :source "MELPA" :recipe (:package "consult-eglot" :fetcher github :repo "mohkale/consult-eglot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A consulting-read interface for eglot" :date (26111 17104) :url "https://github.com/mohkale/consult-eglot") (consult-eglot-embark :source "MELPA" :recipe (:package "consult-eglot-embark" :fetcher github :repo "mohkale/consult-eglot" :version-regexp "missing-from-latest" :files ("extensions/consult-eglot-embark/consult-eglot-embark*.el")) :description "Embark integration for `consult-eglot'" :date (26111 17104) :url "https://github.com/mohkale/consult-eglot") (consult-flycheck :source "MELPA" :recipe (:package "consult-flycheck" :fetcher github :repo "minad/consult-flycheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides the command `consult-flycheck'" :date (26356 31184) :url "https://github.com/minad/consult-flycheck") (consult-flyspell :source "MELPA" :recipe (:package "consult-flyspell" :repo "OlMon/consult-flyspell" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for flyspell" :date (25626 6864) :url "https://gitlab.com/OlMon/consult-flyspell") (consult-gh :source "MELPA" :recipe (:package "consult-gh" :fetcher github :repo "armindarvish/consult-gh" :files ("consult-gh.el" "consult-gh-transient.el")) :description "Consulting GitHub Client" :date (26363 4432) :url "https://github.com/armindarvish/consult-gh") (consult-gh-embark :source "MELPA" :recipe (:package "consult-gh-embark" :fetcher github :repo "armindarvish/consult-gh" :files ("consult-gh-embark.el")) :description "Embark Actions for consult-gh" :date (26360 28240) :url "https://github.com/armindarvish/consult-gh") (consult-gh-forge :source "MELPA" :recipe (:package "consult-gh-forge" :fetcher github :repo "armindarvish/consult-gh" :files ("consult-gh-forge.el")) :description "Magit/Forge Integration for consult-gh" :date (26357 52048) :url "https://github.com/armindarvish/consult-gh") (consult-ghq :source "MELPA" :recipe (:package "consult-ghq" :repo "tomoya/consult-ghq" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ghq interface using consult" :date (25934 39376) :url "https://github.com/tomoya/consult-ghq") (consult-git-log-grep :source "MELPA" :recipe (:package "consult-git-log-grep" :fetcher github :repo "ghosty141/consult-git-log-grep" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for git log grep" :date (25565 30160) :url "https://github.com/ghosty141/consult-git-log-grep") (consult-hatena-bookmark :source "MELPA" :recipe (:package "consult-hatena-bookmark" :fetcher github :repo "Nyoho/consult-hatena-bookmark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult commands for the Hatena Bookmark" :date (25471 56144) :url "https://github.com/Nyoho/consult-hatena-bookmark") (consult-ls-git :source "MELPA" :recipe (:package "consult-ls-git" :repo "rcj/consult-ls-git" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for git" :date (26392 4688) :url "https://github.com/rcj/consult-ls-git") (consult-lsp :source "MELPA" :recipe (:package "consult-lsp" :fetcher github :repo "gagbo/consult-lsp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP-mode Consult integration" :date (26169 17616) :url "https://github.com/gagbo/consult-lsp") (consult-notes :source "MELPA" :recipe (:package "consult-notes" :repo "mclear-tools/consult-notes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage notes with consult" :date (26294 33616) :url "https://github.com/mclear-tools/consult-notes") (consult-notmuch :source "MELPA" :recipe (:package "consult-notmuch" :fetcher codeberg :repo "jao/consult-notmuch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Notmuch search using consult" :date (26036 7504) :url "https://codeberg.org/jao/consult-notmuch") (consult-org-roam :source "MELPA" :recipe (:package "consult-org-roam" :repo "jgru/consult-org-roam" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for org-roam" :date (26063 52432) :url "https://github.com/jgru/consult-org-roam") (consult-project-extra :source "MELPA" :recipe (:package "consult-project-extra" :fetcher github :repo "Qkessler/consult-project-extra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for project.el" :date (25987 21968) :url "https://github.com/Qkessler/consult-project-extra") (consult-projectile :source "MELPA" :recipe (:package "consult-projectile" :fetcher gitlab :repo "OlMon/consult-projectile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult integration for projectile" :date (25826 32464) :url "https://gitlab.com/OlMon/consult-projectile") (consult-recoll :source "MELPA" :recipe (:package "consult-recoll" :fetcher codeberg :repo "jao/consult-recoll" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Recoll queries using consult" :date (25974 9936) :url "https://codeberg.org/jao/consult-recoll") (consult-spotify :source "MELPA" :recipe (:package "consult-spotify" :fetcher codeberg :repo "jao/espotify" :files ("consult-spotify.el")) :description "Spotify queries using consult" :date (24976 10064) :url "https://codeberg.org/jao/espotify") (consult-tex :source "MELPA" :recipe (:package "consult-tex" :repo "titus.pinta/consult-tex" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consult powered completion for tex" :date (26291 57424) :url "https://gitlab.com/titus.pinta/consult-tex") (consult-todo :source "MELPA" :recipe (:package "consult-todo" :fetcher github :repo "liuyinz/consult-todo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search hl-todo keywords in consult" :date (26399 64336) :url "https://github.com/liuyinz/consult-todo") (consult-yasnippet :source "MELPA" :recipe (:package "consult-yasnippet" :fetcher github :repo "mohkale/consult-yasnippet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A consulting-read interface for yasnippet" :date (26098 5072) :url "https://github.com/mohkale/consult-yasnippet") (context-transient :source "MELPA" :recipe (:package "context-transient" :repo "licht1stein/context-transient.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Context specific transients" :date (26199 38736) :url "https://github.com/licht1stein/context-transient.el") (contextual :source "MELPA" :recipe (:package "contextual" :fetcher github :repo "outergod/contextual" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Contextual profile management system" :date (23384 58576) :url "https://github.com/outergod/contextual") (contextual-menubar :source "MELPA" :recipe (:package "contextual-menubar" :fetcher github :repo "aaronjensen/contextual-menubar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the menubar only on a graphical display" :date (23159 29776) :url "https://github.com/aaronjensen/contextual-menubar") (contrast-color :source "MELPA" :recipe (:package "contrast-color" :repo "yuutayamada/contrast-color-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pick best contrast color for you" :date (22473 59472) :url "https://github.com/yuutayamada/contrast-color-el") (control-mode :source "MELPA" :recipe (:package "control-mode" :fetcher github :repo "stephendavidmarsh/control-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A \"control\" mode, similar to vim's \"normal\" mode" :date (22380 19920) :url "https://github.com/stephendavidmarsh/control-mode") (conventional-changelog :source "MELPA" :recipe (:package "conventional-changelog" :fetcher github :repo "liuyinz/emacs-conventional-changelog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Conventional Changelog Generator" :date (25842 20688) :url "https://github.com/liuyinz/emacs-conventional-changelog") (cool-mode :source "MELPA" :recipe (:package "cool-mode" :repo "nverno/cool-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for cool compiler language" :date (25913 33232) :url "https://github.com/nverno/cool-mode") (copilot-chat :source "MELPA" :recipe (:package "copilot-chat" :fetcher github :repo "chep/copilot-chat.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Copilot chat interface" :date (26405 16720) :url "https://github.com/chep/copilot-chat.el") (copy-as-format :source "MELPA" :recipe (:package "copy-as-format" :repo "sshaw/copy-as-format" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Copy buffer locations as GitHub/Slack/JIRA etc... formatted code" :date (25935 60240) :url "https://github.com/sshaw/copy-as-format") (copy-file-on-save :source "MELPA" :recipe (:package "copy-file-on-save" :fetcher github :repo "emacs-php/emacs-auto-deployment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Copy file on save, automatic deployment it" :date (25640 39760) :url "https://github.com/emacs-php/emacs-auto-deployment") (copyit :source "MELPA" :recipe (:package "copyit" :repo "zonuexe/emacs-copyit" :fetcher github :files ("copyit.el")) :description "Copy it, yank anything!" :date (26401 19664) :url "https://github.com/zonuexe/emacs-copyit") (copyit-pandoc :source "MELPA" :recipe (:package "copyit-pandoc" :repo "zonuexe/emacs-copyit" :fetcher github :files ("copyit-pandoc.el")) :description "Copy it, yank anything!" :date (23938 39632) :url "https://github.com/zonuexe/emacs-copyit") (coq-commenter :source "MELPA" :recipe (:package "coq-commenter" :fetcher github :repo "Ailrun/coq-commenter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Coq commenting minor mode for proof" :date (22939 18896) :url "https://github.com/Ailrun/coq-commenter") (corfu :source "MELPA" :recipe (:package "corfu" :repo "minad/corfu" :files (:defaults "extensions/corfu-*.el") :fetcher github) :description "COmpletion in Region FUnction" :date (26409 13776) :url "https://github.com/minad/corfu") (corfu-candidate-overlay :source "MELPA" :recipe (:package "corfu-candidate-overlay" :url "https://code.bsdgeek.org/adam/corfu-candidate-overlay" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show first candidate in an overlay while typing" :date (26108 40912) :url "https://code.bsdgeek.org/adam/corfu-candidate-overlay") (corfu-prescient :source "MELPA" :recipe (:package "corfu-prescient" :fetcher github :repo "radian-software/prescient.el" :files ("corfu-prescient.el")) :description "Prescient.el + Corfu" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (corral :source "MELPA" :recipe (:package "corral" :fetcher github :repo "nivekuil/corral" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly surround text with delimiters" :date (22310 28240) :url "https://github.com/nivekuil/corral") (corsair :source "MELPA" :recipe (:package "corsair" :fetcher github :repo "rob137/Corsair" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Text accumulation enhancements for GPTel" :date (26385 31440) :url "https://github.com/rob137/Corsair") (cort :source "MELPA" :recipe (:package "cort" :fetcher github :repo "conao3/cort.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplify extended unit test framework" :date (26386 52304) :url "https://github.com/conao3/cort.el") (cosmo :source "MELPA" :recipe (:package "cosmo" :fetcher gitlab :repo "montanari/cosmo-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cosmological Calculator" :date (22980 10320) :url "https://gitlab.com/montanari/cosmo-el") (counsel :source "MELPA" :recipe (:package "counsel" :repo "abo-abo/swiper" :fetcher github :files ("counsel.el")) :description "Various completion functions using Ivy" :date (26186 26704) :url "https://github.com/abo-abo/swiper") (counsel-ag-popup :source "MELPA" :recipe (:package "counsel-ag-popup" :repo "gexplorer/counsel-ag-popup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive search with counsel-ag" :date (24584 39376) :url "https://github.com/gexplorer/counsel-ag-popup") (counsel-at-point :source "MELPA" :recipe (:package "counsel-at-point" :fetcher codeberg :repo "ideasman42/emacs-counsel-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Context sensitive project search" :date (26222 208) :url "https://codeberg.org/ideasman42/emacs-counsel-at-point") (counsel-bbdb :source "MELPA" :recipe (:package "counsel-bbdb" :repo "redguardtoo/counsel-bbdb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick search&input email from BBDB based on Emacs API `completing-read'" :date (25370 22480) :url "https://github.com/redguardtoo/counsel-bbdb") (counsel-chrome-bm :source "MELPA" :recipe (:package "counsel-chrome-bm" :fetcher github :repo "BlueBoxWare/counsel-chrome-bm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse Chrom(e/ium) bookmarks with Ivy" :date (24945 54480) :url "https://github.com/BlueBoxWare/counsel-chrome-bm") (counsel-codesearch :source "MELPA" :recipe (:package "counsel-codesearch" :fetcher github :repo "abingham/emacs-counsel-codesearch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel interface for codesearch.el" :date (23465 20560) :url "https://github.com/abingham/emacs-counsel-codesearch") (counsel-css :source "MELPA" :recipe (:package "counsel-css" :repo "hlissner/emacs-counsel-css" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Stylesheet-selector-aware swiper" :date (24977 30928) :url "https://github.com/hlissner/emacs-counsel-css") (counsel-dash :source "MELPA" :recipe (:package "counsel-dash" :repo "dash-docs-el/counsel-dash" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse dash docsets using Ivy" :date (25500 56400) :url "https://github.com/dash-docs-el/counsel-dash") (counsel-edit-mode :source "MELPA" :recipe (:package "counsel-edit-mode" :fetcher github :repo "tyler-dodge/counsel-edit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit results of counsel commands in-place" :date (25652 30928) :url "https://github.com/tyler-dodge/counsel-edit-mode") (counsel-etags :source "MELPA" :recipe (:package "counsel-etags" :fetcher github :repo "redguardtoo/counsel-etags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast and complete Ctags/Etags solution using ivy" :date (25809 23376) :url "https://github.com/redguardtoo/counsel-etags") (counsel-fd :source "MELPA" :recipe (:package "counsel-fd" :repo "CsBigDataHub/counsel-fd" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel interface for fd" :date (25412 34768) :url "https://github.com/CsBigDataHub/counsel-fd") (counsel-ffdata :source "MELPA" :recipe (:package "counsel-ffdata" :repo "cireu/counsel-ffdata" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use ivy to access firefox data" :date (23975 34000) :url "https://github.com/cireu/counsel-ffdata") (counsel-gtags :source "MELPA" :recipe (:package "counsel-gtags" :fetcher github :repo "FelipeLema/emacs-counsel-gtags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy for GNU global" :date (24626 51664) :url "https://github.com/FelipeLema/emacs-counsel-gtags") (counsel-jq :source "MELPA" :recipe (:package "counsel-jq" :repo "200ok-ch/counsel-jq" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live preview of \"jq\" queries using counsel" :date (24672 61008) :url "https://github.com/200ok-ch/counsel-jq") (counsel-mairix :source "MELPA" :recipe (:package "counsel-mairix" :fetcher sourcehut :repo "ane/counsel-mairix" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel interface for Mairix" :date (24704 37456) :url "https://git.sr.ht/~ane/counsel-mairix") (counsel-notmuch :source "MELPA" :recipe (:package "counsel-notmuch" :fetcher github :repo "fuxialexander/counsel-notmuch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search emails in Notmuch asynchronously with Ivy" :date (23556 18384) :url "https://github.com/fuxialexander/counsel-notmuch") (counsel-org-capture-string :source "MELPA" :recipe (:package "counsel-org-capture-string" :fetcher github :repo "akirak/counsel-org-capture-string" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel for org-capture-string" :date (24368 25552) :url "https://github.com/akirak/counsel-org-capture-string") (counsel-org-clock :source "MELPA" :recipe (:package "counsel-org-clock" :fetcher github :repo "akirak/counsel-org-clock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel commands for org-clock" :date (24368 25552) :url "https://github.com/akirak/counsel-org-clock") (counsel-osx-app :source "MELPA" :recipe (:package "counsel-osx-app" :repo "d12frosted/counsel-osx-app" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch osx applications via ivy interface" :date (22456 50384) :url "https://github.com/d12frosted/counsel-osx-app") (counsel-projectile :source "MELPA" :recipe (:package "counsel-projectile" :fetcher github :repo "ericdanan/counsel-projectile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy integration for Projectile" :date (24922 6608) :url "https://github.com/ericdanan/counsel-projectile") (counsel-pydoc :source "MELPA" :recipe (:package "counsel-pydoc" :repo "co-dh/pydoc_utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run pydoc with counsel" :date (23014 28496) :url "https://github.com/co-dh/pydoc_utils") (counsel-spotify :source "MELPA" :recipe (:package "counsel-spotify" :fetcher github :repo "Lautaro-Garcia/counsel-spotify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Spotify search and select music with Ivy" :date (24378 61392) :url "https://github.com/Lautaro-Garcia/counsel-spotify") (counsel-test :source "MELPA" :recipe (:package "counsel-test" :repo "xmagpie/counsel-test" :fetcher github :files ("counsel-test*.el")) :description "Browse and execute tests with ivy" :date (23897 48208) :url "https://github.com/xmagpie/counsel-test") (counsel-toki :source "MELPA" :recipe (:package "counsel-toki" :repo "emiflake/counsel-toki" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Counsel support for toki pona dictionary lookup" :date (25764 34896) :url "https://github.com/emiflake/counsel-toki") (counsel-tramp :source "MELPA" :recipe (:package "counsel-tramp" :repo "masasam/emacs-counsel-tramp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tramp ivy interface for ssh, docker, vagrant" :date (25776 26064) :url "https://github.com/masasam/emacs-counsel-tramp") (counsel-web :source "MELPA" :recipe (:package "counsel-web" :repo "mnewt/counsel-web" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search the Web using Ivy" :date (24767 55888) :url "https://github.com/mnewt/counsel-web") (counsel-world-clock :source "MELPA" :recipe (:package "counsel-world-clock" :repo "kchenphy/counsel-world-clock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display world clock using Ivy" :date (23843 44752) :url "https://github.com/kchenphy/counsel-world-clock") (countdown :source "MELPA" :recipe (:package "countdown" :fetcher github :repo "xuchunyang/countdown.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Countdown using big LCD-like digits" :date (23826 35664) :url "https://github.com/xuchunyang/countdown.el") (cov :source "MELPA" :recipe (:package "cov" :fetcher github :repo "AdamNiederer/cov" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show coverage stats in the fringe" :date (25888 30032) :url "https://github.com/AdamNiederer/cov") (coverage :source "MELPA" :recipe (:package "coverage" :fetcher github :repo "trezona-lecomte/coverage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code coverage line highlighting" :date (24011 7504) :url "https://github.com/trezona-lecomte/coverage") (coverlay :source "MELPA" :recipe (:package "coverlay" :repo "twada/coverlay.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Test coverage overlays" :date (23730 19920) :url "https://github.com/twada/coverlay.el") (cowsay :source "MELPA" :recipe (:package "cowsay" :fetcher github :repo "lassik/emacs-cowsay" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Poorly drawn ASCII cartoons saying things" :date (24728 19792) :url "https://github.com/lassik/emacs-cowsay") (cp5022x :source "MELPA" :recipe (:package "cp5022x" :repo "awasira/cp5022x.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cp50220, cp50221, cp50222 coding system" :date (20331 33984) :url "https://github.com/awasira/cp5022x.el") (cpanfile-mode :source "MELPA" :recipe (:package "cpanfile-mode" :repo "zakame/cpanfile-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for cpanfiles" :date (22510 53840) :url "https://github.com/zakame/cpanfile-mode") (cpp-auto-include :source "MELPA" :recipe (:package "cpp-auto-include" :fetcher github :repo "emacsorphanage/cpp-auto-include" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert and delete C++ header files automatically" :date (24658 28112) :url "https://github.com/emacsorphanage/cpp-auto-include") (cpputils-cmake :source "MELPA" :recipe (:package "cpputils-cmake" :fetcher github :repo "redguardtoo/cpputils-cmake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy realtime C++ syntax check and IntelliSense with CMake" :date (23479 53456) :url "https://github.com/redguardtoo/cpputils-cmake") (cpu-sos :source "MELPA" :recipe (:package "cpu-sos" :fetcher github :repo "oitofelix/cpu-sos" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "S.O.S. from a CPU in distress" :date (24206 15184) :url "https://github.com/oitofelix/cpu-sos") (cql-mode :source "MELPA" :recipe (:package "cql-mode" :fetcher github :repo "Yuki-Inoue/cql-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editting CQLs" :date (23690 49360) :url "https://github.com/Yuki-Inoue/cql-mode") (cquery :source "MELPA" :recipe (:package "cquery" :repo "cquery-project/emacs-cquery" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cquery client for lsp-mode" :date (23616 60624) :url "https://github.com/cquery-project/emacs-cquery") (crappy-jsp-mode :source "MELPA" :recipe (:package "crappy-jsp-mode" :repo "magnars/crappy-jsp-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A pretty crappy major-mode for jsp" :date (21278 6592) :url "https://github.com/magnars/crappy-jsp-mode") (creamsody-theme :source "MELPA" :recipe (:package "creamsody-theme" :fetcher github :repo "emacsfodder/emacs-theme-creamsody" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Straight from the soda fountain" :date (26225 62800) :url "https://github.com/emacsfodder/emacs-theme-creamsody") (create-link :source "MELPA" :recipe (:package "create-link" :repo "kijimaD/create-link" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart format link generator" :date (25264 57296) :url "https://github.com/kijimaD/create-link") (creds :source "MELPA" :recipe (:package "creds" :fetcher github :repo "ardumont/emacs-creds" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A parser credentials file library (not limited to credentials entries)" :date (21357 13248) :url "https://github.com/ardumont/emacs-creds") (creole :source "MELPA" :recipe (:package "creole" :fetcher github :repo "nicferrier/elwikicreole" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A parser for the Creole Wiki language" :date (21537 53568) :url "https://github.com/nicferrier/elwikicreole") (creole-mode :source "MELPA" :recipe (:package "creole-mode" :fetcher github :repo "nicferrier/creole-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A markup mode for creole" :date (20972 15808) :url "https://github.com/nicferrier/creole-mode") (cricbuzz :source "MELPA" :recipe (:package "cricbuzz" :fetcher github :repo "lepisma/cricbuzz.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cricket scores from cricbuzz in emacs" :date (23396 49744) :url "https://github.com/lepisma/cricbuzz.el") (crm-custom :source "MELPA" :recipe (:package "crm-custom" :repo "DarwinAwardWinner/crm-custom" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alternate `completing-read-multiple' that uses `completing-read'" :date (22170 44880) :url "https://github.com/DarwinAwardWinner/crm-custom") (crontab-mode :source "MELPA" :recipe (:package "crontab-mode" :repo "emacs-pe/crontab-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for crontab(5)" :date (24815 20560) :url "https://github.com/emacs-pe/crontab-mode") (crossword :source "MELPA" :recipe (:package "crossword" :fetcher github :repo "Boruch-Baum/emacs-crossword" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Download and play crossword puzzles" :date (24774 29136) :url "https://github.com/Boruch-Baum/emacs-crossword") (crux :source "MELPA" :recipe (:package "crux" :fetcher github :repo "bbatsov/crux" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Collection of Ridiculously Useful eXtensions" :date (26121 52944) :url "https://github.com/bbatsov/crux") (cryptol-mode :source "MELPA" :recipe (:package "cryptol-mode" :fetcher github :repo "thoughtpolice/cryptol-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cryptol major mode for Emacs" :date (23792 17488) :url "https://github.com/thoughtpolice/cryptol-mode") (crystal-mode :source "MELPA" :recipe (:package "crystal-mode" :repo "crystal-lang-tools/emacs-crystal-mode" :fetcher github :files ("crystal-mode.el")) :description "Major mode for editing Crystal files" :date (25966 15824) :url "https://github.com/crystal-lang-tools/emacs-crystal-mode") (crystal-playground :source "MELPA" :recipe (:package "crystal-playground" :fetcher github :repo "jasonrobot/crystal-playground" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Local crystal playground for short code snippets" :date (23431 2384) :url "https://github.com/jasonrobot/crystal-playground") (csgo-conf-mode :source "MELPA" :recipe (:package "csgo-conf-mode" :fetcher github :repo "wynro/emacs-csgo-conf-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "CS:GO Configuration files syntax highlighting" :date (22601 51664) :url "https://github.com/wynro/emacs-csgo-conf-mode") (csharp-mode :source "MELPA" :recipe (:package "csharp-mode" :fetcher github :repo "emacs-csharp/csharp-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "C# mode derived mode" :date (25473 11472) :url "https://github.com/emacs-csharp/csharp-mode") (csound-mode :source "MELPA" :recipe (:package "csound-mode" :fetcher github :repo "hlolli/csound-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for interacting and coding Csound" :date (26311 42704) :url "https://github.com/hlolli/csound-mode") (csproj-mode :source "MELPA" :recipe (:package "csproj-mode" :repo "omajid/csproj-mode" :fetcher github :files (:defaults "snippets")) :description "Work with .NET project files (csproj, vbproj)" :date (24356 34384) :url "https://github.com/omajid/csproj-mode") (css-autoprefixer :source "MELPA" :recipe (:package "css-autoprefixer" :fetcher github :repo "kkweon/emacs-css-autoprefixer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds autoprefix to CSS" :date (23204 18256) :url "https://github.com/kkweon/emacs-css-autoprefixer") (css-comb :source "MELPA" :recipe (:package "css-comb" :fetcher github :repo "bitspook/css-comb.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort CSS properties in a particular order using CSS Comb" :date (22289 22096) :url "https://github.com/bitspook/css-comb.el") (css-eldoc :source "MELPA" :recipe (:package "css-eldoc" :fetcher github :repo "zenozeng/css-eldoc" :files ("css-eldoc.el" "css-eldoc-hash-table.el")) :description "An eldoc-mode plugin for CSS source code" :date (25176 35664) :url "https://github.com/zenozeng/css-eldoc") (cssh :source "MELPA" :recipe (:package "cssh" :fetcher github :repo "dimitri/cssh" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clusterssh implementation for emacs" :date (21959 48976) :url "https://github.com/dimitri/cssh") (csv :source "MELPA" :recipe (:package "csv" :fetcher gitlab :repo "u11/csv.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions for reading and parsing CSV files" :date (25980 48720) :url "https://gitlab.com/u11/csv.el") (ct :source "MELPA" :recipe (:package "ct" :fetcher github :repo "neeasade/ct.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color Tools - a color api" :date (26398 43472) :url "https://github.com/neeasade/ct.el") (ctable :source "MELPA" :recipe (:package "ctable" :repo "kiwanami/emacs-ctable" :fetcher github :files ("ctable.el")) :description "Table component for Emacs Lisp" :date (24593 54352) :url "https://github.com/kiwanami/emacs-ctable") (ctags-update :source "MELPA" :recipe (:package "ctags-update" :repo "jixiuf/ctags-update" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "(auto) update TAGS in parent directory using exuberant-ctags" :date (23804 8656) :url "https://github.com/jixiuf/ctags-update") (ctl-mode :source "MELPA" :recipe (:package "ctl-mode" :fetcher github :repo "yyr/emacs-grads" :files ("ctl-mode.el")) :description "Major mode for editing GrADS script files" :date (22110 2640) :url "https://github.com/yyr/emacs-grads") (ctrlf :source "MELPA" :recipe (:package "ctrlf" :fetcher github :repo "radian-software/ctrlf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs finally learns how to ctrl+F" :date (25454 47056) :url "https://github.com/radian-software/ctrlf") (ctrlxo :source "MELPA" :recipe (:package "ctrlxo" :fetcher github :repo "muffinmad/emacs-ctrlxo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch to the most recently used window" :date (24463 20432) :url "https://github.com/muffinmad/emacs-ctrlxo") (ctune :source "MELPA" :recipe (:package "ctune" :fetcher github :repo "maurooaranda/ctune" :files (:defaults (:exclude "doclicense.texi" "docstyle.texi"))) :description "Tune out CC Mode Noise Macros" :date (24604 24656) :url "https://github.com/maurooaranda/ctune") (ctxmenu :source "MELPA" :recipe (:package "ctxmenu" :repo "aki2o/emacs-ctxmenu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide a context menu like right-click" :date (21267 36288) :url "https://github.com/aki2o/emacs-ctxmenu") (cubicaltt :source "MELPA" :recipe (:package "cubicaltt" :fetcher github :repo "mortberg/cubicaltt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for cubical type theory" :date (23042 7888) :url "https://github.com/mortberg/cubicaltt") (cubicle-mode :source "MELPA" :recipe (:package "cubicle-mode" :fetcher github :repo "cubicle-model-checker/cubicle" :files ("emacs/cubicle-mode.el")) :description "Major mode for the Cubicle model checker" :date (25438 58832) :url "https://github.com/cubicle-model-checker/cubicle") (cucumber-goto-step :source "MELPA" :recipe (:package "cucumber-goto-step" :repo "gstamp/cucumber-goto-step" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to cucumber step definition" :date (21158 8512) :url "https://github.com/gstamp/cucumber-goto-step") (cuda-mode :source "MELPA" :recipe (:package "cuda-mode" :fetcher github :repo "chachi/cuda-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "NVIDIA CUDA Major Mode derived from C++-mode" :date (26306 24784) :url "https://github.com/chachi/cuda-mode") (cue-mode :source "MELPA" :recipe (:package "cue-mode" :fetcher github :repo "russell/cue-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for CUE language files" :date (25332 7248) :url "https://github.com/russell/cue-mode") (cue-sheet-mode :source "MELPA" :recipe (:package "cue-sheet-mode" :repo "peterhoeg/cue-sheet-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing CUE sheet files" :date (25706 34384) :url "https://github.com/peterhoeg/cue-sheet-mode") (curl-to-elisp :source "MELPA" :recipe (:package "curl-to-elisp" :fetcher github :repo "xuchunyang/curl-to-elisp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert cURL command to Emacs Lisp code" :date (24508 8912) :url "https://github.com/xuchunyang/curl-to-elisp") (currency-convert :source "MELPA" :recipe (:package "currency-convert" :fetcher github :repo "lassik/emacs-currency-convert" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Currency converter" :date (25979 27856) :url "https://github.com/lassik/emacs-currency-convert") (current-word-highlight :source "MELPA" :recipe (:package "current-word-highlight" :repo "kijimaD/current-word-highlight" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the current word minor mode" :date (24665 1360) :url "https://github.com/kijimaD/current-word-highlight") (curry-on-theme :source "MELPA" :recipe (:package "curry-on-theme" :repo "mvarela/Curry-On-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A low contrast color theme" :date (24663 46032) :url "https://github.com/mvarela/Curry-On-theme") (cursor-flash :source "MELPA" :recipe (:package "cursor-flash" :fetcher github :repo "Boruch-Baum/emacs-cursor-flash" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the cursor on buffer/window-switch" :date (24824 35536) :url "https://github.com/Boruch-Baum/emacs-cursor-flash") (cursor-test :source "MELPA" :recipe (:package "cursor-test" :repo "ainame/cursor-test.el" :fetcher github :files ("cursor-test.el")) :description "Testing library for cursor position in emacs" :date (21154 11456) :url "https://github.com/ainame/cursor-test.el") (cwl-mode :source "MELPA" :recipe (:package "cwl-mode" :repo "tom-tan/cwl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing CWL" :date (24728 19792) :url "https://github.com/tom-tan/cwl-mode") (cyanometric-theme :source "MELPA" :recipe (:package "cyanometric-theme" :fetcher github :repo "emacsfodder/emacs-theme-cyanometric" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Theme with overwhelming bias towards cyan" :date (25346 40144) :url "https://github.com/emacsfodder/emacs-theme-cyanometric") (cybercafe-theme :source "MELPA" :recipe (:package "cybercafe-theme" :fetcher github :repo "gboncoffee/cybercafe-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cybercafe color theme" :date (25949 6736) :url "https://github.com/gboncoffee/cybercafe-emacs-theme") (cyberpunk-2019-theme :source "MELPA" :recipe (:package "cyberpunk-2019-theme" :fetcher github :repo "the-frey/cyberpunk-2019" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A retina-scorching cyberpunk theme" :date (23963 42832) :url "https://github.com/the-frey/cyberpunk-2019") (cyberpunk-theme :source "MELPA" :recipe (:package "cyberpunk-theme" :fetcher github :repo "n3mo/cyberpunk-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cyberpunk Color Theme" :date (26016 22224) :url "https://github.com/n3mo/cyberpunk-theme.el") (cycbuf :source "MELPA" :recipe (:package "cycbuf" :repo "martinp26/cycbuf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle buffers, inspired by swbuff.el, swbuff-x.el, and bs.el" :date (21148 59072) :url "https://github.com/martinp26/cycbuf") (cycle-at-point :source "MELPA" :recipe (:package "cycle-at-point" :fetcher codeberg :repo "ideasman42/emacs-cycle-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle (rotate) the thing under the cursor" :date (26149 32336) :url "https://codeberg.org/ideasman42/emacs-cycle-at-point") (cycle-resize :source "MELPA" :recipe (:package "cycle-resize" :fetcher github :repo "pierre-lecocq/cycle-resize" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle resize the current window horizontally or vertically" :date (22335 31440) :url "https://github.com/pierre-lecocq/cycle-resize") (cycle-themes :source "MELPA" :recipe (:package "cycle-themes" :fetcher github :repo "toroidal-code/cycle-themes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A global minor mode to make switching themes easier" :date (21789 44496) :url "https://github.com/toroidal-code/cycle-themes.el") (cyphejor :source "MELPA" :recipe (:package "cyphejor" :repo "mrkkrp/cyphejor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shorten major mode names using user-defined rules" :date (25726 19664) :url "https://github.com/mrkkrp/cyphejor") (cypher-mode :source "MELPA" :recipe (:package "cypher-mode" :repo "fxbois/cypher-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing cypher scripts" :date (22081 2384) :url "https://github.com/fxbois/cypher-mode") (cython-mode :source "MELPA" :recipe (:package "cython-mode" :fetcher github :repo "cython/emacs-cython-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Cython files" :date (25478 29392) :url "https://github.com/cython/emacs-cython-mode") (czech-holidays :source "MELPA" :recipe (:package "czech-holidays" :fetcher github :repo "chkhd/czech-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds a list of Czech public holidays to Emacs calendar" :date (22165 26960) :url "https://github.com/chkhd/czech-holidays") (d-mode :source "MELPA" :recipe (:package "d-mode" :fetcher github :repo "Emacs-D-Mode-Maintainers/Emacs-D-Mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "D Programming Language major mode for (X)Emacs" :date (26298 30672) :url "https://github.com/Emacs-D-Mode-Maintainers/Emacs-D-Mode") (d2-mode :source "MELPA" :recipe (:package "d2-mode" :repo "andorsk/d2-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for working with d2 graphs" :date (26249 45136) :url "https://github.com/andorsk/d2-mode") (dactyl-mode :source "MELPA" :recipe (:package "dactyl-mode" :fetcher github :repo "luxbock/dactyl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Pentadactyl config files" :date (21514 5696) :url "https://github.com/luxbock/dactyl-mode") (dad-joke :source "MELPA" :recipe (:package "dad-joke" :fetcher github :repo "davep/dad-joke.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get/display dad jokes" :date (22988 4432) :url "https://github.com/davep/dad-joke.el") (daemons :source "MELPA" :recipe (:package "daemons" :fetcher github :repo "cbowdon/daemons.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "UI for managing init system daemons (services)" :date (25975 30800) :url "https://github.com/cbowdon/daemons.el") (dakrone-light-theme :source "MELPA" :recipe (:package "dakrone-light-theme" :fetcher github :repo "dakrone/dakrone-light-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dakrone's custom light theme" :date (22920 54480) :url "https://github.com/dakrone/dakrone-light-theme") (dakrone-theme :source "MELPA" :recipe (:package "dakrone-theme" :fetcher github :repo "dakrone/dakrone-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dakrone's custom dark theme" :date (22911 39504) :url "https://github.com/dakrone/dakrone-theme") (dall-e-shell :source "MELPA" :recipe (:package "dall-e-shell" :fetcher github :repo "xenodium/chatgpt-shell" :files ("dall-e-shell.el")) :description "Interaction mode for DALL-E" :date (26403 61392) :url "https://github.com/xenodium/chatgpt-shell") (daml-lsp :source "MELPA" :recipe (:package "daml-lsp" :repo "bartfailt/daml-lsp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP client definition for daml" :date (25921 27344) :url "https://github.com/bartfailt/daml-lsp") (daml-mode :source "MELPA" :recipe (:package "daml-mode" :repo "bartfailt/daml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for daml" :date (25928 592) :url "https://github.com/bartfailt/daml-mode") (danneskjold-theme :source "MELPA" :recipe (:package "danneskjold-theme" :fetcher github :repo "rails-to-cosmos/danneskjold-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Beautiful high-contrast Emacs theme" :date (26270 51280) :url "https://github.com/rails-to-cosmos/danneskjold-theme") (dante :source "MELPA" :recipe (:package "dante" :repo "jyp/dante" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Development mode for Haskell" :date (25809 23376) :url "https://github.com/jyp/dante") (dap-mode :source "MELPA" :recipe (:package "dap-mode" :repo "emacs-lsp/dap-mode" :fetcher github :files (:defaults "icons")) :description "Debug Adapter Protocol mode" :date (26403 61392) :url "https://github.com/emacs-lsp/dap-mode") (darcsum :source "MELPA" :recipe (:package "darcsum" :fetcher github :repo "emacsmirror/darcsum" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A pcl-cvs like interface for managing darcs patches" :date (23692 4688) :url "https://github.com/emacsmirror/darcsum") (darcula-theme :source "MELPA" :recipe (:package "darcula-theme" :fetcher gitlab :repo "fommil/emacs-darcula-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inspired by IntelliJ's Darcula theme" :date (23106 47184) :url "https://gitlab.com/fommil/emacs-darcula-theme") (dark-krystal-theme :source "MELPA" :recipe (:package "dark-krystal-theme" :fetcher github :repo "emacsfodder/emacs-dark-krystal-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Dark Krystal (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-dark-krystal-theme") (dark-mint-theme :source "MELPA" :recipe (:package "dark-mint-theme" :repo "shaunvxc/dark-mint-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark & minty fresh theme" :date (22230 720) :url "https://github.com/shaunvxc/dark-mint-theme") (dark-souls :source "MELPA" :recipe (:package "dark-souls" :fetcher github :repo "tomjakubowski/dark-souls.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Prepare to die" :date (21282 3648) :url "https://github.com/tomjakubowski/dark-souls.el") (darkman :source "MELPA" :recipe (:package "darkman" :fetcher sourcehut :repo "grtcdr/darkman.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Seamless integration with Darkman" :date (26386 52304) :url "https://git.sr.ht/~grtcdr/darkman.el") (darkmine-theme :source "MELPA" :recipe (:package "darkmine-theme" :repo "pierre-lecocq/darkmine-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another emacs dark color theme" :date (22276 10064) :url "https://github.com/pierre-lecocq/darkmine-theme") (darkokai-theme :source "MELPA" :recipe (:package "darkokai-theme" :repo "sjrmanning/darkokai" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A darker variant on Monokai" :date (24293 15952) :url "https://github.com/sjrmanning/darkokai") (darktooth-theme :source "MELPA" :recipe (:package "darktooth-theme" :fetcher github :repo "emacsfodder/emacs-theme-darktooth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "From the darkness... it watches" :date (25893 47952) :url "https://github.com/emacsfodder/emacs-theme-darktooth") (dart-mode :source "MELPA" :recipe (:package "dart-mode" :fetcher github :repo "emacsorphanage/dart-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Dart files" :date (25881 56784) :url "https://github.com/emacsorphanage/dart-mode") (dart-server :source "MELPA" :recipe (:package "dart-server" :fetcher github :repo "bradyt/dart-server" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing Dart files" :date (24716 28624) :url "https://github.com/bradyt/dart-server") (dash :source "MELPA" :recipe (:package "dash" :fetcher github :repo "magnars/dash.el" :files ("dash.el" "dash.texi")) :description "A modern list library for Emacs" :date (26173 14672) :url "https://github.com/magnars/dash.el") (dash-alfred :source "MELPA" :recipe (:package "dash-alfred" :fetcher github :repo "xuchunyang/dash-alfred.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Dash documentation via Dash-Alfred-Workflow" :date (23984 48976) :url "https://github.com/xuchunyang/dash-alfred.el") (dash-at-point :source "MELPA" :recipe (:package "dash-at-point" :fetcher github :repo "stanaka/dash-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search the word at point with Dash" :date (24947 9808) :url "https://github.com/stanaka/dash-at-point") (dash-docs :source "MELPA" :recipe (:package "dash-docs" :repo "dash-docs-el/dash-docs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Offline documentation browser using Dash docsets" :date (24875 62800) :url "https://github.com/dash-docs-el/dash-docs") (dash-functional :source "MELPA" :recipe (:package "dash-functional" :fetcher github :repo "magnars/dash.el" :files ("dash-functional.el")) :description "Collection of useful combinators for Emacs Lisp" :date (24870 44880) :url "https://github.com/magnars/dash.el") (dashboard :source "MELPA" :recipe (:package "dashboard" :fetcher github :repo "emacs-dashboard/emacs-dashboard" :files (:defaults "banners")) :description "A startup screen extracted from Spacemacs" :date (26352 34128) :url "https://github.com/emacs-dashboard/emacs-dashboard") (dashboard-hackernews :source "MELPA" :recipe (:package "dashboard-hackernews" :fetcher github :repo "hyakt/emacs-dashboard-hackernews" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display Hacker News on dashboard" :date (26345 60880) :url "https://github.com/hyakt/emacs-dashboard-hackernews") (dashboard-ls :source "MELPA" :recipe (:package "dashboard-ls" :repo "emacs-dashboard/dashboard-ls" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display files/directories in current directory on Dashboard" :date (26001 54864) :url "https://github.com/emacs-dashboard/dashboard-ls") (dashboard-project-status :source "MELPA" :recipe (:package "dashboard-project-status" :fetcher github :repo "functionreturnfunction/dashboard-project-status" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display a git project status in a dashboard widget" :date (23636 45904) :url "https://github.com/functionreturnfunction/dashboard-project-status") (date-at-point :source "MELPA" :recipe (:package "date-at-point" :repo "alezost/date-at-point.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add `date' to `thing-at-point' function" :date (21755 26320) :url "https://github.com/alezost/date-at-point.el") (date-field :source "MELPA" :recipe (:package "date-field" :repo "aki2o/emacs-date-field" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Date widget" :date (21624 57936) :url "https://github.com/aki2o/emacs-date-field") (date2name :source "MELPA" :recipe (:package "date2name" :repo "DerBeutlin/date2name.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package to prepend ISO Timestamps to files" :date (23831 53584) :url "https://github.com/DerBeutlin/date2name.el") (datetime :source "MELPA" :recipe (:package "datetime" :fetcher github :repo "doublep/datetime" :files (:defaults "*.extmap")) :description "Parsing, formatting and matching timestamps" :date (26144 14416) :url "https://github.com/doublep/datetime") (datetime-format :source "MELPA" :recipe (:package "datetime-format" :repo "emacs-php/emacs-datetime" :fetcher github :files ("datetime-format.el")) :description "Datetime functions" :date (26007 7248) :url "https://github.com/emacs-php/emacs-datetime") (datomic-snippets :source "MELPA" :recipe (:package "datomic-snippets" :fetcher github :repo "magnars/datomic-snippets" :files ("*.el" "snippets")) :description "Yasnippets for Datomic" :date (23413 58832) :url "https://github.com/magnars/datomic-snippets") (dayone :source "MELPA" :recipe (:package "dayone" :fetcher github :repo "mori-dev/emacs-dayone" :files ("*.el" "*.mustache")) :description "Utility script for Day One" :date (22154 56656) :url "https://github.com/mori-dev/emacs-dayone") (db :source "MELPA" :recipe (:package "db" :fetcher github :repo "nicferrier/emacs-db" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A database for EmacsLisp" :date (21332 10048) :url "https://github.com/nicferrier/emacs-db") (db-pg :source "MELPA" :recipe (:package "db-pg" :fetcher github :repo "nicferrier/emacs-db-pg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A PostgreSQL adapter for emacs-db" :date (20745 31680) :url "https://github.com/nicferrier/emacs-db-pg") (dbc :source "MELPA" :recipe (:package "dbc" :fetcher gitlab :repo "matsievskiysv/display-buffer-control" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control how to open buffers" :date (24436 61904) :url "https://gitlab.com/matsievskiysv/display-buffer-control") (dbml-mode :source "MELPA" :recipe (:package "dbml-mode" :fetcher github :repo "KeyWeeUsr/dbml-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for DBML" :date (26359 7376) :url "https://github.com/KeyWeeUsr/dbml-mode") (ddate :source "MELPA" :recipe (:package "ddate" :fetcher sourcehut :repo "earneson/emacs-ddate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Discordian dates with ddate" :date (25438 58832) :url "https://git.sr.ht/~earneson/emacs-ddate") (ddskk :source "MELPA" :recipe (:package "ddskk" :fetcher github :repo "skk-dev/ddskk" :old-names (skk) :version-regexp "ddskk-%v_.*" :files ("context-skk.el" "ddskk*.el" "skk*.el" "tar-util.el" "doc/skk.texi" "etc/skk.xpm" (:exclude "skk-xemacs.el" "skk-lookup.el"))) :description "Simple Kana to Kanji conversion program" :date (25759 16976) :url "https://github.com/skk-dev/ddskk") (ddskk-posframe :source "MELPA" :recipe (:package "ddskk-posframe" :fetcher github :repo "conao3/ddskk-posframe.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show Henkan tooltip for ddskk via posframe" :date (24371 1744) :url "https://github.com/conao3/ddskk-posframe.el") (deadgrep :source "MELPA" :recipe (:package "deadgrep" :repo "Wilfred/deadgrep" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast, friendly searching with ripgrep" :date (26401 19664) :url "https://github.com/Wilfred/deadgrep") (debian-el :source "MELPA" :recipe (:package "debian-el" :fetcher git :url "https://salsa.debian.org/emacsen-team/debian-el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Startup file for the debian-el package" :date (26396 1744) :url "https://salsa.debian.org/emacsen-team/debian-el.git") (debpaste :source "MELPA" :recipe (:package "debpaste" :repo "alezost/debpaste.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for getting/posting/deleting pastes from paste.debian.net" :date (22608 24912) :url "https://github.com/alezost/debpaste.el") (debug-print :source "MELPA" :recipe (:package "debug-print" :fetcher github :repo "kenoss/debug-print" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A nice printf debugging environment by the way Gauche do" :date (21220 6080) :url "https://github.com/kenoss/debug-print") (decide :source "MELPA" :recipe (:package "decide" :fetcher github :repo "lifelike/decide-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rolling dice and other random things" :date (26380 13520) :url "https://github.com/lifelike/decide-mode") (decl :source "MELPA" :recipe (:package "decl" :fetcher github :repo "preetpalS/decl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library for organizing code declaratively" :date (25433 40912) :url "https://github.com/preetpalS/decl.el") (declutter :source "MELPA" :recipe (:package "declutter" :fetcher github :repo "sanel/declutter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read html content and (some) paywall sites without clutter" :date (25129 5456) :url "https://github.com/sanel/declutter") (decor :source "MELPA" :recipe (:package "decor" :fetcher github :repo "KeyWeeUsr/decor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modify visual decorations" :date (26305 3920) :url "https://github.com/KeyWeeUsr/decor") (dedicated :source "MELPA" :recipe (:package "dedicated" :fetcher github :repo "emacsorphanage/dedicated" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A very simple minor mode for dedicated buffers" :date (22110 2640) :url "https://github.com/emacsorphanage/dedicated") (dedukti-mode :source "MELPA" :recipe (:package "dedukti-mode" :fetcher github :repo "rafoo/dedukti-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Dedukti files" :date (23035 34640) :url "https://github.com/rafoo/dedukti-mode") (default-font-presets :source "MELPA" :recipe (:package "default-font-presets" :fetcher codeberg :repo "ideasman42/emacs-default-font-presets" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support selecting fonts from a list of presets" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-default-font-presets") (default-text-scale :source "MELPA" :recipe (:package "default-text-scale" :fetcher github :repo "purcell/default-text-scale" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily adjust the font size in all frames" :date (24067 52688) :url "https://github.com/purcell/default-text-scale") (defcapture :source "MELPA" :recipe (:package "defcapture" :fetcher github :repo "aaguilarss/defcapture" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A convenience macro for the Doct DSL" :date (25851 35664) :url "https://github.com/aaguilarss/defcapture") (deferred :source "MELPA" :recipe (:package "deferred" :repo "kiwanami/emacs-deferred" :fetcher github :files ("deferred.el")) :description "Simple asynchronous functions for emacs lisp" :date (22952 30928) :url "https://github.com/kiwanami/emacs-deferred") (define-it :source "MELPA" :recipe (:package "define-it" :repo "jcs-elpa/define-it" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define, translate, wiki the word" :date (26001 54864) :url "https://github.com/jcs-elpa/define-it") (define-scratch :source "MELPA" :recipe (:package "define-scratch" :fetcher github :repo "lassik/emacs-define-scratch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define new commands to make scratch buffers" :date (25504 53456) :url "https://github.com/lassik/emacs-define-scratch") (define-word :source "MELPA" :recipe (:package "define-word" :repo "abo-abo/define-word" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the definition of word at point" :date (25043 25552) :url "https://github.com/abo-abo/define-word") (defproject :source "MELPA" :recipe (:package "defproject" :fetcher github :repo "kotfic/defproject" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manager dir-locals and project specific variables" :date (22108 47312) :url "https://github.com/kotfic/defproject") (defrepeater :source "MELPA" :recipe (:package "defrepeater" :fetcher github :repo "alphapapa/defrepeater.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily make commands repeatable" :date (23431 2384) :url "https://github.com/alphapapa/defrepeater.el") (deft :source "MELPA" :recipe (:package "deft" :repo "jrblevin/deft" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly browse, filter, and edit plain text notes" :date (26191 44624) :url "https://github.com/jrblevin/deft") (delim-kill :source "MELPA" :recipe (:package "delim-kill" :repo "thomas11/delim-kill" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kill text between delimiters" :date (19440 20160) :url "https://github.com/thomas11/delim-kill") (demangle-mode :source "MELPA" :recipe (:package "demangle-mode" :fetcher github :repo "liblit/demangle-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically demangle C++, D, and Rust symbols" :date (24865 26960) :url "https://github.com/liblit/demangle-mode") (demap :source "MELPA" :recipe (:package "demap" :fetcher gitlab :repo "sawyerjgardner/demap.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Detachable minimap package" :date (25144 59216) :url "https://gitlab.com/sawyerjgardner/demap.el") (demo-it :source "MELPA" :recipe (:package "demo-it" :fetcher github :repo "howardabrams/demo-it" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create demonstrations" :date (25024 61136) :url "https://github.com/howardabrams/demo-it") (deno-fmt :source "MELPA" :recipe (:package "deno-fmt" :repo "rclarey/deno-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for using deno fmt on save" :date (25541 47824) :url "https://github.com/rclarey/deno-emacs") (deno-ts-mode :source "MELPA" :recipe (:package "deno-ts-mode" :fetcher github :repo "mgmarlow/deno-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Deno" :date (25855 32720) :url "https://github.com/mgmarlow/deno-ts-mode") (denote-citar-sections :source "MELPA" :recipe (:package "denote-citar-sections" :fetcher sourcehut :repo "swflint/denote-sections" :files ("denote-citar-sections.el")) :description "Universal Sidecar sections for citar-denote" :date (26211 29904) :url "https://git.sr.ht/~swflint/denote-sections") (denote-explore :source "MELPA" :recipe (:package "denote-explore" :repo "pprevos/denote-explore" :fetcher github :files (:defaults "*.R")) :description "Explore Denote files" :date (26314 18896) :url "https://github.com/pprevos/denote-explore") (denote-sections :source "MELPA" :recipe (:package "denote-sections" :fetcher sourcehut :repo "swflint/denote-sections" :files ("denote-sections.el")) :description "Universal Sidecar Sections for Denote" :date (26211 29904) :url "https://git.sr.ht/~swflint/denote-sections") (describe-hash :source "MELPA" :recipe (:package "describe-hash" :fetcher github :repo "Junker/describe-hash" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help function for examining a hash map" :date (24338 4432) :url "https://github.com/Junker/describe-hash") (describe-number :source "MELPA" :recipe (:package "describe-number" :fetcher github :repo "netromdk/describe-number" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Describe arbitrarily large number at point" :date (22069 11216) :url "https://github.com/netromdk/describe-number") (desktop+ :source "MELPA" :recipe (:package "desktop+" :fetcher github :repo "ffevotte/desktop-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Handle special buffers when saving & restoring sessions" :date (22640 1360) :url "https://github.com/ffevotte/desktop-plus") (desktop-environment :source "MELPA" :recipe (:package "desktop-environment" :fetcher github :repo "DamienCassou/desktop-environment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helps you control your GNU/Linux computer" :date (25843 41552) :url "https://github.com/DamienCassou/desktop-environment") (desktop-mail-user-agent :source "MELPA" :recipe (:package "desktop-mail-user-agent" :fetcher github :repo "lassik/emacs-desktop-mail-user-agent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Call OS default mail program to compose mail" :date (24740 10960) :url "https://github.com/lassik/emacs-desktop-mail-user-agent") (desktop-registry :source "MELPA" :recipe (:package "desktop-registry" :fetcher github :repo "ryuslash/desktop-registry" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep a central registry of desktop files" :date (21210 56640) :url "https://github.com/ryuslash/desktop-registry") (detached :source "MELPA" :recipe (:package "detached" :fetcher sourcehut :repo "niklaseklund/detached.el" :old-names (dtache) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package to launch, and manage, detached processes" :date (25477 8528) :url "https://git.sr.ht/~niklaseklund/detached.el") (detour :source "MELPA" :recipe (:package "detour" :repo "ska2342/detour" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Take a quick detour and return" :date (23541 51024) :url "https://github.com/ska2342/detour") (devdocs :source "MELPA" :recipe (:package "devdocs" :fetcher github :repo "astoff/devdocs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs viewer for DevDocs" :date (26369 43216) :url "https://github.com/astoff/devdocs.el") (devdocs-browser :source "MELPA" :recipe (:package "devdocs-browser" :fetcher github :repo "blahgeek/emacs-devdocs-browser" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse devdocs.io documents using EWW" :date (26334 4176) :url "https://github.com/blahgeek/emacs-devdocs-browser") (devil :source "MELPA" :recipe (:package "devil" :fetcher github :repo "susam/devil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for translating key sequences" :date (26009 48976) :url "https://github.com/susam/devil") (dfmt :source "MELPA" :recipe (:package "dfmt" :fetcher github :repo "qsimpleq/elisp-dfmt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Interface to D indenting/formatting tool dfmt" :date (22906 21584) :url "https://github.com/qsimpleq/elisp-dfmt") (dhall-mode :source "MELPA" :recipe (:package "dhall-mode" :repo "psibi/dhall-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the dhall configuration language" :date (25597 6608) :url "https://github.com/psibi/dhall-mode") (dianyou :source "MELPA" :recipe (:package "dianyou" :fetcher github :repo "redguardtoo/dianyou" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search and analyze mails in Gnus" :date (24748 5072) :url "https://github.com/redguardtoo/dianyou") (diary-manager :source "MELPA" :recipe (:package "diary-manager" :fetcher github :repo "radian-software/diary-manager" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple personal diary" :date (25396 46544) :url "https://github.com/radian-software/diary-manager") (dic-lookup-w3m :source "MELPA" :recipe (:package "dic-lookup-w3m" :fetcher github :repo "emacsattic/dic-lookup-w3m" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Look up dictionaries on the Internet" :date (23304 31056) :url "https://github.com/emacsattic/dic-lookup-w3m") (dictcc :source "MELPA" :recipe (:package "dictcc" :repo "martenlienen/dictcc.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Look up translations on dict.cc" :date (25519 20816) :url "https://github.com/martenlienen/dictcc.el") (dictionary :source "MELPA" :recipe (:package "dictionary" :repo "myrkr/dictionary-el" :fetcher github :files ("dictionary.el")) :description "Client for rfc2229 dictionary servers" :date (24436 61904) :url "https://github.com/myrkr/dictionary-el") (didyoumean :source "MELPA" :recipe (:package "didyoumean" :fetcher gitlab :repo "kisaragi-hiu/didyoumean.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Did you mean to open another file?" :date (26079 40656) :url "https://gitlab.com/kisaragi-hiu/didyoumean.el") (diff-ansi :source "MELPA" :recipe (:package "diff-ansi" :fetcher codeberg :repo "ideasman42/emacs-diff-ansi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display diff's using alternative diffing tools" :date (26305 3920) :url "https://codeberg.org/ideasman42/emacs-diff-ansi") (diff-at-point :source "MELPA" :recipe (:package "diff-at-point" :fetcher codeberg :repo "ideasman42/emacs-diff-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diff navigation" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-diff-at-point") (diff-hl :source "MELPA" :recipe (:package "diff-hl" :fetcher github :repo "dgutov/diff-hl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight uncommitted changes using VC" :date (26377 37328) :url "https://github.com/dgutov/diff-hl") (diffed :source "MELPA" :recipe (:package "diffed" :fetcher github :repo "ber-ro/diffed" :old-names (diffsync) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diffed is for recursive diff like Dired is for ls" :date (26224 41936) :url "https://github.com/ber-ro/diffed") (difflib :source "MELPA" :recipe (:package "difflib" :fetcher github :repo "dieggsy/difflib.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers for computing deltas between sequences" :date (24629 27856) :url "https://github.com/dieggsy/difflib.el") (diffpdf :source "MELPA" :recipe (:package "diffpdf" :repo "ShuguangSun/diffpdf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient diffpdf" :date (24790 17360) :url "https://github.com/ShuguangSun/diffpdf.el") (diffscuss-mode :source "MELPA" :recipe (:package "diffscuss-mode" :fetcher github :repo "tomheon/diffscuss" :files ("diffscuss-mode/*.el")) :description "Major mode for diffscuss files" :date (21564 12096) :url "https://github.com/tomheon/diffscuss") (difftastic :source "MELPA" :recipe (:package "difftastic" :fetcher github :repo "pkryger/difftastic.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wrapper for difftastic" :date (26401 19664) :url "https://github.com/pkryger/difftastic.el") (diffview :source "MELPA" :recipe (:package "diffview" :fetcher github :repo "mgalgs/diffview-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View diffs in side-by-side format" :date (25591 54224) :url "https://github.com/mgalgs/diffview-mode") (digistar-mode :source "MELPA" :recipe (:package "digistar-mode" :fetcher github :repo "retroj/digistar-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Digistar scripts" :date (26299 51536) :url "https://github.com/retroj/digistar-mode") (digit-groups :source "MELPA" :recipe (:package "digit-groups" :fetcher github :repo "adamsmd/digit-groups" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight place-value positions in numbers" :date (24241 54224) :url "https://github.com/adamsmd/digit-groups") (digitalocean :source "MELPA" :recipe (:package "digitalocean" :repo "olymk2/emacs-digitalocean" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create and manipulate digitalocean droplets" :date (23801 32464) :url "https://gitlab.com/olymk2/emacs-digitalocean") (digitalocean-helm :source "MELPA" :recipe (:package "digitalocean-helm" :repo "olymk2/emacs-digitalocean-helm" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create and manipulate digitalocean droplets" :date (23324 16336) :url "https://gitlab.com/olymk2/emacs-digitalocean-helm") (dilbert :source "MELPA" :recipe (:package "dilbert" :fetcher github :repo "DaniruKun/dilbert-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View Dilbert comics" :date (24981 27984) :url "https://github.com/DaniruKun/dilbert-el") (dim :source "MELPA" :recipe (:package "dim" :repo "alezost/dim.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change mode-line names of major/minor modes" :date (22452 53328) :url "https://github.com/alezost/dim.el") (dim-autoload :source "MELPA" :recipe (:package "dim-autoload" :repo "tarsius/dim-autoload" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dim or hide autoload cookie lines" :date (26287 60368) :url "https://github.com/tarsius/dim-autoload") (dime :source "MELPA" :recipe (:package "dime" :files ("dime*.el") :fetcher github :repo "dylan-lang/dylan-emacs-support") :description "Dylan interaction mode" :date (24773 8272) :url "https://github.com/dylan-lang/dylan-emacs-support") (diminish :source "MELPA" :recipe (:package "diminish" :fetcher github :repo "myrjola/diminish.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diminished modes are minor modes with no modeline display" :date (25370 22480) :url "https://github.com/myrjola/diminish.el") (diminish-buffer :source "MELPA" :recipe (:package "diminish-buffer" :repo "jcs-elpa/diminish-buffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diminish (hide) buffers from buffer-menu" :date (26356 31184) :url "https://github.com/jcs-elpa/diminish-buffer") (dimmer :source "MELPA" :recipe (:package "dimmer" :fetcher github :repo "gonewest818/dimmer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visually highlight the selected buffer" :date (25340 1360) :url "https://github.com/gonewest818/dimmer.el") (dionysos :source "MELPA" :recipe (:package "dionysos" :fetcher github :repo "nlamirault/dionysos" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dionysos, a music player for Emacs" :date (22442 17488) :url "https://github.com/nlamirault/dionysos") (dir-config :source "MELPA" :recipe (:package "dir-config" :fetcher github :repo "jamescherti/dir-config.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically find and evaluate .dir-config.el (Flexible dir-locals alternative)" :date (26311 42704) :url "https://github.com/jamescherti/dir-config.el") (dir-treeview :source "MELPA" :recipe (:package "dir-treeview" :repo "tilmanrassy/emacs-dir-treeview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A directory tree browser and simple file manager" :date (26394 46416) :url "https://github.com/tilmanrassy/emacs-dir-treeview") (dir-treeview-themes :source "MELPA" :recipe (:package "dir-treeview-themes" :repo "tilmanrassy/emacs-dir-treeview-themes" :fetcher github :files (:defaults "icons")) :description "Themes for dir-treeview" :date (25535 9040) :url "https://github.com/tilmanrassy/emacs-dir-treeview-themes") (dircmp :source "MELPA" :recipe (:package "dircmp" :fetcher github :repo "matthewlmcclure/dircmp-mode" :files ("*.el" "*.sh")) :description "Compare and sync directories" :date (21631 31184) :url "https://github.com/matthewlmcclure/dircmp-mode") (director :source "MELPA" :recipe (:package "director" :fetcher github :repo "bard/emacs-director" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simulate user sessions" :date (25577 21328) :url "https://github.com/bard/emacs-director") (dired-atool :source "MELPA" :recipe (:package "dired-atool" :repo "HKey/dired-atool" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pack/unpack files with atool on dired" :date (24820 38480) :url "https://github.com/HKey/dired-atool") (dired-auto-readme :source "MELPA" :recipe (:package "dired-auto-readme" :fetcher github :repo "amno1/dired-auto-readme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-display README file in Dired buffers" :date (26374 61136) :url "https://github.com/amno1/dired-auto-readme") (dired-avfs :source "MELPA" :recipe (:package "dired-avfs" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-avfs.el")) :description "AVFS support for dired" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-collapse :source "MELPA" :recipe (:package "dired-collapse" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-collapse.el")) :description "Collapse unique nested paths in dired listing" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-duplicates :source "MELPA" :recipe (:package "dired-duplicates" :fetcher codeberg :repo "hjudt/dired-duplicates" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find duplicate files locally and remotely" :date (26116 35024) :url "https://codeberg.org/hjudt/dired-duplicates") (dired-dups :source "MELPA" :recipe (:package "dired-dups" :fetcher github :repo "vapniks/dired-dups" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find duplicate files and display them in a dired buffer" :date (20898 27072) :url "https://github.com/vapniks/dired-dups") (dired-efap :source "MELPA" :recipe (:package "dired-efap" :fetcher github :repo "juan-leon/dired-efap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Filename At Point in a dired buffer" :date (25184 29776) :url "https://github.com/juan-leon/dired-efap") (dired-explorer :source "MELPA" :recipe (:package "dired-explorer" :repo "jidaikobo-shibata/dired-explorer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor-mode provides Explorer like select file at dired" :date (23320 19280) :url "https://github.com/jidaikobo-shibata/dired-explorer") (dired-fdclone :source "MELPA" :recipe (:package "dired-fdclone" :repo "knu/dired-fdclone.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dired functions and settings to mimic FDclone" :date (25957 848) :url "https://github.com/knu/dired-fdclone.el") (dired-filetype-face :source "MELPA" :recipe (:package "dired-filetype-face" :repo "jixiuf/dired-filetype-face" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set different faces for different filetypes in dired" :date (23441 38224) :url "https://github.com/jixiuf/dired-filetype-face") (dired-filter :source "MELPA" :recipe (:package "dired-filter" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-filter.el")) :description "Ibuffer-like filtering for dired" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-git :source "MELPA" :recipe (:package "dired-git" :fetcher github :repo "conao3/dired-git.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git integration for dired" :date (25354 34256) :url "https://github.com/conao3/dired-git.el") (dired-gitignore :source "MELPA" :recipe (:package "dired-gitignore" :fetcher github :repo "johannes-mueller/dired-gitignore.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to hide gitignored files in a dired buffer" :date (25851 35664) :url "https://github.com/johannes-mueller/dired-gitignore.el") (dired-hacks-utils :source "MELPA" :recipe (:package "dired-hacks-utils" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-hacks-utils.el")) :description "Utilities and helpers for dired-hacks collection" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-hide-dotfiles :source "MELPA" :recipe (:package "dired-hide-dotfiles" :fetcher github :repo "mattiasb/dired-hide-dotfiles" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hide dotfiles in dired" :date (26276 3664) :url "https://github.com/mattiasb/dired-hide-dotfiles") (dired-hist :source "MELPA" :recipe (:package "dired-hist" :fetcher github :repo "Anoncheg1/dired-hist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Traverse Dired buffer's history: back, forward" :date (26127 5328) :url "https://github.com/Anoncheg1/dired-hist") (dired-icon :source "MELPA" :recipe (:package "dired-icon" :repo "xuhdev/dired-icon" :fetcher gitlab :files (:defaults "get-icon-path-gtk3.py" "get-icon-path-macos.m")) :description "A minor mode to display a list of associated icons in dired buffers" :date (22701 64464) :url "https://gitlab.com/xuhdev/dired-icon") (dired-imenu :source "MELPA" :recipe (:package "dired-imenu" :fetcher github :repo "DamienCassou/dired-imenu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imenu binding for dired mode" :date (25844 62416) :url "https://github.com/DamienCassou/dired-imenu") (dired-k :source "MELPA" :recipe (:package "dired-k" :fetcher github :repo "emacsorphanage/dired-k" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight dired by size, date, git status" :date (24919 30416) :url "https://github.com/emacsorphanage/dired-k") (dired-launch :source "MELPA" :recipe (:package "dired-launch" :fetcher codeberg :repo "thomp/dired-launch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use dired as a launcher" :date (26293 12752) :url "https://codeberg.org/thomp/dired-launch") (dired-list :source "MELPA" :recipe (:package "dired-list" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-list.el")) :description "Create dired listings from sources" :date (26103 22992) :url "https://github.com/Fuco1/dired-hacks") (dired-lsi :source "MELPA" :recipe (:package "dired-lsi" :fetcher github :repo "conao3/dired-lsi.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add memo to directory and show it in dired" :date (24371 1744) :url "https://github.com/conao3/dired-lsi.el") (dired-narrow :source "MELPA" :recipe (:package "dired-narrow" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-narrow.el")) :description "Live-narrowing of search results for dired" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-open :source "MELPA" :recipe (:package "dired-open" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-open.el")) :description "Open files from dired using using custom actions" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-open-with :source "MELPA" :recipe (:package "dired-open-with" :fetcher github :repo "FrostyX/dired-open-with" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "And \"Open with\" dialog for Dired" :date (26352 34128) :url "https://github.com/FrostyX/dired-open-with") (dired-posframe :source "MELPA" :recipe (:package "dired-posframe" :fetcher github :repo "conao3/dired-posframe.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Peep dired items using posframe" :date (24377 40528) :url "https://github.com/conao3/dired-posframe.el") (dired-quick-sort :source "MELPA" :recipe (:package "dired-quick-sort" :repo "xuhdev/dired-quick-sort" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent quick sorting of dired buffers in various ways" :date (26287 60368) :url "https://gitlab.com/xuhdev/dired-quick-sort") (dired-rainbow :source "MELPA" :recipe (:package "dired-rainbow" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-rainbow.el")) :description "Extended file highlighting according to its type" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-ranger :source "MELPA" :recipe (:package "dired-ranger" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-ranger.el")) :description "Implementation of useful ranger features for dired" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-recent :source "MELPA" :recipe (:package "dired-recent" :fetcher github :repo "vifon/dired-recent.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dired visited paths history" :date (24922 6608) :url "https://github.com/vifon/dired-recent.el") (dired-rifle :source "MELPA" :recipe (:package "dired-rifle" :fetcher github :repo "vifon/dired-rifle.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Call rifle(1) from dired" :date (24655 51920) :url "https://github.com/vifon/dired-rifle.el") (dired-rmjunk :source "MELPA" :recipe (:package "dired-rmjunk" :fetcher sourcehut :repo "jakob/dired-rmjunk" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A home directory cleanup utility for Dired" :date (23962 21968) :url "https://git.sr.ht/~jakob/dired-rmjunk") (dired-rsync :source "MELPA" :recipe (:package "dired-rsync" :repo "stsquad/dired-rsync" :fetcher github :files ("dired-rsync.el")) :description "Allow rsync from dired buffers" :date (25827 53328) :url "https://github.com/stsquad/dired-rsync") (dired-rsync-transient :source "MELPA" :recipe (:package "dired-rsync-transient" :repo "stsquad/dired-rsync" :fetcher github :files ("dired-rsync-transient.el")) :description "Transient command for dired-rsync" :date (25776 26064) :url "https://github.com/stsquad/dired-rsync") (dired-sidebar :source "MELPA" :recipe (:package "dired-sidebar" :fetcher github :repo "jojojames/dired-sidebar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree browser leveraging dired" :date (26189 2896) :url "https://github.com/jojojames/dired-sidebar") (dired-subtree :source "MELPA" :recipe (:package "dired-subtree" :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-subtree.el")) :description "Insert subdirectories in a tree-like fashion" :date (26239 9296) :url "https://github.com/Fuco1/dired-hacks") (dired-toggle :source "MELPA" :recipe (:package "dired-toggle" :repo "fasheng/dired-toggle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show dired as sidebar and will not create new buffers when changing dir" :date (23813 23632) :url "https://github.com/fasheng/dired-toggle") (dired-toggle-sudo :source "MELPA" :recipe (:package "dired-toggle-sudo" :fetcher github :repo "renard/dired-toggle-sudo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse directory with sudo privileges" :date (25018 22352) :url "https://github.com/renard/dired-toggle-sudo") (dired-view-data :source "MELPA" :recipe (:package "dired-view-data" :repo "ShuguangSun/dired-view-data" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View data from dired via ESS and R" :date (26116 35024) :url "https://github.com/ShuguangSun/dired-view-data") (diredc :source "MELPA" :recipe (:package "diredc" :fetcher github :repo "Boruch-Baum/emacs-diredc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Midnight Commander features (plus) for dired" :date (26318 15952) :url "https://github.com/Boruch-Baum/emacs-diredc") (diredfl :source "MELPA" :recipe (:package "diredfl" :fetcher github :repo "purcell/diredfl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra font lock rules for a more colourful dired" :date (26334 4176) :url "https://github.com/purcell/diredfl") (diredful :source "MELPA" :recipe (:package "diredful" :fetcher github :repo "thamer/diredful" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Colorful file names in dired buffers" :date (22346 1744) :url "https://github.com/thamer/diredful") (direnv :source "MELPA" :recipe (:package "direnv" :fetcher github :repo "wbolster/emacs-direnv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Direnv integration" :date (26098 5072) :url "https://github.com/wbolster/emacs-direnv") (direx :source "MELPA" :recipe (:package "direx" :fetcher github :repo "emacsorphanage/direx" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple Directory Explorer" :date (25649 54736) :url "https://github.com/emacsorphanage/direx") (direx-grep :source "MELPA" :recipe (:package "direx-grep" :repo "aki2o/direx-grep" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grep node of direx.el using incremental search like anything.el/helm.el" :date (21363 52032) :url "https://github.com/aki2o/direx-grep") (dirtree :source "MELPA" :recipe (:package "dirtree" :fetcher github :repo "emacsorphanage/dirtree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Directory tree views" :date (21224 3136) :url "https://github.com/emacsorphanage/dirtree") (dirtree-prosjekt :source "MELPA" :recipe (:package "dirtree-prosjekt" :fetcher github :repo "abingham/prosjekt" :files ("prosjekt/ext/dirtree/dirtree-prosjekt.el")) :description "Dirtree integration for prosjekt" :date (21224 3136) :url "https://github.com/abingham/prosjekt") (dirvish :source "MELPA" :recipe (:package "dirvish" :fetcher github :repo "alexluigit/dirvish" :files (:defaults "extensions/*.el")) :description "A modern file manager based on dired mode" :date (25702 37328) :url "https://github.com/alexluigit/dirvish") (disable-mouse :source "MELPA" :recipe (:package "disable-mouse" :fetcher github :repo "purcell/disable-mouse" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Disable mouse commands globally" :date (26206 11984) :url "https://github.com/purcell/disable-mouse") (disaster :source "MELPA" :recipe (:package "disaster" :repo "jart/disaster" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Disassemble C, C++ or Fortran code under cursor" :date (26310 21840) :url "https://github.com/jart/disaster") (discourse :source "MELPA" :recipe (:package "discourse" :fetcher github :repo "lujun9972/discourse-api" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Discourse api" :date (22484 29776) :url "https://github.com/lujun9972/discourse-api") (discover :source "MELPA" :recipe (:package "discover" :fetcher github :repo "mickeynp/discover.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Discover more of Emacs" :date (21189 50496) :url "https://github.com/mickeynp/discover.el") (discover-clj-refactor :source "MELPA" :recipe (:package "discover-clj-refactor" :fetcher github :repo "maio/discover-clj-refactor.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds discover context menu for clj-refactor" :date (21781 50384) :url "https://github.com/maio/discover-clj-refactor.el") (discover-js2-refactor :source "MELPA" :recipe (:package "discover-js2-refactor" :repo "NicolasPetton/discover-js2-refactor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds discover context menu for js2-refactor" :date (21224 3136) :url "https://github.com/NicolasPetton/discover-js2-refactor") (discover-my-major :source "MELPA" :recipe (:package "discover-my-major" :fetcher git :url "https://framagit.org/steckerhalter/discover-my-major.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Discover key bindings and their meaning for the current Emacs major mode" :date (23318 63952) :url "https://framagit.org/steckerhalter/discover-my-major.git") (disk :source "MELPA" :recipe (:package "disk" :fetcher github :repo "kensanata/disk" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplified find-file, revert-file, save-buffer interface" :date (23052 43728) :url "https://github.com/kensanata/disk") (dispass :source "MELPA" :recipe (:package "dispass" :fetcher github :repo "ryuslash/dispass.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs wrapper for DisPass" :date (21229 21056) :url "https://github.com/ryuslash/dispass.el") (display-theme :source "MELPA" :recipe (:package "display-theme" :fetcher github :repo "kawabata/emacs-display-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display current theme(s) at mode-line" :date (21205 38720) :url "https://github.com/kawabata/emacs-display-theme") (display-wttr :source "MELPA" :recipe (:package "display-wttr" :fetcher sourcehut :repo "josegpt/display-wttr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display wttr(weather) in the mode line" :date (25441 35024) :url "https://git.sr.ht/~josegpt/display-wttr") (dispwatch :source "MELPA" :recipe (:package "dispwatch" :repo "mnp/dispwatch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Watch displays for configuration changes" :date (24641 19024) :url "https://github.com/mnp/dispwatch") (dist-file-mode :source "MELPA" :recipe (:package "dist-file-mode" :fetcher github :repo "emacs-php/dist-file-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dispatch major mode for *.dist files" :date (26009 48976) :url "https://github.com/emacs-php/dist-file-mode.el") (distel-completion-lib :source "MELPA" :recipe (:package "distel-completion-lib" :fetcher github :repo "sebastiw/distel-completion" :files ("distel-completion-lib.el")) :description "Completion library for Erlang/Distel" :date (23427 5328) :url "https://github.com/sebastiw/distel-completion") (distinguished-theme :source "MELPA" :recipe (:package "distinguished-theme" :repo "Lokaltog/distinguished-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark and elegant theme for emacs" :date (22128 32592) :url "https://github.com/Lokaltog/distinguished-theme") (dix :source "MELPA" :recipe (:package "dix" :fetcher github :repo "unhammer/dix" :files ("dix.el" "schemas.xml" "local-schemas.xml")) :description "Apertium XML editing minor mode" :date (25553 38992) :url "https://github.com/unhammer/dix") (dix-evil :source "MELPA" :recipe (:package "dix-evil" :fetcher github :repo "unhammer/dix" :files ("dix-evil.el")) :description "Optional evil-integration with dix.el" :date (23565 33360) :url "https://github.com/unhammer/dix") (dizzee :source "MELPA" :recipe (:package "dizzee" :fetcher github :repo "davidmiller/dizzee" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A more pleasant way to manage your project's subprocesses in Emacs" :date (23072 29008) :url "https://github.com/davidmiller/dizzee") (django-commands :source "MELPA" :recipe (:package "django-commands" :fetcher github :repo "muffinmad/emacs-django-commands" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run django commands" :date (25134 23376) :url "https://github.com/muffinmad/emacs-django-commands") (django-manage :source "MELPA" :recipe (:package "django-manage" :fetcher github :repo "gopar/django-manage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Django minor mode for commanding manage.py" :date (22454 8656) :url "https://github.com/gopar/django-manage") (django-mode :source "MELPA" :recipe (:package "django-mode" :fetcher github :repo "unrelentingtech/django-mode" :files ("*.el" (:exclude "*-snippets.el"))) :description "Major mode for Django web framework" :date (22817 65488) :url "https://github.com/unrelentingtech/django-mode") (django-snippets :source "MELPA" :recipe (:package "django-snippets" :fetcher github :repo "unrelentingtech/django-mode" :files ("django-snippets.el" "snippets")) :description "Yasnippets for django" :date (21183 11712) :url "https://github.com/unrelentingtech/django-mode") (django-theme :source "MELPA" :recipe (:package "django-theme" :fetcher github :repo "andrzejsliwa/django-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom face theme for Emacs" :date (21093 34752) :url "https://github.com/andrzejsliwa/django-theme.el") (djangonaut :source "MELPA" :recipe (:package "djangonaut" :fetcher github :repo "pythonic-emacs/djangonaut" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to interact with Django projects" :date (25826 32464) :url "https://github.com/pythonic-emacs/djangonaut") (djinni-mode :source "MELPA" :recipe (:package "djinni-mode" :repo "danielmartin/djinni-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for editing Djinni files" :date (23674 61136) :url "https://github.com/danielmartin/djinni-mode") (dkdo :source "MELPA" :recipe (:package "dkdo" :fetcher github :repo "davidkeegan/dkdo" :files ("*.el" "*.texi" "dir" "*.do")) :description "Do List major mode based on org-mode" :date (21118 37952) :url "https://github.com/davidkeegan/dkdo") (dkl :source "MELPA" :recipe (:package "dkl" :fetcher github :repo "flexibeast/dkl" :files (:defaults "keyboards" "layouts")) :description "Display keyboard layout" :date (22516 6224) :url "https://github.com/flexibeast/dkl") (dklrt :source "MELPA" :recipe (:package "dklrt" :fetcher github :repo "davidkeegan/dklrt" :files ("*.el" "*.texi" "dir" "*.py")) :description "Ledger Recurring Transactions" :date (21118 37952) :url "https://github.com/davidkeegan/dklrt") (dkmisc :source "MELPA" :recipe (:package "dkmisc" :fetcher github :repo "davidkeegan/dkmisc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Miscellaneous functions required by dk* packages" :date (21118 37952) :url "https://github.com/davidkeegan/dkmisc") (dmacro :source "MELPA" :recipe (:package "dmacro" :fetcher github :repo "emacs-jp/dmacro" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Repeated detection and execution of key operation" :date (26397 22608) :url "https://github.com/emacs-jp/dmacro") (dmenu :source "MELPA" :recipe (:package "dmenu" :fetcher github :repo "lujun9972/el-dmenu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simulate the dmenu command line program" :date (23924 6736) :url "https://github.com/lujun9972/el-dmenu") (dna-mode :source "MELPA" :recipe (:package "dna-mode" :fetcher github :repo "jhgorrell/dna-mode-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing dna sequences" :date (23954 27856) :url "https://github.com/jhgorrell/dna-mode-el") (doc-show-inline :source "MELPA" :recipe (:package "doc-show-inline" :fetcher codeberg :repo "ideasman42/emacs-doc-show-inline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show doc-strings found in external files" :date (26222 208) :url "https://codeberg.org/ideasman42/emacs-doc-show-inline") (docbook-snippets :source "MELPA" :recipe (:package "docbook-snippets" :repo "jhradilek/emacs-docbook-snippets" :fetcher github :files ("docbook-snippets.el" "snippets")) :description "Yasnippets for DocBook" :date (21924 9936) :url "https://github.com/jhradilek/emacs-docbook-snippets") (docean :source "MELPA" :recipe (:package "docean" :fetcher github :repo "emacsorphanage/docean" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with DigitalOcean from Emacs" :date (23317 43088) :url "https://github.com/emacsorphanage/docean") (docker :source "MELPA" :recipe (:package "docker" :fetcher github :repo "Silex/docker.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to Docker" :date (26344 40016) :url "https://github.com/Silex/docker.el") (docker-api :source "MELPA" :recipe (:package "docker-api" :fetcher github :repo "Silex/docker-api.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to the Docker API" :date (22340 49360) :url "https://github.com/Silex/docker-api.el") (docker-cli :source "MELPA" :recipe (:package "docker-cli" :repo "bosko/docker-cli" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running various commands in docker containers" :date (23783 2512) :url "https://github.com/bosko/docker-cli") (docker-compose-mode :source "MELPA" :recipe (:package "docker-compose-mode" :repo "meqif/docker-compose-mode" :fetcher github :files (:defaults (:exclude "docker-compose-mode-helpers.el"))) :description "Major mode for editing docker-compose files" :date (24394 49616) :url "https://github.com/meqif/docker-compose-mode") (docker-tramp :source "MELPA" :recipe (:package "docker-tramp" :fetcher github :repo "emacs-pe/docker-tramp.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP integration for docker containers for Emacs 28 and earlier" :date (25810 44240) :url "https://github.com/emacs-pe/docker-tramp.el") (dockerfile-mode :source "MELPA" :recipe (:package "dockerfile-mode" :fetcher github :repo "spotify/dockerfile-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Docker's Dockerfiles" :date (26340 42960) :url "https://github.com/spotify/dockerfile-mode") (docopt :source "MELPA" :recipe (:package "docopt" :fetcher github :repo "r0man/docopt.el" :files (:defaults "src/*.el")) :description "A Docopt implementation in Elisp" :date (25581 18384) :url "https://github.com/r0man/docopt.el") (docsim :source "MELPA" :recipe (:package "docsim" :fetcher github :repo "hrs/docsim.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search and compare notes with a local search engine" :date (26330 7120) :url "https://github.com/hrs/docsim.el") (docstr :source "MELPA" :recipe (:package "docstr" :fetcher github :repo "emacs-vs/docstr" :files (:defaults "langs/*.el")) :description "A document string minor mode" :date (26001 54864) :url "https://github.com/emacs-vs/docstr") (doct :source "MELPA" :recipe (:package "doct" :repo "progfolio/doct" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DOCT: Declarative Org capture templates" :date (25747 25808) :url "https://github.com/progfolio/doct") (doctest :source "MELPA" :recipe (:package "doctest" :fetcher github :repo "ag91/doctest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Doctests for Emacs Lisp" :date (26148 11472) :url "https://github.com/ag91/doctest") (dogears :source "MELPA" :recipe (:package "dogears" :fetcher github :repo "alphapapa/dogears.el" :files (:defaults (:exclude "helm-dogears.el"))) :description "Never lose your place again" :date (26136 20304) :url "https://github.com/alphapapa/dogears.el") (dokuwiki :source "MELPA" :recipe (:package "dokuwiki" :fetcher github :repo "accidentalrebel/emacs-dokuwiki" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Remote DokuWiki Pages Using XML-RPC" :date (23114 41296) :url "https://github.com/accidentalrebel/emacs-dokuwiki") (dokuwiki-mode :source "MELPA" :recipe (:package "dokuwiki-mode" :fetcher github :repo "kai2nenobu/emacs-dokuwiki-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for DokuWiki document" :date (22701 64464) :url "https://github.com/kai2nenobu/emacs-dokuwiki-mode") (dollaro :source "MELPA" :recipe (:package "dollaro" :repo "laynor/dollaro" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple text templates" :date (22098 11472) :url "https://github.com/laynor/dollaro") (doom :source "MELPA" :recipe (:package "doom" :fetcher github :repo "kensanata/doom" :old-names (dom) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DOM implementation and manipulation library" :date (23191 6224) :url "https://github.com/kensanata/doom") (doom-modeline :source "MELPA" :recipe (:package "doom-modeline" :repo "seagle0128/doom-modeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimal and modern mode-line" :date (26405 16720) :url "https://github.com/seagle0128/doom-modeline") (doom-modeline-now-playing :source "MELPA" :recipe (:package "doom-modeline-now-playing" :fetcher github :repo "elken/doom-modeline-now-playing" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Segment for Doom Modeline to show playerctl information" :date (26189 2896) :url "https://github.com/elken/doom-modeline-now-playing") (doom-themes :source "MELPA" :recipe (:package "doom-themes" :fetcher github :repo "doomemacs/themes" :files (:defaults "themes/*.el" "themes/*/*.el" "extensions/*.el")) :description "An opinionated pack of modern color-themes" :date (26334 4176) :url "https://github.com/doomemacs/themes") (dot-env :source "MELPA" :recipe (:package "dot-env" :fetcher github :repo "amodelbello/dot-env.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dotenv functionality" :date (25825 11600) :url "https://github.com/amodelbello/dot-env.el") (dot-mode :source "MELPA" :recipe (:package "dot-mode" :repo "wyrickre/dot-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to repeat typing or commands" :date (23205 39120) :url "https://github.com/wyrickre/dot-mode") (dotenv-mode :source "MELPA" :recipe (:package "dotenv-mode" :repo "preetpalS/emacs-dotenv-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for .env files" :date (23988 46032) :url "https://github.com/preetpalS/emacs-dotenv-mode") (dotnet :source "MELPA" :recipe (:package "dotnet" :repo "julienXX/dotnet.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with dotnet CLI tool" :date (24359 10576) :url "https://github.com/julienXX/dotnet.el") (double-saber :source "MELPA" :recipe (:package "double-saber" :fetcher github :repo "dp12/double-saber" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Narrow and delete in search buffers" :date (23703 61392) :url "https://github.com/dp12/double-saber") (download-region :source "MELPA" :recipe (:package "download-region" :fetcher github :repo "zk-phi/download-region" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple in-buffer download manager" :date (24642 39888) :url "https://github.com/zk-phi/download-region") (downplay-mode :source "MELPA" :recipe (:package "downplay-mode" :fetcher github :repo "tobias/downplay-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Focus attention on a region of the buffer" :date (22100 53200) :url "https://github.com/tobias/downplay-mode") (doxy-graph-mode :source "MELPA" :recipe (:package "doxy-graph-mode" :repo "gustavopuche/doxy-graph-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Links source code editing with doxygen call graphs" :date (24761 17104) :url "https://github.com/gustavopuche/doxy-graph-mode") (dpaste :source "MELPA" :recipe (:package "dpaste" :fetcher github :repo "gregnewman/dpaste.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for dpaste.com" :date (22231 21584) :url "https://github.com/gregnewman/dpaste.el") (dpaste_de :source "MELPA" :recipe (:package "dpaste_de" :fetcher github :repo "theju/dpaste_de.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs mode to paste to dpaste.de" :date (21084 19776) :url "https://github.com/theju/dpaste_de.el") (dpkg-dev-el :source "MELPA" :recipe (:package "dpkg-dev-el" :fetcher git :url "https://salsa.debian.org/emacsen-team/dpkg-dev-el.git" :old-names (debian-changelog-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Startup file for the elpa-dpkg-dev-el package" :date (26396 1744) :url "https://salsa.debian.org/emacsen-team/dpkg-dev-el.git") (dr-racket-like-unicode :source "MELPA" :recipe (:package "dr-racket-like-unicode" :fetcher github :repo "david-christiansen/dr-racket-like-unicode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DrRacket-style unicode input" :date (25330 51920) :url "https://github.com/david-christiansen/dr-racket-like-unicode") (dracula-theme :source "MELPA" :recipe (:package "dracula-theme" :fetcher github :repo "dracula/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dracula Theme" :date (26405 16720) :url "https://github.com/dracula/emacs") (draft-mode :source "MELPA" :recipe (:package "draft-mode" :fetcher gitlab :repo "gaudecker/draft-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rough drafting for Emacs" :date (22156 11984) :url "https://gitlab.com/gaudecker/draft-mode") (drag-stuff :source "MELPA" :recipe (:package "drag-stuff" :repo "rejeep/drag-stuff.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Drag stuff (lines, words, region, etc...) around" :date (22560 60240) :url "https://github.com/rejeep/drag-stuff.el") (drawille :source "MELPA" :recipe (:package "drawille" :repo "emacsattic/drawille" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Drawille implementation in elisp" :date (22291 63824) :url "https://github.com/emacsattic/drawille") (dream-theme :source "MELPA" :recipe (:package "dream-theme" :fetcher github :repo "djcb/dream-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Maximalist Nordic/Zenburn-inspired color theme" :date (24700 40400) :url "https://github.com/djcb/dream-theme") (drill-instructor-AZIK-force :source "MELPA" :recipe (:package "drill-instructor-AZIK-force" :repo "myuhe/drill-instructor-AZIK-force.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support AZIK input" :date (22098 11472) :url "https://github.com/myuhe/drill-instructor-AZIK-force.el") (drone :source "MELPA" :recipe (:package "drone" :repo "olymk2/emacs-drone" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch your drone test suite if drone.yml is present" :date (22558 18512) :url "https://github.com/olymk2/emacs-drone") (dropbox :source "MELPA" :recipe (:package "dropbox" :fetcher github :repo "pavpanchekha/dropbox.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs backend for dropbox" :date (25134 23376) :url "https://github.com/pavpanchekha/dropbox.el") (drupal-mode :source "MELPA" :recipe (:package "drupal-mode" :fetcher github :repo "arnested/drupal-mode" :files ("drupal-mode.el" "drush-make-mode.el" "drupal")) :description "Advanced minor mode for Drupal development" :date (26302 27728) :url "https://github.com/arnested/drupal-mode") (drupal-spell :source "MELPA" :recipe (:package "drupal-spell" :fetcher github :repo "arnested/drupal-spell" :files ("*.el" "dict")) :description "Aspell extra dictionary for Drupal" :date (20889 12096) :url "https://github.com/arnested/drupal-spell") (dslide :source "MELPA" :recipe (:package "dslide" :fetcher github :repo "positron-solutions/dslide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Domain Specific sLIDEs. A presentation framework" :date (26389 28496) :url "https://github.com/positron-solutions/dslide") (dsvn :source "MELPA" :recipe (:package "dsvn" :fetcher github :repo "emacsmirror/dsvn" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Subversion interface" :date (25441 35024) :url "https://github.com/emacsmirror/dsvn") (dtb-mode :source "MELPA" :recipe (:package "dtb-mode" :repo "schspa/dtb-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show device tree souce in dtbs" :date (24563 33232) :url "https://github.com/schspa/dtb-mode") (dtext-mode :source "MELPA" :recipe (:package "dtext-mode" :fetcher github :repo "JohnDevlopment/dtext-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Danbooru DText" :date (25946 30544) :url "https://github.com/JohnDevlopment/dtext-mode.el") (dtk :source "MELPA" :recipe (:package "dtk" :fetcher codeberg :repo "thomp/dtk" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access SWORD content via diatheke" :date (26378 58192) :url "https://codeberg.org/thomp/dtk") (dtrace-script-mode :source "MELPA" :recipe (:package "dtrace-script-mode" :fetcher github :repo "dotemacs/dtrace-script-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DTrace code editing commands for Emacs" :date (21726 26064) :url "https://github.com/dotemacs/dtrace-script-mode") (dtrt-indent :source "MELPA" :recipe (:package "dtrt-indent" :fetcher github :repo "jscheid/dtrt-indent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adapt to foreign indentation offsets" :date (26258 60112) :url "https://github.com/jscheid/dtrt-indent") (dts-mode :source "MELPA" :recipe (:package "dts-mode" :repo "bgamari/dts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Devicetree source code" :date (24999 57936) :url "https://github.com/bgamari/dts-mode") (ducpel :source "MELPA" :recipe (:package "ducpel" :fetcher github :repo "alezost/ducpel" :files ("*.el" "*.info" "dir" "levels")) :description "Logic game with sokoban elements" :date (21427 4928) :url "https://github.com/alezost/ducpel") (dumb-diff :source "MELPA" :recipe (:package "dumb-diff" :repo "jacktasia/dumb-diff" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast arbitrary diffs" :date (23085 41040) :url "https://github.com/jacktasia/dumb-diff") (dumb-jump :source "MELPA" :recipe (:package "dumb-jump" :repo "jacktasia/dumb-jump" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to definition for 50+ languages without configuration" :date (26233 56912) :url "https://github.com/jacktasia/dumb-jump") (dumber-jump :source "MELPA" :recipe (:package "dumber-jump" :fetcher github :repo "zenspider/dumber-jump" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to definition for 50+ languages without configuration" :date (26398 43472) :url "https://github.com/zenspider/dumber-jump") (dummyparens :source "MELPA" :recipe (:package "dummyparens" :fetcher github :repo "snosov1/dummyparens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parenthesis auto-pairing and wrapping" :date (21557 38848) :url "https://github.com/snosov1/dummyparens") (dune :source "MELPA" :recipe (:package "dune" :fetcher github :repo "ocaml/dune" :files ("editor-integration/emacs/*.el")) :description "Integration with the dune build system" :date (26156 5584) :url "https://github.com/ocaml/dune") (dune-format :source "MELPA" :recipe (:package "dune-format" :fetcher github :repo "purcell/emacs-dune-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat OCaml's dune files automatically" :date (24721 46544) :url "https://github.com/purcell/emacs-dune-format") (dup-transform :source "MELPA" :recipe (:package "dup-transform" :fetcher github :repo "garyo/dup-transform.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RGB/XY graphics code helpers" :date (26351 13264) :url "https://github.com/garyo/dup-transform.el") (duplexer :source "MELPA" :recipe (:package "duplexer" :fetcher github :repo "liuyinz/duplexer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Handle conflicts between local minor modes and reuse rules" :date (26399 64336) :url "https://github.com/liuyinz/duplexer.el") (duplicate-thing :source "MELPA" :recipe (:package "duplicate-thing" :repo "ongaeshi/duplicate-thing" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Duplicate current line & selection" :date (23512 50768) :url "https://github.com/ongaeshi/duplicate-thing") (dut-mode :source "MELPA" :recipe (:package "dut-mode" :repo "dut-lang/dut-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Dut programming language" :date (22907 42448) :url "https://github.com/dut-lang/dut-mode") (dw :source "MELPA" :recipe (:package "dw" :fetcher github :repo "integral-dw/dw-passphrase-generator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diceware passphrase generation commands" :date (24675 37200) :url "https://github.com/integral-dw/dw-passphrase-generator") (dwim-coder-mode :source "MELPA" :recipe (:package "dwim-coder-mode" :fetcher gitlab :repo "sadiq/dwim-coder-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DWIM keybindings for C, Python, Rust, and more" :date (26256 18384) :url "https://gitlab.com/sadiq/dwim-coder-mode") (dwim-shell-command :source "MELPA" :recipe (:package "dwim-shell-command" :fetcher github :repo "xenodium/dwim-shell-command" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shell commands with DWIM behaviour" :date (26355 10320) :url "https://github.com/xenodium/dwim-shell-command") (dyalog-mode :source "MELPA" :recipe (:package "dyalog-mode" :fetcher github :repo "harsman/dyalog-mode" :files (:defaults "Emacs.apl")) :description "Major mode for editing Dyalog APL source code" :date (25578 42192) :url "https://github.com/harsman/dyalog-mode") (dylan :source "MELPA" :recipe (:package "dylan" :files ("dylan*.el") :fetcher github :repo "dylan-lang/dylan-emacs-support" :old-names (dylan-mode)) :description "Dylan editing modes" :date (26405 16720) :url "https://github.com/dylan-lang/dylan-emacs-support") (dynamic-fonts :source "MELPA" :recipe (:package "dynamic-fonts" :repo "rolandwalker/dynamic-fonts" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set faces based on available fonts" :date (21465 20160) :url "https://github.com/rolandwalker/dynamic-fonts") (dynamic-graphs :source "MELPA" :recipe (:package "dynamic-graphs" :fetcher github :repo "zellerin/dynamic-graphs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manipulation with graphviz graphs" :date (24887 53968) :url "https://github.com/zellerin/dynamic-graphs") (dynamic-ruler :source "MELPA" :recipe (:package "dynamic-ruler" :fetcher github :repo "rocher/dynamic-ruler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displays a dynamic ruler at point" :date (25954 24656) :url "https://github.com/rocher/dynamic-ruler") (dynamic-spaces :source "MELPA" :recipe (:package "dynamic-spaces" :repo "Lindydancer/dynamic-spaces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "When editing, don't move text separated by spaces" :date (23026 19664) :url "https://github.com/Lindydancer/dynamic-spaces") (dynaring :source "MELPA" :recipe (:package "dynaring" :repo "countvajhula/dynaring" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dynamically sized ring structure" :date (26220 44880) :url "https://github.com/countvajhula/dynaring") (dyncloze :source "MELPA" :recipe (:package "dyncloze" :repo "ahyatt/emacs-dyncloze" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Language alternatives self-testing" :date (24811 23504) :url "https://github.com/ahyatt/emacs-dyncloze") (e2ansi :source "MELPA" :recipe (:package "e2ansi" :repo "Lindydancer/e2ansi" :fetcher github :files (:defaults "bin")) :description "Syntax highlighting support for `less', powered by Emacs" :date (23773 53072) :url "https://github.com/Lindydancer/e2ansi") (e2wm :source "MELPA" :recipe (:package "e2wm" :repo "kiwanami/emacs-window-manager" :fetcher github :files ("e2wm.el" "e2wm-vcs.el")) :description "Simple window manager for emacs" :date (26407 58448) :url "https://github.com/kiwanami/emacs-window-manager") (e2wm-R :source "MELPA" :recipe (:package "e2wm-R" :fetcher github :repo "emacsattic/e2wm-R" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some e2wm plugin and perspective for GNU R" :date (22146 62544) :url "https://github.com/emacsattic/e2wm-R") (e2wm-bookmark :source "MELPA" :recipe (:package "e2wm-bookmark" :fetcher github :repo "myuhe/e2wm-bookmark.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmark plugin for e2wm.el" :date (22098 11472) :url "https://github.com/myuhe/e2wm-bookmark.el") (e2wm-direx :source "MELPA" :recipe (:package "e2wm-direx" :repo "aki2o/e2wm-direx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plugin of e2wm.el for direx.el" :date (24361 52304) :url "https://github.com/aki2o/e2wm-direx") (e2wm-pkgex4pl :source "MELPA" :recipe (:package "e2wm-pkgex4pl" :fetcher github :repo "aki2o/e2wm-pkgex4pl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plugin of e2wm.el for package explorer of Perl" :date (21376 64064) :url "https://github.com/aki2o/e2wm-pkgex4pl") (e2wm-svg-clock :source "MELPA" :recipe (:package "e2wm-svg-clock" :repo "myuhe/e2wm-svg-clock.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "E2wm plugin for svg-clock" :date (21674 64336) :url "https://github.com/myuhe/e2wm-svg-clock.el") (e2wm-sww :source "MELPA" :recipe (:package "e2wm-sww" :repo "aki2o/e2wm-sww" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plugin of e2wm.el to switch plugin quickly" :date (24361 52304) :url "https://github.com/aki2o/e2wm-sww") (e2wm-term :source "MELPA" :recipe (:package "e2wm-term" :repo "aki2o/e2wm-term" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perspective of e2wm.el for work in terminal" :date (26009 48976) :url "https://github.com/aki2o/e2wm-term") (eacl :source "MELPA" :recipe (:package "eacl" :fetcher github :repo "redguardtoo/eacl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete lines by grepping project" :date (25230 39120) :url "https://github.com/redguardtoo/eacl") (earl :source "MELPA" :recipe (:package "earl" :fetcher github :repo "axelf4/earl" :old-names (derl) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Erlang distribution protocol implementation" :date (26388 7632) :url "https://github.com/axelf4/earl") (earthfile-mode :source "MELPA" :recipe (:package "earthfile-mode" :fetcher github :repo "earthly/earthly-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Earthly file" :date (25810 44240) :url "https://github.com/earthly/earthly-emacs") (eask :source "MELPA" :recipe (:package "eask" :repo "emacs-eask/eask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Core Eask APIs, for Eask CLI development" :date (26405 16720) :url "https://github.com/emacs-eask/eask") (eask-mode :source "MELPA" :recipe (:package "eask-mode" :repo "emacs-eask/eask-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Eask files" :date (26001 54864) :url "https://github.com/emacs-eask/eask-mode") (easky :source "MELPA" :recipe (:package "easky" :repo "emacs-eask/easky" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control the Eask command-line interface" :date (26211 29904) :url "https://github.com/emacs-eask/easky") (easy-after-load :source "MELPA" :recipe (:package "easy-after-load" :fetcher github :repo "pd/easy-after-load" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eval-after-load for all files in a directory" :date (22932 45648) :url "https://github.com/pd/easy-after-load") (easy-escape :source "MELPA" :recipe (:package "easy-escape" :repo "cpitclaudel/easy-escape" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve readability of escape characters in regular expressions" :date (24899 45136) :url "https://github.com/cpitclaudel/easy-escape") (easy-hugo :source "MELPA" :recipe (:package "easy-hugo" :repo "masasam/emacs-easy-hugo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write blogs made with hugo by markdown or org-mode" :date (26038 49232) :url "https://github.com/masasam/emacs-easy-hugo") (easy-jekyll :source "MELPA" :recipe (:package "easy-jekyll" :repo "masasam/emacs-easy-jekyll" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode managing jekyll blogs" :date (25019 43216) :url "https://github.com/masasam/emacs-easy-jekyll") (easy-kill :source "MELPA" :recipe (:package "easy-kill" :fetcher github :repo "leoliu/easy-kill" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kill & mark things easily" :date (25210 53840) :url "https://github.com/leoliu/easy-kill") (easy-kill-extras :source "MELPA" :recipe (:package "easy-kill-extras" :fetcher github :repo "knu/easy-kill-extras.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra functions for easy-kill" :date (26029 34256) :url "https://github.com/knu/easy-kill-extras.el") (easy-repeat :source "MELPA" :recipe (:package "easy-repeat" :repo "xuchunyang/easy-repeat.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Repeat easily" :date (21846 24144) :url "https://github.com/xuchunyang/easy-repeat.el") (easysession :source "MELPA" :recipe (:package "easysession" :fetcher github :repo "jamescherti/easysession.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily persist and restore your editing sessions" :date (26380 13520) :url "https://github.com/jamescherti/easysession.el") (ebdb-mua-sidecar :source "MELPA" :recipe (:package "ebdb-mua-sidecar" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("ebdb-mua-sidecar.el")) :description "EBDB Integration for Universal Sidecar" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (ebf :source "MELPA" :recipe (:package "ebf" :fetcher github :repo "rexim/ebf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brainfuck language transpiler to Emacs Lisp" :date (24630 48720) :url "https://github.com/rexim/ebf") (ebib :source "MELPA" :recipe (:package "ebib" :fetcher github :repo "joostkremers/ebib" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A BibTeX database manager" :date (26399 64336) :url "https://github.com/joostkremers/ebib") (ebib-sidecar :source "MELPA" :recipe (:package "ebib-sidecar" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("ebib-sidecar.el")) :description "Sidecar to show formatted reference of current Ebib Entry" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (ebnf-mode :source "MELPA" :recipe (:package "ebnf-mode" :repo "nverno/ebnf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for EBNF files" :date (25908 15312) :url "https://github.com/nverno/ebnf-mode") (ebuku :source "MELPA" :recipe (:package "ebuku" :fetcher github :repo "flexibeast/ebuku" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to the buku Web bookmark manager" :date (26349 57936) :url "https://github.com/flexibeast/ebuku") (ecb :source "MELPA" :recipe (:package "ecb" :fetcher github :repo "ecb-home/ecb" :files ("*.el" "ecb-images" "ecb2" "ecb.texi")) :description "A code browser for Emacs" :date (22906 21584) :url "https://github.com/ecb-home/ecb") (echo-bar :source "MELPA" :recipe (:package "echo-bar" :fetcher github :repo "benzanol/echo-bar.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Turn the echo area into a custom status bar" :date (26202 14928) :url "https://github.com/benzanol/echo-bar.el") (eclim :source "MELPA" :recipe (:package "eclim" :fetcher github :repo "emacs-eclim/emacs-eclim" :files ("eclim*.el" "snippets") :old-names (emacs-eclim)) :description "An interface to the Eclipse IDE" :date (23523 21072) :url "https://github.com/emacs-eclim/emacs-eclim") (eclipse-theme :source "MELPA" :recipe (:package "eclipse-theme" :repo "abo-abo/eclipse-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme based on Eclipse circa 2010" :date (24011 7504) :url "https://github.com/abo-abo/eclipse-theme") (ecukes :source "MELPA" :recipe (:package "ecukes" :fetcher github :repo "ecukes/ecukes" :files ("ecukes*" "templates" "bin" "reporters")) :description "Cucumber for Emacs" :date (26099 25936) :url "https://github.com/ecukes/ecukes") (edbi :source "MELPA" :recipe (:package "edbi" :fetcher github :repo "kiwanami/emacs-edbi" :files ("edbi*.el" "edbi*.pl")) :description "Emacs Database Interface" :date (22222 6608) :url "https://github.com/kiwanami/emacs-edbi") (ede-compdb :source "MELPA" :recipe (:package "ede-compdb" :repo "randomphrase/ede-compdb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for compilation database projects in EDE" :date (22013 52432) :url "https://github.com/randomphrase/ede-compdb") (ede-php-autoload :source "MELPA" :recipe (:package "ede-php-autoload" :fetcher github :repo "emacs-php/ede-php-autoload" :files (:defaults "ede-php-autoload")) :description "Simple EDE PHP Project" :date (25860 50640) :url "https://github.com/emacs-php/ede-php-autoload") (ede-php-autoload-composer-installers :source "MELPA" :recipe (:package "ede-php-autoload-composer-installers" :fetcher github :repo "xendk/ede-php-autoload-composer-installers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Composer installers support for ede-php-autoload" :date (22699 22736) :url "https://github.com/xendk/ede-php-autoload-composer-installers") (ede-php-autoload-drupal :source "MELPA" :recipe (:package "ede-php-autoload-drupal" :fetcher github :repo "xendk/ede-php-autoload-drupal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Drupal support for ede-php-autoload" :date (22729 43856) :url "https://github.com/xendk/ede-php-autoload-drupal") (edebug-inline-result :source "MELPA" :recipe (:package "edebug-inline-result" :url "https://repo.or.cz/edebug-inline-result.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show Edebug result inline" :date (25343 63952) :url "https://repo.or.cz/edebug-inline-result.git") (edebug-x :source "MELPA" :recipe (:package "edebug-x" :fetcher github :repo "ScottyB/edebug-x" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for Edebug" :date (20924 51136) :url "https://github.com/ScottyB/edebug-x") (edit-as-format :source "MELPA" :recipe (:package "edit-as-format" :repo "etern/edit-as-format" :fetcher github :files (:defaults "filters")) :description "Edit document as other format" :date (25106 43984) :url "https://github.com/etern/edit-as-format") (edit-at-point :source "MELPA" :recipe (:package "edit-at-point" :fetcher github :repo "emacsattic/edit-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit(copy,cut..) current things(word,symbol..) under cursor" :date (23970 16080) :url "https://github.com/emacsattic/edit-at-point") (edit-chrome-textarea :source "MELPA" :recipe (:package "edit-chrome-textarea" :fetcher github :repo "xuchunyang/edit-chrome-textarea.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Chrome Textarea" :date (24185 9040) :url "https://github.com/xuchunyang/edit-chrome-textarea.el") (edit-color-stamp :source "MELPA" :recipe (:package "edit-color-stamp" :repo "sabof/edit-color-stamp" :fetcher github :files ("*.el" ("qt_color_picker" "qt_color_picker/*.pro" "qt_color_picker/*.cpp"))) :description "Edit a hex color stamp, using a QT or the internal color picker" :date (20901 3264) :url "https://github.com/sabof/edit-color-stamp") (edit-indirect :source "MELPA" :recipe (:package "edit-indirect" :fetcher github :repo "Fanael/edit-indirect" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit regions in separate buffers" :date (26037 28368) :url "https://github.com/Fanael/edit-indirect") (edit-indirect-region-latex :source "MELPA" :recipe (:package "edit-indirect-region-latex" :fetcher github :repo "niitsuma/edit-indirect-region-latex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit LaTeX regions in separate buffers, e.g. for English grammar checks" :date (22588 39632) :url "https://github.com/niitsuma/edit-indirect-region-latex") (edit-list :source "MELPA" :recipe (:package "edit-list" :fetcher github :repo "emacsmirror/edit-list" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit a single list" :date (19619 39616) :url "https://github.com/emacsmirror/edit-list") (edit-server :source "MELPA" :recipe (:package "edit-server" :repo "stsquad/emacs_chrome" :fetcher github :files ("servers/edit-server.el")) :description "Server that responds to edit requests from Chrome" :date (25369 1616) :url "https://github.com/stsquad/emacs_chrome") (edit-server-htmlize :source "MELPA" :recipe (:package "edit-server-htmlize" :repo "frobtech/edit-server-htmlize" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "(de)HTMLization hooks for edit-server.el" :date (20820 41280) :url "https://github.com/frobtech/edit-server-htmlize") (editorconfig :source "MELPA" :recipe (:package "editorconfig" :fetcher github :repo "editorconfig/editorconfig-emacs" :old-names (editorconfig-core editorconfig-fnmatch) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "EditorConfig Emacs Plugin" :date (26397 22608) :url "https://github.com/editorconfig/editorconfig-emacs") (editorconfig-charset-extras :source "MELPA" :recipe (:package "editorconfig-charset-extras" :fetcher github :repo "10sr/editorconfig-charset-extras-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra EditorConfig Charset Support" :date (23183 12112) :url "https://github.com/10sr/editorconfig-charset-extras-el") (editorconfig-custom-majormode :source "MELPA" :recipe (:package "editorconfig-custom-majormode" :fetcher github :repo "10sr/editorconfig-custom-majormode-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Decide major-mode and mmm-mode from EditorConfig" :date (23412 37968) :url "https://github.com/10sr/editorconfig-custom-majormode-el") (editorconfig-domain-specific :source "MELPA" :recipe (:package "editorconfig-domain-specific" :fetcher github :repo "lassik/editorconfig-emacs-domain-specific" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply brace style and other \"domain-specific\" EditorConfig properties" :date (23276 51664) :url "https://github.com/lassik/editorconfig-emacs-domain-specific") (editorconfig-generate :source "MELPA" :recipe (:package "editorconfig-generate" :fetcher github :repo "10sr/editorconfig-generate-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate .editorconfig" :date (23768 35152) :url "https://github.com/10sr/editorconfig-generate-el") (edn :source "MELPA" :recipe (:package "edn" :fetcher github :repo "expez/edn.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for reading and writing the edn data format from elisp" :date (22208 60112) :url "https://github.com/expez/edn.el") (ednc :source "MELPA" :recipe (:package "ednc" :repo "sinic/ednc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Desktop Notification Center" :date (26053 16592) :url "https://github.com/sinic/ednc") (edts :source "MELPA" :recipe (:package "edts" :fetcher github :repo "sebastiw/edts" :files ("*.el" "COPYING" "COPYING.LESSER" "Makefile" "README.md" "start" "start.bat" "edts-escript" "edts-release.config" "rebar.config" ("config" "config/*") ("elisp/edts" "elisp/edts/*.el") ("lib/edts" "lib/edts/Makefile") ("lib/edts/include" "lib/edts/include/*") ("lib/edts/priv" "lib/edts/priv/dispatch.conf") ("lib/edts/src" "lib/edts/src/*") ("lib/edts_debug" "lib/edts_debug/*.el" "lib/edts_debug/Makefile") ("lib/edts_debug/src" "lib/edts_debug/src/*") ("lib/edts_dialyzer" "lib/edts_dialyzer/*.el" "lib/edts_dialyzer/Makefile") ("lib/edts_dialyzer/src" "lib/edts_dialyzer/src/*") ("lib/edts_xref" "lib/edts_xref/*.el" "lib/edts_xref/Makefile") ("lib/edts_xref/src" "lib/edts_xref/src/*") (:exclude "elisp/edts/*-test.el" "lib/edts_debug/*-test.el" "lib/edts_dialyzer/*-test.el" "lib/edts_xref/*-test.el"))) :description "Erlang Development Tool Suite" :date (25873 62672) :url "https://github.com/sebastiw/edts") (edwina :source "MELPA" :recipe (:package "edwina" :fetcher gitlab :repo "ajgrf/edwina" :old-names (edwin) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamic window manager" :date (25486 23504) :url "https://gitlab.com/ajgrf/edwina") (efar :source "MELPA" :recipe (:package "efar" :fetcher github :repo "suntsov/efar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "FAR-like file manager" :date (25581 18384) :url "https://github.com/suntsov/efar") (eff :source "MELPA" :recipe (:package "eff" :fetcher github :repo "oxidase/eff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show symbols in Executable File Formats" :date (26251 464) :url "https://github.com/oxidase/eff") (efire :source "MELPA" :recipe (:package "efire" :fetcher github :repo "joaotavora/efire" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use campfire from Emacs" :date (22038 55632) :url "https://github.com/joaotavora/efire") (eg :source "MELPA" :recipe (:package "eg" :fetcher github :repo "davep/eg.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Norton Guide reader" :date (22949 54736) :url "https://github.com/davep/eg.el") (egalgo :source "MELPA" :recipe (:package "egalgo" :repo "ROCKTAKEY/egalgo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Genetic algorithm" :date (24964 18896) :url "https://github.com/ROCKTAKEY/egalgo") (egg :source "MELPA" :recipe (:package "egg" :repo "byplayer/egg" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Got Git - Emacs interface to Git" :date (23547 3408) :url "https://github.com/byplayer/egg") (egg-timer :source "MELPA" :recipe (:package "egg-timer" :fetcher github :repo "wpcarro/egg-timer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commonly used intervals for setting timers while working" :date (24137 44368) :url "https://github.com/wpcarro/egg-timer.el") (egison-mode :source "MELPA" :recipe (:package "egison-mode" :fetcher github :repo "egison/egison" :files ("elisp/*.el")) :description "Egison editing mode" :date (25020 64080) :url "https://github.com/egison/egison") (eglot-fsharp :source "MELPA" :recipe (:package "eglot-fsharp" :fetcher github :repo "fsharp/emacs-fsharp-mode" :files ("eglot-fsharp.el")) :description "Fsharp-mode eglot integration" :date (26178 32592) :url "https://github.com/fsharp/emacs-fsharp-mode") (eglot-java :source "MELPA" :recipe (:package "eglot-java" :repo "yveszoundi/eglot-java" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Java extension for the eglot LSP client" :date (26161 23504) :url "https://github.com/yveszoundi/eglot-java") (eglot-jl :source "MELPA" :recipe (:package "eglot-jl" :fetcher github :repo "non-Jedi/eglot-jl" :files (:defaults "*.jl" "*.toml")) :description "Julia support for eglot" :date (26336 45904) :url "https://github.com/non-Jedi/eglot-jl") (eglot-luau :source "MELPA" :recipe (:package "eglot-luau" :fetcher github :repo "kennethloeffler/eglot-luau" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Luau language server integration for eglot" :date (26405 16720) :url "https://github.com/kennethloeffler/eglot-luau") (eglot-signature-eldoc-talkative :source "MELPA" :recipe (:package "eglot-signature-eldoc-talkative" :fetcher codeberg :repo "mekeor/eglot-signature-eldoc-talkative" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make Eglot make ElDoc echo docs" :date (26235 12240) :url "https://codeberg.org/mekeor/eglot-signature-eldoc-talkative") (eglot-tempel :source "MELPA" :recipe (:package "eglot-tempel" :fetcher github :repo "fejfighter/eglot-tempel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use tempel to expand snippets from eglot" :date (26377 37328) :url "https://github.com/fejfighter/eglot-tempel") (ego :source "MELPA" :recipe (:package "ego" :repo "emacs-china/EGO" :fetcher github :files (:defaults "themes")) :description "A static site generator based on org mode, forked from org-page" :date (24359 10576) :url "https://github.com/emacs-china/EGO") (eide :source "MELPA" :recipe (:package "eide" :fetcher git :url "https://forge.tedomum.net/hjuvi/eide.git" :files ("src/*.el" "src/themes/*.el")) :description "IDE interface" :date (26029 34256) :url "https://forge.tedomum.net/hjuvi/eide.git") (eimp :source "MELPA" :recipe (:package "eimp" :fetcher github :repo "nicferrier/eimp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Image Manipulation Package" :date (20537 11968) :url "https://github.com/nicferrier/eimp") (ein :source "MELPA" :recipe (:package "ein" :repo "millejoh/emacs-ipython-notebook" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jupyter notebook client" :date (25834 26576) :url "https://github.com/millejoh/emacs-ipython-notebook") (eink-theme :source "MELPA" :recipe (:package "eink-theme" :fetcher github :repo "maio/eink-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "E Ink color theme" :date (23659 7376) :url "https://github.com/maio/eink-emacs") (ejc-sql :source "MELPA" :recipe (:package "ejc-sql" :repo "kostafey/ejc-sql" :files (:defaults "project.clj" "src" "snippets") :fetcher gitlab) :description "Emacs SQL client uses Clojure JDBC" :date (26008 28112) :url "https://gitlab.com/kostafey/ejc-sql") (ejson-mode :source "MELPA" :recipe (:package "ejson-mode" :repo "dantecatalfamo/ejson-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing ejson files" :date (23858 12112) :url "https://github.com/dantecatalfamo/ejson-mode") (ekg :source "MELPA" :recipe (:package "ekg" :fetcher github :repo "ahyatt/ekg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A system for recording and linking information" :date (26394 46416) :url "https://github.com/ahyatt/ekg") (el-autoyas :source "MELPA" :recipe (:package "el-autoyas" :fetcher github :repo "mattfidler/el-autoyas.el" :files (:defaults (:exclude "*.texi"))) :description "Automatically create Emacs-Lisp Yasnippets" :date (20567 33088) :url "https://github.com/mattfidler/el-autoyas.el") (el-fetch :source "MELPA" :recipe (:package "el-fetch" :fetcher gitlab :repo "xgqt/emacs-el-fetch" :files ("src/el-fetch/*")) :description "Show system information in Neofetch-like style (eg CPU, RAM)" :date (25750 2000) :url "https://gitlab.com/xgqt/emacs-el-fetch") (el-fly-indent-mode :source "MELPA" :recipe (:package "el-fly-indent-mode" :repo "jiahaoli95/el-fly-indent-mode.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Indent Emacs Lisp on the fly" :date (23259 42576) :url "https://github.com/jiahaoli95/el-fly-indent-mode.el") (el-get :source "MELPA" :recipe (:package "el-get" :fetcher github :repo "dimitri/el-get" :files (:defaults "methods" ("recipes" "recipes/el-get.rcp"))) :description "Manage the external elisp bits and pieces you depend upon" :date (26131 2384) :url "https://github.com/dimitri/el-get") (el-init :source "MELPA" :recipe (:package "el-init" :fetcher github :repo "HKey/el-init" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A loader inspired by init-loader" :date (21942 39888) :url "https://github.com/HKey/el-init") (el-init-viewer :source "MELPA" :recipe (:package "el-init-viewer" :fetcher github :repo "HKey/el-init-viewer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Record viewer for el-init" :date (21748 53072) :url "https://github.com/HKey/el-init-viewer") (el-mock :source "MELPA" :recipe (:package "el-mock" :repo "rejeep/el-mock.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tiny Mock and Stub framework in Emacs Lisp" :date (25270 9680) :url "https://github.com/rejeep/el-mock.el") (el-patch :source "MELPA" :recipe (:package "el-patch" :fetcher github :repo "radian-software/el-patch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Future-proof your Elisp" :date (25950 27600) :url "https://github.com/radian-software/el-patch") (el-secretario :source "MELPA" :recipe (:package "el-secretario" :fetcher sourcehut :repo "zetagon/el-secretario" :files ("el-secretario.el" "el-secretario-source.el" "el-secretario-message.el" "el-secretario-function.el")) :description "Unify all your inboxes with the Emacs secretary" :date (25191 3024) :url "https://git.sr.ht/~zetagon/el-secretario") (el-secretario-elfeed :source "MELPA" :recipe (:package "el-secretario-elfeed" :fetcher sourcehut :repo "zetagon/el-secretario" :files ("el-secretario-elfeed.el")) :description "Add notmuch email inboxes to el-secretario" :date (25015 46160) :url "https://git.sr.ht/~zetagon/el-secretario") (el-secretario-mu4e :source "MELPA" :recipe (:package "el-secretario-mu4e" :fetcher sourcehut :repo "zetagon/el-secretario" :files ("el-secretario-mu4e.el")) :description "Add mu4e inboxes to el-secretario" :date (25185 50640) :url "https://git.sr.ht/~zetagon/el-secretario") (el-secretario-notmuch :source "MELPA" :recipe (:package "el-secretario-notmuch" :fetcher sourcehut :repo "zetagon/el-secretario" :files ("el-secretario-notmuch.el")) :description "Add notmuch inboxes to el-secretario" :date (25193 44752) :url "https://git.sr.ht/~zetagon/el-secretario") (el-secretario-org :source "MELPA" :recipe (:package "el-secretario-org" :fetcher sourcehut :repo "zetagon/el-secretario" :files ("el-secretario-org.el" "el-secretario-space.el")) :description "Create inboxes out of org-mode files for el-secretario" :date (25171 17744) :url "https://git.sr.ht/~zetagon/el-secretario") (el-spec :source "MELPA" :recipe (:package "el-spec" :fetcher github :repo "uk-ar/el-spec" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ruby's rspec like syntax test frame work" :date (20607 3648) :url "https://github.com/uk-ar/el-spec") (el-spice :source "MELPA" :recipe (:package "el-spice" :repo "vedang/el-spice" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra spice for emacs lisp programming" :date (24452 50128) :url "https://github.com/vedang/el-spice") (el-sprunge :source "MELPA" :recipe (:package "el-sprunge" :fetcher github :repo "eschulte/el-sprunge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command line paste server with Emacs highlighting" :date (24169 20816) :url "https://github.com/eschulte/el-sprunge") (el-spy :source "MELPA" :recipe (:package "el-spy" :fetcher github :repo "uk-ar/el-spy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mocking framework for Emacs lisp. It also support spy, proxy" :date (21179 14656) :url "https://github.com/uk-ar/el-spy") (el-who :source "MELPA" :recipe (:package "el-who" :repo "alejandrogallo/el-who" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A s-expression html DSL library compatible with cl-who" :date (26343 19152) :url "https://github.com/alejandrogallo/el-who") (el2markdown :source "MELPA" :recipe (:package "el2markdown" :repo "Lindydancer/el2markdown" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert commentary section of elisp files to markdown" :date (22869 27216) :url "https://github.com/Lindydancer/el2markdown") (el2org :source "MELPA" :recipe (:package "el2org" :repo "tumashu/el2org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert elisp file to org file" :date (24204 59856) :url "https://github.com/tumashu/el2org") (elbank :source "MELPA" :recipe (:package "elbank" :fetcher github :repo "NicolasPetton/elbank" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Personal finances reporting application" :date (23210 57040) :url "https://github.com/NicolasPetton/elbank") (elcontext :source "MELPA" :recipe (:package "elcontext" :repo "rollacaster/elcontext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create context specific actions" :date (24568 51152) :url "https://github.com/rollacaster/elcontext") (elcord :source "MELPA" :recipe (:package "elcord" :fetcher github :repo "Mstrodl/elcord" :files (:defaults "stdpipe.ps1")) :description "Allows you to integrate Rich Presence from Discord" :date (26315 39760) :url "https://github.com/Mstrodl/elcord") (elcouch :source "MELPA" :recipe (:package "elcouch" :fetcher github :repo "DamienCassou/elcouch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View and manipulate CouchDB databases" :date (25843 41552) :url "https://github.com/DamienCassou/elcouch") (elcute :source "MELPA" :recipe (:package "elcute" :fetcher codeberg :repo "vilij/slurpbarf-elcute" :files ("elcute.el")) :description "Commands for marking and killing lines electrically" :date (26348 37072) :url "https://codeberg.org/vilij/slurpbarf-elcute") (eldev :source "MELPA" :recipe (:package "eldev" :fetcher github :repo "emacs-eldev/eldev" :files (:defaults ("bin" "bin/*") (:exclude "bin/*.in" "bin/*.part"))) :description "Elisp development tool" :date (26406 37584) :url "https://github.com/emacs-eldev/eldev") (eldoc-box :source "MELPA" :recipe (:package "eldoc-box" :repo "casouri/eldoc-box" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display documentation in childframe" :date (26396 1744) :url "https://github.com/casouri/eldoc-box") (eldoc-cmake :source "MELPA" :recipe (:package "eldoc-cmake" :fetcher github :repo "ikirill/eldoc-cmake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldoc support for CMake" :date (23736 58704) :url "https://github.com/ikirill/eldoc-cmake") (eldoc-eask :source "MELPA" :recipe (:package "eldoc-eask" :repo "emacs-eask/eldoc-eask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldoc support for Eask-file" :date (26001 54864) :url "https://github.com/emacs-eask/eldoc-eask") (eldoc-eval :source "MELPA" :recipe (:package "eldoc-eval" :fetcher github :repo "thierryvolpiatto/eldoc-eval" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable eldoc support when minibuffer is in use" :date (25046 1744) :url "https://github.com/thierryvolpiatto/eldoc-eval") (eldoc-overlay :source "MELPA" :recipe (:package "eldoc-overlay" :fetcher git :url "https://repo.or.cz/eldoc-overlay.git" :old-names (eldoc-overlay-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display eldoc with contextual documentation overlay" :date (25645 57680) :url "https://repo.or.cz/eldoc-overlay.git") (eldoc-stan :source "MELPA" :recipe (:package "eldoc-stan" :fetcher github :repo "stan-dev/stan-mode" :files ("eldoc-stan/*.el" "eldoc-stan/eldoc-stan.json" (:exclude "eldoc-stan/test-*.el" "eldoc-stan/eldoc-stan-create-json.el"))) :description "Eldoc support for stan functions" :date (24995 60880) :url "https://github.com/stan-dev/stan-mode") (eldoc-toml :source "MELPA" :recipe (:package "eldoc-toml" :repo "it-is-wednesday/eldoc-toml" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TOML table name at point for ElDoc" :date (24951 6864) :url "https://github.com/it-is-wednesday/eldoc-toml") (electric-case :source "MELPA" :recipe (:package "electric-case" :fetcher github :repo "zk-phi/electric-case" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert camelCase, snake_case words without \"Shift\"ing" :date (21808 8912) :url "https://github.com/zk-phi/electric-case") (electric-cursor :source "MELPA" :recipe (:package "electric-cursor" :fetcher codeberg :repo "acdw/electric-cursor.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change cursor automatically depending on mode" :date (25506 8784) :url "https://codeberg.org/acdw/electric-cursor.el") (electric-operator :source "MELPA" :recipe (:package "electric-operator" :repo "davidshepherd7/electric-operator" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically add spaces around operators" :date (25897 45008) :url "https://github.com/davidshepherd7/electric-operator") (electric-ospl :source "MELPA" :recipe (:package "electric-ospl" :fetcher sourcehut :repo "swflint/electric-ospl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Electric OSPL Mode" :date (26157 26448) :url "https://git.sr.ht/~swflint/electric-ospl-mode") (electric-spacing :source "MELPA" :recipe (:package "electric-spacing" :fetcher github :repo "xwl/electric-spacing" :old-names (smart-operator) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert operators with surrounding spaces smartly" :date (25105 23120) :url "https://github.com/xwl/electric-spacing") (elegant-agenda-mode :source "MELPA" :recipe (:package "elegant-agenda-mode" :repo "justinbarclay/elegant-agenda-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elegant theme for your org-agenda" :date (24576 45264) :url "https://github.com/justinbarclay/elegant-agenda-mode") (elein :source "MELPA" :recipe (:package "elein" :fetcher github :repo "remvee/elein" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running leiningen commands from emacs" :date (20248 30272) :url "https://github.com/remvee/elein") (elescope :source "MELPA" :recipe (:package "elescope" :fetcher github :repo "freesteph/elescope" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Seach and clone projects from the minibuffer" :date (24650 34000) :url "https://github.com/freesteph/elescope") (elf-mode :source "MELPA" :recipe (:package "elf-mode" :repo "abo-abo/elf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show symbols in binaries" :date (22521 24144) :url "https://github.com/abo-abo/elf-mode") (elfeed :source "MELPA" :recipe (:package "elfeed" :repo "skeeto/elfeed" :fetcher github :files (:defaults "README.md")) :description "An Emacs Atom/RSS feed reader" :date (26278 45392) :url "https://github.com/skeeto/elfeed") (elfeed-autotag :source "MELPA" :recipe (:package "elfeed-autotag" :repo "paulelms/elfeed-autotag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy auto-tagging for elfeed" :date (24765 14160) :url "https://github.com/paulelms/elfeed-autotag") (elfeed-curate :source "MELPA" :recipe (:package "elfeed-curate" :repo "rnadler/elfeed-curate" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elfeed entry curation" :date (25945 9680) :url "https://github.com/rnadler/elfeed-curate") (elfeed-dashboard :source "MELPA" :recipe (:package "elfeed-dashboard" :repo "manojm321/elfeed-dashboard" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An extensible frontend for elfeed using org-mode" :date (24831 8784) :url "https://github.com/manojm321/elfeed-dashboard") (elfeed-goodies :source "MELPA" :recipe (:package "elfeed-goodies" :repo "jeetelongname/elfeed-goodies" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elfeed goodies" :date (25401 64464) :url "https://github.com/jeetelongname/elfeed-goodies") (elfeed-org :source "MELPA" :recipe (:package "elfeed-org" :repo "remyhonig/elfeed-org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configure elfeed with one or more org-mode files" :date (25891 6224) :url "https://github.com/remyhonig/elfeed-org") (elfeed-protocol :source "MELPA" :recipe (:package "elfeed-protocol" :repo "fasheng/elfeed-protocol" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide fever/newsblur/owncloud/ttrss protocols for elfeed" :date (26310 21840) :url "https://github.com/fasheng/elfeed-protocol") (elfeed-score :source "MELPA" :recipe (:package "elfeed-score" :fetcher github :repo "sp1ff/elfeed-score" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnus-style scoring for Elfeed" :date (26254 63056) :url "https://github.com/sp1ff/elfeed-score") (elfeed-summary :source "MELPA" :recipe (:package "elfeed-summary" :fetcher github :repo "SqrtMinusOne/elfeed-summary" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Feed summary interface for elfeed" :date (26360 28240) :url "https://github.com/SqrtMinusOne/elfeed-summary") (elfeed-tube :source "MELPA" :recipe (:package "elfeed-tube" :repo "karthink/elfeed-tube" :fetcher github :files ("elfeed-tube.el" "elfeed-tube-utils.el" "elfeed-tube-fill.el")) :description "YouTube integration for Elfeed" :date (26208 53712) :url "https://github.com/karthink/elfeed-tube") (elfeed-tube-mpv :source "MELPA" :recipe (:package "elfeed-tube-mpv" :repo "karthink/elfeed-tube" :fetcher github :files ("elfeed-tube-mpv.el")) :description "Control mpv from Elfeed" :date (25727 40528) :url "https://github.com/karthink/elfeed-tube") (elfeed-web :source "MELPA" :recipe (:package "elfeed-web" :repo "skeeto/elfeed" :fetcher github :files ("web/*")) :description "Web interface to Elfeed" :date (26278 45392) :url "https://github.com/skeeto/elfeed") (elfeed-webkit :source "MELPA" :recipe (:package "elfeed-webkit" :fetcher github :repo "fritzgrabo/elfeed-webkit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Render elfeed entries in embedded webkit widgets" :date (25723 43472) :url "https://github.com/fritzgrabo/elfeed-webkit") (elforth :source "MELPA" :recipe (:package "elforth" :fetcher github :repo "lassik/elforth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Do you have what it takes to hack Emacs Lisp in Forth?" :date (24744 8016) :url "https://github.com/lassik/elforth") (elgrep :source "MELPA" :recipe (:package "elgrep" :repo "TobiasZawada/elgrep" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Searching files for regular expressions" :date (25817 17488) :url "https://github.com/TobiasZawada/elgrep") (elhome :source "MELPA" :recipe (:package "elhome" :fetcher github :repo "demyanrogozhin/elhome" :files ("elhome.el" "startup")) :description "A framework for a \"home\" Emacs configuration" :date (22542 30288) :url "https://github.com/demyanrogozhin/elhome") (elisa :source "MELPA" :recipe (:package "elisa" :repo "s-kostyaev/elisa" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Lisp Information System Assistant" :date (26396 1744) :url "https://github.com/s-kostyaev/elisa") (elisp-autofmt :source "MELPA" :recipe (:package "elisp-autofmt" :fetcher codeberg :repo "ideasman42/emacs-elisp-autofmt" :files (:defaults "elisp-autofmt.py" "elisp-autofmt.overrides.json")) :description "Emacs lisp auto-format" :date (26282 42448) :url "https://codeberg.org/ideasman42/emacs-elisp-autofmt") (elisp-def :source "MELPA" :recipe (:package "elisp-def" :repo "Wilfred/elisp-def" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Macro-aware go-to-definition for elisp" :date (25840 65360) :url "https://github.com/Wilfred/elisp-def") (elisp-demos :source "MELPA" :recipe (:package "elisp-demos" :fetcher github :repo "xuchunyang/elisp-demos" :files (:defaults "*.org")) :description "Elisp API Demos" :date (26037 28368) :url "https://github.com/xuchunyang/elisp-demos") (elisp-depend :source "MELPA" :recipe (:package "elisp-depend" :fetcher github :repo "emacsorphanage/elisp-depend" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parse depend libraries of elisp file" :date (23703 61392) :url "https://github.com/emacsorphanage/elisp-depend") (elisp-depmap :source "MELPA" :recipe (:package "elisp-depmap" :fetcher gitlab :repo "mtekman/elisp-depmap.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate an elisp dependency map in graphviz" :date (25109 20176) :url "https://gitlab.com/mtekman/elisp-depmap.el") (elisp-docstring-mode :source "MELPA" :recipe (:package "elisp-docstring-mode" :fetcher github :repo "Fuco1/elisp-docstring-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing elisp docstrings" :date (22713 55632) :url "https://github.com/Fuco1/elisp-docstring-mode") (elisp-format :source "MELPA" :recipe (:package "elisp-format" :fetcher github :repo "Yuki-Inoue/elisp-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format elisp code" :date (22318 22352) :url "https://github.com/Yuki-Inoue/elisp-format") (elisp-lint :source "MELPA" :recipe (:package "elisp-lint" :fetcher github :repo "gonewest818/elisp-lint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic linting for Emacs Lisp" :date (25181 53584) :url "https://github.com/gonewest818/elisp-lint") (elisp-refs :source "MELPA" :recipe (:package "elisp-refs" :repo "Wilfred/elisp-refs" :fetcher github :files (:defaults (:exclude "elisp-refs-bench.el"))) :description "Find callers of elisp functions or macros" :date (25866 3024) :url "https://github.com/Wilfred/elisp-refs") (elisp-sandbox :source "MELPA" :recipe (:package "elisp-sandbox" :fetcher github :repo "joelmccracken/elisp-sandbox" :files ("elisp-sandbox.el")) :description "Evaluate EmacsLisp expressions in a sandbox" :date (21126 32064) :url "https://github.com/joelmccracken/elisp-sandbox") (elisp-slime-nav :source "MELPA" :recipe (:package "elisp-slime-nav" :repo "purcell/elisp-slime-nav" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make M-. and M-, work in elisp like they do in slime" :date (24728 19792) :url "https://github.com/purcell/elisp-slime-nav") (elixir-mode :source "MELPA" :recipe (:package "elixir-mode" :fetcher github :repo "elixir-editors/emacs-elixir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Elixir files" :date (25752 43728) :url "https://github.com/elixir-editors/emacs-elixir") (elixir-ts-mode :source "MELPA" :recipe (:package "elixir-ts-mode" :repo "wkirschbaum/elixir-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Elixir with tree-sitter support" :date (26307 45648) :url "https://github.com/wkirschbaum/elixir-ts-mode") (elixir-yasnippets :source "MELPA" :recipe (:package "elixir-yasnippets" :repo "hisea/elixir-yasnippets" :fetcher github :files (:defaults "snippets")) :description "Yasnippets for Elixir" :date (21808 8912) :url "https://github.com/hisea/elixir-yasnippets") (ellama :source "MELPA" :recipe (:package "ellama" :repo "s-kostyaev/ellama" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tool for interacting with LLMs" :date (26394 46416) :url "https://github.com/s-kostyaev/ellama") (ellocate :source "MELPA" :recipe (:package "ellocate" :fetcher github :repo "walseb/ellocate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The locate command reimplemented in Emacs Lisp" :date (24090 14160) :url "https://github.com/walseb/ellocate") (elm-mode :source "MELPA" :recipe (:package "elm-mode" :fetcher github :repo "jcollard/elm-mode" :files (:defaults "elm.tags")) :description "Major mode for Elm" :date (25616 57424) :url "https://github.com/jcollard/elm-mode") (elm-test-runner :source "MELPA" :recipe (:package "elm-test-runner" :fetcher github :repo "juanedi/elm-test-runner" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced support for running elm-test" :date (25846 17744) :url "https://github.com/juanedi/elm-test-runner") (elm-yasnippets :source "MELPA" :recipe (:package "elm-yasnippets" :fetcher github :repo "abingham/elm-yasnippets" :files (:defaults "snippets")) :description "Yasnippets for Elm" :date (22269 36816) :url "https://github.com/abingham/elm-yasnippets") (elmacro :source "MELPA" :recipe (:package "elmacro" :fetcher github :repo "Silex/elmacro" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert keyboard macros to emacs lisp" :date (24816 41424) :url "https://github.com/Silex/elmacro") (elmine :source "MELPA" :recipe (:package "elmine" :fetcher github :repo "leoc/elmine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Redmine API access via elisp" :date (24260 18640) :url "https://github.com/leoc/elmine") (elmpd :source "MELPA" :recipe (:package "elmpd" :fetcher github :repo "sp1ff/elmpd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A tight, ergonomic, async client library for mpd" :date (26324 54736) :url "https://github.com/sp1ff/elmpd") (elnode :source "MELPA" :recipe (:package "elnode" :fetcher github :repo "jcaw/elnode" :branch "melpa" :files ("default*" "elnode*")) :description "The Emacs webserver" :date (23834 29776) :url "https://github.com/jcaw/elnode") (elog :source "MELPA" :recipe (:package "elog" :fetcher github :repo "lujun9972/elog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Logging library extended from logito" :date (25487 44368) :url "https://github.com/lujun9972/elog") (elogcat :source "MELPA" :recipe (:package "elogcat" :fetcher github :repo "youngker/elogcat.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Logcat interface" :date (25547 208) :url "https://github.com/youngker/elogcat.el") (eloud :source "MELPA" :recipe (:package "eloud" :fetcher github :repo "smythp/eloud" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lightweight, interactive screen reader" :date (23839 47696) :url "https://github.com/smythp/eloud") (elpa-audit :source "MELPA" :recipe (:package "elpa-audit" :fetcher github :repo "purcell/elpa-audit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Handy functions for inspecting and comparing package archives" :date (21576 3264) :url "https://github.com/purcell/elpa-audit") (elpa-clone :source "MELPA" :recipe (:package "elpa-clone" :fetcher github :repo "dochang/elpa-clone" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clone ELPA archive" :date (26079 40656) :url "https://github.com/dochang/elpa-clone") (elpa-deploy :source "MELPA" :recipe (:package "elpa-deploy" :fetcher github :repo "oitofelix/elpa-deploy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ELPA deployment library" :date (23982 7248) :url "https://github.com/oitofelix/elpa-deploy") (elpa-mirror :source "MELPA" :recipe (:package "elpa-mirror" :fetcher github :repo "redguardtoo/elpa-mirror" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create local package repository from installed packages" :date (26137 41168) :url "https://github.com/redguardtoo/elpa-mirror") (elpher :source "MELPA" :recipe (:package "elpher" :url "https://thelambdalab.xyz/git/elpher.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A friendly gopher and gemini client" :date (26390 49360) :url "https://thelambdalab.xyz/git/elpher.git") (elpl :source "MELPA" :recipe (:package "elpl" :fetcher github :repo "twlz0ne/elpl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Lisp REPL" :date (25152 53328) :url "https://github.com/twlz0ne/elpl") (elpy :source "MELPA" :recipe (:package "elpy" :fetcher github :repo "jorgenschaefer/elpy" :files ("*.el" "NEWS.rst" "snippets" "elpy")) :description "Emacs Python Development Environment" :date (26012 25168) :url "https://github.com/jorgenschaefer/elpy") (elpygen :source "MELPA" :recipe (:package "elpygen" :repo "vkazanov/elpygen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate a Python function/method using a symbol under point" :date (23104 5456) :url "https://github.com/vkazanov/elpygen") (elquery :source "MELPA" :recipe (:package "elquery" :fetcher github :repo "AdamNiederer/elquery" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The HTML library for elisp" :date (25156 50384) :url "https://github.com/AdamNiederer/elquery") (elsa :source "MELPA" :recipe (:package "elsa" :fetcher github :repo "emacs-elsa/Elsa" :files (:defaults "bin")) :description "Emacs Lisp Static Analyser" :date (25746 4944) :url "https://github.com/emacs-elsa/Elsa") (elscreen :source "MELPA" :recipe (:package "elscreen" :repo "knu/elscreen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs window session manager" :date (23483 50512) :url "https://github.com/knu/elscreen") (elscreen-buffer-group :source "MELPA" :recipe (:package "elscreen-buffer-group" :fetcher github :repo "jeffgran/elscreen-buffer-group" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elscreen buffer group" :date (24086 17104) :url "https://github.com/jeffgran/elscreen-buffer-group") (elscreen-fr :source "MELPA" :recipe (:package "elscreen-fr" :fetcher github :repo "rocher/elscreen-fr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use frame title as screen tab" :date (22496 20944) :url "https://github.com/rocher/elscreen-fr") (elscreen-mew :source "MELPA" :recipe (:package "elscreen-mew" :repo "masutaka/elscreen-mew" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ElScreen Add-On for Mew" :date (22313 4432) :url "https://github.com/masutaka/elscreen-mew") (elscreen-multi-term :source "MELPA" :recipe (:package "elscreen-multi-term" :repo "wamei/elscreen-multi-term" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi term for elscreen" :date (24216 51024) :url "https://github.com/wamei/elscreen-multi-term") (elscreen-separate-buffer-list :source "MELPA" :recipe (:package "elscreen-separate-buffer-list" :repo "wamei/elscreen-separate-buffer-list" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Separate buffer list manager for elscreen" :date (24364 28496) :url "https://github.com/wamei/elscreen-separate-buffer-list") (elscreen-tab :source "MELPA" :recipe (:package "elscreen-tab" :fetcher github :repo "aki-s/elscreen-tab" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to display tabs of elscreen in a dedicated buffer" :date (25811 65104) :url "https://github.com/aki-s/elscreen-tab") (elune-theme :source "MELPA" :recipe (:package "elune-theme" :repo "hsnovel/elune-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elune theme" :date (25891 6224) :url "https://github.com/hsnovel/elune-theme") (elvish-mode :source "MELPA" :recipe (:package "elvish-mode" :repo "ALSchwalm/elvish-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Defines a major mode for Elvish" :date (23403 22992) :url "https://github.com/ALSchwalm/elvish-mode") (elwm :source "MELPA" :recipe (:package "elwm" :fetcher github :repo "Fuco1/elwm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic window manager for emacs" :date (21968 63952) :url "https://github.com/Fuco1/elwm") (elx :source "MELPA" :recipe (:package "elx" :repo "emacscollective/elx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extract information from Emacs Lisp libraries" :date (26287 60368) :url "https://github.com/emacscollective/elx") (elysium :source "MELPA" :recipe (:package "elysium" :fetcher github :repo "lanceberge/elysium" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically apply LLM-created code-suggestions" :date (26405 16720) :url "https://github.com/lanceberge/elysium") (emacs-everywhere :source "MELPA" :recipe (:package "emacs-everywhere" :repo "tecosaur/emacs-everywhere" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "System-wide popup windows for quick edits" :date (26171 59344) :url "https://github.com/tecosaur/emacs-everywhere") (emacsc :source "MELPA" :recipe (:package "emacsc" :fetcher github :repo "knu/emacsc" :files (:defaults "bin")) :description "Helper for emacsc(1)" :date (26239 9296) :url "https://github.com/knu/emacsc") (emacsist-view :source "MELPA" :recipe (:package "emacsist-view" :fetcher github :repo "lujun9972/emacsist-view" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for viewing emacsist.com" :date (22302 34128) :url "https://github.com/lujun9972/emacsist-view") (emacsql :source "MELPA" :recipe (:package "emacsql" :fetcher github :repo "magit/emacsql" :files (:defaults "README.md" "sqlite")) :description "High-level SQL database front-end" :date (26330 7120) :url "https://github.com/magit/emacsql") (emacsql-mysql :source "MELPA" :recipe (:package "emacsql-mysql" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-mysql.el")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsql-pg :source "MELPA" :recipe (:package "emacsql-pg" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-pg.el")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsql-psql :source "MELPA" :recipe (:package "emacsql-psql" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-psql.el")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsql-sqlite :source "MELPA" :recipe (:package "emacsql-sqlite" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-sqlite.el" "sqlite")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsql-sqlite-builtin :source "MELPA" :recipe (:package "emacsql-sqlite-builtin" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-sqlite-builtin.el")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsql-sqlite-module :source "MELPA" :recipe (:package "emacsql-sqlite-module" :fetcher github :repo "magit/emacsql" :branch "legacy-stubs" :files ("emacsql-sqlite-module.el")) :description "This package has been merged into emacsql" :date (26314 18896) :url "https://github.com/magit/emacsql") (emacsshot :source "MELPA" :recipe (:package "emacsshot" :fetcher gitlab :repo "marcowahl/emacsshot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Snapshot a frame or window from within" :date (24041 28624) :url "https://gitlab.com/marcowahl/emacsshot") (emamux :source "MELPA" :recipe (:package "emamux" :repo "emacsorphanage/emamux" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with tmux" :date (24173 17872) :url "https://github.com/emacsorphanage/emamux") (emamux-ruby-test :source "MELPA" :recipe (:package "emamux-ruby-test" :fetcher github :repo "emacsorphanage/emamux-ruby-test" :files ("emamux-ruby-test.el")) :description "Ruby test with emamux" :date (20999 60736) :url "https://github.com/emacsorphanage/emamux-ruby-test") (emaps :source "MELPA" :recipe (:package "emaps" :fetcher github :repo "GuiltyDolphin/emaps" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for working with keymaps" :date (24244 30416) :url "https://github.com/GuiltyDolphin/emaps") (embark :source "MELPA" :recipe (:package "embark" :repo "oantolin/embark" :fetcher github :files ("embark.el" "embark-org.el" "embark.texi")) :description "Conveniently act on minibuffer completions" :date (26365 46160) :url "https://github.com/oantolin/embark") (embark-consult :source "MELPA" :recipe (:package "embark-consult" :repo "oantolin/embark" :fetcher github :files ("embark-consult.el")) :description "Consult integration for Embark" :date (26347 16208) :url "https://github.com/oantolin/embark") (embark-org-roam :source "MELPA" :recipe (:package "embark-org-roam" :fetcher github :repo "bramadams/embark-org-roam" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Embark export buffer for org roam nodes" :date (26083 37712) :url "https://github.com/bramadams/embark-org-roam") (embark-vc :source "MELPA" :recipe (:package "embark-vc" :fetcher github :repo "elken/embark-vc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Embark actions for various version control integrations" :date (25576 464) :url "https://github.com/elken/embark-vc") (ember-mode :source "MELPA" :recipe (:package "ember-mode" :fetcher github :repo "madnificent/ember-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ember navigation mode for emacs" :date (26169 17616) :url "https://github.com/madnificent/ember-mode") (ember-yasnippets :source "MELPA" :recipe (:package "ember-yasnippets" :fetcher github :repo "ronco/ember-yasnippets.el" :files (:defaults "snippets")) :description "Snippets for Ember.js development" :date (22342 4688) :url "https://github.com/ronco/ember-yasnippets.el") (embrace :source "MELPA" :recipe (:package "embrace" :repo "cute-jumper/embrace.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add/Change/Delete pairs based on `expand-region'" :date (25914 54096) :url "https://github.com/cute-jumper/embrace.el") (emidje :source "MELPA" :recipe (:package "emidje" :fetcher github :repo "nubank/emidje" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Test runner and report viewer for Midje" :date (23645 60880) :url "https://github.com/nubank/emidje") (emmet-mode :source "MELPA" :recipe (:package "emmet-mode" :fetcher github :repo "smihica/emmet-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unofficial Emmet's support for emacs" :date (26223 21072) :url "https://github.com/smihica/emmet-mode") (emms :source "MELPA" :recipe (:package "emms" :fetcher git :url "https://git.savannah.gnu.org/git/emms.git" :files (:defaults (:exclude "doc/fdl.texi" "doc/gpl.texi"))) :description "The Emacs Multimedia System" :date (26382 55248) :url "https://git.savannah.gnu.org/git/emms.git") (emms-info-mediainfo :source "MELPA" :recipe (:package "emms-info-mediainfo" :fetcher github :repo "fgallina/emms-info-mediainfo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Info-method for EMMS using medianfo" :date (21175 17600) :url "https://github.com/fgallina/emms-info-mediainfo") (emms-mark-ext :source "MELPA" :recipe (:package "emms-mark-ext" :fetcher github :repo "vapniks/emms-mark-ext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra functions for emms-mark-mode and emms-tag-edit-mode" :date (20901 3264) :url "https://github.com/vapniks/emms-mark-ext") (emms-mode-line-cycle :source "MELPA" :recipe (:package "emms-mode-line-cycle" :fetcher github :repo "momomo5717/emms-mode-line-cycle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the emms mode line as a ticker" :date (22216 54224) :url "https://github.com/momomo5717/emms-mode-line-cycle") (emms-player-mpv-jp-radios :source "MELPA" :recipe (:package "emms-player-mpv-jp-radios" :fetcher github :repo "momomo5717/emms-player-mpv-jp-radios" :files (:defaults "*/*.el")) :description "EMMS players and stream lists of Japan radio stations" :date (23222 48208) :url "https://github.com/momomo5717/emms-player-mpv-jp-radios") (emms-player-simple-mpv :source "MELPA" :recipe (:package "emms-player-simple-mpv" :fetcher github :repo "momomo5717/emms-player-simple-mpv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An extension of emms-player-simple.el for mpv JSON IPC" :date (23210 57040) :url "https://github.com/momomo5717/emms-player-simple-mpv") (emms-player-spotify :source "MELPA" :recipe (:package "emms-player-spotify" :fetcher github :repo "sarg/emms-spotify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spotify player for EMMS" :date (26082 16848) :url "https://github.com/sarg/emms-spotify") (emms-soundcloud :source "MELPA" :recipe (:package "emms-soundcloud" :fetcher github :repo "ozanmakes/emms-soundcloud" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "EMMS source for Soundcloud audio sharing platform" :date (21172 41408) :url "https://github.com/ozanmakes/emms-soundcloud") (emms-state :source "MELPA" :recipe (:package "emms-state" :repo "alezost/emms-state.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display track description and playing time in the mode line" :date (24947 9808) :url "https://github.com/alezost/emms-state.el") (emoji-cheat-sheet-plus :source "MELPA" :recipe (:package "emoji-cheat-sheet-plus" :repo "syl20bnr/emacs-emoji-cheat-sheet-plus" :fetcher github :files (:defaults "emoji-cheat-sheet")) :description "Emoji-cheat-sheet for emacs" :date (24117 59088) :url "https://github.com/syl20bnr/emacs-emoji-cheat-sheet-plus") (emoji-display :source "MELPA" :recipe (:package "emoji-display" :fetcher github :repo "ikazuhiro/emoji-display" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emoji displaying module" :date (21208 14912) :url "https://github.com/ikazuhiro/emoji-display") (emoji-fontset :source "MELPA" :recipe (:package "emoji-fontset" :fetcher github :repo "zonuexe/emoji-fontset.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set font face for Emoji" :date (22422 32208) :url "https://github.com/zonuexe/emoji-fontset.el") (emoji-github :source "MELPA" :recipe (:package "emoji-github" :repo "jcs-elpa/emoji-github" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display list of GitHub's emoji.  (cheat sheet)" :date (26001 54864) :url "https://github.com/jcs-elpa/emoji-github") (emoji-recall :source "MELPA" :recipe (:package "emoji-recall" :fetcher github :repo "lujun9972/emoji-recall.el" :files (:defaults "emoji-cheat-sheet/*.png")) :description "How many emoji can you recall from memory?" :date (22418 35152) :url "https://github.com/lujun9972/emoji-recall.el") (emojify :source "MELPA" :recipe (:package "emojify" :fetcher github :repo "iqbalansari/emacs-emojify" :files (:defaults "data" "images")) :description "Display emojis in Emacs" :date (24567 30288) :url "https://github.com/iqbalansari/emacs-emojify") (emojify-logos :source "MELPA" :recipe (:package "emojify-logos" :fetcher github :repo "mxgoldstein/emojify-logos" :files (:defaults "logos")) :description "Add logos to emojify" :date (23409 61776) :url "https://github.com/mxgoldstein/emojify-logos") (empos :source "MELPA" :recipe (:package "empos" :repo "dimalik/empos" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Locate bibtex citations from within emacs" :date (22041 31824) :url "https://github.com/dimalik/empos") (empv :source "MELPA" :recipe (:package "empv" :fetcher github :repo "isamert/empv.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A multimedia player/manager, YouTube interface" :date (26369 43216) :url "https://github.com/isamert/empv.el") (emr :source "MELPA" :recipe (:package "emr" :fetcher github :repo "Wilfred/emacs-refactor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs refactoring system" :date (25048 43472) :url "https://github.com/Wilfred/emacs-refactor") (enclose :source "MELPA" :recipe (:package "enclose" :repo "rejeep/enclose.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enclose cursor within punctuation pairs" :date (20593 57152) :url "https://github.com/rejeep/enclose.el") (encourage-mode :source "MELPA" :recipe (:package "encourage-mode" :fetcher github :repo "halbtuerke/encourage-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Encourages you in your work. :D" :date (22104 50256) :url "https://github.com/halbtuerke/encourage-mode.el") (encrypt-region :source "MELPA" :recipe (:package "encrypt-region" :repo "cgshep/encrypt-region" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Encrypts and decrypts regions" :date (25320 16080) :url "https://github.com/cgshep/encrypt-region") (engine-mode :source "MELPA" :recipe (:package "engine-mode" :repo "hrs/engine-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define and query search engines" :date (26330 7120) :url "https://github.com/hrs/engine-mode") (enh-ruby-mode :source "MELPA" :recipe (:package "enh-ruby-mode" :fetcher github :repo "zenspider/enhanced-ruby-mode" :files ("*.el" ("ruby" "ruby/erm.rb" "ruby/erm_buffer.rb"))) :description "Major mode for editing Ruby files" :date (26355 10320) :url "https://github.com/zenspider/enhanced-ruby-mode") (enlight :source "MELPA" :recipe (:package "enlight" :fetcher github :repo "ichernyshovvv/enlight" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highly customizable startup screen" :date (26203 35792) :url "https://github.com/ichernyshovvv/enlight") (enlive :source "MELPA" :recipe (:package "enlive" :repo "zweifisch/enlive" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query html document with css selectors" :date (22902 24528) :url "https://github.com/zweifisch/enlive") (eno :source "MELPA" :recipe (:package "eno" :fetcher github :repo "emacsattic/eno" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Goto/copy/cut any word/symbol/line in view, similar to ace-jump/easymotion" :date (23970 16080) :url "https://github.com/emacsattic/eno") (enotify :source "MELPA" :recipe (:package "enotify" :repo "laynor/enotify" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A networked notification system for emacs" :date (20832 32448) :url "https://github.com/laynor/enotify") (environ :source "MELPA" :recipe (:package "environ" :fetcher github :repo "cfclrk/environ" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "API for environment variables and env files" :date (25701 16464) :url "https://github.com/cfclrk/environ") (envrc :source "MELPA" :recipe (:package "envrc" :fetcher github :repo "purcell/envrc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for `direnv' that operates buffer-locally" :date (26218 3152) :url "https://github.com/purcell/envrc") (eopengrok :source "MELPA" :recipe (:package "eopengrok" :fetcher github :repo "youngker/eopengrok.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Opengrok interface for emacs" :date (25537 50768) :url "https://github.com/youngker/eopengrok.el") (epc :source "MELPA" :recipe (:package "epc" :repo "kiwanami/emacs-epc" :fetcher github :files ("epc.el" "epcs.el")) :description "A RPC stack for the Emacs Lisp" :date (21398 4672) :url "https://github.com/kiwanami/emacs-epc") (epic :source "MELPA" :recipe (:package "epic" :fetcher github :repo "yoshinari-nomura/epic" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evernote Picker for Cocoa Emacs" :date (22684 55376) :url "https://github.com/yoshinari-nomura/epic") (eping :source "MELPA" :recipe (:package "eping" :fetcher github :repo "sean-hut/eping" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ping websites to check internet connectivity" :date (24471 14544) :url "https://github.com/sean-hut/eping") (epkg :source "MELPA" :recipe (:package "epkg" :fetcher github :repo "emacscollective/epkg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse the Emacsmirror package database" :date (26381 34384) :url "https://github.com/emacscollective/epkg") (epkg-marginalia :source "MELPA" :recipe (:package "epkg-marginalia" :fetcher github :repo "emacscollective/epkg-marginalia" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show Epkg information in completion annotations" :date (26309 976) :url "https://github.com/emacscollective/epkg-marginalia") (epl :source "MELPA" :recipe (:package "epl" :repo "cask/epl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Package Library" :date (23159 29776) :url "https://github.com/cask/epl") (epm :source "MELPA" :recipe (:package "epm" :fetcher github :repo "xuchunyang/epm" :files (:defaults "epm")) :description "Emacs Package Manager" :date (23763 17232) :url "https://github.com/xuchunyang/epm") (epresent :source "MELPA" :recipe (:package "epresent" :fetcher github :repo "dakrone/epresent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple presentation mode for Emacs Org-mode" :date (22282 48848) :url "https://github.com/dakrone/epresent") (eproject :source "MELPA" :recipe (:package "eproject" :fetcher github :repo "jrockway/eproject" :files ("eproject.el" "eproject-extras.el" "lang/*.el" "contrib/*.el")) :description "Assign files to projects, programatically" :date (23205 39120) :url "https://github.com/jrockway/eproject") (equake :source "MELPA" :recipe (:package "equake" :fetcher github :repo "emacsomancer/equake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Drop-down console for (e)shell & terminal emulation" :date (26282 42448) :url "https://github.com/emacsomancer/equake") (eradio :source "MELPA" :recipe (:package "eradio" :fetcher github :repo "olavfosse/eradio" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple Internet radio player" :date (24670 19280) :url "https://github.com/olavfosse/eradio") (erblint :source "MELPA" :recipe (:package "erblint" :repo "leodcs/erblint-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for checking HTML ERB files using Erblint" :date (24303 51792) :url "https://github.com/leodcs/erblint-emacs") (erc-colorize :source "MELPA" :recipe (:package "erc-colorize" :fetcher github :repo "thisirs/erc-colorize" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Per user colorization of whole message" :date (22640 1360) :url "https://github.com/thisirs/erc-colorize") (erc-crypt :source "MELPA" :recipe (:package "erc-crypt" :repo "atomontage/erc-crypt" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Symmetric Encryption for ERC" :date (24255 720) :url "https://github.com/atomontage/erc-crypt") (erc-hl-nicks :source "MELPA" :recipe (:package "erc-hl-nicks" :fetcher github :repo "leathekd/erc-hl-nicks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ERC nick highlighter that ignores uniquifying chars when colorizing" :date (26220 44880) :url "https://github.com/leathekd/erc-hl-nicks") (erc-image :source "MELPA" :recipe (:package "erc-image" :repo "kidd/erc-image.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show received image urls in the ERC buffer" :date (24761 17104) :url "https://github.com/kidd/erc-image.el") (erc-matterircd :source "MELPA" :recipe (:package "erc-matterircd" :fetcher github :repo "alexmurray/erc-matterircd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate matterircd with ERC" :date (24841 44624) :url "https://github.com/alexmurray/erc-matterircd") (erc-scrolltoplace :source "MELPA" :recipe (:package "erc-scrolltoplace" :fetcher gitlab :repo "jgkamat/erc-scrolltoplace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Erc module to scrolltobottom better with keep-place" :date (23321 40144) :url "https://gitlab.com/jgkamat/erc-scrolltoplace") (erc-social-graph :source "MELPA" :recipe (:package "erc-social-graph" :repo "vibhavp/erc-social-graph" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A social network graph module for ERC" :date (21835 53840) :url "https://github.com/vibhavp/erc-social-graph") (erc-terminal-notifier :source "MELPA" :recipe (:package "erc-terminal-notifier" :repo "julienXX/erc-terminal-notifier.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OSX notifications via the terminal-notifier gem for Emacs ERC" :date (21205 38720) :url "https://github.com/julienXX/erc-terminal-notifier.el") (erc-track-score :source "MELPA" :recipe (:package "erc-track-score" :fetcher github :repo "jd/erc-track-score.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add score support to tracked channel buffers" :date (20819 20416) :url "https://github.com/jd/erc-track-score.el") (erc-tweet :source "MELPA" :recipe (:package "erc-tweet" :fetcher github :repo "kidd/erc-tweet.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows text of a tweet when an url is posted in erc buffers" :date (22013 52432) :url "https://github.com/kidd/erc-tweet.el") (erc-twitch :source "MELPA" :recipe (:package "erc-twitch" :repo "vibhavp/erc-twitch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for Twitch emotes for ERC" :date (22785 2640) :url "https://github.com/vibhavp/erc-twitch") (erc-view-log :source "MELPA" :recipe (:package "erc-view-log" :fetcher github :repo "Niluge-KiWi/erc-view-log" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for viewing ERC logs" :date (21262 18368) :url "https://github.com/Niluge-KiWi/erc-view-log") (erc-yank :source "MELPA" :recipe (:package "erc-yank" :repo "jwiegley/erc-yank" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automagically create a Gist if pasting more than 5 lines" :date (24624 9936) :url "https://github.com/jwiegley/erc-yank") (erc-youtube :source "MELPA" :recipe (:package "erc-youtube" :fetcher github :repo "kidd/erc-youtube.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show info about a YouTube URL in an ERC buffer" :date (21870 6480) :url "https://github.com/kidd/erc-youtube.el") (erc-yt :source "MELPA" :recipe (:package "erc-yt" :repo "yhvh/erc-yt" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An erc module to display youtube links nicely" :date (21820 80) :url "https://github.com/yhvh/erc-yt") (ercn :source "MELPA" :recipe (:package "ercn" :fetcher github :repo "leathekd/ercn" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flexible ERC notifications" :date (21855 39120) :url "https://github.com/leathekd/ercn") (ereader :source "MELPA" :recipe (:package "ereader" :fetcher github :repo "bddean/emacs-ereader" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for reading ebooks with org-mode integration" :date (22923 30672) :url "https://github.com/bddean/emacs-ereader") (eredis :source "MELPA" :recipe (:package "eredis" :fetcher github :repo "justinhj/eredis" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eredis, a Redis client in emacs lisp" :date (23537 53968) :url "https://github.com/justinhj/eredis") (erefactor :source "MELPA" :recipe (:package "erefactor" :repo "mhayashi1120/Emacs-erefactor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs-Lisp refactoring utilities" :date (24251 3664) :url "https://github.com/mhayashi1120/Emacs-erefactor") (ergoemacs-mode :source "MELPA" :recipe (:package "ergoemacs-mode" :fetcher github :repo "ergoemacs/ergoemacs-mode" :files ("*.el" "*.svg" "*.ahk" "*.info" "dir" "bash-us.txt" "os_x_qwerty.dict.txt")) :description "Emacs mode based on common modern interface and ergonomics" :date (26293 12752) :url "https://github.com/ergoemacs/ergoemacs-mode") (ergoemacs-status :source "MELPA" :recipe (:package "ergoemacs-status" :fetcher github :repo "ergoemacs/ergoemacs-status" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adaptive Status Bar / Mode Line" :date (22251 6864) :url "https://github.com/ergoemacs/ergoemacs-status") (eri :source "MELPA" :recipe (:package "eri" :fetcher github :repo "agda/agda" :files ("src/data/emacs-mode/eri.el")) :description "Enhanced relative indentation (eri)" :date (26067 49488) :url "https://github.com/agda/agda") (erk :source "MELPA" :recipe (:package "erk" :fetcher github :repo "positron-solutions/elisp-repo-kit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp (GitHub) Repository Kit" :date (25995 16080) :url "https://github.com/positron-solutions/elisp-repo-kit") (erlang :source "MELPA" :recipe (:package "erlang" :fetcher github :repo "erlang/otp" :version-regexp "OTP-%v" :files ("lib/tools/emacs/*.el" (:exclude "lib/tools/emacs/erlang_appwiz.el"))) :description "Erlang major mode" :date (26393 25552) :url "https://github.com/erlang/otp") (erlstack-mode :source "MELPA" :recipe (:package "erlstack-mode" :repo "k32/erlstack-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for analysing Erlang stacktraces" :date (25728 61392) :url "https://github.com/k32/erlstack-mode") (eros :source "MELPA" :recipe (:package "eros" :fetcher github :repo "xiongtx/eros" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluation Result OverlayS for Emacs Lisp" :date (25608 63312) :url "https://github.com/xiongtx/eros") (eros-inspector :source "MELPA" :recipe (:package "eros-inspector" :repo "port19x/eros-inspector" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Glue between eros and inspector" :date (26352 34128) :url "https://github.com/port19x/eros-inspector") (ert-async :source "MELPA" :recipe (:package "ert-async" :fetcher github :repo "rejeep/ert-async.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Async support for ERT" :date (24080 64720) :url "https://github.com/rejeep/ert-async.el") (ert-expectations :source "MELPA" :recipe (:package "ert-expectations" :fetcher github :repo "emacsorphanage/ert-expectations" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The simplest unit test framework in the world" :date (20595 12480) :url "https://github.com/emacsorphanage/ert-expectations") (ert-junit :source "MELPA" :recipe (:package "ert-junit" :fetcher git :url "https://bitbucket.org/olanilsson/ert-junit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JUnit XML reports from ert results" :date (23875 21200) :url "https://bitbucket.org/olanilsson/ert-junit") (ert-modeline :source "MELPA" :recipe (:package "ert-modeline" :fetcher github :repo "chrisbarrett/ert-modeline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displays ert test results in the modeline" :date (21205 38720) :url "https://github.com/chrisbarrett/ert-modeline") (ert-results :source "MELPA" :recipe (:package "ert-results" :fetcher github :repo "rswgnu/ert-results" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Filter ERT test results display" :date (26011 4304) :url "https://github.com/rswgnu/ert-results") (ert-runner :source "MELPA" :recipe (:package "ert-runner" :fetcher github :repo "rejeep/ert-runner.el" :files ("*.el" "bin" "reporters")) :description "Opinionated Ert testing workflow" :date (25933 18512) :url "https://github.com/rejeep/ert-runner.el") (es-lib :source "MELPA" :recipe (:package "es-lib" :repo "sabof/es-lib" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A collection of emacs utilities" :date (21601 10064) :url "https://github.com/sabof/es-lib") (es-mode :source "MELPA" :recipe (:package "es-mode" :fetcher github :repo "dakrone/es-mode" :files ("*.el" "snippets")) :description "A major mode for editing and executing Elasticsearch queries" :date (25432 20048) :url "https://github.com/dakrone/es-mode") (es-windows :source "MELPA" :recipe (:package "es-windows" :fetcher github :repo "sabof/es-windows" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Window-management utilities" :date (21241 12224) :url "https://github.com/sabof/es-windows") (esa :source "MELPA" :recipe (:package "esa" :repo "nabinno/esa.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to esa.io" :date (23234 39376) :url "https://github.com/nabinno/esa.el") (esh-autosuggest :source "MELPA" :recipe (:package "esh-autosuggest" :fetcher github :repo "dieggsy/esh-autosuggest" :old-names (company-eshell-autosuggest) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "History autosuggestions for eshell" :date (26364 25296) :url "https://github.com/dieggsy/esh-autosuggest") (esh-buf-stack :source "MELPA" :recipe (:package "esh-buf-stack" :repo "tom-tan/esh-buf-stack" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add a buffer stack feature to Eshell" :date (21195 2880) :url "https://github.com/tom-tan/esh-buf-stack") (esh-help :source "MELPA" :recipe (:package "esh-help" :repo "tom-tan/esh-help" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add some help functions and support for Eshell" :date (23920 9680) :url "https://github.com/tom-tan/esh-help") (eshell-atuin :source "MELPA" :recipe (:package "eshell-atuin" :fetcher github :repo "SqrtMinusOne/eshell-atuin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate eshell with atuin, a shell history tool" :date (26185 5840) :url "https://github.com/SqrtMinusOne/eshell-atuin") (eshell-autojump :source "MELPA" :recipe (:package "eshell-autojump" :fetcher github :repo "coldnew/eshell-autojump" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Autojump command for Eshell" :date (24498 59472) :url "https://github.com/coldnew/eshell-autojump") (eshell-bookmark :source "MELPA" :recipe (:package "eshell-bookmark" :fetcher github :repo "Fuco1/eshell-bookmark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate bookmarks with eshell" :date (22980 10320) :url "https://github.com/Fuco1/eshell-bookmark") (eshell-command-not-found :source "MELPA" :recipe (:package "eshell-command-not-found" :fetcher github :repo "jaeyeom/eshell-command-not-found" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate command-not-found in eshell" :date (26251 464) :url "https://github.com/jaeyeom/eshell-command-not-found") (eshell-did-you-mean :source "MELPA" :recipe (:package "eshell-did-you-mean" :fetcher github :repo "xuchunyang/eshell-did-you-mean" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command not found (\"did you mean…\" feature) in Eshell" :date (24962 63568) :url "https://github.com/xuchunyang/eshell-did-you-mean") (eshell-fixed-prompt :source "MELPA" :recipe (:package "eshell-fixed-prompt" :fetcher github :repo "mallt/eshell-fixed-prompt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Restrict eshell to a single fixed prompt" :date (25043 25552) :url "https://github.com/mallt/eshell-fixed-prompt-mode") (eshell-fringe-status :source "MELPA" :recipe (:package "eshell-fringe-status" :fetcher github :repo "ryuslash/eshell-fringe-status" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show last status in fringe" :date (22653 13392) :url "https://github.com/ryuslash/eshell-fringe-status") (eshell-git-prompt :source "MELPA" :recipe (:package "eshell-git-prompt" :fetcher github :repo "xuchunyang/eshell-git-prompt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some Eshell prompt for Git users" :date (25357 10448) :url "https://github.com/xuchunyang/eshell-git-prompt") (eshell-info-banner :source "MELPA" :recipe (:package "eshell-info-banner" :repo "Phundrak/eshell-info-banner.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "System information as your Eshell banner" :date (25313 42832) :url "https://github.com/Phundrak/eshell-info-banner.el") (eshell-outline :source "MELPA" :recipe (:package "eshell-outline" :fetcher github :repo "emacsattic/eshell-outline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced outline-mode for Eshell" :date (24504 11856) :url "https://github.com/emacsattic/eshell-outline") (eshell-prompt-extras :source "MELPA" :recipe (:package "eshell-prompt-extras" :fetcher github :repo "zwild/eshell-prompt-extras" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display extra information for your eshell prompt" :date (25904 18256) :url "https://github.com/zwild/eshell-prompt-extras") (eshell-syntax-highlighting :source "MELPA" :recipe (:package "eshell-syntax-highlighting" :fetcher github :repo "akreisher/eshell-syntax-highlighting" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight eshell commands" :date (26241 51024) :url "https://github.com/akreisher/eshell-syntax-highlighting") (eshell-toggle :source "MELPA" :recipe (:package "eshell-toggle" :repo "4DA/eshell-toggle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show/hide eshell under active window" :date (26142 59088) :url "https://github.com/4DA/eshell-toggle") (eshell-up :source "MELPA" :recipe (:package "eshell-up" :fetcher github :repo "peterwvj/eshell-up" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly go to a specific parent directory in eshell" :date (26075 43600) :url "https://github.com/peterwvj/eshell-up") (eshell-vterm :source "MELPA" :recipe (:package "eshell-vterm" :repo "iostapyshyn/eshell-vterm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vterm for visual commands in eshell" :date (26086 13904) :url "https://github.com/iostapyshyn/eshell-vterm") (eshell-z :source "MELPA" :recipe (:package "eshell-z" :fetcher github :repo "xuchunyang/eshell-z" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cd to frequent directory in eshell" :date (24015 4560) :url "https://github.com/xuchunyang/eshell-z") (eslint-disable-rule :source "MELPA" :recipe (:package "eslint-disable-rule" :fetcher github :repo "DamienCassou/eslint-disable-rule" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands to add JS comments disabling eslint rules" :date (25844 62416) :url "https://github.com/DamienCassou/eslint-disable-rule") (eslint-fix :source "MELPA" :recipe (:package "eslint-fix" :repo "codesuki/eslint-fix" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fix JavaScript files using ESLint" :date (24923 27472) :url "https://github.com/codesuki/eslint-fix") (eslint-rc :source "MELPA" :recipe (:package "eslint-rc" :repo "jjuliano/eslint-rc-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use local rc rules with ESLint" :date (25152 53328) :url "https://github.com/jjuliano/eslint-rc-emacs") (eslintd-fix :source "MELPA" :recipe (:package "eslintd-fix" :fetcher github :repo "aaronjensen/eslintd-fix" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use eslint_d to automatically fix js files" :date (26073 1872) :url "https://github.com/aaronjensen/eslintd-fix") (esmond-theme :source "MELPA" :recipe (:package "esmond-theme" :repo "hsnovel/esmond-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Esmond dark theme" :date (25711 52304) :url "https://github.com/hsnovel/esmond-theme") (esonify :source "MELPA" :recipe (:package "esonify" :repo "oflatt/esonify" :fetcher github :files (:defaults "sounds")) :description "Sonify your code" :date (23606 24784) :url "https://github.com/oflatt/esonify") (espotify :source "MELPA" :recipe (:package "espotify" :fetcher codeberg :repo "jao/espotify" :files ("espotify.el")) :description "Spotify access library" :date (25065 52560) :url "https://codeberg.org/jao/espotify") (espresso-theme :source "MELPA" :recipe (:package "espresso-theme" :repo "dgutov/espresso-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Espresso Tutti Colori port for Emacs" :date (24721 46544) :url "https://github.com/dgutov/espresso-theme") (espuds :source "MELPA" :recipe (:package "espuds" :repo "ecukes/espuds" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ecukes step definitions" :date (25583 60112) :url "https://github.com/ecukes/espuds") (espy :source "MELPA" :recipe (:package "espy" :fetcher github :repo "walseb/espy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Simple Password Yielder" :date (24175 59600) :url "https://github.com/walseb/espy") (esqlite :source "MELPA" :recipe (:package "esqlite" :fetcher github :repo "mhayashi1120/Emacs-esqlite" :files ("esqlite.el")) :description "Manipulate sqlite file from Emacs" :date (22115 20560) :url "https://github.com/mhayashi1120/Emacs-esqlite") (esqlite-helm :source "MELPA" :recipe (:package "esqlite-helm" :fetcher github :repo "mhayashi1120/Emacs-esqlite" :files ("esqlite-helm.el")) :description "Define helm source for sqlite database" :date (22088 62032) :url "https://github.com/mhayashi1120/Emacs-esqlite") (ess :source "MELPA" :recipe (:package "ess" :repo "emacs-ess/ESS" :fetcher github :files ("lisp/*.el" "doc/ess.texi" ("etc" "etc/*") ("obsolete" "lisp/obsolete/*") (:exclude "etc/other"))) :description "Emacs Speaks Statistics" :date (26309 976) :url "https://github.com/emacs-ess/ESS") (ess-R-data-view :source "MELPA" :recipe (:package "ess-R-data-view" :repo "myuhe/ess-R-data-view.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Data viewer for GNU R" :date (20874 44736) :url "https://github.com/myuhe/ess-R-data-view.el") (ess-r-insert-obj :source "MELPA" :recipe (:package "ess-r-insert-obj" :repo "ShuguangSun/ess-r-insert-obj" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert objects in ESS-R" :date (25250 24400) :url "https://github.com/ShuguangSun/ess-r-insert-obj") (ess-smart-equals :source "MELPA" :recipe (:package "ess-smart-equals" :fetcher github :repo "genovese/ess-smart-equals" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flexible, context-sensitive assignment key for R/S" :date (24690 4560) :url "https://github.com/genovese/ess-smart-equals") (ess-smart-underscore :source "MELPA" :recipe (:package "ess-smart-underscore" :fetcher github :repo "mattfidler/ess-smart-underscore.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ess Smart Underscore" :date (23682 55248) :url "https://github.com/mattfidler/ess-smart-underscore.el") (ess-view :source "MELPA" :recipe (:package "ess-view" :fetcher github :repo "GioBo/ess-view" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View R dataframes in a spreadsheet software" :date (23473 14672) :url "https://github.com/GioBo/ess-view") (ess-view-data :source "MELPA" :recipe (:package "ess-view-data" :repo "ShuguangSun/ess-view-data" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View Data" :date (26036 7504) :url "https://github.com/ShuguangSun/ess-view-data") (essgd :source "MELPA" :recipe (:package "essgd" :fetcher github :repo "sje30/essgd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show R plots from ESS within a buffer" :date (26360 28240) :url "https://github.com/sje30/essgd") (esup :source "MELPA" :recipe (:package "esup" :fetcher github :repo "jschaf/esup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Emacs StartUp Profiler (ESUP)" :date (25081 40784) :url "https://github.com/jschaf/esup") (esxml :source "MELPA" :recipe (:package "esxml" :fetcher github :repo "tali713/esxml" :files ("esxml.el" "esxml-query.el")) :description "Library for working with xml via esxml and sxml" :date (25607 42448) :url "https://github.com/tali713/esxml") (eta :source "MELPA" :recipe (:package "eta" :repo "zcaudate/eta" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Standard and multi dispatch key bind" :date (24576 45264) :url "https://github.com/zcaudate/eta") (etc-sudoers-mode :source "MELPA" :recipe (:package "etc-sudoers-mode" :fetcher gitlab :repo "mavit/etc-sudoers-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Sudo security policies" :date (26142 59088) :url "https://gitlab.com/mavit/etc-sudoers-mode") (etd :source "MELPA" :recipe (:package "etd" :repo "emacsfodder/etd" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Examples to Tests and Docs" :date (25772 29008) :url "https://github.com/emacsfodder/etd") (eterm-256color :source "MELPA" :recipe (:package "eterm-256color" :fetcher github :repo "dieggsy/eterm-256color" :files (:defaults "eterm-256color.ti")) :description "Customizable 256 colors for term" :date (24629 27856) :url "https://github.com/dieggsy/eterm-256color") (eterm-fn :source "MELPA" :recipe (:package "eterm-fn" :fetcher github :repo "oitofelix/eterm-fn" :files (:defaults "*.ti")) :description "Function keys (F1--F12) for term" :date (23966 19024) :url "https://github.com/oitofelix/eterm-fn") (ethan-wspace :source "MELPA" :recipe (:package "ethan-wspace" :fetcher github :repo "glasserc/ethan-wspace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Whitespace customizations for emacs" :date (24484 26576) :url "https://github.com/glasserc/ethan-wspace") (etherpad :source "MELPA" :recipe (:package "etherpad" :repo "zzkt/ethermacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to the Etherpad API" :date (25717 4688) :url "https://github.com/zzkt/ethermacs") (euslisp-mode :source "MELPA" :recipe (:package "euslisp-mode" :fetcher github :repo "iory/euslisp-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Euslisp-formatted text" :date (22949 54736) :url "https://github.com/iory/euslisp-mode") (eval-expr :source "MELPA" :recipe (:package "eval-expr" :fetcher github :repo "jwiegley/eval-expr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced eval-expression command" :date (20447 35008) :url "https://github.com/jwiegley/eval-expr") (eval-in-repl :source "MELPA" :recipe (:package "eval-in-repl" :fetcher github :repo "kaz-yos/eval-in-repl" :commit "origin/master" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consistent ESS-like eval interface for various REPLs" :date (25805 26320) :url "https://github.com/kaz-yos/eval-in-repl") (eval-sexp-fu :source "MELPA" :recipe (:package "eval-sexp-fu" :fetcher github :repo "hchbaw/eval-sexp-fu.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tiny functionality enhancements for evaluating sexps" :date (24030 58320) :url "https://github.com/hchbaw/eval-sexp-fu.el") (evalator :source "MELPA" :recipe (:package "evalator" :fetcher github :repo "seanirby/evalator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package for interactive transformation of data with helm" :date (22206 18384) :url "https://github.com/seanirby/evalator") (evalator-clojure :source "MELPA" :recipe (:package "evalator-clojure" :fetcher github :repo "seanirby/evalator-clojure" :files (:defaults "*.clj")) :description "Clojure evaluation context for evalator via CIDER" :date (22199 45136) :url "https://github.com/seanirby/evalator-clojure") (evangelion-theme :source "MELPA" :recipe (:package "evangelion-theme" :fetcher github :repo "crmsnbleyd/evangelion-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark colour scheme inspired by Neon Genesis Evangelion" :date (26331 27984) :url "https://github.com/crmsnbleyd/evangelion-theme") (eve-mode :source "MELPA" :recipe (:package "eve-mode" :repo "witheve/emacs-eve-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Eve documents" :date (22939 18896) :url "https://github.com/witheve/emacs-eve-mode") (evenok :source "MELPA" :recipe (:package "evenok" :fetcher codeberg :repo "mekeor/evenok" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Themes with perceptively evenly distributed colors" :date (26402 40528) :url "https://codeberg.org/mekeor/evenok") (everlasting-scratch :source "MELPA" :recipe (:package "everlasting-scratch" :repo "beacoder/everlasting-scratch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The *scratch* that lasts forever" :date (26216 47824) :url "https://github.com/beacoder/everlasting-scratch") (evil :source "MELPA" :recipe (:package "evil" :repo "emacs-evil/evil" :fetcher github :files (:defaults "doc/build/texinfo/evil.texi" (:exclude "evil-test-helpers.el"))) :description "Extensible vi layer" :date (26369 43216) :url "https://github.com/emacs-evil/evil") (evil-anzu :source "MELPA" :recipe (:package "evil-anzu" :fetcher github :repo "emacsorphanage/evil-anzu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Anzu for evil-mode" :date (25372 64208) :url "https://github.com/emacsorphanage/evil-anzu") (evil-args :source "MELPA" :recipe (:package "evil-args" :fetcher github :repo "wcsmith/evil-args" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Motions and text objects for delimited arguments in Evil" :date (26054 37456) :url "https://github.com/wcsmith/evil-args") (evil-avy :source "MELPA" :recipe (:package "evil-avy" :repo "louy2/evil-avy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set-based completion" :date (21997 64208) :url "https://github.com/louy2/evil-avy") (evil-better-visual-line :source "MELPA" :recipe (:package "evil-better-visual-line" :fetcher github :repo "YourFin/evil-better-visual-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gj and gk visual line mode fix" :date (24104 47056) :url "https://github.com/YourFin/evil-better-visual-line") (evil-cleverparens :source "MELPA" :recipe (:package "evil-cleverparens" :fetcher github :repo "emacs-evil/evil-cleverparens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil friendly minor-mode for editing lisp" :date (26198 17872) :url "https://github.com/emacs-evil/evil-cleverparens") (evil-colemak-basics :source "MELPA" :recipe (:package "evil-colemak-basics" :repo "wbolster/emacs-evil-colemak-basics" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic Colemak key bindings for evil-mode" :date (26367 1488) :url "https://github.com/wbolster/emacs-evil-colemak-basics") (evil-colemak-minimal :source "MELPA" :recipe (:package "evil-colemak-minimal" :fetcher github :repo "bmallred/evil-colemak-minimal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimal Colemak key bindings for evil-mode" :date (22998 40272) :url "https://github.com/bmallred/evil-colemak-minimal") (evil-collection :source "MELPA" :recipe (:package "evil-collection" :fetcher github :repo "emacs-evil/evil-collection" :files (:defaults "modes")) :description "A set of keybindings for Evil mode" :date (26402 40528) :url "https://github.com/emacs-evil/evil-collection") (evil-commentary :source "MELPA" :recipe (:package "evil-commentary" :repo "linktohack/evil-commentary" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Comment stuff out. A port of vim-commentary" :date (25731 37584) :url "https://github.com/linktohack/evil-commentary") (evil-dvorak :source "MELPA" :recipe (:package "evil-dvorak" :fetcher github :repo "jbranso/evil-dvorak" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil keybindings for that work with dvorak mode" :date (22289 22096) :url "https://github.com/jbranso/evil-dvorak") (evil-easymotion :source "MELPA" :recipe (:package "evil-easymotion" :repo "PythonNut/evil-easymotion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A port of vim's easymotion to emacs" :date (24226 464) :url "https://github.com/PythonNut/evil-easymotion") (evil-embrace :source "MELPA" :recipe (:package "evil-embrace" :repo "cute-jumper/evil-embrace.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil integration of embrace.el" :date (25825 11600) :url "https://github.com/cute-jumper/evil-embrace.el") (evil-escape :source "MELPA" :recipe (:package "evil-escape" :fetcher github :repo "emacsorphanage/evil-escape" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Escape from anything with a customizable key sequence" :date (25949 6736) :url "https://github.com/emacsorphanage/evil-escape") (evil-ex-fasd :source "MELPA" :recipe (:package "evil-ex-fasd" :fetcher github :repo "yqrashawn/evil-ex-fasd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Using fasd right from evil-ex" :date (23436 20304) :url "https://github.com/yqrashawn/evil-ex-fasd") (evil-ex-shell-command :source "MELPA" :recipe (:package "evil-ex-shell-command" :fetcher github :repo "yqrashawn/evil-ex-shell-command" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Invoke shell-command right from evil-ex" :date (23586 39504) :url "https://github.com/yqrashawn/evil-ex-shell-command") (evil-exchange :source "MELPA" :recipe (:package "evil-exchange" :fetcher github :repo "Dewdrops/evil-exchange" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Exchange text more easily within Evil" :date (24098 8272) :url "https://github.com/Dewdrops/evil-exchange") (evil-expat :source "MELPA" :recipe (:package "evil-expat" :repo "edkolev/evil-expat" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil ex commands" :date (23779 5456) :url "https://github.com/edkolev/evil-expat") (evil-extra-operator :source "MELPA" :recipe (:package "evil-extra-operator" :fetcher github :repo "Dewdrops/evil-extra-operator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil operator for evaluating codes, taking notes, searching via google, etc" :date (24630 48720) :url "https://github.com/Dewdrops/evil-extra-operator") (evil-find-char-pinyin :source "MELPA" :recipe (:package "evil-find-char-pinyin" :repo "cute-jumper/evil-find-char-pinyin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil's f/F/t/T/evil-snipe commands with Pinyin support" :date (22326 16464) :url "https://github.com/cute-jumper/evil-find-char-pinyin") (evil-fringe-mark :source "MELPA" :recipe (:package "evil-fringe-mark" :fetcher github :repo "Andrew-William-Smith/evil-fringe-mark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display evil-mode marks in the fringe" :date (23697 22608) :url "https://github.com/Andrew-William-Smith/evil-fringe-mark") (evil-god-state :source "MELPA" :recipe (:package "evil-god-state" :fetcher github :repo "gridaphobe/evil-god-state" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use god-mode keybindings in evil-mode" :date (21609 4176) :url "https://github.com/gridaphobe/evil-god-state") (evil-goggles :source "MELPA" :recipe (:package "evil-goggles" :repo "edkolev/evil-goggles" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add a visual hint to evil operations" :date (25906 59984) :url "https://github.com/edkolev/evil-goggles") (evil-iedit-state :source "MELPA" :recipe (:package "evil-iedit-state" :repo "syl20bnr/evil-iedit-state" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil states to interface iedit mode" :date (25104 2256) :url "https://github.com/syl20bnr/evil-iedit-state") (evil-indent-plus :source "MELPA" :recipe (:package "evil-indent-plus" :fetcher github :repo "TheBB/evil-indent-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil textobjects based on indentation" :date (25875 18000) :url "https://github.com/TheBB/evil-indent-plus") (evil-indent-textobject :source "MELPA" :recipe (:package "evil-indent-textobject" :fetcher github :repo "cofi/evil-indent-textobject" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil textobjects based on indentation" :date (21024 63936) :url "https://github.com/cofi/evil-indent-textobject") (evil-leader :source "MELPA" :recipe (:package "evil-leader" :repo "cofi/evil-leader" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Let there be <leader>" :date (21392 52288) :url "https://github.com/cofi/evil-leader") (evil-ledger :source "MELPA" :recipe (:package "evil-ledger" :repo "atheriel/evil-ledger" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make `ledger-mode' more `evil'" :date (23394 8016) :url "https://github.com/atheriel/evil-ledger") (evil-lion :source "MELPA" :recipe (:package "evil-lion" :fetcher github :repo "edkolev/evil-lion" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil align operator, port of vim-lion" :date (25138 20432) :url "https://github.com/edkolev/evil-lion") (evil-lisp-state :source "MELPA" :recipe (:package "evil-lisp-state" :repo "syl20bnr/evil-lisp-state" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An evil state to edit Lisp code" :date (22273 33872) :url "https://github.com/syl20bnr/evil-lisp-state") (evil-lispops :source "MELPA" :recipe (:package "evil-lispops" :fetcher github :repo "precompute/evil-lispops" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Operations for editing lisp evilly" :date (26157 26448) :url "https://github.com/precompute/evil-lispops") (evil-lispy :source "MELPA" :recipe (:package "evil-lispy" :repo "mikavilpas/evil-lispy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Precision Lisp editing with Evil and Lispy" :date (23754 2256) :url "https://github.com/mikavilpas/evil-lispy") (evil-mark-replace :source "MELPA" :recipe (:package "evil-mark-replace" :fetcher github :repo "redguardtoo/evil-mark-replace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace the thing in marked area" :date (26083 37712) :url "https://github.com/redguardtoo/evil-mark-replace") (evil-matchit :source "MELPA" :recipe (:package "evil-matchit" :fetcher github :repo "redguardtoo/evil-matchit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim matchit ported to Evil" :date (26144 14416) :url "https://github.com/redguardtoo/evil-matchit") (evil-mc :source "MELPA" :recipe (:package "evil-mc" :fetcher github :repo "gabesoft/evil-mc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple cursors for evil-mode" :date (26394 46416) :url "https://github.com/gabesoft/evil-mc") (evil-mc-extras :source "MELPA" :recipe (:package "evil-mc-extras" :fetcher github :repo "gabesoft/evil-mc-extras" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra functionality for evil-mc" :date (22674 19536) :url "https://github.com/gabesoft/evil-mc-extras") (evil-mu4e :source "MELPA" :recipe (:package "evil-mu4e" :repo "JorisE/evil-mu4e" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil-based key bindings for mu4e" :date (23328 13392) :url "https://github.com/JorisE/evil-mu4e") (evil-multiedit :source "MELPA" :recipe (:package "evil-multiedit" :repo "hlissner/evil-multiedit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple cursors for evil-mode" :date (24985 25040) :url "https://github.com/hlissner/evil-multiedit") (evil-neo :source "MELPA" :recipe (:package "evil-neo" :fetcher sourcehut :repo "p-conrad/evil-neo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for using the Neo keyboard layout with Evil" :date (26268 9552) :url "https://git.sr.ht/~p-conrad/evil-neo") (evil-nerd-commenter :source "MELPA" :recipe (:package "evil-nerd-commenter" :fetcher github :repo "redguardtoo/evil-nerd-commenter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" :date (25751 22864) :url "https://github.com/redguardtoo/evil-nerd-commenter") (evil-nl-break-undo :source "MELPA" :recipe (:package "evil-nl-break-undo" :fetcher github :repo "VanLaser/evil-nl-break-undo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Break evil's undo sequence on CR" :date (26349 57936) :url "https://github.com/VanLaser/evil-nl-break-undo") (evil-numbers :source "MELPA" :recipe (:package "evil-numbers" :repo "juliapath/evil-numbers" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Increment/decrement numbers like in VIM" :date (26141 38224) :url "https://github.com/juliapath/evil-numbers") (evil-opener :source "MELPA" :recipe (:package "evil-opener" :fetcher github :repo "0robustus1/opener.el" :files ("evil-opener.el" "evil-opener.texi")) :description "Opening urls as buffers in evil" :date (22599 9936) :url "https://github.com/0robustus1/opener.el") (evil-org :source "MELPA" :recipe (:package "evil-org" :fetcher github :repo "Somelauw/evil-org-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil keybindings for org-mode" :date (25399 22736) :url "https://github.com/Somelauw/evil-org-mode") (evil-owl :source "MELPA" :recipe (:package "evil-owl" :repo "mamapanda/evil-owl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview evil registers and marks before using them" :date (24696 43344) :url "https://github.com/mamapanda/evil-owl") (evil-paredit :source "MELPA" :recipe (:package "evil-paredit" :fetcher github :repo "roman/evil-paredit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paredit support for evil keybindings" :date (21802 56528) :url "https://github.com/roman/evil-paredit") (evil-pinyin :source "MELPA" :recipe (:package "evil-pinyin" :fetcher github :repo "laishulu/evil-pinyin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil search Chinese characters by pinyin" :date (25900 21200) :url "https://github.com/laishulu/evil-pinyin") (evil-python-movement :source "MELPA" :recipe (:package "evil-python-movement" :url "https://bitbucket.org/FelipeLema/evil-python-movement.el" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port Neovim's python movement to Evil" :date (23382 16848) :url "https://bitbucket.org/FelipeLema/evil-python-movement.el") (evil-quickscope :source "MELPA" :recipe (:package "evil-quickscope" :repo "blorbx/evil-quickscope" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight unique characters in words for f,F,t,T navigation" :date (22191 51024) :url "https://github.com/blorbx/evil-quickscope") (evil-rails :source "MELPA" :recipe (:package "evil-rails" :repo "antono/evil-rails" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rails support for Evil Mode" :date (23767 14288) :url "https://github.com/antono/evil-rails") (evil-replace-with-char :source "MELPA" :recipe (:package "evil-replace-with-char" :repo "ninrod/evil-replace-with-char" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace chars of a text object with a char" :date (23221 27344) :url "https://github.com/ninrod/evil-replace-with-char") (evil-replace-with-register :source "MELPA" :recipe (:package "evil-replace-with-register" :fetcher github :repo "Dewdrops/evil-ReplaceWithRegister" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of vim plugin ReplaceWithRegister" :date (22886 36304) :url "https://github.com/Dewdrops/evil-ReplaceWithRegister") (evil-rsi :source "MELPA" :recipe (:package "evil-rsi" :repo "linktohack/evil-rsi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use emacs motion keys in evil, inspired by vim-rsi" :date (22216 54224) :url "https://github.com/linktohack/evil-rsi") (evil-ruby-text-objects :source "MELPA" :recipe (:package "evil-ruby-text-objects" :fetcher github :repo "porras/evil-ruby-text-objects" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil text objects for Ruby code" :date (26134 64976) :url "https://github.com/porras/evil-ruby-text-objects") (evil-search-highlight-persist :source "MELPA" :recipe (:package "evil-search-highlight-persist" :fetcher github :repo "naclander/evil-search-highlight-persist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent highlights after search" :date (22819 20816) :url "https://github.com/naclander/evil-search-highlight-persist") (evil-smartparens :source "MELPA" :recipe (:package "evil-smartparens" :fetcher github :repo "expez/evil-smartparens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil support for smartparens" :date (23084 20176) :url "https://github.com/expez/evil-smartparens") (evil-snipe :source "MELPA" :recipe (:package "evil-snipe" :repo "hlissner/evil-snipe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emulate vim-sneak & vim-seek" :date (25826 32464) :url "https://github.com/hlissner/evil-snipe") (evil-space :source "MELPA" :recipe (:package "evil-space" :repo "linktohack/evil-space" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Repeat motion in Evil. Correct the behaviour of what SPC should do" :date (22117 62288) :url "https://github.com/linktohack/evil-space") (evil-string-inflection :source "MELPA" :recipe (:package "evil-string-inflection" :repo "ninrod/evil-string-inflection" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Snake_case -> CamelCase -> etc. for text objects" :date (24265 36560) :url "https://github.com/ninrod/evil-string-inflection") (evil-surround :source "MELPA" :recipe (:package "evil-surround" :repo "emacs-evil/evil-surround" :fetcher github :old-names (surround) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emulate surround.vim from Vim" :date (26112 37968) :url "https://github.com/emacs-evil/evil-surround") (evil-swap-keys :source "MELPA" :recipe (:package "evil-swap-keys" :repo "wbolster/evil-swap-keys" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intelligently swap keys on text input with evil" :date (24000 37200) :url "https://github.com/wbolster/evil-swap-keys") (evil-tabs :source "MELPA" :recipe (:package "evil-tabs" :fetcher github :repo "krisajenkins/evil-tabs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrating Vim-style tabs for Evil mode users" :date (22211 36304) :url "https://github.com/krisajenkins/evil-tabs") (evil-terminal-cursor-changer :source "MELPA" :recipe (:package "evil-terminal-cursor-changer" :fetcher github :repo "7696122/evil-terminal-cursor-changer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change cursor shape and color by evil state in terminal" :date (25920 6480) :url "https://github.com/7696122/evil-terminal-cursor-changer") (evil-test-helpers :source "MELPA" :recipe (:package "evil-test-helpers" :repo "emacs-evil/evil" :fetcher github :files ("evil-test-helpers.el")) :description "Unit test helpers for Evil" :date (25825 11600) :url "https://github.com/emacs-evil/evil") (evil-tex :source "MELPA" :recipe (:package "evil-tex" :fetcher github :repo "iyefrat/evil-tex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Useful features for editing LaTeX in evil-mode" :date (25777 46928) :url "https://github.com/iyefrat/evil-tex") (evil-text-object-python :source "MELPA" :recipe (:package "evil-text-object-python" :repo "wbolster/evil-text-object-python" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python specific evil text objects" :date (23966 19024) :url "https://github.com/wbolster/evil-text-object-python") (evil-textobj-anyblock :source "MELPA" :recipe (:package "evil-textobj-anyblock" :fetcher github :repo "noctuid/evil-textobj-anyblock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Textobject for the closest user-defined blocks" :date (22957 48848) :url "https://github.com/noctuid/evil-textobj-anyblock") (evil-textobj-column :source "MELPA" :recipe (:package "evil-textobj-column" :fetcher github :repo "noctuid/evil-textobj-column" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides column text objects" :date (22957 48848) :url "https://github.com/noctuid/evil-textobj-column") (evil-textobj-entire :source "MELPA" :recipe (:package "evil-textobj-entire" :fetcher github :repo "supermomonga/evil-textobj-entire" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Text object for entire lines of buffer for evil" :date (21814 47696) :url "https://github.com/supermomonga/evil-textobj-entire") (evil-textobj-line :source "MELPA" :recipe (:package "evil-textobj-line" :fetcher github :repo "emacsorphanage/evil-textobj-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Line text object for Evil" :date (24959 976) :url "https://github.com/emacsorphanage/evil-textobj-line") (evil-textobj-syntax :source "MELPA" :recipe (:package "evil-textobj-syntax" :fetcher github :repo "laishulu/evil-textobj-syntax" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides syntax text objects" :date (25945 9680) :url "https://github.com/laishulu/evil-textobj-syntax") (evil-textobj-tree-sitter :source "MELPA" :recipe (:package "evil-textobj-tree-sitter" :fetcher github :repo "meain/evil-textobj-tree-sitter" :files (:defaults "queries" "treesit-queries") :old-names (evil-textobj-treesitter)) :description "Provides evil textobjects using tree-sitter" :date (26319 36816) :url "https://github.com/meain/evil-textobj-tree-sitter") (evil-traces :source "MELPA" :recipe (:package "evil-traces" :repo "mamapanda/evil-traces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual hints for `evil-ex'" :date (25825 11600) :url "https://github.com/mamapanda/evil-traces") (evil-tree-edit :source "MELPA" :recipe (:package "evil-tree-edit" :repo "ethan-leba/tree-edit" :fetcher github :files ("evil-tree-edit*.el")) :description "Evil structural editing for any language!" :date (25967 36688) :url "https://github.com/ethan-leba/tree-edit") (evil-tutor :source "MELPA" :recipe (:package "evil-tutor" :repo "syl20bnr/evil-tutor" :fetcher github :files (:defaults "tutor.txt")) :description "Vimtutor adapted to Evil and wrapped in a major-mode" :date (21671 1744) :url "https://github.com/syl20bnr/evil-tutor") (evil-tutor-ja :source "MELPA" :recipe (:package "evil-tutor-ja" :repo "kenjimyzk/evil-tutor-ja" :fetcher github :files (:defaults "tutor-ja.txt")) :description "Japanese Vimtutor adapted to Evil and wrapped in a major-mode" :date (22492 23888) :url "https://github.com/kenjimyzk/evil-tutor-ja") (evil-tutor-sc :source "MELPA" :recipe (:package "evil-tutor-sc" :repo "clsty/evil-tutor-sc" :fetcher github :files (:defaults "tutor-sc.txt")) :description "Simplified Chinese tutor for Evil" :date (26113 58832) :url "https://github.com/clsty/evil-tutor-sc") (evil-vimish-fold :source "MELPA" :recipe (:package "evil-vimish-fold" :repo "alexmurray/evil-vimish-fold" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate vimish-fold with evil" :date (24103 26192) :url "https://github.com/alexmurray/evil-vimish-fold") (evil-visual-mark-mode :source "MELPA" :recipe (:package "evil-visual-mark-mode" :repo "roman/evil-visual-mark-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display evil marks on buffer" :date (25562 53968) :url "https://github.com/roman/evil-visual-mark-mode") (evil-visual-replace :source "MELPA" :recipe (:package "evil-visual-replace" :fetcher github :repo "troyp/evil-visual-replace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search/replace commands for evil visual state, inc. blocks" :date (23011 52304) :url "https://github.com/troyp/evil-visual-replace") (evil-visualstar :source "MELPA" :recipe (:package "evil-visualstar" :repo "bling/evil-visualstar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Starts a * or # search from the visual selection" :date (22219 30416) :url "https://github.com/bling/evil-visualstar") (evm :source "MELPA" :recipe (:package "evm" :repo "rejeep/evm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Version Manager" :date (21554 62656) :url "https://github.com/rejeep/evm.el") (evm-mode :source "MELPA" :recipe (:package "evm-mode" :repo "taquangtrung/emacs-evm-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Ethereum EVM bytecode" :date (25372 64208) :url "https://github.com/taquangtrung/emacs-evm-mode") (ewal :source "MELPA" :recipe (:package "ewal" :fetcher github :repo "cyruseuros/ewal" :files ("ewal.el" "palettes")) :description "A pywal-based theme generator" :date (24160 5840) :url "https://github.com/cyruseuros/ewal") (ewal-doom-themes :source "MELPA" :recipe (:package "ewal-doom-themes" :fetcher github :repo "cyruseuros/ewal" :files ("doom-themes/*.el")) :description "Dread the colors of darkness" :date (24425 5200) :url "https://github.com/cyruseuros/ewal") (ewal-evil-cursors :source "MELPA" :recipe (:package "ewal-evil-cursors" :fetcher github :repo "cyruseuros/ewal" :files ("evil-cursors/*.el")) :description "`ewal'-colored evil cursor for Emacs and Spacemacs" :date (24154 53456) :url "https://github.com/cyruseuros/ewal") (ewal-spacemacs-themes :source "MELPA" :recipe (:package "ewal-spacemacs-themes" :fetcher github :repo "cyruseuros/ewal" :files ("spacemacs-themes/*.el")) :description "Ride the rainbow spaceship" :date (25684 7376) :url "https://github.com/cyruseuros/ewal") (ewmctrl :source "MELPA" :recipe (:package "ewmctrl" :fetcher github :repo "flexibeast/ewmctrl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use `wmctrl' to manage desktop windows via EWMH/NetWM" :date (22980 10320) :url "https://github.com/flexibeast/ewmctrl") (eww-lnum :source "MELPA" :recipe (:package "eww-lnum" :repo "m00natic/eww-lnum" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Conkeror-like functionality for eww" :date (21669 46416) :url "https://github.com/m00natic/eww-lnum") (exato :source "MELPA" :recipe (:package "exato" :repo "ninrod/exato" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "EXATO: Evil XML/HTML Attributes Text Object" :date (24265 36560) :url "https://github.com/ninrod/exato") (exec-path-from-shell :source "MELPA" :recipe (:package "exec-path-from-shell" :fetcher github :repo "purcell/exec-path-from-shell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get environment variables such as $PATH from the shell" :date (26134 64976) :url "https://github.com/purcell/exec-path-from-shell") (execline :source "MELPA" :recipe (:package "execline" :fetcher gitlab :repo "KAction/emacs-execline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing execline scripts" :date (23846 20944) :url "https://gitlab.com/KAction/emacs-execline") (exercism :source "MELPA" :recipe (:package "exercism" :repo "anonimitoraf/exercism.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unofficial https://exercism.org integration" :date (26386 52304) :url "https://github.com/anonimitoraf/exercism.el") (exiftool :source "MELPA" :recipe (:package "exiftool" :fetcher git :url "https://git.systemreboot.net/exiftool.el/" :old-names (el-exiftool) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp wrapper around ExifTool" :date (23777 50128) :url "https://git.systemreboot.net/exiftool.el/") (exotica-theme :source "MELPA" :recipe (:package "exotica-theme" :repo "zenobht/exotica-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme with vibrant colors" :date (23168 44752) :url "https://github.com/zenobht/exotica-theme") (expand-line :source "MELPA" :recipe (:package "expand-line" :repo "victorteokw/expand-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Expand selection by line" :date (22034 58576) :url "https://github.com/victorteokw/expand-line") (expand-region :source "MELPA" :recipe (:package "expand-region" :repo "magnars/expand-region.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Increase selected region by semantic units" :date (26347 16208) :url "https://github.com/magnars/expand-region.el") (expenses :source "MELPA" :recipe (:package "expenses" :fetcher github :repo "md-arif-shaikh/expenses" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Record and view expenses" :date (25843 41552) :url "https://github.com/md-arif-shaikh/expenses") (express :source "MELPA" :recipe (:package "express" :repo "rolandwalker/express" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alternatives to `message'" :date (21354 37056) :url "https://github.com/rolandwalker/express") (exsqlaim-mode :source "MELPA" :recipe (:package "exsqlaim-mode" :repo "ahmadnazir/exsqlaim-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use variables inside sql queries" :date (22839 6096) :url "https://github.com/ahmadnazir/exsqlaim-mode") (extempore-mode :source "MELPA" :recipe (:package "extempore-mode" :fetcher github :repo "extemporelang/extempore-emacs-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs major mode for Extempore source files" :date (25282 848) :url "https://github.com/extemporelang/extempore-emacs-mode") (extend-dnd :source "MELPA" :recipe (:package "extend-dnd" :fetcher github :repo "mattfidler/extend-dnd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "R drag and Drop" :date (22096 56144) :url "https://github.com/mattfidler/extend-dnd") (external-dict :source "MELPA" :recipe (:package "external-dict" :fetcher git :url "https://repo.or.cz/external-dict.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query external dictionary like goldendict, Bob.app etc" :date (26403 61392) :url "https://repo.or.cz/external-dict.el.git") (extmap :source "MELPA" :recipe (:package "extmap" :repo "doublep/extmap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Externally-stored constant mapping for Elisp" :date (25848 59472) :url "https://github.com/doublep/extmap") (exunit :source "MELPA" :recipe (:package "exunit" :fetcher github :repo "ananthakumaran/exunit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ExUnit test runner" :date (26162 44368) :url "https://github.com/ananthakumaran/exunit.el") (exwm-edit :source "MELPA" :recipe (:package "exwm-edit" :repo "agzam/exwm-edit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit mode for EXWM" :date (26144 14416) :url "https://github.com/agzam/exwm-edit") (exwm-firefox-core :source "MELPA" :recipe (:package "exwm-firefox-core" :fetcher github :repo "walseb/exwm-firefox-core" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Firefox hotkeys to functions" :date (23888 33232) :url "https://github.com/walseb/exwm-firefox-core") (exwm-firefox-evil :source "MELPA" :recipe (:package "exwm-firefox-evil" :fetcher github :repo "walseb/exwm-firefox-evil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil-mode implementation of exwm-firefox-core" :date (25913 33232) :url "https://github.com/walseb/exwm-firefox-evil") (exwm-float :source "MELPA" :recipe (:package "exwm-float" :fetcher gitlab :repo "mtekman/exwm-float.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convenient modes and bindings for floating EXWM frames" :date (24607 848) :url "https://gitlab.com/mtekman/exwm-float.el") (exwm-mff :source "MELPA" :recipe (:package "exwm-mff" :fetcher codeberg :repo "emacs-weirdware/exwm-mff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mouse Follows Focus" :date (24759 61776) :url "https://codeberg.org/emacs-weirdware/exwm-mff") (exwm-modeline :source "MELPA" :recipe (:package "exwm-modeline" :repo "SqrtMinusOne/exwm-modeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A modeline segment for EXWM workspaces" :date (25992 39888) :url "https://github.com/SqrtMinusOne/exwm-modeline") (exwm-surf :source "MELPA" :recipe (:package "exwm-surf" :fetcher github :repo "ecraven/exwm-surf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for Surf (surf.suckless.org) under exwm" :date (23076 26064) :url "https://github.com/ecraven/exwm-surf") (exwm-x :source "MELPA" :recipe (:package "exwm-x" :fetcher github :repo "tumashu/exwm-x" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A derivative wm based on EXWM (emacs x window manager)" :date (25544 24016) :url "https://github.com/tumashu/exwm-x") (eyebrowse :source "MELPA" :recipe (:package "eyebrowse" :fetcher git :url "https://depp.brause.cc/eyebrowse.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy window config switching" :date (26129 47056) :url "https://depp.brause.cc/eyebrowse.git") (eyebrowse-restore :source "MELPA" :recipe (:package "eyebrowse-restore" :fetcher github :repo "FrostyX/eyebrowse-restore" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent Eyebrowse for all frames" :date (26084 58576) :url "https://github.com/FrostyX/eyebrowse-restore") (eyuml :source "MELPA" :recipe (:package "eyuml" :fetcher github :repo "antham/eyuml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write textual uml diagram from emacs using yuml.me" :date (21582 45648) :url "https://github.com/antham/eyuml") (ez-query-replace :source "MELPA" :recipe (:package "ez-query-replace" :repo "Wilfred/ez-query-replace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A smarter context-sensitive query-replace that can be reapplied" :date (24827 11728) :url "https://github.com/Wilfred/ez-query-replace") (eziam-themes :source "MELPA" :recipe (:package "eziam-themes" :fetcher github :repo "thblt/eziam-theme-emacs" :old-names (eziam-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The mostly monochrome Eziam theme family" :date (25825 11600) :url "https://github.com/thblt/eziam-theme-emacs") (f :source "MELPA" :recipe (:package "f" :fetcher github :repo "rejeep/f.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modern API for working with files and directories" :date (26365 46160) :url "https://github.com/rejeep/f.el") (f3 :source "MELPA" :recipe (:package "f3" :fetcher github :repo "cosmicexplorer/f3" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm interface to find" :date (23151 35664) :url "https://github.com/cosmicexplorer/f3") (fabric :source "MELPA" :recipe (:package "fabric" :fetcher github :repo "nlamirault/fabric.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch Fabric using Emacs" :date (23052 43728) :url "https://github.com/nlamirault/fabric.el") (face-explorer :source "MELPA" :recipe (:package "face-explorer" :repo "Lindydancer/face-explorer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library and tools for faces and text properties" :date (23773 53072) :url "https://github.com/Lindydancer/face-explorer") (faceup :source "MELPA" :recipe (:package "faceup" :repo "Lindydancer/faceup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Markup language for faces and font-lock regression testing" :date (22984 7376) :url "https://github.com/Lindydancer/faceup") (factlog :source "MELPA" :recipe (:package "factlog" :repo "tkf/factlog" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "File activity logger" :date (20758 43712) :url "https://github.com/tkf/factlog") (faff-theme :source "MELPA" :recipe (:package "faff-theme" :repo "WJCFerguson/emacs-faff-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Light Emacs color theme on cornsilk3 background" :date (26225 62800) :url "https://github.com/WJCFerguson/emacs-faff-theme") (fakir :source "MELPA" :recipe (:package "fakir" :fetcher github :repo "nicferrier/emacs-fakir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fakeing bits of Emacs" :date (21462 43968) :url "https://github.com/nicferrier/emacs-fakir") (fancy-battery :source "MELPA" :recipe (:package "fancy-battery" :repo "emacsorphanage/fancy-battery" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fancy battery display" :date (21668 25552) :url "https://github.com/emacsorphanage/fancy-battery") (fancy-compilation :source "MELPA" :recipe (:package "fancy-compilation" :fetcher codeberg :repo "ideasman42/emacs-fancy-compilation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced compilation output" :date (26149 32336) :url "https://codeberg.org/ideasman42/emacs-fancy-compilation") (fancy-dabbrev :source "MELPA" :recipe (:package "fancy-dabbrev" :repo "jrosdahl/fancy-dabbrev" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Like dabbrev-expand with preview and popup menu" :date (25093 31952) :url "https://github.com/jrosdahl/fancy-dabbrev") (fancy-narrow :source "MELPA" :recipe (:package "fancy-narrow" :repo "Malabarba/fancy-narrow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Narrow-to-region with more eye candy" :date (23031 37584) :url "https://github.com/Malabarba/fancy-narrow") (fantom-mode :source "MELPA" :recipe (:package "fantom-mode" :repo "thechampagne/fantom-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Fantom programming language" :date (25514 2896) :url "https://github.com/thechampagne/fantom-mode") (fantom-theme :source "MELPA" :recipe (:package "fantom-theme" :repo "adsva/fantom-emacs-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark theme based on Phantom Code for VSCode" :date (24190 26960) :url "https://github.com/adsva/fantom-emacs-theme") (fanyi :source "MELPA" :recipe (:package "fanyi" :repo "condy0919/fanyi.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Not only English-Chinese translator" :date (25873 62672) :url "https://github.com/condy0919/fanyi.el") (farmhouse-themes :source "MELPA" :recipe (:package "farmhouse-themes" :fetcher github :repo "emacsorphanage/farmhouse-themes" :old-names (farmhouse-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Farmhouse Themes, dark and light versions" :date (25430 64720) :url "https://github.com/emacsorphanage/farmhouse-themes") (fasd :source "MELPA" :recipe (:package "fasd" :url "https://framagit.org/steckerhalter/emacs-fasd.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for the command-line productivity booster `fasd'" :date (24562 12368) :url "https://framagit.org/steckerhalter/emacs-fasd.git") (fast-scroll :source "MELPA" :recipe (:package "fast-scroll" :repo "ahungry/fast-scroll" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some utilities for faster scrolling over large buffers" :date (23974 13136) :url "https://github.com/ahungry/fast-scroll") (fastdef :source "MELPA" :recipe (:package "fastdef" :fetcher github :repo "redguardtoo/fastdef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert terminology from Google top search results" :date (22405 23120) :url "https://github.com/redguardtoo/fastdef") (fastnav :source "MELPA" :recipe (:package "fastnav" :fetcher github :repo "gleber/fastnav.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast navigation and editing routines" :date (20277 30528) :url "https://github.com/gleber/fastnav.el") (faust-mode :source "MELPA" :recipe (:package "faust-mode" :repo "rukano/emacs-faust-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Faust syntax colorizer for Emacs" :date (24440 58960) :url "https://github.com/rukano/emacs-faust-mode") (faustine :source "MELPA" :recipe (:package "faustine" :fetcher git :url "https://bitbucket.org/yphil/faustine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit, visualize, build and run Faust code" :date (23060 37840) :url "https://bitbucket.org/yphil/faustine") (fb2-reader :source "MELPA" :recipe (:package "fb2-reader" :fetcher github :repo "jumper047/fb2-reader" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read FB2 and FB2.ZIP documents" :date (25805 26320) :url "https://github.com/jumper047/fb2-reader") (fcitx :source "MELPA" :recipe (:package "fcitx" :repo "cute-jumper/fcitx.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make fcitx better in Emacs" :date (26028 13392) :url "https://github.com/cute-jumper/fcitx.el") (fcopy :source "MELPA" :recipe (:package "fcopy" :repo "ataka/fcopy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Funny Copy, set past point HERE then search copy text" :date (21750 8400) :url "https://github.com/ataka/fcopy") (fd-dired :source "MELPA" :recipe (:package "fd-dired" :fetcher github :repo "yqrashawn/fd-dired" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find-dired alternative using fd" :date (24825 56400) :url "https://github.com/yqrashawn/fd-dired") (feature-mode :source "MELPA" :recipe (:package "feature-mode" :repo "michaelklishin/cucumber.el" :fetcher github :files ("*.el" "i18n.yml" "snippets" "support")) :description "Major mode for editing Gherkin (i.e. Cucumber) user stories" :date (26121 52944) :url "https://github.com/michaelklishin/cucumber.el") (fedi :source "MELPA" :recipe (:package "fedi" :fetcher codeberg :repo "martianh/fedi.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helper functions for fediverse clients" :date (26388 7632) :url "https://codeberg.org/martianh/fedi.el") (feebleline :source "MELPA" :recipe (:package "feebleline" :fetcher github :repo "tautologyclub/feebleline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace modeline with a slimmer proxy" :date (23901 45264) :url "https://github.com/tautologyclub/feebleline") (feed-discovery :source "MELPA" :recipe (:package "feed-discovery" :fetcher github :repo "HKey/feed-discovery" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Discover feed url by RSS/Atom autodiscovery" :date (24332 52048) :url "https://github.com/HKey/feed-discovery") (feline :source "MELPA" :recipe (:package "feline" :fetcher git :url "https://opensource.chee.party/chee/feline-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A modeline with very little" :date (25598 27472) :url "https://opensource.chee.party/chee/feline-mode") (fennel-mode :source "MELPA" :recipe (:package "fennel-mode" :fetcher sourcehut :repo "technomancy/fennel-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing Fennel code" :date (26268 9552) :url "https://git.sr.ht/~technomancy/fennel-mode") (fetch :source "MELPA" :recipe (:package "fetch" :fetcher github :repo "cbrst/fetch.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fetch and unpack resources" :date (21146 17344) :url "https://github.com/cbrst/fetch.el") (ffmpeg-player :source "MELPA" :recipe (:package "ffmpeg-player" :repo "jcs-elpa/ffmpeg-player" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play video using ffmpeg" :date (26001 54864) :url "https://github.com/jcs-elpa/ffmpeg-player") (ffmpeg-utils :source "MELPA" :recipe (:package "ffmpeg-utils" :fetcher git :url "https://repo.or.cz/ffmpeg-utils.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "FFmpeg command utilities wrappers" :date (25603 45392) :url "https://repo.or.cz/ffmpeg-utils.git") (fic-mode :source "MELPA" :recipe (:package "fic-mode" :fetcher github :repo "lewang/fic-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show FIXME/TODO/BUG(...) in special face only in comments and strings" :date (23315 1360) :url "https://github.com/lewang/fic-mode") (fifo-class :source "MELPA" :recipe (:package "fifo-class" :fetcher github :repo "mola-T/fifo-class" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "First in first out abstract class" :date (22301 13264) :url "https://github.com/mola-T/fifo-class") (figlet :source "MELPA" :recipe (:package "figlet" :fetcher github :repo "jpkotta/figlet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Annoy people with big, ascii art text" :date (22212 57168) :url "https://github.com/jpkotta/figlet") (file-info :source "MELPA" :recipe (:package "file-info" :repo "Artawower/file-info.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show pretty information about current file" :date (26228 38992) :url "https://github.com/Artawower/file-info.el") (filelock :source "MELPA" :recipe (:package "filelock" :repo "DarwinAwardWinner/emacs-filelock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions for manipulating file locks" :date (23301 54864) :url "https://github.com/DarwinAwardWinner/emacs-filelock") (filetags :source "MELPA" :recipe (:package "filetags" :repo "DerBeutlin/filetags.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package to manage filetags in filename" :date (23839 47696) :url "https://github.com/DerBeutlin/filetags.el") (filetree :source "MELPA" :recipe (:package "filetree" :repo "knpatel401/filetree" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "File tree view/manipulatation package" :date (25449 29136) :url "https://github.com/knpatel401/filetree") (fill-column-indicator :source "MELPA" :recipe (:package "fill-column-indicator" :repo "alpaker/fill-column-indicator" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Graphically indicate the fill column" :date (24363 7632) :url "https://github.com/alpaker/fill-column-indicator") (fill-function-arguments :source "MELPA" :recipe (:package "fill-function-arguments" :repo "davidshepherd7/fill-function-arguments" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert function arguments to/from single line" :date (26058 34512) :url "https://github.com/davidshepherd7/fill-function-arguments") (fill-page :source "MELPA" :recipe (:package "fill-page" :repo "jcs-elpa/fill-page" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fill buffer so you don't see empty lines at the end" :date (26150 53200) :url "https://github.com/jcs-elpa/fill-page") (fillcode :source "MELPA" :recipe (:package "fillcode" :fetcher github :repo "snarfed/fillcode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fill (wrap) function calls and expressions in source code" :date (24265 36560) :url "https://github.com/snarfed/fillcode") (filldent :source "MELPA" :recipe (:package "filldent" :fetcher codeberg :repo "acdw/filldent.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fill or indent" :date (25187 5968) :url "https://codeberg.org/acdw/filldent.el") (finalize :source "MELPA" :recipe (:package "finalize" :repo "skeeto/elisp-finalize" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Finalizers for Emacs Lisp" :date (22773 11472) :url "https://github.com/skeeto/elisp-finalize") (find-by-pinyin-dired :source "MELPA" :recipe (:package "find-by-pinyin-dired" :fetcher github :repo "redguardtoo/find-by-pinyin-dired" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find file by first PinYin character of Chinese Hanzi" :date (23166 3024) :url "https://github.com/redguardtoo/find-by-pinyin-dired") (find-dupes-dired :source "MELPA" :recipe (:package "find-dupes-dired" :repo "ShuguangSun/find-dupes-dired" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find dupes and handle in dired" :date (24709 55376) :url "https://github.com/ShuguangSun/find-dupes-dired") (find-file-in-project :source "MELPA" :recipe (:package "find-file-in-project" :repo "redguardtoo/find-file-in-project" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find file/directory and review Diff/Patch/Commit efficiently" :date (25685 28240) :url "https://github.com/redguardtoo/find-file-in-project") (find-file-in-repository :source "MELPA" :recipe (:package "find-file-in-repository" :repo "h/find-file-in-repository" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly find files in a git, mercurial or other repository" :date (24636 1104) :url "https://github.com/h/find-file-in-repository") (find-file-rg :source "MELPA" :recipe (:package "find-file-rg" :fetcher github :repo "muffinmad/emacs-find-file-rg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find file in project using ripgrep" :date (25134 23376) :url "https://github.com/muffinmad/emacs-find-file-rg") (find-temp-file :source "MELPA" :recipe (:package "find-temp-file" :fetcher github :repo "thisirs/find-temp-file" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open quickly a temporary file" :date (26175 56400) :url "https://github.com/thisirs/find-temp-file") (find-things-fast :source "MELPA" :recipe (:package "find-things-fast" :fetcher github :repo "eglaysher/find-things-fast" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find things fast, leveraging the power of git" :date (21850 21200) :url "https://github.com/eglaysher/find-things-fast") (findr :source "MELPA" :recipe (:package "findr" :fetcher github :repo "emacsorphanage/findr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Breadth-first file-finding facility for (X)Emacs" :date (20740 13760) :url "https://github.com/emacsorphanage/findr") (fingers :source "MELPA" :recipe (:package "fingers" :fetcher github :repo "fgeller/fingers.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modal editing with universal text manipulation helpers" :date (22451 32464) :url "https://github.com/fgeller/fingers.el") (finito :source "MELPA" :recipe (:package "finito" :repo "LaurenceWarne/finito.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View and collect books" :date (26405 16720) :url "https://github.com/LaurenceWarne/finito.el") (fiplr :source "MELPA" :recipe (:package "fiplr" :fetcher github :repo "grizzl/fiplr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy Search for Files in Projects" :date (21456 5184) :url "https://github.com/grizzl/fiplr") (fira-code-mode :source "MELPA" :recipe (:package "fira-code-mode" :fetcher github :repo "jming422/fira-code-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Fira Code ligatures using prettify-symbols" :date (26078 19792) :url "https://github.com/jming422/fira-code-mode") (firebase-rules-mode :source "MELPA" :recipe (:package "firebase-rules-mode" :fetcher github :repo "dherbst/firebase-rules-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Editing support for firebase.rules" :date (26186 26704) :url "https://github.com/dherbst/firebase-rules-mode") (firecode-theme :source "MELPA" :recipe (:package "firecode-theme" :fetcher github :repo "emacsfodder/emacs-firecode-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on FireCode (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-firecode-theme") (fireplace :source "MELPA" :recipe (:package "fireplace" :fetcher github :repo "johanvts/emacs-fireplace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A cozy fireplace for emacs" :date (24197 208) :url "https://github.com/johanvts/emacs-fireplace") (firestarter :source "MELPA" :recipe (:package "firestarter" :fetcher git :url "https://depp.brause.cc/firestarter.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Execute (shell) commands on save" :date (24725 43600) :url "https://depp.brause.cc/firestarter.git") (firrtl-mode :source "MELPA" :recipe (:package "firrtl-mode" :repo "IBM/firrtl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for working with FIRRTL files" :date (25955 45520) :url "https://github.com/IBM/firrtl-mode") (firstly-search :source "MELPA" :recipe (:package "firstly-search" :fetcher github :repo "Anoncheg1/firstly-search" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search with any key: Dired, Package, Buffer menu modes" :date (26286 39504) :url "https://github.com/Anoncheg1/firstly-search") (fish-completion :source "MELPA" :recipe (:package "fish-completion" :repo "LemonBreezes/emacs-fish-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fish completion for pcomplete (shell and Eshell)" :date (26183 50512) :url "https://github.com/LemonBreezes/emacs-fish-completion") (fish-mode :source "MELPA" :recipe (:package "fish-mode" :fetcher github :repo "wwwjfy/emacs-fish" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for fish shell scripts" :date (26038 49232) :url "https://github.com/wwwjfy/emacs-fish") (fit-text-scale :source "MELPA" :recipe (:package "fit-text-scale" :repo "marcowahl/fit-text-scale" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fit text by scaling" :date (25036 52304) :url "https://gitlab.com/marcowahl/fit-text-scale") (fix-input :source "MELPA" :recipe (:package "fix-input" :repo "mrkkrp/fix-input" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make input methods play nicely with alternative layouts" :date (25726 19664) :url "https://github.com/mrkkrp/fix-input") (fix-muscle-memory :source "MELPA" :recipe (:package "fix-muscle-memory" :repo "jonnay/fix-muscle-memory" :fetcher github :old-names (emagician-fix-spell-memory) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple hacks to fix muscle memory problems" :date (24798 11472) :url "https://github.com/jonnay/fix-muscle-memory") (fix-word :source "MELPA" :recipe (:package "fix-word" :repo "mrkkrp/fix-word" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convenient word transformation" :date (24659 48976) :url "https://github.com/mrkkrp/fix-word") (fixed-page-mode :source "MELPA" :recipe (:package "fixed-page-mode" :fetcher gitlab :repo "igorwojnicki/fixed-page-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A fixed page length mode" :date (25718 25552) :url "https://gitlab.com/igorwojnicki/fixed-page-mode") (fixmee :source "MELPA" :recipe (:package "fixmee" :repo "rolandwalker/fixmee" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly navigate to FIXME notices in code" :date (25657 48848) :url "https://github.com/rolandwalker/fixmee") (flame :source "MELPA" :recipe (:package "flame" :fetcher github :repo "mschuldt/flame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic generation of flamage, as if we needed more" :date (23193 47952) :url "https://github.com/mschuldt/flame") (flames-of-freedom :source "MELPA" :recipe (:package "flames-of-freedom" :fetcher github :repo "wiz21b/FlamesOfFreedom" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The flames of freedom" :date (24036 10704) :url "https://github.com/wiz21b/FlamesOfFreedom") (flappymacs :source "MELPA" :recipe (:package "flappymacs" :fetcher github :repo "taksatou/flappymacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flappybird clone for emacs" :date (23021 1744) :url "https://github.com/taksatou/flappymacs") (flash-region :source "MELPA" :recipe (:package "flash-region" :fetcher github :repo "Fuco1/flash-region" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flash a region" :date (21055 19520) :url "https://github.com/Fuco1/flash-region") (flatbuffers-mode :source "MELPA" :recipe (:package "flatbuffers-mode" :fetcher github :repo "Asalle/flatbuffers-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing flatbuffers" :date (24808 47312) :url "https://github.com/Asalle/flatbuffers-mode") (flatfluc-theme :source "MELPA" :recipe (:package "flatfluc-theme" :fetcher github :repo "seblemaguer/flatfluc-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom merge of flucui and flatui themes" :date (25785 41040) :url "https://github.com/seblemaguer/flatfluc-theme") (flatland-black-theme :source "MELPA" :recipe (:package "flatland-black-theme" :fetcher github :repo "emacsfodder/emacs-flatland-black-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Flatland Black (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-flatland-black-theme") (flatland-theme :source "MELPA" :recipe (:package "flatland-theme" :fetcher github :repo "gchp/flatland-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple theme for Emacs based on the Flatland theme for Sublime Text" :date (23048 46672) :url "https://github.com/gchp/flatland-emacs") (flatui-dark-theme :source "MELPA" :recipe (:package "flatui-dark-theme" :repo "theasp/flatui-dark-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme with colors from https://flatuicolors.com/" :date (22806 8784) :url "https://github.com/theasp/flatui-dark-theme") (flatui-theme :source "MELPA" :recipe (:package "flatui-theme" :fetcher github :repo "john2x/flatui-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme for Emacs based on flatuicolors.com" :date (22373 46672) :url "https://github.com/john2x/flatui-theme.el") (fleetish-theme :source "MELPA" :recipe (:package "fleetish-theme" :fetcher github :repo "nylar/fleetish-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A take on the JetBrains Fleet theme" :date (25647 13008) :url "https://github.com/nylar/fleetish-emacs-theme") (flex-autopair :source "MELPA" :recipe (:package "flex-autopair" :fetcher github :repo "uk-ar/flex-autopair" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable" :date (20514 50496) :url "https://github.com/uk-ar/flex-autopair") (flex-compile :source "MELPA" :recipe (:package "flex-compile" :fetcher github :repo "plandes/flex-compile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run, evaluate and compile across many languages" :date (26385 31440) :url "https://github.com/plandes/flex-compile") (flex-isearch :source "MELPA" :recipe (:package "flex-isearch" :fetcher github :repo "jpkotta/flex-isearch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flex matching (like ido) in isearch" :date (22719 8016) :url "https://github.com/jpkotta/flex-isearch") (flexoki-themes :source "MELPA" :recipe (:package "flexoki-themes" :fetcher github :repo "crmsnbleyd/flexoki-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An inky color scheme for prose and code" :date (26323 33872) :url "https://github.com/crmsnbleyd/flexoki-emacs-theme") (flim :source "MELPA" :recipe (:package "flim" :fetcher github :repo "wanderlust/flim" :files ("*.texi" "*.el" (:exclude "md5-dl.el" "md5-el.el" "mel-b-dl.el" "sha1-dl.el" "smtpmail.el"))) :description "A library to provide basic features about message representation or encoding" :date (26069 4816) :url "https://github.com/wanderlust/flim") (flimenu :source "MELPA" :recipe (:package "flimenu" :fetcher github :repo "colonelpanic8/flimenu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flatten imenu automatically" :date (24368 25552) :url "https://github.com/colonelpanic8/flimenu") (fliptext :source "MELPA" :recipe (:package "fliptext" :fetcher github :repo "andre-r/fliptext.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Input method for flipping characters upside down" :date (23063 14032) :url "https://github.com/andre-r/fliptext.el") (floobits :source "MELPA" :recipe (:package "floobits" :fetcher github :repo "Floobits/floobits-emacs" :files ("floo" "floobits.el" "floobits.py")) :description "Floobits plugin for real-time collaborative editing" :date (24940 36560) :url "https://github.com/Floobits/floobits-emacs") (flow-js2-mode :source "MELPA" :recipe (:package "flow-js2-mode" :repo "Fuco1/flow-js2-mode" :fetcher github :files ("flow-js2-mode.el")) :description "Support for flow annotations in js2-mode" :date (24050 43600) :url "https://github.com/Fuco1/flow-js2-mode") (flow-minor-mode :source "MELPA" :recipe (:package "flow-minor-mode" :fetcher github :repo "an-sh/flow-minor-mode" :old-names (flow-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flow type mode based on web-mode" :date (24402 43728) :url "https://github.com/an-sh/flow-minor-mode") (flower :source "MELPA" :recipe (:package "flower" :repo "FlowerAutomation/flower" :files (:defaults "project.clj") :fetcher github) :description "Emacs task tracker client" :date (25177 56528) :url "https://github.com/FlowerAutomation/flower") (flucui-themes :source "MELPA" :recipe (:package "flucui-themes" :fetcher github :repo "MetroWind/flucui-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom theme inspired by the Flat UI palette" :date (24374 64336) :url "https://github.com/MetroWind/flucui-theme") (flutter :source "MELPA" :recipe (:package "flutter" :repo "amake/flutter.el" :fetcher github :files ("flutter.el" "flutter-project.el" "flutter-l10n.el")) :description "Tools for working with Flutter SDK" :date (26311 42704) :url "https://github.com/amake/flutter.el") (flutter-l10n-flycheck :source "MELPA" :recipe (:package "flutter-l10n-flycheck" :repo "amake/flutter.el" :fetcher github :files ("flutter-l10n-flycheck.el")) :description "Flycheck checker for intl_translation" :date (26311 42704) :url "https://github.com/amake/flutter.el") (fluxus-mode :source "MELPA" :recipe (:package "fluxus-mode" :fetcher github :repo "defaultxr/fluxus-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for interfacing with Fluxus" :date (24815 20560) :url "https://github.com/defaultxr/fluxus-mode") (flx :source "MELPA" :recipe (:package "flx" :repo "lewang/flx" :fetcher github :files ("flx.el")) :description "Fuzzy matching with good sorting" :date (26047 64208) :url "https://github.com/lewang/flx") (flx-ido :source "MELPA" :recipe (:package "flx-ido" :repo "lewang/flx" :fetcher github :files ("flx-ido.el")) :description "Flx integration for ido" :date (26047 64208) :url "https://github.com/lewang/flx") (flx-isearch :source "MELPA" :recipe (:package "flx-isearch" :repo "PythonNut/flx-isearch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy incremental searching for emacs" :date (24019 1616) :url "https://github.com/PythonNut/flx-isearch") (flycheck :source "MELPA" :recipe (:package "flycheck" :repo "flycheck/flycheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "On-the-fly syntax checking" :date (26274 48336) :url "https://github.com/flycheck/flycheck") (flycheck-actionlint :source "MELPA" :recipe (:package "flycheck-actionlint" :fetcher github :repo "tirimia/flycheck-actionlint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration for actionlint" :date (25801 29264) :url "https://github.com/tirimia/flycheck-actionlint") (flycheck-ameba :source "MELPA" :recipe (:package "flycheck-ameba" :fetcher github :repo "crystal-ameba/ameba.el" :files ("flycheck-ameba.el")) :description "Add support for Ameba to Flycheck" :date (24067 52688) :url "https://github.com/crystal-ameba/ameba.el") (flycheck-apertium :source "MELPA" :recipe (:package "flycheck-apertium" :fetcher github :repo "unhammer/flycheck-apertium" :files ("flycheck-apertium.el" "dix.xsd")) :description "Apertium checkers in flycheck" :date (23566 54224) :url "https://github.com/unhammer/flycheck-apertium") (flycheck-aspell :source "MELPA" :recipe (:package "flycheck-aspell" :fetcher github :repo "leotaku/flycheck-aspell" :files ("flycheck-aspell.el")) :description "Aspell checker for flycheck" :date (26001 54864) :url "https://github.com/leotaku/flycheck-aspell") (flycheck-ats2 :source "MELPA" :recipe (:package "flycheck-ats2" :repo "drvink/flycheck-ats2" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: ATS2 support" :date (22704 40656) :url "https://github.com/drvink/flycheck-ats2") (flycheck-bashate :source "MELPA" :recipe (:package "flycheck-bashate" :fetcher github :repo "alexmurray/flycheck-bashate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate bashate with flycheck" :date (24307 48848) :url "https://github.com/alexmurray/flycheck-bashate") (flycheck-buf-lint :source "MELPA" :recipe (:package "flycheck-buf-lint" :fetcher github :repo "shuxiao9058/flycheck-buf-lint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for protobuf with buf.build" :date (26216 47824) :url "https://github.com/shuxiao9058/flycheck-buf-lint") (flycheck-cask :source "MELPA" :recipe (:package "flycheck-cask" :repo "flycheck/flycheck-cask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cask support in Flycheck" :date (26047 64208) :url "https://github.com/flycheck/flycheck-cask") (flycheck-cfn :source "MELPA" :recipe (:package "flycheck-cfn" :fetcher gitlab :repo "worr/cfn-mode" :files ("flycheck-cfn/flycheck-cfn.el")) :description "Flycheck backend for AWS cloudformation" :date (26175 56400) :url "https://gitlab.com/worr/cfn-mode") (flycheck-checkbashisms :source "MELPA" :recipe (:package "flycheck-checkbashisms" :repo "cuonglm/flycheck-checkbashisms" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Checkbashisms checker for flycheck" :date (25614 15696) :url "https://github.com/cuonglm/flycheck-checkbashisms") (flycheck-checkpatch :source "MELPA" :recipe (:package "flycheck-checkpatch" :fetcher github :repo "zpp0/flycheck-checkpatch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for checkpatch.pl tool" :date (26294 33616) :url "https://github.com/zpp0/flycheck-checkpatch") (flycheck-clang-analyzer :source "MELPA" :recipe (:package "flycheck-clang-analyzer" :fetcher github :repo "alexmurray/flycheck-clang-analyzer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate Clang Analyzer with flycheck" :date (25015 46160) :url "https://github.com/alexmurray/flycheck-clang-analyzer") (flycheck-clang-tidy :source "MELPA" :recipe (:package "flycheck-clang-tidy" :fetcher github :repo "ch1bo/flycheck-clang-tidy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck syntax checker using clang-tidy" :date (24496 17744) :url "https://github.com/ch1bo/flycheck-clang-tidy") (flycheck-clangcheck :source "MELPA" :recipe (:package "flycheck-clangcheck" :fetcher github :repo "kumar8600/flycheck-clangcheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flycheck checker difinition for ClangCheck" :date (21921 33744) :url "https://github.com/kumar8600/flycheck-clangcheck") (flycheck-clj-kondo :source "MELPA" :recipe (:package "flycheck-clj-kondo" :fetcher github :repo "borkdude/flycheck-clj-kondo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add clj-kondo linter to flycheck" :date (26065 7760) :url "https://github.com/borkdude/flycheck-clj-kondo") (flycheck-clojure :source "MELPA" :recipe (:package "flycheck-clojure" :fetcher github :repo "clojure-emacs/squiggly-clojure" :files ("elisp/flycheck-clojure/*.el")) :description "Flycheck: Clojure support" :date (24053 19792) :url "https://github.com/clojure-emacs/squiggly-clojure") (flycheck-clolyze :source "MELPA" :recipe (:package "flycheck-clolyze" :fetcher github :repo "DLaps/flycheck-clolyze" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add Clolyze to to flycheck" :date (23740 55760) :url "https://github.com/DLaps/flycheck-clolyze") (flycheck-color-mode-line :source "MELPA" :recipe (:package "flycheck-color-mode-line" :repo "flycheck/flycheck-color-mode-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change mode line color with Flycheck status" :date (25527 14928) :url "https://github.com/flycheck/flycheck-color-mode-line") (flycheck-coverity :source "MELPA" :recipe (:package "flycheck-coverity" :fetcher github :repo "alexmurray/flycheck-coverity" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate Coverity with flycheck" :date (22874 45136) :url "https://github.com/alexmurray/flycheck-coverity") (flycheck-credo :source "MELPA" :recipe (:package "flycheck-credo" :fetcher github :repo "aaronjensen/flycheck-credo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for elixir credo" :date (26007 7248) :url "https://github.com/aaronjensen/flycheck-credo") (flycheck-crystal :source "MELPA" :recipe (:package "flycheck-crystal" :repo "crystal-lang-tools/emacs-crystal-mode" :fetcher github :files ("flycheck-crystal.el")) :description "Add support for Crystal to Flycheck" :date (24361 52304) :url "https://github.com/crystal-lang-tools/emacs-crystal-mode") (flycheck-css-colorguard :source "MELPA" :recipe (:package "flycheck-css-colorguard" :fetcher github :repo "Simplify/flycheck-css-colorguard" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Detect similar colors in CSS" :date (22550 24400) :url "https://github.com/Simplify/flycheck-css-colorguard") (flycheck-cstyle :source "MELPA" :recipe (:package "flycheck-cstyle" :fetcher github :repo "alexmurray/flycheck-cstyle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate cstyle with flycheck" :date (22476 35664) :url "https://github.com/alexmurray/flycheck-cstyle") (flycheck-cython :source "MELPA" :recipe (:package "flycheck-cython" :fetcher github :repo "lbolla/emacs-flycheck-cython" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support Cython in flycheck" :date (22901 3664) :url "https://github.com/lbolla/emacs-flycheck-cython") (flycheck-d-unittest :source "MELPA" :recipe (:package "flycheck-d-unittest" :repo "flycheck/flycheck-d-unittest" :fetcher github :old-names (flycheck-d) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add D unittest support to flycheck" :date (22336 52304) :url "https://github.com/flycheck/flycheck-d-unittest") (flycheck-dedukti :source "MELPA" :recipe (:package "flycheck-dedukti" :fetcher github :repo "rafoo/flycheck-dedukti" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration of Dedukti" :date (23035 34640) :url "https://github.com/rafoo/flycheck-dedukti") (flycheck-deno :source "MELPA" :recipe (:package "flycheck-deno" :repo "flycheck/flycheck-deno" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck for deno-lint" :date (26001 54864) :url "https://github.com/flycheck/flycheck-deno") (flycheck-dialyxir :source "MELPA" :recipe (:package "flycheck-dialyxir" :fetcher github :repo "aaronjensen/flycheck-dialyxir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for elixir dialyxir" :date (22808 50512) :url "https://github.com/aaronjensen/flycheck-dialyxir") (flycheck-dialyzer :source "MELPA" :recipe (:package "flycheck-dialyzer" :fetcher github :repo "lbolla/emacs-flycheck-dialyzer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support dialyzer in flycheck" :date (22261 42704) :url "https://github.com/lbolla/emacs-flycheck-dialyzer") (flycheck-dmd-dub :source "MELPA" :recipe (:package "flycheck-dmd-dub" :repo "atilaneves/flycheck-dmd-dub" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sets flycheck-dmd-include-paths from dub package information" :date (24691 25424) :url "https://github.com/atilaneves/flycheck-dmd-dub") (flycheck-dogma :source "MELPA" :recipe (:package "flycheck-dogma" :fetcher github :repo "aaronjensen/flycheck-dogma" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for elixir dogma" :date (22663 49232) :url "https://github.com/aaronjensen/flycheck-dogma") (flycheck-drstring :source "MELPA" :recipe (:package "flycheck-drstring" :fetcher github :repo "danielmartin/flycheck-drstring" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Doc linting for Swift using DrString" :date (24128 29392) :url "https://github.com/danielmartin/flycheck-drstring") (flycheck-dtrace :source "MELPA" :recipe (:package "flycheck-dtrace" :fetcher github :repo "juergenhoetzel/flycheck-dtrace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: DTrace support" :date (23436 20304) :url "https://github.com/juergenhoetzel/flycheck-dtrace") (flycheck-eask :source "MELPA" :recipe (:package "flycheck-eask" :repo "flycheck/flycheck-eask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eask support in Flycheck" :date (26071 46544) :url "https://github.com/flycheck/flycheck-eask") (flycheck-eglot :source "MELPA" :recipe (:package "flycheck-eglot" :fetcher github :repo "flycheck/flycheck-eglot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for eglot" :date (26357 52048) :url "https://github.com/flycheck/flycheck-eglot") (flycheck-eldev :source "MELPA" :recipe (:package "flycheck-eldev" :repo "flycheck/flycheck-eldev" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldev support in Flycheck" :date (25846 17744) :url "https://github.com/flycheck/flycheck-eldev") (flycheck-elixir :source "MELPA" :recipe (:package "flycheck-elixir" :fetcher github :repo "lbolla/emacs-flycheck-elixir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support Elixir in flycheck" :date (24692 46288) :url "https://github.com/lbolla/emacs-flycheck-elixir") (flycheck-elm :source "MELPA" :recipe (:package "flycheck-elm" :fetcher github :repo "bsermons/flycheck-elm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for the elm language" :date (23522 208) :url "https://github.com/bsermons/flycheck-elm") (flycheck-elsa :source "MELPA" :recipe (:package "flycheck-elsa" :fetcher github :repo "emacs-elsa/flycheck-elsa" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck for Elsa" :date (25582 39248) :url "https://github.com/emacs-elsa/flycheck-elsa") (flycheck-falco-rules :source "MELPA" :recipe (:package "flycheck-falco-rules" :fetcher github :repo "falcosecurity/flycheck-falco-rules" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "On-the-fly syntax checking for falco rules files" :date (25905 39120) :url "https://github.com/falcosecurity/flycheck-falco-rules") (flycheck-flawfinder :source "MELPA" :recipe (:package "flycheck-flawfinder" :fetcher github :repo "alexmurray/flycheck-flawfinder" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate flawfinder with flycheck" :date (25015 46160) :url "https://github.com/alexmurray/flycheck-flawfinder") (flycheck-flow :source "MELPA" :recipe (:package "flycheck-flow" :fetcher github :repo "lbolla/emacs-flycheck-flow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support Flow in flycheck" :date (23676 16464) :url "https://github.com/lbolla/emacs-flycheck-flow") (flycheck-ghcmod :source "MELPA" :recipe (:package "flycheck-ghcmod" :fetcher github :repo "scturtle/flycheck-ghcmod" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flycheck checker for Haskell using ghcmod" :date (21685 34640) :url "https://github.com/scturtle/flycheck-ghcmod") (flycheck-golangci-lint :source "MELPA" :recipe (:package "flycheck-golangci-lint" :repo "weijiangan/flycheck-golangci-lint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for golangci-lint" :date (26117 55888) :url "https://github.com/weijiangan/flycheck-golangci-lint") (flycheck-gometalinter :source "MELPA" :recipe (:package "flycheck-gometalinter" :repo "favadi/flycheck-gometalinter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for gometalinter" :date (23262 18768) :url "https://github.com/favadi/flycheck-gometalinter") (flycheck-google-cpplint :source "MELPA" :recipe (:package "flycheck-google-cpplint" :fetcher github :repo "flycheck/flycheck-google-cpplint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help to comply with the Google C++ Style Guide" :date (26001 54864) :url "https://github.com/flycheck/flycheck-google-cpplint") (flycheck-gradle :source "MELPA" :recipe (:package "flycheck-gradle" :fetcher github :repo "jojojames/flycheck-gradle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck extension for Gradle" :date (23690 49360) :url "https://github.com/jojojames/flycheck-gradle") (flycheck-grammalecte :source "MELPA" :recipe (:package "flycheck-grammalecte" :fetcher git :url "https://git.umaneti.net/flycheck-grammalecte/" :files (:defaults "*.py" (:exclude "test-profile.el"))) :description "Integrate Grammalecte with Flycheck" :date (25724 64336) :url "https://git.umaneti.net/flycheck-grammalecte/") (flycheck-grammarly :source "MELPA" :recipe (:package "flycheck-grammarly" :repo "emacs-grammarly/flycheck-grammarly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grammarly support for Flycheck" :date (26001 54864) :url "https://github.com/emacs-grammarly/flycheck-grammarly") (flycheck-guile :source "MELPA" :recipe (:package "flycheck-guile" :fetcher github :repo "flatwhatson/flycheck-guile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flycheck checker for GNU Guile" :date (25644 36816) :url "https://github.com/flatwhatson/flycheck-guile") (flycheck-haskell :source "MELPA" :recipe (:package "flycheck-haskell" :fetcher github :repo "flycheck/flycheck-haskell" :files (:defaults "*.hs")) :description "Flycheck: Automatic Haskell configuration" :date (25765 55760) :url "https://github.com/flycheck/flycheck-haskell") (flycheck-hdevtools :source "MELPA" :recipe (:package "flycheck-hdevtools" :fetcher github :repo "flycheck/flycheck-hdevtools" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flycheck checker for Haskell using hdevtools" :date (22504 15056) :url "https://github.com/flycheck/flycheck-hdevtools") (flycheck-hl-todo :source "MELPA" :recipe (:package "flycheck-hl-todo" :repo "alvarogonzalezsotillo/flycheck-hl-todo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display hl-todo keywords in flycheck" :date (25808 2512) :url "https://github.com/alvarogonzalezsotillo/flycheck-hl-todo") (flycheck-hledger :source "MELPA" :recipe (:package "flycheck-hledger" :fetcher github :repo "DamienCassou/flycheck-hledger" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck module to check hledger journals" :date (26399 64336) :url "https://github.com/DamienCassou/flycheck-hledger") (flycheck-indent :source "MELPA" :recipe (:package "flycheck-indent" :fetcher github :repo "conao3/indent-lint.el" :files ("flycheck-indent.el")) :description "Indent-lint frontend for flycheck" :date (24112 41168) :url "https://github.com/conao3/indent-lint.el") (flycheck-indicator :source "MELPA" :recipe (:package "flycheck-indicator" :fetcher github :repo "gexplorer/flycheck-indicator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A fancy mode line indicator for `flycheck-mode'" :date (24194 24016) :url "https://github.com/gexplorer/flycheck-indicator") (flycheck-ini-pyinilint :source "MELPA" :recipe (:package "flycheck-ini-pyinilint" :repo "danieljrmay/flycheck-ini-pyinilint" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration for PyINILint" :date (23686 52304) :url "https://gitlab.com/danieljrmay/flycheck-ini-pyinilint") (flycheck-inline :source "MELPA" :recipe (:package "flycheck-inline" :repo "flycheck/flycheck-inline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display Flycheck errors inline" :date (26252 21328) :url "https://github.com/flycheck/flycheck-inline") (flycheck-irony :source "MELPA" :recipe (:package "flycheck-irony" :fetcher github :repo "Sarcasm/flycheck-irony" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: C/C++ support via Irony" :date (23316 22224) :url "https://github.com/Sarcasm/flycheck-irony") (flycheck-jest :source "MELPA" :recipe (:package "flycheck-jest" :fetcher github :repo "jojojames/flycheck-jest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck extension for Jest" :date (25235 57040) :url "https://github.com/jojojames/flycheck-jest") (flycheck-joker :source "MELPA" :recipe (:package "flycheck-joker" :fetcher github :repo "candid82/flycheck-joker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add Clojure syntax checker (via Joker) to flycheck" :date (24210 12240) :url "https://github.com/candid82/flycheck-joker") (flycheck-julia :source "MELPA" :recipe (:package "flycheck-julia" :repo "gdkrmr/flycheck-julia" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Julia support for Flycheck" :date (22907 42448) :url "https://github.com/gdkrmr/flycheck-julia") (flycheck-keg :source "MELPA" :recipe (:package "flycheck-keg" :fetcher github :repo "conao3/keg.el" :files ("flycheck-keg.el")) :description "Flycheck for Keg projects" :date (24348 40272) :url "https://github.com/conao3/keg.el") (flycheck-kotlin :source "MELPA" :recipe (:package "flycheck-kotlin" :fetcher github :repo "whirm/flycheck-kotlin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support kotlin in flycheck" :date (25533 53712) :url "https://github.com/whirm/flycheck-kotlin") (flycheck-languagetool :source "MELPA" :recipe (:package "flycheck-languagetool" :repo "emacs-languagetool/flycheck-languagetool" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for LanguageTool" :date (26385 31440) :url "https://github.com/emacs-languagetool/flycheck-languagetool") (flycheck-ledger :source "MELPA" :recipe (:package "flycheck-ledger" :fetcher github :repo "purcell/flycheck-ledger" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration for ledger files" :date (24158 50512) :url "https://github.com/purcell/flycheck-ledger") (flycheck-lilypond :source "MELPA" :recipe (:package "flycheck-lilypond" :fetcher github :repo "hinrik/flycheck-lilypond" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LilyPond support in Flycheck" :date (24924 48336) :url "https://github.com/hinrik/flycheck-lilypond") (flycheck-liquidhs :source "MELPA" :recipe (:package "flycheck-liquidhs" :fetcher github :repo "ucsd-progsys/flycheck-liquidhs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flycheck checker for Haskell using liquid (i.e. liquidhaskell)" :date (22765 17360) :url "https://github.com/ucsd-progsys/flycheck-liquidhs.el") (flycheck-mercury :source "MELPA" :recipe (:package "flycheck-mercury" :fetcher github :repo "flycheck/flycheck-mercury" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mercury support in Flycheck" :date (23536 33104) :url "https://github.com/flycheck/flycheck-mercury") (flycheck-mmark :source "MELPA" :recipe (:package "flycheck-mmark" :repo "mmark-md/flycheck-mmark" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for the MMark markdown processor" :date (23848 62672) :url "https://github.com/mmark-md/flycheck-mmark") (flycheck-mypy :source "MELPA" :recipe (:package "flycheck-mypy" :fetcher github :repo "lbolla/emacs-flycheck-mypy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support mypy in flycheck" :date (24091 35024) :url "https://github.com/lbolla/emacs-flycheck-mypy") (flycheck-nim :source "MELPA" :recipe (:package "flycheck-nim" :repo "ALSchwalm/flycheck-nim" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Defines a flycheck syntax checker for nim" :date (23949 9936) :url "https://github.com/ALSchwalm/flycheck-nim") (flycheck-nimsuggest :source "MELPA" :recipe (:package "flycheck-nimsuggest" :fetcher github :repo "yuutayamada/flycheck-nimsuggest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck backend for Nim using nimsuggest" :date (23026 19664) :url "https://github.com/yuutayamada/flycheck-nimsuggest") (flycheck-objc-clang :source "MELPA" :recipe (:package "flycheck-objc-clang" :fetcher github :repo "GyazSquare/flycheck-objc-clang" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: Objective-C support using Clang" :date (24891 51024) :url "https://github.com/GyazSquare/flycheck-objc-clang") (flycheck-ocaml :source "MELPA" :recipe (:package "flycheck-ocaml" :fetcher github :repo "flycheck/flycheck-ocaml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: OCaml support" :date (25316 19024) :url "https://github.com/flycheck/flycheck-ocaml") (flycheck-package :source "MELPA" :recipe (:package "flycheck-package" :fetcher github :repo "purcell/flycheck-package" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flycheck checker for elisp package authors" :date (24726 64464) :url "https://github.com/purcell/flycheck-package") (flycheck-pact :source "MELPA" :recipe (:package "flycheck-pact" :fetcher github :repo "kadena-io/flycheck-pact" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for pact-mode" :date (23458 47312) :url "https://github.com/kadena-io/flycheck-pact") (flycheck-pest :source "MELPA" :recipe (:package "flycheck-pest" :repo "ksqsf/pest-mode" :fetcher github :files ("flycheck-pest.el")) :description "Flycheck integration for Pest -" :date (24327 34128) :url "https://github.com/ksqsf/pest-mode") (flycheck-php-noverify :source "MELPA" :recipe (:package "flycheck-php-noverify" :fetcher github :repo "Junker/flycheck-php-noverify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck checker for PHP Noverify linter" :date (24923 27472) :url "https://github.com/Junker/flycheck-php-noverify") (flycheck-phpstan :source "MELPA" :recipe (:package "flycheck-phpstan" :fetcher github :repo "emacs-php/phpstan.el" :files ("flycheck-phpstan.el")) :description "Flycheck integration for PHPStan" :date (26195 41680) :url "https://github.com/emacs-php/phpstan.el") (flycheck-pkg-config :source "MELPA" :recipe (:package "flycheck-pkg-config" :repo "Wilfred/flycheck-pkg-config" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configure flycheck using pkg-config" :date (25544 24016) :url "https://github.com/Wilfred/flycheck-pkg-config") (flycheck-plantuml :source "MELPA" :recipe (:package "flycheck-plantuml" :fetcher github :repo "alexmurray/flycheck-plantuml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate plantuml with flycheck" :date (23014 28496) :url "https://github.com/alexmurray/flycheck-plantuml") (flycheck-pony :source "MELPA" :recipe (:package "flycheck-pony" :fetcher github :repo "ponylang/flycheck-pony" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pony support in Flycheck" :date (24580 42320) :url "https://github.com/ponylang/flycheck-pony") (flycheck-popup-tip :source "MELPA" :recipe (:package "flycheck-popup-tip" :fetcher github :repo "flycheck/flycheck-popup-tip" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display Flycheck error messages using popup.el" :date (22926 6864) :url "https://github.com/flycheck/flycheck-popup-tip") (flycheck-pos-tip :source "MELPA" :recipe (:package "flycheck-pos-tip" :repo "flycheck/flycheck-pos-tip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display Flycheck errors in GUI tooltips" :date (24255 720) :url "https://github.com/flycheck/flycheck-pos-tip") (flycheck-posframe :source "MELPA" :recipe (:package "flycheck-posframe" :fetcher github :repo "alexmurray/flycheck-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck error messages using posframe.el" :date (25296 33744) :url "https://github.com/alexmurray/flycheck-posframe") (flycheck-projectile :source "MELPA" :recipe (:package "flycheck-projectile" :fetcher github :repo "nbfalcon/flycheck-projectile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Project-wide errors" :date (24476 32464) :url "https://github.com/nbfalcon/flycheck-projectile") (flycheck-prospector :source "MELPA" :recipe (:package "flycheck-prospector" :repo "chocoelho/flycheck-prospector" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support prospector in flycheck" :date (23301 54864) :url "https://github.com/chocoelho/flycheck-prospector") (flycheck-psalm :source "MELPA" :recipe (:package "flycheck-psalm" :fetcher github :repo "emacs-php/psalm.el" :files ("flycheck-psalm.el")) :description "Flycheck integration for Psalm" :date (24919 30416) :url "https://github.com/emacs-php/psalm.el") (flycheck-pycheckers :source "MELPA" :recipe (:package "flycheck-pycheckers" :fetcher github :repo "msherry/flycheck-pycheckers" :files (:defaults ("bin" "bin/pycheckers.py"))) :description "Multiple syntax checker for Python, using Flycheck" :date (26303 48592) :url "https://github.com/msherry/flycheck-pycheckers") (flycheck-pyflakes :source "MELPA" :recipe (:package "flycheck-pyflakes" :repo "Wilfred/flycheck-pyflakes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support pyflakes in flycheck" :date (26032 10448) :url "https://github.com/Wilfred/flycheck-pyflakes") (flycheck-pyre :source "MELPA" :recipe (:package "flycheck-pyre" :fetcher github :repo "linnik/flycheck-pyre" :files (:defaults "bin")) :description "Support Pyre in flycheck" :date (23653 54992) :url "https://github.com/linnik/flycheck-pyre") (flycheck-raku :source "MELPA" :recipe (:package "flycheck-raku" :fetcher github :repo "Raku/flycheck-raku" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Raku support in Flycheck" :date (25183 8912) :url "https://github.com/Raku/flycheck-raku") (flycheck-relint :source "MELPA" :recipe (:package "flycheck-relint" :fetcher github :repo "purcell/flycheck-relint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flycheck checker for elisp regular expressions" :date (26335 25040) :url "https://github.com/purcell/flycheck-relint") (flycheck-rtags :source "MELPA" :recipe (:package "flycheck-rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/flycheck-rtags.el")) :description "RTags Flycheck integration" :date (24062 34768) :url "https://github.com/Andersbakken/rtags") (flycheck-rust :source "MELPA" :recipe (:package "flycheck-rust" :repo "flycheck/flycheck-rust" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: Rust additions and Cargo support" :date (26047 64208) :url "https://github.com/flycheck/flycheck-rust") (flycheck-stan :source "MELPA" :recipe (:package "flycheck-stan" :fetcher github :repo "stan-dev/stan-mode" :files ("flycheck-stan/*.el" "flycheck-stan/error_msgs.txt" (:exclude "flycheck-stan/test-*.el" "flycheck-stan/flycheck-stan-error-msgs.el"))) :description "Add Stan support for Flycheck" :date (24995 60880) :url "https://github.com/stan-dev/stan-mode") (flycheck-status-emoji :source "MELPA" :recipe (:package "flycheck-status-emoji" :fetcher github :repo "liblit/flycheck-status-emoji" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck status using cute, compact emoji" :date (23291 19024) :url "https://github.com/liblit/flycheck-status-emoji") (flycheck-swift :source "MELPA" :recipe (:package "flycheck-swift" :repo "swift-emacs/flycheck-swift" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck extension for Apple's Swift" :date (22669 1616) :url "https://github.com/swift-emacs/flycheck-swift") (flycheck-swift3 :source "MELPA" :recipe (:package "flycheck-swift3" :fetcher github :repo "GyazSquare/flycheck-swift3" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: Swift support for Apple swift-mode" :date (25514 2896) :url "https://github.com/GyazSquare/flycheck-swift3") (flycheck-swiftlint :source "MELPA" :recipe (:package "flycheck-swiftlint" :fetcher github :repo "jojojames/flycheck-swiftlint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck extension for Swiftlint" :date (23431 2384) :url "https://github.com/jojojames/flycheck-swiftlint") (flycheck-swiftx :source "MELPA" :recipe (:package "flycheck-swiftx" :fetcher github :repo "nhojb/flycheck-swiftx" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck: Swift backend" :date (24373 43472) :url "https://github.com/nhojb/flycheck-swiftx") (flycheck-tcl :source "MELPA" :recipe (:package "flycheck-tcl" :fetcher github :repo "nwidger/flycheck-tcl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flycheck checker for Tcl using tclchecker" :date (23225 24400) :url "https://github.com/nwidger/flycheck-tcl") (flycheck-tip :source "MELPA" :recipe (:package "flycheck-tip" :repo "yuutayamada/flycheck-tip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck/flymake errors by tooltip" :date (23017 4688) :url "https://github.com/yuutayamada/flycheck-tip") (flycheck-title :source "MELPA" :recipe (:package "flycheck-title" :repo "Wilfred/flycheck-title" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck errors in the frame title" :date (24662 25168) :url "https://github.com/Wilfred/flycheck-title") (flycheck-vale :source "MELPA" :recipe (:package "flycheck-vale" :fetcher github :repo "abingham/flycheck-vale" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration for vale" :date (25396 46544) :url "https://github.com/abingham/flycheck-vale") (flycheck-vdm :source "MELPA" :recipe (:package "flycheck-vdm" :fetcher github :repo "peterwvj/vdm-mode" :files ("flycheck-vdm.el")) :description "Syntax checking for vdm-mode" :date (23676 16464) :url "https://github.com/peterwvj/vdm-mode") (flycheck-xcode :source "MELPA" :recipe (:package "flycheck-xcode" :fetcher github :repo "jojojames/flycheck-xcode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck extension for Apple's Xcode" :date (23140 65360) :url "https://github.com/jojojames/flycheck-xcode") (flycheck-yamllint :source "MELPA" :recipe (:package "flycheck-yamllint" :repo "krzysztof-magosa/flycheck-yamllint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck integration for YAMLLint" :date (22742 55888) :url "https://github.com/krzysztof-magosa/flycheck-yamllint") (flycheck-yang :source "MELPA" :recipe (:package "flycheck-yang" :repo "andaru/flycheck-yang" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "YANG flycheck checker" :date (23205 39120) :url "https://github.com/andaru/flycheck-yang") (flycheck-ycmd :source "MELPA" :recipe (:package "flycheck-ycmd" :fetcher github :repo "abingham/emacs-ycmd" :files ("flycheck-ycmd.el")) :description "Flycheck integration for ycmd" :date (23492 65488) :url "https://github.com/abingham/emacs-ycmd") (flymake-actionlint :source "MELPA" :recipe (:package "flymake-actionlint" :fetcher github :repo "ROCKTAKEY/flymake-actionlint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake handler for actionlint" :date (26315 39760) :url "https://github.com/ROCKTAKEY/flymake-actionlint") (flymake-ansible-lint :source "MELPA" :recipe (:package "flymake-ansible-lint" :fetcher github :repo "jamescherti/flymake-ansible-lint.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake backend for ansible-lint" :date (26396 1744) :url "https://github.com/jamescherti/flymake-ansible-lint.el") (flymake-aspell :source "MELPA" :recipe (:package "flymake-aspell" :fetcher github :repo "leotaku/flycheck-aspell" :files ("flymake-aspell.el")) :description "Aspell checker for flymake" :date (26001 54864) :url "https://github.com/leotaku/flycheck-aspell") (flymake-bashate :source "MELPA" :recipe (:package "flymake-bashate" :fetcher github :repo "jamescherti/flymake-bashate.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake backend for bashate, a Bash scripts style checker" :date (26345 60880) :url "https://github.com/jamescherti/flymake-bashate.el") (flymake-biome :source "MELPA" :recipe (:package "flymake-biome" :fetcher github :repo "erickgnavar/flymake-biome" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake plugin for Javascript files using biome" :date (26370 64080) :url "https://github.com/erickgnavar/flymake-biome") (flymake-clippy :source "MELPA" :recipe (:package "flymake-clippy" :fetcher github :repo "mgmarlow/flymake-clippy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake backend for Clippy" :date (25922 48208) :url "https://github.com/mgmarlow/flymake-clippy") (flymake-coffee :source "MELPA" :recipe (:package "flymake-coffee" :repo "purcell/flymake-coffee" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for coffee script" :date (22899 48336) :url "https://github.com/purcell/flymake-coffee") (flymake-collection :source "MELPA" :recipe (:package "flymake-collection" :fetcher github :repo "mohkale/flymake-collection" :files (:defaults "src/*.el" "src/checkers/*.el") :old-names (flymake-rest)) :description "Collection of checkers for flymake, bringing flymake to the level of flycheck" :date (26326 10064) :url "https://github.com/mohkale/flymake-collection") (flymake-cspell :source "MELPA" :recipe (:package "flymake-cspell" :fetcher github :repo "fritzgrabo/flymake-cspell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake backend for CSpell" :date (26084 58576) :url "https://github.com/fritzgrabo/flymake-cspell") (flymake-css :source "MELPA" :recipe (:package "flymake-css" :repo "purcell/flymake-css" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake support for css using csslint" :date (22899 48336) :url "https://github.com/purcell/flymake-css") (flymake-cursor :source "MELPA" :recipe (:package "flymake-cursor" :repo "flymake/emacs-flymake-cursor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flymake messages in the minibuffer after delay" :date (25204 15056) :url "https://github.com/flymake/emacs-flymake-cursor") (flymake-diagnostic-at-point :source "MELPA" :recipe (:package "flymake-diagnostic-at-point" :repo "meqif/flymake-diagnostic-at-point" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display flymake diagnostics at point" :date (23411 17104) :url "https://github.com/meqif/flymake-diagnostic-at-point") (flymake-eask :source "MELPA" :recipe (:package "flymake-eask" :repo "flymake/flymake-eask" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eask support in Flymake" :date (26071 46544) :url "https://github.com/flymake/flymake-eask") (flymake-easy :source "MELPA" :recipe (:package "flymake-easy" :fetcher github :repo "purcell/flymake-easy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers for easily building flymake checkers" :date (26232 36048) :url "https://github.com/purcell/flymake-easy") (flymake-eldev :source "MELPA" :recipe (:package "flymake-eldev" :repo "emacs-eldev/flymake-eldev" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldev support in Flymake" :date (26145 35280) :url "https://github.com/emacs-eldev/flymake-eldev") (flymake-elisp-config :source "MELPA" :recipe (:package "flymake-elisp-config" :fetcher github :repo "ROCKTAKEY/flymake-elisp-config" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Setup load-path for flymake on Emacs Lisp mode" :date (25772 29008) :url "https://github.com/ROCKTAKEY/flymake-elisp-config") (flymake-elixir :source "MELPA" :recipe (:package "flymake-elixir" :repo "syl20bnr/flymake-elixir" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for elixir-mode .ex files" :date (20997 19008) :url "https://github.com/syl20bnr/flymake-elixir") (flymake-eslint :source "MELPA" :recipe (:package "flymake-eslint" :repo "orzechowskid/flymake-eslint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake backend for Javascript using eslint" :date (26355 10320) :url "https://github.com/orzechowskid/flymake-eslint") (flymake-fennel :source "MELPA" :recipe (:package "flymake-fennel" :fetcher github :repo "mgmarlow/flymake-fennel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake backend for Fennel" :date (25943 54352) :url "https://github.com/mgmarlow/flymake-fennel") (flymake-flycheck :source "MELPA" :recipe (:package "flymake-flycheck" :fetcher github :repo "purcell/flymake-flycheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use flycheck checkers as flymake backends" :date (25833 5712) :url "https://github.com/purcell/flymake-flycheck") (flymake-gjshint :source "MELPA" :recipe (:package "flymake-gjshint" :repo "yasuyk/flymake-gjshint-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for javascript using both jshint and gjslint" :date (20817 65088) :url "https://github.com/yasuyk/flymake-gjshint-el") (flymake-go :source "MELPA" :recipe (:package "flymake-go" :fetcher github :repo "robert-zaremba/flymake-go" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for go-mode files" :date (21924 9936) :url "https://github.com/robert-zaremba/flymake-go") (flymake-go-staticcheck :source "MELPA" :recipe (:package "flymake-go-staticcheck" :repo "s-kostyaev/flymake-go-staticcheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Go staticcheck linter for flymake" :date (25322 57808) :url "https://github.com/s-kostyaev/flymake-go-staticcheck") (flymake-golangci :source "MELPA" :recipe (:package "flymake-golangci" :fetcher github :repo "emacsattic/flymake-golangci" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for go-mode files using Golang CI lint" :date (23990 1360) :url "https://github.com/emacsattic/flymake-golangci") (flymake-gradle :source "MELPA" :recipe (:package "flymake-gradle" :fetcher github :repo "jojojames/flymake-gradle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake extension for Gradle" :date (23690 49360) :url "https://github.com/jojojames/flymake-gradle") (flymake-grammarly :source "MELPA" :recipe (:package "flymake-grammarly" :repo "emacs-grammarly/flymake-grammarly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake support for Grammarly" :date (26001 54864) :url "https://github.com/emacs-grammarly/flymake-grammarly") (flymake-hadolint :source "MELPA" :recipe (:package "flymake-hadolint" :repo "buzztaiki/flymake-hadolint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake backend for hadolint, a Dockerfile linter" :date (25152 53328) :url "https://github.com/buzztaiki/flymake-hadolint") (flymake-haml :source "MELPA" :recipe (:package "flymake-haml" :repo "purcell/flymake-haml" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for haml files" :date (22899 48336) :url "https://github.com/purcell/flymake-haml") (flymake-haskell-multi :source "MELPA" :recipe (:package "flymake-haskell-multi" :fetcher github :repo "purcell/flymake-haskell-multi" :files ("*.el" "haskell_multi")) :description "Syntax-check haskell-mode using both ghc and hlint" :date (22899 48336) :url "https://github.com/purcell/flymake-haskell-multi") (flymake-hledger :source "MELPA" :recipe (:package "flymake-hledger" :fetcher github :repo "DamienCassou/flymake-hledger" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake module to check hledger journals" :date (25771 8144) :url "https://github.com/DamienCassou/flymake-hledger") (flymake-hlint :source "MELPA" :recipe (:package "flymake-hlint" :repo "purcell/flymake-hlint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for haskell-mode files using hlint" :date (22899 48336) :url "https://github.com/purcell/flymake-hlint") (flymake-joker :source "MELPA" :recipe (:package "flymake-joker" :fetcher github :repo "beetleman/flymake-joker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add Clojure syntax checker (via Joker) to flymake" :date (24173 17872) :url "https://github.com/beetleman/flymake-joker") (flymake-jshint :source "MELPA" :recipe (:package "flymake-jshint" :repo "Wilfred/flymake-jshint.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Making flymake work with JSHint" :date (21288 42432) :url "https://github.com/Wilfred/flymake-jshint.el") (flymake-jslint :source "MELPA" :recipe (:package "flymake-jslint" :repo "purcell/flymake-jslint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for javascript using jslint" :date (22899 48336) :url "https://github.com/purcell/flymake-jslint") (flymake-json :source "MELPA" :recipe (:package "flymake-json" :repo "purcell/flymake-json" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for json using jsonlint" :date (23284 45776) :url "https://github.com/purcell/flymake-json") (flymake-kondor :source "MELPA" :recipe (:package "flymake-kondor" :repo "turbo-cafe/flymake-kondor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Linter with clj-kondo" :date (24951 6864) :url "https://github.com/turbo-cafe/flymake-kondor") (flymake-ktlint :source "MELPA" :recipe (:package "flymake-ktlint" :fetcher github :repo "jojojames/flymake-ktlint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake extension for Ktlint" :date (23432 23248) :url "https://github.com/jojojames/flymake-ktlint") (flymake-languagetool :source "MELPA" :recipe (:package "flymake-languagetool" :repo "emacs-languagetool/flymake-languagetool" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake support for LanguageTool" :date (26088 55632) :url "https://github.com/emacs-languagetool/flymake-languagetool") (flymake-less :source "MELPA" :recipe (:package "flymake-less" :repo "purcell/flymake-less" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake handler for LESS stylesheets (lesscss.org)" :date (22082 23248) :url "https://github.com/purcell/flymake-less") (flymake-lua :source "MELPA" :recipe (:package "flymake-lua" :fetcher github :repo "sroccaserra/flymake-lua" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake for Lua" :date (22669 1616) :url "https://github.com/sroccaserra/flymake-lua") (flymake-margin :source "MELPA" :recipe (:package "flymake-margin" :repo "LionyxML/flymake-margin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sets flymake to work with margin instead of fringes" :date (26216 47824) :url "https://github.com/LionyxML/flymake-margin") (flymake-markdownlint :source "MELPA" :recipe (:package "flymake-markdownlint" :fetcher github :repo "shaohme/flymake-markdownlint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Markdown linter with markdownlint" :date (25142 17488) :url "https://github.com/shaohme/flymake-markdownlint") (flymake-nasm :source "MELPA" :recipe (:package "flymake-nasm" :fetcher github :repo "juergenhoetzel/flymake-nasm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for asm-mode files using nasm" :date (24647 57808) :url "https://github.com/juergenhoetzel/flymake-nasm") (flymake-perlcritic :source "MELPA" :recipe (:package "flymake-perlcritic" :fetcher github :repo "flymake/emacs-flymake-perlcritic" :files ("*.el" ("bin" "bin/flymake_perlcritic"))) :description "Flymake handler for Perl to invoke Perl::Critic" :date (26079 40656) :url "https://github.com/flymake/emacs-flymake-perlcritic") (flymake-pest :source "MELPA" :recipe (:package "flymake-pest" :repo "ksqsf/pest-mode" :fetcher github :files ("flymake-pest.el")) :description "A flymake handler for Pest files" :date (24327 34128) :url "https://github.com/ksqsf/pest-mode") (flymake-php :source "MELPA" :recipe (:package "flymake-php" :repo "purcell/flymake-php" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for php-mode files" :date (22899 48336) :url "https://github.com/purcell/flymake-php") (flymake-phpcs :source "MELPA" :recipe (:package "flymake-phpcs" :repo "flymake/flymake-phpcs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Making flymake work with PHP CodeSniffer" :date (24614 60496) :url "https://github.com/flymake/flymake-phpcs") (flymake-phpstan :source "MELPA" :recipe (:package "flymake-phpstan" :fetcher github :repo "emacs-php/phpstan.el" :files ("flymake-phpstan.el")) :description "Flymake backend for PHP using PHPStan" :date (25938 36432) :url "https://github.com/emacs-php/phpstan.el") (flymake-puppet :source "MELPA" :recipe (:package "flymake-puppet" :repo "benprew/flymake-puppet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake handler using puppet-lint" :date (22911 39504) :url "https://github.com/benprew/flymake-puppet") (flymake-python-pyflakes :source "MELPA" :recipe (:package "flymake-python-pyflakes" :fetcher github :repo "purcell/flymake-python-pyflakes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for python-mode files using pyflakes (or flake8)" :date (22899 48336) :url "https://github.com/purcell/flymake-python-pyflakes") (flymake-quickdef :source "MELPA" :recipe (:package "flymake-quickdef" :fetcher github :repo "karlotness/flymake-quickdef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly define a new Flymake backend" :date (24164 2896) :url "https://github.com/karlotness/flymake-quickdef") (flymake-racket :source "MELPA" :recipe (:package "flymake-racket" :fetcher github :repo "jojojames/flymake-racket" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake extension for Racket" :date (24563 33232) :url "https://github.com/jojojames/flymake-racket") (flymake-rakudo :source "MELPA" :recipe (:package "flymake-rakudo" :fetcher github :repo "Raku/flymake-rakudo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake syntax checker for Rakudo" :date (25188 26832) :url "https://github.com/Raku/flymake-rakudo") (flymake-relint :source "MELPA" :recipe (:package "flymake-relint" :fetcher github :repo "liuyinz/flymake-relint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A relint Flymake backend" :date (25802 50128) :url "https://github.com/liuyinz/flymake-relint") (flymake-ruby :source "MELPA" :recipe (:package "flymake-ruby" :repo "purcell/flymake-ruby" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for ruby-mode files" :date (22899 48336) :url "https://github.com/purcell/flymake-ruby") (flymake-ruff :source "MELPA" :recipe (:package "flymake-ruff" :fetcher github :repo "erickgnavar/flymake-ruff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake plugin for python files using ruff" :date (26382 55248) :url "https://github.com/erickgnavar/flymake-ruff") (flymake-sass :source "MELPA" :recipe (:package "flymake-sass" :repo "purcell/flymake-sass" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake handler for sass and scss files" :date (22899 48336) :url "https://github.com/purcell/flymake-sass") (flymake-shell :source "MELPA" :recipe (:package "flymake-shell" :repo "purcell/flymake-shell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake syntax-checker for shell scripts" :date (22899 48336) :url "https://github.com/purcell/flymake-shell") (flymake-shellcheck :source "MELPA" :recipe (:package "flymake-shellcheck" :repo "federicotdn/flymake-shellcheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A bash/sh Flymake backend powered by ShellCheck" :date (25126 29264) :url "https://github.com/federicotdn/flymake-shellcheck") (flymake-solidity :source "MELPA" :recipe (:package "flymake-solidity" :repo "kootenpv/flymake-solidity" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for solidity using solc" :date (22916 57424) :url "https://github.com/kootenpv/flymake-solidity") (flymake-sqlfluff :source "MELPA" :recipe (:package "flymake-sqlfluff" :fetcher github :repo "erickgnavar/flymake-sqlfluff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake plugin for SQL files using sqlfluff" :date (26215 26960) :url "https://github.com/erickgnavar/flymake-sqlfluff") (flymake-swi-prolog :source "MELPA" :recipe (:package "flymake-swi-prolog" :fetcher sourcehut :repo "eshel/flymake-swi-prolog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Flymake backend for SWI-Prolog" :date (25162 2768) :url "https://git.sr.ht/~eshel/flymake-swi-prolog") (flymake-vala :source "MELPA" :recipe (:package "flymake-vala" :repo "daniellawrence/flymake-vala" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for vala-mode files" :date (21779 8656) :url "https://github.com/daniellawrence/flymake-vala") (flymake-vnu :source "MELPA" :recipe (:package "flymake-vnu" :fetcher github :repo "theneosloth/flymake-vnu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flymake extension for the v.Nu HTML validator" :date (25610 18640) :url "https://github.com/theneosloth/flymake-vnu") (flymake-yaml :source "MELPA" :recipe (:package "flymake-yaml" :fetcher github :repo "yasuyk/flymake-yaml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flymake handler for YAML" :date (20853 38592) :url "https://github.com/yasuyk/flymake-yaml") (flymake-yamllint :source "MELPA" :recipe (:package "flymake-yamllint" :fetcher github :repo "shaohme/flymake-yamllint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "YAML linter with yamllint" :date (25594 30416) :url "https://github.com/shaohme/flymake-yamllint") (flymd :source "MELPA" :recipe (:package "flymd" :fetcher github :repo "mola-T/flymd" :files (:defaults "flymd.html")) :description "On the fly markdown preview" :date (22371 4944) :url "https://github.com/mola-T/flymd") (flyparens :source "MELPA" :recipe (:package "flyparens" :fetcher github :repo "jiyoo/flyparens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Check for unbalanced parens on the fly" :date (21454 49856) :url "https://github.com/jiyoo/flyparens") (flyspell-correct :source "MELPA" :recipe (:package "flyspell-correct" :repo "d12frosted/flyspell-correct" :fetcher github :files ("flyspell-correct.el" "flyspell-correct-ido.el")) :description "Correcting words with flyspell via custom interface" :date (25222 45008) :url "https://github.com/d12frosted/flyspell-correct") (flyspell-correct-avy-menu :source "MELPA" :recipe (:package "flyspell-correct-avy-menu" :repo "d12frosted/flyspell-correct" :fetcher github :files ("flyspell-correct-avy-menu.el")) :description "Correcting words with flyspell via avy-menu interface" :date (25222 45008) :url "https://github.com/d12frosted/flyspell-correct") (flyspell-correct-helm :source "MELPA" :recipe (:package "flyspell-correct-helm" :repo "d12frosted/flyspell-correct" :fetcher github :files ("flyspell-correct-helm.el")) :description "Correcting words with flyspell via helm interface" :date (25222 45008) :url "https://github.com/d12frosted/flyspell-correct") (flyspell-correct-ivy :source "MELPA" :recipe (:package "flyspell-correct-ivy" :repo "d12frosted/flyspell-correct" :fetcher github :files ("flyspell-correct-ivy.el")) :description "Correcting words with flyspell via ivy interface" :date (25222 45008) :url "https://github.com/d12frosted/flyspell-correct") (flyspell-correct-popup :source "MELPA" :recipe (:package "flyspell-correct-popup" :repo "d12frosted/flyspell-correct" :fetcher github :files ("flyspell-correct-popup.el")) :description "Correcting words with flyspell via popup interface" :date (25222 45008) :url "https://github.com/d12frosted/flyspell-correct") (flyspell-lazy :source "MELPA" :recipe (:package "flyspell-lazy" :repo "rolandwalker/flyspell-lazy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve flyspell responsiveness using idle timers" :date (24645 16080) :url "https://github.com/rolandwalker/flyspell-lazy") (flyspell-popup :source "MELPA" :recipe (:package "flyspell-popup" :repo "xuchunyang/flyspell-popup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Correcting words with Flyspell in popup menus" :date (22827 14928) :url "https://github.com/xuchunyang/flyspell-popup") (fm-bookmarks :source "MELPA" :recipe (:package "fm-bookmarks" :repo "kuanyui/fm-bookmarks.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use file manager bookmarks (eg Dolphin, Nautilus, PCManFM) in Dired" :date (22636 4304) :url "https://github.com/kuanyui/fm-bookmarks.el") (fmo-mode :source "MELPA" :recipe (:package "fmo-mode" :fetcher github :repo "xeechou/fmo-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format only changed lines" :date (26087 34768) :url "https://github.com/xeechou/fmo-mode.el") (fn :source "MELPA" :recipe (:package "fn" :fetcher github :repo "troyp/fn.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Concise anonymous functions for Emacs Lisp" :date (24639 63696) :url "https://github.com/troyp/fn.el") (focus :source "MELPA" :recipe (:package "focus" :fetcher github :repo "larstvei/Focus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dim the font color of text in surrounding sections" :date (26399 64336) :url "https://github.com/larstvei/Focus") (focus-autosave-mode :source "MELPA" :recipe (:package "focus-autosave-mode" :fetcher github :repo "vifon/focus-autosave-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically save files in focus-out-hook" :date (22332 55248) :url "https://github.com/vifon/focus-autosave-mode.el") (foggy-night-theme :source "MELPA" :recipe (:package "foggy-night-theme" :repo "mswift42/foggy-night-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark low contrast theme with soft and muted colors" :date (23623 33872) :url "https://github.com/mswift42/foggy-night-theme") (fold-dwim :source "MELPA" :recipe (:package "fold-dwim" :fetcher github :repo "emacsattic/fold-dwim" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unified user interface for Emacs folding modes" :date (21237 15168) :url "https://github.com/emacsattic/fold-dwim") (fold-dwim-org :source "MELPA" :recipe (:package "fold-dwim-org" :fetcher github :repo "mattfidler/fold-dwim-org" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fold DWIM bound to org key-strokes" :date (21148 59072) :url "https://github.com/mattfidler/fold-dwim-org") (fold-this :source "MELPA" :recipe (:package "fold-this" :fetcher github :repo "magnars/fold-this.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Just fold this region please" :date (24003 13392) :url "https://github.com/magnars/fold-this.el") (folding :source "MELPA" :recipe (:package "folding" :repo "jaalto/project-emacs--folding-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A folding-editor-like minor mode" :date (26090 10960) :url "https://github.com/jaalto/project-emacs--folding-mode") (font-lock-profiler :source "MELPA" :recipe (:package "font-lock-profiler" :repo "Lindydancer/font-lock-profiler" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Coverage and timing tool for font-lock keywords" :date (22682 13648) :url "https://github.com/Lindydancer/font-lock-profiler") (font-lock-studio :source "MELPA" :recipe (:package "font-lock-studio" :fetcher github :repo "Lindydancer/font-lock-studio" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive debugger for Font Lock keywords" :date (25275 27600) :url "https://github.com/Lindydancer/font-lock-studio") (font-utils :source "MELPA" :recipe (:package "font-utils" :repo "rolandwalker/font-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility functions for working with fonts" :date (24682 10448) :url "https://github.com/rolandwalker/font-utils") (fontawesome :source "MELPA" :recipe (:package "fontawesome" :fetcher github :repo "emacsorphanage/fontawesome" :old-names (emacs-fontawesome) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fontawesome utility" :date (26355 10320) :url "https://github.com/emacsorphanage/fontawesome") (fontify-face :source "MELPA" :recipe (:package "fontify-face" :fetcher github :repo "Fuco1/fontify-face" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fontify symbols representing faces with that face" :date (24719 4816) :url "https://github.com/Fuco1/fontify-face") (fontsloth :source "MELPA" :recipe (:package "fontsloth" :repo "jollm/fontsloth" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp otf/ttf font loader/renderer" :date (25698 40272) :url "https://github.com/jollm/fontsloth") (for :source "MELPA" :recipe (:package "for" :fetcher github :repo "usaoc/elisp-for" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Iteration and sequence" :date (25835 47440) :url "https://github.com/usaoc/elisp-for") (forecast :source "MELPA" :recipe (:package "forecast" :fetcher codeberg :repo "kutuptiyini/elisp" :files ("forecast.el")) :description "Weather forecasts" :date (23958 24912) :url "https://codeberg.org/kutuptiyini/elisp") (foreign-regexp :source "MELPA" :recipe (:package "foreign-regexp" :fetcher github :repo "k-talo/foreign-regexp.el" :files ("*.el" ("bin" "bin/*.pl" "bin/*.rb"))) :description "Search and replace by foreign regexp" :date (24186 29904) :url "https://github.com/k-talo/foreign-regexp.el") (foreman-mode :source "MELPA" :recipe (:package "foreman-mode" :repo "zweifisch/foreman-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View and manage Procfile-based applications" :date (22902 24528) :url "https://github.com/zweifisch/foreman-mode") (forest-blue-theme :source "MELPA" :recipe (:package "forest-blue-theme" :fetcher github :repo "olkinn/forest-blue-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs theme with a dark background" :date (22384 16976) :url "https://github.com/olkinn/forest-blue-emacs") (forge :source "MELPA" :recipe (:package "forge" :fetcher github :repo "magit/forge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access Git forges from Magit" :date (26385 31440) :url "https://github.com/magit/forge") (form-feed :source "MELPA" :recipe (:package "form-feed" :fetcher git :url "https://depp.brause.cc/form-feed.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display ^L glyphs as horizontal lines" :date (24725 43600) :url "https://depp.brause.cc/form-feed.git") (form-feed-st :source "MELPA" :recipe (:package "form-feed-st" :repo "leodag/form-feed-st" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display ^L glyphs as full-width horizontal lines" :date (25881 56784) :url "https://github.com/leodag/form-feed-st") (format-all :source "MELPA" :recipe (:package "format-all" :fetcher github :repo "lassik/emacs-format-all-the-code" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-format C, C++, JS, Python, Ruby and 50 other languages" :date (26363 4432) :url "https://github.com/lassik/emacs-format-all-the-code") (format-sql :source "MELPA" :recipe (:package "format-sql" :repo "paetzke/format-sql.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use format-sql to make your SQL readable in directly Emacs" :date (21814 47696) :url "https://github.com/paetzke/format-sql.el") (format-table :source "MELPA" :recipe (:package "format-table" :fetcher github :repo "functionreturnfunction/format-table" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parse and reformat tabular data" :date (23582 42448) :url "https://github.com/functionreturnfunction/format-table") (forth-mode :source "MELPA" :recipe (:package "forth-mode" :fetcher github :repo "larsbrinkhoff/forth-mode" :files (:defaults "backend" (:exclude "build.el"))) :description "Programming language mode for Forth" :date (25967 36688) :url "https://github.com/larsbrinkhoff/forth-mode") (fortpy :source "MELPA" :recipe (:package "fortpy" :fetcher github :repo "rosenbrockc/fortpy-el" :files ("fortpy*" "Makefile" "setup.py")) :description "A Fortran auto-completion for Emacs" :date (21925 30800) :url "https://github.com/rosenbrockc/fortpy-el") (fortune-cookie :source "MELPA" :recipe (:package "fortune-cookie" :repo "andyleejordan/fortune-cookie" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Print a fortune in your scratch buffer" :date (23582 42448) :url "https://github.com/andyleejordan/fortune-cookie") (fountain-mode :source "MELPA" :recipe (:package "fountain-mode" :fetcher github :repo "rnkn/fountain-mode" :files (:defaults "contrib/*")) :description "Major mode for screenwriting in Fountain markup" :date (26401 19664) :url "https://github.com/rnkn/fountain-mode") (fpga :source "MELPA" :recipe (:package "fpga" :fetcher github :repo "gmlarumbe/fpga" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "FPGA & ASIC Utils" :date (26318 15952) :url "https://github.com/gmlarumbe/fpga") (fraktur-mode :source "MELPA" :recipe (:package "fraktur-mode" :repo "grettke/fraktur-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily insert Unicode mathematical Fraktur characters" :date (22448 56272) :url "https://github.com/grettke/fraktur-mode") (frame-local :source "MELPA" :recipe (:package "frame-local" :fetcher github :repo "sebastiencs/frame-local" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Variables local to a frame" :date (23229 21456) :url "https://github.com/sebastiencs/frame-local") (frame-mode :source "MELPA" :recipe (:package "frame-mode" :fetcher github :repo "colonelpanic8/frame-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use frames instead of windows" :date (25829 8656) :url "https://github.com/colonelpanic8/frame-mode") (frame-purpose :source "MELPA" :recipe (:package "frame-purpose" :fetcher github :repo "alphapapa/frame-purpose.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Purpose-specific frames" :date (24931 21584) :url "https://github.com/alphapapa/frame-purpose.el") (frame-tag :source "MELPA" :recipe (:package "frame-tag" :fetcher github :repo "liangzan/frame-tag.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode that assigns a unique number to each frame for easy switching" :date (22645 19280) :url "https://github.com/liangzan/frame-tag.el") (frames-only-mode :source "MELPA" :recipe (:package "frames-only-mode" :repo "davidshepherd7/frames-only-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use frames instead of Emacs windows" :date (26261 36304) :url "https://github.com/davidshepherd7/frames-only-mode") (frameshot :source "MELPA" :recipe (:package "frameshot" :fetcher github :repo "tarsius/frameshot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Take screenshots of a frame" :date (26287 60368) :url "https://github.com/tarsius/frameshot") (framesize :source "MELPA" :recipe (:package "framesize" :fetcher github :repo "nicferrier/emacs-framesize" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change the size of frames in Emacs" :date (21086 61504) :url "https://github.com/nicferrier/emacs-framesize") (frecency :source "MELPA" :recipe (:package "frecency" :fetcher github :repo "alphapapa/frecency.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library for sorting items by frequency and recency of access" :date (26015 1360) :url "https://github.com/alphapapa/frecency.el") (frecentf :source "MELPA" :recipe (:package "frecentf" :fetcher git :url "https://git.launchpad.net/frecentf.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pervasive recentf using frecency" :date (25953 3792) :url "https://git.launchpad.net/frecentf.el") (free-keys :source "MELPA" :recipe (:package "free-keys" :fetcher github :repo "Fuco1/free-keys" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show free keybindings for modkeys or prefixes" :date (24978 51792) :url "https://github.com/Fuco1/free-keys") (freeradius-mode :source "MELPA" :recipe (:package "freeradius-mode" :fetcher github :repo "VersBinarii/freeradius-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for FreeRadius server config files" :date (23713 10832) :url "https://github.com/VersBinarii/freeradius-mode") (freeze-it :source "MELPA" :recipe (:package "freeze-it" :fetcher github :repo "rnkn/freeze-it" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to make your previous writing read-only" :date (26240 30160) :url "https://github.com/rnkn/freeze-it") (friendly-remote-shell :source "MELPA" :recipe (:package "friendly-remote-shell" :repo "p3r7/friendly-shell" :fetcher github :files (:defaults (:exclude "friendly-shell-command.el" "friendly-shell.el"))) :description "Human-friendly remote interactive shells" :date (25860 50640) :url "https://github.com/p3r7/friendly-shell") (friendly-shell :source "MELPA" :recipe (:package "friendly-shell" :repo "p3r7/friendly-shell" :fetcher github :files (:defaults (:exclude "friendly-shell-command.el" "friendly-remote-shell.el"))) :description "Better shell-mode API" :date (25860 50640) :url "https://github.com/p3r7/friendly-shell") (friendly-shell-command :source "MELPA" :recipe (:package "friendly-shell-command" :fetcher github :repo "p3r7/friendly-shell" :files (:defaults (:exclude "friendly-shell.el" "friendly-remote-shell.el"))) :description "Better shell-command API" :date (25860 50640) :url "https://github.com/p3r7/friendly-shell") (friendly-tramp-path :source "MELPA" :recipe (:package "friendly-tramp-path" :repo "p3r7/friendly-tramp-path" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Human-friendly TRAMP path construction" :date (24236 36304) :url "https://github.com/p3r7/friendly-tramp-path") (frimacs :source "MELPA" :recipe (:package "frimacs" :repo "pdo/frimacs" :fetcher github :files ("*.el" ("data" "data/*.dat") (:exclude "frimacs-build-utils.el"))) :description "An environment for the FriCAS computer algebra system" :date (25805 26320) :url "https://github.com/pdo/frimacs") (fringe-current-line :source "MELPA" :recipe (:package "fringe-current-line" :fetcher github :repo "kyanagi/fringe-current-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show current line on the fringe" :date (21200 20800) :url "https://github.com/kyanagi/fringe-current-line") (fringe-helper :source "MELPA" :recipe (:package "fringe-helper" :fetcher github :repo "nschum/fringe-helper.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helper functions for fringe bitmaps" :date (21411 16704) :url "https://github.com/nschum/fringe-helper.el") (frog-jump-buffer :source "MELPA" :recipe (:package "frog-jump-buffer" :repo "waymondo/frog-jump-buffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The fastest buffer-jumping Emacs lisp package around" :date (25457 23248) :url "https://github.com/waymondo/frog-jump-buffer") (frontside-javascript :source "MELPA" :recipe (:package "frontside-javascript" :fetcher github :repo "thefrontside/frontmacs" :files ("packages/javascript/frontside-javascript*.el" (:exclude "packages/javascript/*-test.el"))) :description "JS  development that just work™️" :date (25135 44240) :url "https://github.com/thefrontside/frontmacs") (fsbot-data-browser :source "MELPA" :recipe (:package "fsbot-data-browser" :repo "Benaiah/fsbot-data-browser" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse the fsbot database using tabulated-list-mode" :date (25357 10448) :url "https://github.com/Benaiah/fsbot-data-browser") (fsharp-mode :source "MELPA" :recipe (:package "fsharp-mode" :fetcher github :repo "fsharp/emacs-fsharp-mode" :files (:defaults (:exclude "eglot-fsharp.el"))) :description "Support for the F# programming language" :date (25747 25808) :url "https://github.com/fsharp/emacs-fsharp-mode") (fstar-mode :source "MELPA" :recipe (:package "fstar-mode" :fetcher github :repo "FStarLang/fstar-mode.el" :files (:defaults "etc")) :description "Support for F* programming" :date (26095 28880) :url "https://github.com/FStarLang/fstar-mode.el") (fuel :source "MELPA" :recipe (:package "fuel" :fetcher github :repo "factor/fuel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Factor programming language" :date (26369 43216) :url "https://github.com/factor/fuel") (fuff :source "MELPA" :recipe (:package "fuff" :repo "joelmo/fuff" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find files with findutils, recursively" :date (22674 19536) :url "https://github.com/joelmo/fuff") (full-ack :source "MELPA" :recipe (:package "full-ack" :repo "nschum/full-ack" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A front-end for ack" :date (21257 448) :url "https://github.com/nschum/full-ack") (fullframe :source "MELPA" :recipe (:package "fullframe" :fetcher sourcehut :repo "tomterl/fullframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generalized automatic execution in a single frame" :date (24632 4048) :url "https://git.sr.ht/~tomterl/fullframe") (function-args :source "MELPA" :recipe (:package "function-args" :repo "abo-abo/function-args" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "C++ completion for GNU Emacs" :date (25217 27088) :url "https://github.com/abo-abo/function-args") (fuo :source "MELPA" :recipe (:package "fuo" :repo "feeluown/emacs-fuo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Feeluown client" :date (23888 33232) :url "https://github.com/feeluown/emacs-fuo") (furl :source "MELPA" :recipe (:package "furl" :fetcher github :repo "nex3/furl-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Friendly URL retrieval" :date (21837 9168) :url "https://github.com/nex3/furl-el") (fussy :source "MELPA" :recipe (:package "fussy" :fetcher github :repo "jojojames/fussy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy completion style using `flx'" :date (26210 9040) :url "https://github.com/jojojames/fussy") (futhark-mode :source "MELPA" :recipe (:package "futhark-mode" :repo "diku-dk/futhark-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Futhark source files" :date (26386 52304) :url "https://github.com/diku-dk/futhark-mode") (fuz :source "MELPA" :recipe (:package "fuz" :fetcher github :repo "rustify-emacs/fuz.el" :files ("fuz*.el" "Cargo.toml" "Cargo.lock" "src")) :description "Fast and precise fuzzy scoring/matching utils" :date (24079 43856) :url "https://github.com/rustify-emacs/fuz.el") (fuzzy :source "MELPA" :recipe (:package "fuzzy" :fetcher github :repo "auto-complete/fuzzy-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy Matching" :date (26001 54864) :url "https://github.com/auto-complete/fuzzy-el") (fuzzy-finder :source "MELPA" :recipe (:package "fuzzy-finder" :repo "10sr/fuzzy-finder-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy Finder App Integration" :date (24885 12240) :url "https://github.com/10sr/fuzzy-finder-el") (fvwm-mode :source "MELPA" :recipe (:package "fvwm-mode" :fetcher github :repo "theBlackDragon/fvwm-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Fvwm configuration files" :date (25578 42192) :url "https://github.com/theBlackDragon/fvwm-mode") (fwb-cmds :source "MELPA" :recipe (:package "fwb-cmds" :repo "tarsius/fwb-cmds" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Misc frame, window and buffer commands" :date (26287 60368) :url "https://github.com/tarsius/fwb-cmds") (fxrd-mode :source "MELPA" :recipe (:package "fxrd-mode" :fetcher github :repo "msherry/fxrd-mode" :files (:defaults "fxrd-modes/*el")) :description "Major mode for editing fixed field width files" :date (22906 21584) :url "https://github.com/msherry/fxrd-mode") (fyure :source "MELPA" :recipe (:package "fyure" :repo "mooz/fyure" :fetcher github :files ("fyure.el" "fyure.py")) :description "An interface to fix Japanese hyoki-yure" :date (20766 37824) :url "https://github.com/mooz/fyure") (fzf :source "MELPA" :recipe (:package "fzf" :repo "bling/fzf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A front-end for fzf" :date (26310 21840) :url "https://github.com/bling/fzf.el") (gameoflife :source "MELPA" :recipe (:package "gameoflife" :fetcher github :repo "Lindydancer/gameoflife" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Screensaver running Conway's Game of Life" :date (24293 15952) :url "https://github.com/Lindydancer/gameoflife") (gams-ac :source "MELPA" :recipe (:package "gams-ac" :repo "ShiroTakeda/gams-ac" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete source file for GAMS mode" :date (23260 63440) :url "https://github.com/ShiroTakeda/gams-ac") (gams-mode :source "MELPA" :recipe (:package "gams-mode" :repo "ShiroTakeda/gams-mode" :fetcher github :files ("gams-mode.el" "gams-logo.xpm" "gams-commands.txt" "gams-commands-dollar.txt")) :description "Major mode for General Algebraic Modeling System (GAMS)" :date (26393 25552) :url "https://github.com/ShiroTakeda/gams-mode") (gandalf-theme :source "MELPA" :recipe (:package "gandalf-theme" :fetcher github :repo "ptrv/gandalf-theme-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gandalf color theme" :date (20995 63680) :url "https://github.com/ptrv/gandalf-theme-emacs") (gap-mode :source "MELPA" :recipe (:package "gap-mode" :fetcher gitlab :repo "gvol/gap-mode" :files (:defaults "emacs.gaprc")) :description "Major mode for editing files in the GAP programming language" :date (26160 2640) :url "https://gitlab.com/gvol/gap-mode") (gather :source "MELPA" :recipe (:package "gather" :fetcher github :repo "mhayashi1120/Emacs-gather" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gather string in buffer" :date (21665 49360) :url "https://github.com/mhayashi1120/Emacs-gather") (gcmh :source "MELPA" :recipe (:package "gcmh" :repo "koral/gcmh" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Garbage Collector Magic Hack" :date (24497 38608) :url "https://gitlab.com/koral/gcmh") (gcode-mode :source "MELPA" :recipe (:package "gcode-mode" :repo "wavexx/gcode-mode.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple G-Code major mode" :date (25829 8656) :url "https://gitlab.com/wavexx/gcode-mode.el") (gdb-x :source "MELPA" :recipe (:package "gdb-x" :fetcher codeberg :repo "pastor/gdb-x" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve GDB-MI user interface" :date (26299 51536) :url "https://codeberg.org/pastor/gdb-x") (gdscript-mode :source "MELPA" :recipe (:package "gdscript-mode" :fetcher github :repo "godotengine/emacs-gdscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Godot's GDScript language" :date (26407 58448) :url "https://github.com/godotengine/emacs-gdscript-mode") (geben :source "MELPA" :recipe (:package "geben" :repo "ahungry/geben" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "DBGp protocol frontend, a script debugger" :date (25353 13392) :url "https://github.com/ahungry/geben") (geben-helm-projectile :source "MELPA" :recipe (:package "geben-helm-projectile" :repo "ahungry/geben-helm-projectile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate helm-projectile with geben" :date (22820 41680) :url "https://github.com/ahungry/geben-helm-projectile") (geeknote :source "MELPA" :recipe (:package "geeknote" :repo "avendael/emacs-geeknote" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use Evernote in Emacs through geeknote" :date (25096 8144) :url "https://github.com/avendael/emacs-geeknote") (geiser :source "MELPA" :recipe (:package "geiser" :fetcher gitlab :repo "emacs-geiser/geiser" :files ("elisp/*.el" "doc/dir" "doc/geiser.texi")) :description "GNU Emacs and Scheme talk to each other" :date (26331 27984) :url "https://gitlab.com/emacs-geiser/geiser") (geiser-chez :source "MELPA" :recipe (:package "geiser-chez" :fetcher gitlab :repo "emacs-geiser/chez" :files (:defaults ("src" "src/*"))) :description "Chez and Geiser talk to each other" :date (25767 11088) :url "https://gitlab.com/emacs-geiser/chez") (geiser-chibi :source "MELPA" :recipe (:package "geiser-chibi" :fetcher gitlab :repo "emacs-geiser/chibi" :files (:defaults ("src" "src/*"))) :description "Chibi Scheme's implementation of the geiser protocols" :date (26187 47568) :url "https://gitlab.com/emacs-geiser/chibi") (geiser-chicken :source "MELPA" :recipe (:package "geiser-chicken" :fetcher gitlab :repo "emacs-geiser/chicken" :files (:defaults "src")) :description "Chicken's implementation of the geiser protocols" :date (25299 9936) :url "https://gitlab.com/emacs-geiser/chicken") (geiser-gambit :source "MELPA" :recipe (:package "geiser-gambit" :fetcher gitlab :repo "emacs-geiser/gambit" :files (:defaults ("src" "src/*"))) :description "Gambit's implementation of the geiser protocols" :date (25089 34896) :url "https://gitlab.com/emacs-geiser/gambit") (geiser-gauche :source "MELPA" :recipe (:package "geiser-gauche" :repo "emacs-geiser/gauche" :fetcher gitlab :files (:defaults "geiser-gauche.scm")) :description "Gauche scheme support for Geiser" :date (25200 18000) :url "https://gitlab.com/emacs-geiser/gauche") (geiser-guile :source "MELPA" :recipe (:package "geiser-guile" :fetcher gitlab :repo "emacs-geiser/guile" :files (:defaults ("src" "src/*"))) :description "Guile and Geiser talk to each other" :date (26348 37072) :url "https://gitlab.com/emacs-geiser/guile") (geiser-kawa :source "MELPA" :recipe (:package "geiser-kawa" :fetcher gitlab :repo "emacs-geiser/kawa" :files ("elisp/*.el" "pom.xml" ".mvn" "mvnw" "mvnw.cmd" "src")) :description "Kawa scheme support for Geiser" :date (24903 42192) :url "https://gitlab.com/emacs-geiser/kawa") (geiser-mit :source "MELPA" :recipe (:package "geiser-mit" :fetcher gitlab :repo "emacs-geiser/mit" :files (:defaults ("src" "src/*"))) :description "MIT/GNU Scheme's implementation of the geiser protocols" :date (26334 4176) :url "https://gitlab.com/emacs-geiser/mit") (geiser-overlay :source "MELPA" :recipe (:package "geiser-overlay" :fetcher github :repo "port19x/geiser-overlay" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Overlay Scheme evaluation results" :date (26348 37072) :url "https://github.com/port19x/geiser-overlay") (geiser-racket :source "MELPA" :recipe (:package "geiser-racket" :fetcher gitlab :repo "emacs-geiser/racket" :files (:defaults ("src" "src/*" "bin" "bin/*"))) :description "Support for Racket in Geiser" :date (24703 16592) :url "https://gitlab.com/emacs-geiser/racket") (geiser-stklos :source "MELPA" :recipe (:package "geiser-stklos" :fetcher gitlab :repo "emacs-geiser/stklos" :files (:defaults "geiser.stk")) :description "STklos Scheme implementation of the geiser protocols" :date (25884 32976) :url "https://gitlab.com/emacs-geiser/stklos") (gemini-mode :source "MELPA" :recipe (:package "gemini-mode" :fetcher git :url "https://git.carcosa.net/jmcbray/gemini.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple highlighting package for text/gemini" :date (25474 32336) :url "https://git.carcosa.net/jmcbray/gemini.el.git") (gemini-write :source "MELPA" :recipe (:package "gemini-write" :fetcher git :url "https://alexschroeder.ch/cgit/gemini-write" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elpher for Titan" :date (24976 10064) :url "https://alexschroeder.ch/cgit/gemini-write") (gemtext-mode :source "MELPA" :recipe (:package "gemtext-mode" :fetcher sourcehut :repo "arjca/gemtext-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Gemtext-formatted text" :date (25917 30288) :url "https://git.sr.ht/~arjca/gemtext-mode.el") (general :source "MELPA" :recipe (:package "general" :fetcher github :repo "noctuid/general.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convenience wrappers for keybindings" :date (26133 44112) :url "https://github.com/noctuid/general.el") (genexpr-mode :source "MELPA" :recipe (:package "genexpr-mode" :fetcher github :repo "larme/genexpr-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GenExpr files" :date (26361 49104) :url "https://github.com/larme/genexpr-mode") (genrnc :source "MELPA" :recipe (:package "genrnc" :fetcher github :repo "aki2o/emacs-genrnc" :files ("*.el" "*.jar" "*.xsl")) :description "Generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD" :date (21400 46400) :url "https://github.com/aki2o/emacs-genrnc") (geoip :source "MELPA" :recipe (:package "geoip" :fetcher github :repo "xuchunyang/geoip.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find out where an IP address is located via GeoIP2" :date (24166 44624) :url "https://github.com/xuchunyang/geoip.el") (geolocation :source "MELPA" :recipe (:package "geolocation" :fetcher github :repo "gonewest818/geolocation.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get your location on Earth" :date (24175 59600) :url "https://github.com/gonewest818/geolocation.el") (german-holidays :source "MELPA" :recipe (:package "german-holidays" :fetcher github :repo "rudolfochrist/german-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "German holidays for Emacs calendar" :date (23569 30416) :url "https://github.com/rudolfochrist/german-holidays") (germanium :source "MELPA" :recipe (:package "germanium" :fetcher github :repo "matsuyoshi30/germanium-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate image from source code using germanium" :date (25297 54608) :url "https://github.com/matsuyoshi30/germanium-el") (gerrit :source "MELPA" :recipe (:package "gerrit" :fetcher github :repo "twmr/gerrit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gerrit client" :date (26380 13520) :url "https://github.com/twmr/gerrit.el") (gerrit-download :source "MELPA" :recipe (:package "gerrit-download" :repo "chmouel/gerrit-download.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show gerrit reviews in a diff buffer" :date (21924 9936) :url "https://github.com/chmouel/gerrit-download.el") (gf :source "MELPA" :recipe (:package "gf" :fetcher github :repo "GrammaticalFramework/gf-emacs-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GF code" :date (23508 53712) :url "https://github.com/GrammaticalFramework/gf-emacs-mode") (ggo-mode :source "MELPA" :recipe (:package "ggo-mode" :fetcher github :repo "mkjunker/ggo-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gengetopt major mode" :date (24647 57808) :url "https://github.com/mkjunker/ggo-mode") (ggtags :source "MELPA" :recipe (:package "ggtags" :fetcher github :repo "leoliu/ggtags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs frontend to GNU Global source code tagging system" :date (25721 1744) :url "https://github.com/leoliu/ggtags") (gh :source "MELPA" :recipe (:package "gh" :repo "sigma/gh.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A GitHub library for Emacs" :date (25831 50384) :url "https://github.com/sigma/gh.el") (gh-md :source "MELPA" :recipe (:package "gh-md" :fetcher github :repo "emacsorphanage/gh-md" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Render markdown using the Github api" :date (25136 65104) :url "https://github.com/emacsorphanage/gh-md") (gh-notify :source "MELPA" :recipe (:package "gh-notify" :fetcher github :repo "anticomputer/gh-notify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A veneer for Magit/Forge GitHub notifications" :date (26134 64976) :url "https://github.com/anticomputer/gh-notify") (ghc-imported-from :source "MELPA" :recipe (:package "ghc-imported-from" :fetcher github :repo "david-christiansen/ghc-imported-from-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haskell documentation lookup with ghc-imported-from" :date (21618 19152) :url "https://github.com/david-christiansen/ghc-imported-from-el") (ghci-completion :source "MELPA" :recipe (:package "ghci-completion" :fetcher github :repo "manzyuk/ghci-completion" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion for GHCi commands in inferior-haskell buffers" :date (22100 53200) :url "https://github.com/manzyuk/ghci-completion") (gherkin-mode :source "MELPA" :recipe (:package "gherkin-mode" :fetcher github :repo "candera/gherkin-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An emacs major mode for editing gherkin files" :date (23102 50128) :url "https://github.com/candera/gherkin-mode") (ghost-blog :source "MELPA" :recipe (:package "ghost-blog" :fetcher github :repo "javaguirre/ghost-blog-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package to manage Ghost blog" :date (23021 1744) :url "https://github.com/javaguirre/ghost-blog-emacs") (ghq :source "MELPA" :recipe (:package "ghq" :repo "lafrenierejm/emacs-ghq" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ghq interface for emacs" :date (25690 46160) :url "https://github.com/lafrenierejm/emacs-ghq") (ghub :source "MELPA" :recipe (:package "ghub" :fetcher github :repo "magit/ghub" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client libraries for Git forge APIs" :date (26363 4432) :url "https://github.com/magit/ghub") (ghub+ :source "MELPA" :recipe (:package "ghub+" :fetcher github :repo "vermiculus/ghub-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A thick GitHub API client built on ghub" :date (24071 49744) :url "https://github.com/vermiculus/ghub-plus") (gif-screencast :source "MELPA" :recipe (:package "gif-screencast" :repo "Ambrevar/emacs-gif-screencast" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "One-frame-per-action GIF recording" :date (25794 56016) :url "https://gitlab.com/Ambrevar/emacs-gif-screencast") (gift-mode :source "MELPA" :recipe (:package "gift-mode" :fetcher github :repo "csrhodes/gift-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GIFT format quizzes" :date (24752 2128) :url "https://github.com/csrhodes/gift-mode") (gildas-mode :source "MELPA" :recipe (:package "gildas-mode" :repo "smaret/gildas-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Gildas" :date (23500 59600) :url "https://github.com/smaret/gildas-mode") (girly-notebook-theme :source "MELPA" :recipe (:package "girly-notebook-theme" :fetcher github :repo "melissaboiko/girly-notebook-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light theme with vivid colours and cursive text" :date (26177 11728) :url "https://github.com/melissaboiko/girly-notebook-theme") (gist :source "MELPA" :recipe (:package "gist" :repo "defunkt/gist.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for gist.github.com" :date (23068 31952) :url "https://github.com/defunkt/gist.el") (git :source "MELPA" :recipe (:package "git" :repo "rejeep/git.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Elisp API for programmatically using Git" :date (21222 47808) :url "https://github.com/rejeep/git.el") (git-annex :source "MELPA" :recipe (:package "git-annex" :fetcher github :repo "jwiegley/git-annex-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for easy editing of git-annex'd files" :date (25326 54864) :url "https://github.com/jwiegley/git-annex-el") (git-assembler-mode :source "MELPA" :recipe (:package "git-assembler-mode" :repo "wavexx/git-assembler-mode.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git-assembler major mode" :date (25732 58448) :url "https://gitlab.com/wavexx/git-assembler-mode.el") (git-attr :source "MELPA" :recipe (:package "git-attr" :fetcher github :repo "arnested/emacs-git-attr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git attributes of buffer file" :date (23465 20560) :url "https://github.com/arnested/emacs-git-attr") (git-auto-commit-mode :source "MELPA" :recipe (:package "git-auto-commit-mode" :fetcher github :repo "ryuslash/git-auto-commit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Minor mode to automatically commit and push" :date (24392 7888) :url "https://github.com/ryuslash/git-auto-commit-mode") (git-backup :source "MELPA" :recipe (:package "git-backup" :fetcher github :repo "antham/git-backup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backup each file change using git" :date (24045 25680) :url "https://github.com/antham/git-backup") (git-backup-ivy :source "MELPA" :recipe (:package "git-backup-ivy" :fetcher github :repo "walseb/git-backup-ivy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An ivy interface to git-backup" :date (25918 51152) :url "https://github.com/walseb/git-backup-ivy") (git-blamed :source "MELPA" :recipe (:package "git-blamed" :repo "tsgates/git-emacs" :fetcher github :files ("git-blamed.el") :old-names ("git-blame")) :description "Minor mode for incremental blame for Git" :date (22546 27344) :url "https://github.com/tsgates/git-emacs") (git-cliff :source "MELPA" :recipe (:package "git-cliff" :fetcher github :repo "liuyinz/git-cliff.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate and update changelog using git-cliff" :date (26399 64336) :url "https://github.com/liuyinz/git-cliff.el") (git-command :source "MELPA" :recipe (:package "git-command" :repo "10sr/git-command-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Git Command-Line interface" :date (23990 1360) :url "https://github.com/10sr/git-command-el") (git-commit :source "MELPA" :recipe (:package "git-commit" :fetcher github :repo "magit/magit" :branch "legacy-stub" :old-names (git-commit-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "This package has been merged into magit" :date (26322 13008) :url "https://github.com/magit/magit") (git-commit-insert-issue :source "MELPA" :recipe (:package "git-commit-insert-issue" :fetcher gitlab :repo "emacs-stuff/git-commit-insert-issue" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get issues list when typing \"Fixes #\"" :date (25693 22352) :url "https://gitlab.com/emacs-stuff/git-commit-insert-issue") (git-commit-ts-mode :source "MELPA" :recipe (:package "git-commit-ts-mode" :repo "danilshvalov/git-commit-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree-sitter support for Git commit messages" :date (26365 46160) :url "https://github.com/danilshvalov/git-commit-ts-mode") (git-dwim :source "MELPA" :recipe (:package "git-dwim" :repo "rubikitch/emacs-git-dwim" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Context-aware git commands such as branch handling" :date (22665 4560) :url "https://github.com/rubikitch/emacs-git-dwim") (git-grep :source "MELPA" :recipe (:package "git-grep" :repo "tychoish/git-grep.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search tools using git grep" :date (24422 29008) :url "https://github.com/tychoish/git-grep.el") (git-grep-transient :source "MELPA" :recipe (:package "git-grep-transient" :repo "adelplanque/git-grep-transient" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search for text using git grep command" :date (26187 47568) :url "https://github.com/adelplanque/git-grep-transient") (git-gutter :source "MELPA" :recipe (:package "git-gutter" :repo "emacsorphanage/git-gutter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of Sublime Text plugin GitGutter" :date (26326 10064) :url "https://github.com/emacsorphanage/git-gutter") (git-gutter+ :source "MELPA" :recipe (:package "git-gutter+" :fetcher github :repo "nonsequitur/git-gutter-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Git hunks straight from the buffer" :date (22112 44368) :url "https://github.com/nonsequitur/git-gutter-plus") (git-gutter-fringe :source "MELPA" :recipe (:package "git-gutter-fringe" :repo "emacsorphanage/git-gutter-fringe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fringe version of git-gutter.el" :date (24920 51280) :url "https://github.com/emacsorphanage/git-gutter-fringe") (git-gutter-fringe+ :source "MELPA" :recipe (:package "git-gutter-fringe+" :fetcher github :repo "nonsequitur/git-gutter-fringe-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fringe version of git-gutter+.el" :date (21462 43968) :url "https://github.com/nonsequitur/git-gutter-fringe-plus") (git-identity :source "MELPA" :recipe (:package "git-identity" :fetcher github :repo "akirak/git-identity.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Identity management for (ma)git" :date (25304 27856) :url "https://github.com/akirak/git-identity.el") (git-io :source "MELPA" :recipe (:package "git-io" :repo "tejasbubane/emacs-git-io" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration for git.io URL shortening in buffer" :date (25626 6864) :url "https://github.com/tejasbubane/emacs-git-io") (git-lens :source "MELPA" :recipe (:package "git-lens" :fetcher codeberg :repo "pidu/git-lens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show new, deleted or modified files in branch" :date (25387 31568) :url "https://codeberg.org/pidu/git-lens") (git-link :source "MELPA" :recipe (:package "git-link" :fetcher github :repo "sshaw/git-link" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get the GitHub/Bitbucket/GitLab URL for a buffer location" :date (26390 49360) :url "https://github.com/sshaw/git-link") (git-messenger :source "MELPA" :recipe (:package "git-messenger" :repo "emacsorphanage/git-messenger" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Popup last commit of current line" :date (24518 44752) :url "https://github.com/emacsorphanage/git-messenger") (git-modes :source "MELPA" :recipe (:package "git-modes" :fetcher github :repo "magit/git-modes" :old-names (gitattributes-mode gitconfig-mode gitignore-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major modes for editing Git configuration files" :date (26287 60368) :url "https://github.com/magit/git-modes") (git-msg-prefix :source "MELPA" :recipe (:package "git-msg-prefix" :repo "kidd/git-msg-prefix.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert commit message prefix (issue number)" :date (23993 63952) :url "https://github.com/kidd/git-msg-prefix.el") (git-ps1-mode :source "MELPA" :recipe (:package "git-ps1-mode" :repo "10sr/git-ps1-mode-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Global minor-mode to print __git_ps1 in mode-line" :date (24091 35024) :url "https://github.com/10sr/git-ps1-mode-el") (git-time-metric :source "MELPA" :recipe (:package "git-time-metric" :fetcher github :repo "c301/gtm-emacs-plugin" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide function to record time with gtm ( git time metric )" :date (23533 56912) :url "https://github.com/c301/gtm-emacs-plugin") (git-timemachine :source "MELPA" :recipe (:package "git-timemachine" :fetcher codeberg :repo "pidu/git-timemachine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Walk through git revisions of a file" :date (26156 5584) :url "https://codeberg.org/pidu/git-timemachine") (git-walktree :source "MELPA" :recipe (:package "git-walktree" :repo "10sr/git-walktree-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse Git tree and blob objects" :date (23995 19280) :url "https://github.com/10sr/git-walktree-el") (git-wip-timemachine :source "MELPA" :recipe (:package "git-wip-timemachine" :fetcher github :repo "itsjeyd/git-wip-timemachine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Walk through git-wip revisions of a file" :date (21796 17744) :url "https://github.com/itsjeyd/git-wip-timemachine") (gitconfig :source "MELPA" :recipe (:package "gitconfig" :fetcher github :repo "tonini/gitconfig.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs lisp interface to work with git-config variables" :date (20966 63424) :url "https://github.com/tonini/gitconfig.el") (github-browse-file :source "MELPA" :recipe (:package "github-browse-file" :fetcher github :repo "ozanmakes/github-browse-file" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View the file you're editing on GitHub" :date (22195 48080) :url "https://github.com/ozanmakes/github-browse-file") (github-clone :source "MELPA" :recipe (:package "github-clone" :fetcher github :repo "dgtized/github-clone.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fork and clone github repos" :date (24567 30288) :url "https://github.com/dgtized/github-clone.el") (github-dark-vscode-theme :source "MELPA" :recipe (:package "github-dark-vscode-theme" :repo "Justintime50/github-dark-vscode-emacs-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The GitHub Dark Theme from Visual Studio Code" :date (26261 36304) :url "https://github.com/Justintime50/github-dark-vscode-emacs-theme") (github-elpa :source "MELPA" :recipe (:package "github-elpa" :fetcher github :repo "10sr/github-elpa" :files (:defaults "bin")) :description "Build and publish ELPA repositories with GitHub Pages" :date (25960 63440) :url "https://github.com/10sr/github-elpa") (github-explorer :source "MELPA" :recipe (:package "github-explorer" :repo "TxGVNN/github-explorer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Explore a GitHub repository on the fly" :date (25122 32208) :url "https://github.com/TxGVNN/github-explorer") (github-linguist :source "MELPA" :recipe (:package "github-linguist" :fetcher github :repo "akirak/github-linguist.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run GitHub Linguist on projects to collect information" :date (26380 13520) :url "https://github.com/akirak/github-linguist.el") (github-notifier :source "MELPA" :recipe (:package "github-notifier" :fetcher github :repo "xuchunyang/github-notifier.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displays your GitHub notifications unread count in mode-line" :date (23258 21712) :url "https://github.com/xuchunyang/github-notifier.el") (github-pullrequest :source "MELPA" :recipe (:package "github-pullrequest" :fetcher github :repo "jakoblind/github-pullrequest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create and fetch Github Pull requests with ease" :date (22651 58064) :url "https://github.com/jakoblind/github-pullrequest") (github-review :source "MELPA" :recipe (:package "github-review" :repo "charignon/github-review" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GitHub based code review" :date (24955 3920) :url "https://github.com/charignon/github-review") (github-search :source "MELPA" :recipe (:package "github-search" :repo "colonelpanic8/github-search" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clone repositories by searching github" :date (23823 59472) :url "https://github.com/colonelpanic8/github-search") (github-stars :source "MELPA" :recipe (:package "github-stars" :repo "xuchunyang/github-stars.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse your Github Stars" :date (23773 53072) :url "https://github.com/xuchunyang/github-stars.el") (gitignore-snippets :source "MELPA" :recipe (:package "gitignore-snippets" :fetcher github :repo "sei40kr/gitignore-snippets" :files (:defaults "snippets")) :description "Gitignore.io templates for Yasnippet" :date (24500 14800) :url "https://github.com/sei40kr/gitignore-snippets") (gitignore-templates :source "MELPA" :recipe (:package "gitignore-templates" :fetcher github :repo "xuchunyang/gitignore-templates.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create .gitignore using GitHub or gitignore.io API" :date (24854 56656) :url "https://github.com/xuchunyang/gitignore-templates.el") (gitlab :source "MELPA" :recipe (:package "gitlab" :fetcher github :repo "nlamirault/emacs-gitlab" :files ("gitlab*.el")) :description "Emacs client for Gitlab" :date (23205 39120) :url "https://github.com/nlamirault/emacs-gitlab") (gitlab-ci-mode :source "MELPA" :recipe (:package "gitlab-ci-mode" :fetcher gitlab :repo "joewreschnig/gitlab-ci-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing GitLab CI files" :date (23982 7248) :url "https://gitlab.com/joewreschnig/gitlab-ci-mode") (gitlab-ci-mode-flycheck :source "MELPA" :recipe (:package "gitlab-ci-mode-flycheck" :fetcher gitlab :repo "joewreschnig/gitlab-ci-mode-flycheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flycheck support for ‘gitlab-ci-mode’" :date (23701 19664) :url "https://gitlab.com/joewreschnig/gitlab-ci-mode-flycheck") (gitlab-pipeline :source "MELPA" :recipe (:package "gitlab-pipeline" :repo "TxGVNN/gitlab-pipeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get infomation about Gitlab pipelines" :date (26403 61392) :url "https://github.com/TxGVNN/gitlab-pipeline") (gitlab-snip-helm :source "MELPA" :recipe (:package "gitlab-snip-helm" :fetcher gitlab :repo "sasanidas/gitlab-snip-helm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gitlab snippets api helm package" :date (24229 63056) :url "https://gitlab.com/sasanidas/gitlab-snip-helm") (gitolite-clone :source "MELPA" :recipe (:package "gitolite-clone" :repo "colonelpanic8/gitolite-clone" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clone gitolite repositories from a completing list" :date (22360 34640) :url "https://github.com/colonelpanic8/gitolite-clone") (gitpatch :source "MELPA" :recipe (:package "gitpatch" :fetcher github :repo "tumashu/gitpatch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git-format patch toolkit" :date (22898 27472) :url "https://github.com/tumashu/gitpatch") (gitstatus :source "MELPA" :recipe (:package "gitstatus" :repo "igorepst/gitstatus-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Common front-end for `gitstatusd'" :date (25456 2384) :url "https://github.com/igorepst/gitstatus-el") (gitter :source "MELPA" :recipe (:package "gitter" :fetcher github :repo "xuchunyang/gitter.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs Gitter client" :date (25136 65104) :url "https://github.com/xuchunyang/gitter.el") (gkroam :source "MELPA" :recipe (:package "gkroam" :fetcher github :repo "Kinneyzhang/gkroam" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lightweight org-mode Roam Research replica" :date (25388 52432) :url "https://github.com/Kinneyzhang/gkroam") (gl-conf-mode :source "MELPA" :recipe (:package "gl-conf-mode" :repo "llloret/gitolite-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing gitolite config files" :date (22887 57168) :url "https://github.com/llloret/gitolite-emacs") (glass-tty-theme :source "MELPA" :recipe (:package "glass-tty-theme" :fetcher github :repo "irtnog/glass-tty-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reverse video-like theme for the Glass TTY VT220 font" :date (26334 4176) :url "https://github.com/irtnog/glass-tty-theme") (gleam-ts-mode :source "MELPA" :recipe (:package "gleam-ts-mode" :fetcher github :repo "gleam-lang/gleam-mode" :files ("gleam-ts-mode.el")) :description "Major mode for Gleam" :date (26306 24784) :url "https://github.com/gleam-lang/gleam-mode") (global-tags :source "MELPA" :recipe (:package "global-tags" :fetcher git :url "https://git.launchpad.net/global-tags.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp API and editor integration for GNU global" :date (24984 4176) :url "https://git.launchpad.net/global-tags.el") (glsl-mode :source "MELPA" :recipe (:package "glsl-mode" :repo "jimhourihan/glsl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Open GLSL shader files" :date (26389 28496) :url "https://github.com/jimhourihan/glsl-mode") (glue :source "MELPA" :recipe (:package "glue" :repo "hajovonta/glue" :fetcher sourcehut :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs - Common Lisp interop using SLIME or SLY" :date (25535 9040) :url "https://git.sr.ht/~hajovonta/glue") (gmail-message-mode :source "MELPA" :recipe (:package "gmail-message-mode" :repo "Malabarba/gmail-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing gmail messages using markdown syntax" :date (22384 16976) :url "https://github.com/Malabarba/gmail-mode") (gmail2bbdb :source "MELPA" :recipe (:package "gmail2bbdb" :fetcher github :repo "redguardtoo/gmail2bbdb" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import email and name into bbdb from vcard" :date (22779 50256) :url "https://github.com/redguardtoo/gmail2bbdb") (gmpl-mode :source "MELPA" :recipe (:package "gmpl-mode" :repo "cute-jumper/gmpl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GMPL(MathProg) files" :date (25065 52560) :url "https://github.com/cute-jumper/gmpl-mode") (gmsh-mode :source "MELPA" :recipe (:package "gmsh-mode" :repo "matsievskiysv/gmsh-mode" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight GMSH mesh generator script syntax" :date (26071 46544) :url "https://gitlab.com/matsievskiysv/gmsh-mode") (gn-mode :source "MELPA" :recipe (:package "gn-mode" :fetcher github :repo "lashtear/gn-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GN (generate ninja) files" :date (23748 49872) :url "https://github.com/lashtear/gn-mode") (gnome-calendar :source "MELPA" :recipe (:package "gnome-calendar" :fetcher github :repo "NicolasPetton/gnome-calendar.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration with the GNOME Shell calendar" :date (22563 36432) :url "https://github.com/NicolasPetton/gnome-calendar.el") (gnome-screencast :source "MELPA" :recipe (:package "gnome-screencast" :fetcher github :repo "juergenhoetzel/emacs-gnome-screencast" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use Gnome screen recording functionality using elisp" :date (24589 57296) :url "https://github.com/juergenhoetzel/emacs-gnome-screencast") (gnomenm :source "MELPA" :recipe (:package "gnomenm" :fetcher github :repo "nicferrier/emacs-nm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to Gnome nmcli command" :date (21765 62160) :url "https://github.com/nicferrier/emacs-nm") (gnosis :source "MELPA" :recipe (:package "gnosis" :fetcher git :url "https://git.thanosapollo.org/gnosis" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spaced Repetition System" :date (26402 40528) :url "https://git.thanosapollo.org/gnosis") (gntp :source "MELPA" :recipe (:package "gntp" :repo "tekai/gntp.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Growl Notification Protocol for Emacs" :date (21578 44992) :url "https://github.com/tekai/gntp.el") (gnu-apl-mode :source "MELPA" :recipe (:package "gnu-apl-mode" :fetcher github :repo "lokedhs/gnu-apl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate GNU APL with Emacs" :date (25162 2768) :url "https://github.com/lokedhs/gnu-apl-mode") (gnu-indent :source "MELPA" :recipe (:package "gnu-indent" :fetcher codeberg :repo "akib/emacs-gnu-indent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Indent your code with GNU Indent" :date (25474 32336) :url "https://codeberg.org/akib/emacs-gnu-indent") (gnuplot :source "MELPA" :recipe (:package "gnuplot" :repo "emacs-gnuplot/gnuplot" :fetcher github :files ("gnuplot.el" "gnuplot-gui.el" "gnuplot-context.el")) :description "Major-mode and interactive frontend for gnuplot" :date (26340 42960) :url "https://github.com/emacs-gnuplot/gnuplot") (gnuplot-mode :source "MELPA" :recipe (:package "gnuplot-mode" :repo "mkmcc/gnuplot-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing gnuplot scripts" :date (23007 55248) :url "https://github.com/mkmcc/gnuplot-mode") (gnus-alias :source "MELPA" :recipe (:package "gnus-alias" :fetcher github :repo "hexmode/gnus-alias" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An alternative to gnus-posting-styles" :date (25822 35408) :url "https://github.com/hexmode/gnus-alias") (gnus-desktop-notify :source "MELPA" :recipe (:package "gnus-desktop-notify" :repo "wavexx/gnus-desktop-notify.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnus Desktop Notification global minor mode" :date (23341 25424) :url "https://gitlab.com/wavexx/gnus-desktop-notify.el") (gnus-notes :source "MELPA" :recipe (:package "gnus-notes" :fetcher github :repo "deusmax/gnus-notes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep handy notes of read Gnus articles with helm and org" :date (25486 23504) :url "https://github.com/deusmax/gnus-notes") (gnus-recent :source "MELPA" :recipe (:package "gnus-recent" :fetcher github :repo "unhammer/gnus-recent" :files ("gnus-recent.el")) :description "Article breadcrumbs for Gnus" :date (25721 1744) :url "https://github.com/unhammer/gnus-recent") (gnus-select-account :source "MELPA" :recipe (:package "gnus-select-account" :fetcher github :repo "tumashu/gnus-select-account" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select an account before writing a mail in gnus" :date (22898 27472) :url "https://github.com/tumashu/gnus-select-account") (gnus-summary-ext :source "MELPA" :recipe (:package "gnus-summary-ext" :fetcher github :repo "vapniks/gnus-summary-ext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra limit and process mark commands for the gnus summary buffer" :date (23129 8656) :url "https://github.com/vapniks/gnus-summary-ext") (gnus-summary-repo :source "MELPA" :recipe (:package "gnus-summary-repo" :repo "TxGVNN/gnus-summary-repo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import and export files between IMAP and local by using GNUS" :date (23814 44496) :url "https://github.com/TxGVNN/gnus-summary-repo") (gnus-x-gm-raw :source "MELPA" :recipe (:package "gnus-x-gm-raw" :repo "aki2o/gnus-x-gm-raw" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search mail of Gmail using X-GM-RAW as web interface" :date (21398 4672) :url "https://github.com/aki2o/gnus-x-gm-raw") (go :source "MELPA" :recipe (:package "go" :fetcher github :repo "eschulte/el-go" :files (:defaults "back-ends" "stone.wav")) :description "Play GO, translate and transfer between GO back ends" :date (25175 14800) :url "https://github.com/eschulte/el-go") (go-add-tags :source "MELPA" :recipe (:package "go-add-tags" :repo "emacsorphanage/go-add-tags" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add field tags for struct fields" :date (24986 45904) :url "https://github.com/emacsorphanage/go-add-tags") (go-autocomplete :source "MELPA" :recipe (:package "go-autocomplete" :fetcher github :repo "emacsattic/go-autocomplete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-complete-mode backend for go-mode" :date (22864 9296) :url "https://github.com/emacsattic/go-autocomplete") (go-complete :source "MELPA" :recipe (:package "go-complete" :repo "vibhavp/go-complete" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Native code completion for Go" :date (23723 46672) :url "https://github.com/vibhavp/go-complete") (go-direx :source "MELPA" :recipe (:package "go-direx" :repo "emacsorphanage/go-direx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree style source code viewer for Go language" :date (21765 62160) :url "https://github.com/emacsorphanage/go-direx") (go-dlv :source "MELPA" :recipe (:package "go-dlv" :repo "benma/go-dlv.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Go Delve - Debug Go programs interactively with the GUD" :date (25072 25808) :url "https://github.com/benma/go-dlv.el") (go-eldoc :source "MELPA" :recipe (:package "go-eldoc" :repo "emacsorphanage/go-eldoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldoc for go-mode" :date (22715 10960) :url "https://github.com/emacsorphanage/go-eldoc") (go-errcheck :source "MELPA" :recipe (:package "go-errcheck" :repo "dominikh/go-errcheck.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Errcheck integration for go-mode" :date (22418 35152) :url "https://github.com/dominikh/go-errcheck.el") (go-expr-completion :source "MELPA" :recipe (:package "go-expr-completion" :repo "fujimisakari/emacs-go-expr-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Complement the return values for Go" :date (24377 40528) :url "https://github.com/fujimisakari/emacs-go-expr-completion") (go-fill-struct :source "MELPA" :recipe (:package "go-fill-struct" :repo "s-kostyaev/go-fill-struct" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fill struct for golang" :date (25607 42448) :url "https://github.com/s-kostyaev/go-fill-struct") (go-gen-test :source "MELPA" :recipe (:package "go-gen-test" :fetcher github :repo "s-kostyaev/go-gen-test" :files ("go-gen-test.el")) :description "Generate tests for go code with gotests" :date (25739 31696) :url "https://github.com/s-kostyaev/go-gen-test") (go-gopath :source "MELPA" :recipe (:package "go-gopath" :repo "iced/go-gopath" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Will guess GOPATH using gb and projectile" :date (22394 52816) :url "https://github.com/iced/go-gopath") (go-guru :source "MELPA" :recipe (:package "go-guru" :repo "dominikh/go-mode.el" :fetcher github :files ("go-guru.el")) :description "Integration of the Go 'guru' analysis tool into Emacs" :date (26054 37456) :url "https://github.com/dominikh/go-mode.el") (go-imenu :source "MELPA" :recipe (:package "go-imenu" :repo "brantou/go-imenu.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhance imenu for go language" :date (23510 9040) :url "https://github.com/brantou/go-imenu.el") (go-impl :source "MELPA" :recipe (:package "go-impl" :repo "emacsorphanage/go-impl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Impl integration for go-mode" :date (24783 44112) :url "https://github.com/emacsorphanage/go-impl") (go-imports :source "MELPA" :recipe (:package "go-imports" :repo "yasushi-saito/go-imports" :files (:defaults "find-packages.pl") :fetcher github) :description "Insert go import statement given package name" :date (23851 38864) :url "https://github.com/yasushi-saito/go-imports") (go-mode :source "MELPA" :recipe (:package "go-mode" :repo "dominikh/go-mode.el" :fetcher github :files ("go-mode.el")) :description "Major mode for the Go programming language" :date (26227 18128) :url "https://github.com/dominikh/go-mode.el") (go-noisegate :source "MELPA" :recipe (:package "go-noisegate" :repo "go-noisegate/go-noisegate.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run Golang tests with Noise Gate" :date (24236 36304) :url "https://github.com/go-noisegate/go-noisegate.el") (go-playground :source "MELPA" :recipe (:package "go-playground" :repo "grafov/go-playground" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Local Golang playground for short snippets" :date (26108 40912) :url "https://github.com/grafov/go-playground") (go-playground-cli :source "MELPA" :recipe (:package "go-playground-cli" :repo "kosh04/emacs-go-playground" :fetcher github :files ("go-playground-cli.el")) :description "Go Playground client tool" :date (22311 49104) :url "https://github.com/kosh04/emacs-go-playground") (go-projectile :source "MELPA" :recipe (:package "go-projectile" :repo "dougm/go-projectile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Go add-ons for Projectile" :date (24286 42704) :url "https://github.com/dougm/go-projectile") (go-rename :source "MELPA" :recipe (:package "go-rename" :repo "dominikh/go-mode.el" :fetcher github :files ("go-rename.el")) :description "Integration of the 'gorename' tool into Emacs" :date (25056 37584) :url "https://github.com/dominikh/go-mode.el") (go-scratch :source "MELPA" :recipe (:package "go-scratch" :fetcher github :repo "shosti/go-scratch.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "*scratch* buffer for Go" :date (21959 48976) :url "https://github.com/shosti/go-scratch.el") (go-snippets :source "MELPA" :recipe (:package "go-snippets" :fetcher github :repo "toumorokoshi/go-snippets" :files ("*.el" "snippets")) :description "Yasnippets for go" :date (23129 8656) :url "https://github.com/toumorokoshi/go-snippets") (go-stacktracer :source "MELPA" :recipe (:package "go-stacktracer" :fetcher github :repo "samertm/go-stacktracer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parse Go stack traces" :date (21825 18000) :url "https://github.com/samertm/go-stacktracer.el") (go-tag :source "MELPA" :recipe (:package "go-tag" :repo "brantou/emacs-go-tag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Golang struct field tag" :date (25533 53712) :url "https://github.com/brantou/emacs-go-tag") (go-translate :source "MELPA" :recipe (:package "go-translate" :fetcher github :repo "lorniu/go-translate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Translation framework, configurable and scalable" :date (26283 63312) :url "https://github.com/lorniu/go-translate") (gobgen :source "MELPA" :recipe (:package "gobgen" :fetcher github :repo "gergelypolonkai/gobgen.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate GObject descendants using a detailed form" :date (22535 57040) :url "https://github.com/gergelypolonkai/gobgen.el") (god-mode :source "MELPA" :recipe (:package "god-mode" :fetcher github :repo "emacsorphanage/god-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for God-like command entering" :date (26297 9808) :url "https://github.com/emacsorphanage/god-mode") (godoctor :source "MELPA" :recipe (:package "godoctor" :fetcher github :repo "microamp/godoctor.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Frontend for godoctor" :date (23363 52432) :url "https://github.com/microamp/godoctor.el") (gofmt-tag :source "MELPA" :recipe (:package "gofmt-tag" :fetcher github :repo "M1ndo/gofmt-tag" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format and align go struct tags" :date (26015 1360) :url "https://github.com/M1ndo/gofmt-tag") (goggles :source "MELPA" :recipe (:package "goggles" :repo "minad/goggles" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pulse modified regions" :date (26356 31184) :url "https://github.com/minad/goggles") (gold-mode :source "MELPA" :recipe (:package "gold-mode" :repo "yuutayamada/gold-mode-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing .gold files" :date (21394 7616) :url "https://github.com/yuutayamada/gold-mode-el") (golden-ratio :source "MELPA" :recipe (:package "golden-ratio" :repo "roman/golden-ratio.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic resizing of Emacs windows to the golden ratio" :date (25855 32720) :url "https://github.com/roman/golden-ratio.el") (golden-ratio-scroll-screen :source "MELPA" :recipe (:package "golden-ratio-scroll-screen" :repo "jixiuf/golden-ratio-scroll-screen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scroll half screen down or up, and highlight current line" :date (25441 35024) :url "https://github.com/jixiuf/golden-ratio-scroll-screen") (golint :source "MELPA" :recipe (:package "golint" :fetcher github :repo "golang/lint" :files ("misc/emacs/*.el")) :description "Lint for the Go source code" :date (23180 35920) :url "https://github.com/golang/lint") (gom-mode :source "MELPA" :recipe (:package "gom-mode" :fetcher github :repo "emacsorphanage/gom-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Gomfile" :date (21075 4800) :url "https://github.com/emacsorphanage/gom-mode") (gomacro-mode :source "MELPA" :recipe (:package "gomacro-mode" :repo "storvik/gomacro-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gomacro mode and Go REPL integration" :date (24187 50768) :url "https://github.com/storvik/gomacro-mode") (good-scroll :source "MELPA" :recipe (:package "good-scroll" :fetcher github :repo "io12/good-scroll.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Good pixel line scrolling" :date (24959 976) :url "https://github.com/io12/good-scroll.el") (google :source "MELPA" :recipe (:package "google" :fetcher github :repo "hober/google-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to the Google API" :date (21325 36800) :url "https://github.com/hober/google-el") (google-c-style :source "MELPA" :recipe (:package "google-c-style" :fetcher github :repo "google/styleguide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Google's C/C++ style for c-mode" :date (25092 11088) :url "https://github.com/google/styleguide") (google-contacts :source "MELPA" :recipe (:package "google-contacts" :fetcher github :repo "jd/google-contacts.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for Google Contacts in Emacs" :date (24451 29264) :url "https://github.com/jd/google-contacts.el") (google-maps :source "MELPA" :recipe (:package "google-maps" :fetcher github :repo "jd/google-maps.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access Google Maps from Emacs" :date (23540 30160) :url "https://github.com/jd/google-maps.el") (google-this :source "MELPA" :recipe (:package "google-this" :repo "Malabarba/emacs-google-this" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A set of functions and bindings to google under point" :date (22923 30672) :url "https://github.com/Malabarba/emacs-google-this") (google-translate :source "MELPA" :recipe (:package "google-translate" :fetcher github :repo "atykhonov/google-translate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to Google Translate" :date (25386 10704) :url "https://github.com/atykhonov/google-translate") (goose-theme :source "MELPA" :recipe (:package "goose-theme" :repo "tokenrove/goose-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A gray color theme" :date (22465 65360) :url "https://github.com/tokenrove/goose-theme") (gore-mode :source "MELPA" :recipe (:package "gore-mode" :fetcher github :repo "sergey-pashaev/gore-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple mode for gore, a command-line evaluator for golang" :date (22098 11472) :url "https://github.com/sergey-pashaev/gore-mode") (gorepl-mode :source "MELPA" :recipe (:package "gorepl-mode" :fetcher github :repo "manute/gorepl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Go REPL Interactive Development in top of Gore" :date (22957 48848) :url "https://github.com/manute/gorepl-mode") (gotest :source "MELPA" :recipe (:package "gotest" :fetcher github :repo "nlamirault/gotest.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch GO unit tests" :date (25587 57168) :url "https://github.com/nlamirault/gotest.el") (gotham-theme :source "MELPA" :recipe (:package "gotham-theme" :fetcher git :url "https://depp.brause.cc/gotham-theme.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A very dark Emacs color theme" :date (25047 22608) :url "https://depp.brause.cc/gotham-theme.git") (goto-char-preview :source "MELPA" :recipe (:package "goto-char-preview" :repo "emacs-vs/goto-char-preview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview character when executing `goto-char` command" :date (26049 19536) :url "https://github.com/emacs-vs/goto-char-preview") (goto-chg :source "MELPA" :recipe (:package "goto-chg" :repo "emacs-evil/goto-chg" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Go to last change" :date (26129 47056) :url "https://github.com/emacs-evil/goto-chg") (goto-last-change :source "MELPA" :recipe (:package "goto-last-change" :repo "camdez/goto-last-change.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Move point through buffer-undo-list positions" :date (21678 61392) :url "https://github.com/camdez/goto-last-change.el") (goto-last-point :source "MELPA" :recipe (:package "goto-last-point" :fetcher sourcehut :repo "gitmux/goto-last-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Record and jump to the last point in the buffer" :date (25645 57680) :url "https://git.sr.ht/~gitmux/goto-last-point") (goto-line-preview :source "MELPA" :recipe (:package "goto-line-preview" :repo "emacs-vs/goto-line-preview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview line when executing `goto-line` command" :date (26049 19536) :url "https://github.com/emacs-vs/goto-line-preview") (govc :source "MELPA" :recipe (:package "govc" :fetcher github :repo "vmware/govmomi" :files ("govc/emacs/*.el")) :description "Interface to govc for managing VMware ESXi and vCenter" :date (26051 61264) :url "https://github.com/vmware/govmomi") (govet :source "MELPA" :recipe (:package "govet" :fetcher github :repo "meshelton/govet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Linter/problem finder for the Go source code" :date (22920 54480) :url "https://github.com/meshelton/govet") (gpastel :source "MELPA" :recipe (:package "gpastel" :fetcher github :repo "DamienCassou/gpastel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrates GPaste with the kill-ring" :date (25918 51152) :url "https://github.com/DamienCassou/gpastel") (gpr-ts-mode :source "MELPA" :recipe (:package "gpr-ts-mode" :fetcher github :repo "brownts/gpr-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for GNAT project files using Tree-Sitter" :date (26388 7632) :url "https://github.com/brownts/gpr-ts-mode") (gpr-yasnippets :source "MELPA" :recipe (:package "gpr-yasnippets" :fetcher github :repo "brownts/gpr-yasnippets" :files (:defaults "snippets")) :description "Yasnippets for GNAT project files" :date (25698 40272) :url "https://github.com/brownts/gpr-yasnippets") (gpt :source "MELPA" :recipe (:package "gpt" :fetcher github :repo "stuhlmueller/gpt.el" :files (:defaults "gpt.py")) :description "Run instruction-following language models" :date (26388 7632) :url "https://github.com/stuhlmueller/gpt.el") (gpt-commit :source "MELPA" :recipe (:package "gpt-commit" :fetcher github :repo "ywkim/gpt-commit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commit messages with GPT in Emacs" :date (25779 2256) :url "https://github.com/ywkim/gpt-commit") (gptai :source "MELPA" :recipe (:package "gptai" :repo "antonhibl/gptai" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate with the OpenAI API" :date (25717 4688) :url "https://github.com/antonhibl/gptai") (gptel :source "MELPA" :recipe (:package "gptel" :repo "karthink/gptel" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with ChatGPT or other LLMs" :date (26409 13776) :url "https://github.com/karthink/gptel") (gpx :source "MELPA" :recipe (:package "gpx" :fetcher github :repo "mkcms/gpx-mode" :files (:defaults "*.py")) :description "Major mode for GPX files" :date (26212 50768) :url "https://github.com/mkcms/gpx-mode") (grab-mac-link :source "MELPA" :recipe (:package "grab-mac-link" :fetcher github :repo "xuchunyang/grab-mac-link.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grab link from Mac Apps and insert it into Emacs" :date (24729 40656) :url "https://github.com/xuchunyang/grab-mac-link.el") (grab-x-link :source "MELPA" :recipe (:package "grab-x-link" :fetcher github :repo "xuchunyang/grab-x-link" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grab links from X11 apps and insert into Emacs" :date (24011 7504) :url "https://github.com/xuchunyang/grab-x-link") (gradle-mode :source "MELPA" :recipe (:package "gradle-mode" :fetcher github :repo "scubacabra/emacs-gradle-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gradle integration with Emacs' compile" :date (21761 65104) :url "https://github.com/scubacabra/emacs-gradle-mode") (grails :source "MELPA" :recipe (:package "grails" :fetcher github :repo "lifeisfoo/emacs-grails" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Grails projects" :date (25452 5328) :url "https://github.com/lifeisfoo/emacs-grails") (grails-mode :source "MELPA" :recipe (:package "grails-mode" :fetcher github :repo "Groovy-Emacs-Modes/groovy-emacs-modes" :files ("grails-mode.el")) :description "Minor-mode that adds some Grails project management to a grails project" :date (25165 65360) :url "https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes") (grammarly :source "MELPA" :recipe (:package "grammarly" :repo "emacs-grammarly/grammarly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grammarly API interface" :date (26001 54864) :url "https://github.com/emacs-grammarly/grammarly") (grandshell-theme :source "MELPA" :recipe (:package "grandshell-theme" :url "https://framagit.org/steckerhalter/grandshell-theme.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme for Emacs > 24 with intensive colors" :date (23318 63952) :url "https://framagit.org/steckerhalter/grandshell-theme.git") (graphene :source "MELPA" :recipe (:package "graphene" :fetcher github :repo "rdallasgray/graphene" :files ("lib/*")) :description "Friendly Emacs defaults" :date (23308 28112) :url "https://github.com/rdallasgray/graphene") (graphene-meta-theme :source "MELPA" :recipe (:package "graphene-meta-theme" :fetcher github :repo "rdallasgray/graphene-meta-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrated theming for common packages" :date (23330 55120) :url "https://github.com/rdallasgray/graphene-meta-theme") (graphql :source "MELPA" :recipe (:package "graphql" :fetcher github :repo "vermiculus/graphql.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GraphQL utilities" :date (25475 53200) :url "https://github.com/vermiculus/graphql.el") (graphql-doc :source "MELPA" :recipe (:package "graphql-doc" :repo "ifitzpatrick/graphql-doc.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GraphQL Documentation Explorer" :date (26261 36304) :url "https://github.com/ifitzpatrick/graphql-doc.el") (graphql-mode :source "MELPA" :recipe (:package "graphql-mode" :repo "davazp/graphql-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing GraphQL schemas" :date (26065 7760) :url "https://github.com/davazp/graphql-mode") (graphql-ts-mode :source "MELPA" :recipe (:package "graphql-ts-mode" :fetcher sourcehut :repo "joram/graphql-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree-sitter support for GraphQL" :date (26007 7248) :url "https://git.sr.ht/~joram/graphql-ts-mode") (graphviz-dot-mode :source "MELPA" :recipe (:package "graphviz-dot-mode" :repo "ppareit/graphviz-dot-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for the dot-language used by graphviz (att)" :date (25630 3920) :url "https://github.com/ppareit/graphviz-dot-mode") (grapnel :source "MELPA" :recipe (:package "grapnel" :fetcher github :repo "leathekd/grapnel" :files ("grapnel.el")) :description "HTTP request lib with flexible callback dispatch" :date (21065 55360) :url "https://github.com/leathekd/grapnel") (grass-mode :source "MELPA" :recipe (:package "grass-mode" :fetcher github :repo "plantarum/grass-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides Emacs modes for interacting with the GRASS GIS program" :date (22792 62288) :url "https://github.com/plantarum/grass-mode") (grayscale-theme :source "MELPA" :recipe (:package "grayscale-theme" :fetcher github :repo "belak/emacs-grayscale-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple grayscale theme" :date (22997 19408) :url "https://github.com/belak/emacs-grayscale-theme") (greader :source "MELPA" :recipe (:package "greader" :fetcher gitlab :repo "michelangelo-rodriguez/greader" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnamù reader, send buffer contents to a speech engine" :date (26394 46416) :url "https://gitlab.com/michelangelo-rodriguez/greader") (greek-polytonic :source "MELPA" :recipe (:package "greek-polytonic" :fetcher github :repo "jhanschoo/greek-polytonic" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quail package for inputting polytonic Greek" :date (23674 61136) :url "https://github.com/jhanschoo/greek-polytonic") (green-is-the-new-black-theme :source "MELPA" :recipe (:package "green-is-the-new-black-theme" :repo "fredcamps/green-is-the-new-black-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A cool and minimalist green blackened theme engine" :date (25835 47440) :url "https://github.com/fredcamps/green-is-the-new-black-emacs") (green-phosphor-theme :source "MELPA" :recipe (:package "green-phosphor-theme" :fetcher github :repo "aalpern/emacs-color-theme-green-phosphor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light color theme with muted, autumnal colors" :date (21845 3280) :url "https://github.com/aalpern/emacs-color-theme-green-phosphor") (green-screen-theme :source "MELPA" :recipe (:package "green-screen-theme" :fetcher github :repo "rbanffy/green-screen-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A nice color theme for those who miss green CRTs" :date (23412 37968) :url "https://github.com/rbanffy/green-screen-emacs") (gregorio-mode :source "MELPA" :recipe (:package "gregorio-mode" :fetcher github :repo "jsrjenkins/gregorio-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gregorio Mode for .gabc files" :date (22876 464) :url "https://github.com/jsrjenkins/gregorio-mode") (grep-a-lot :source "MELPA" :recipe (:package "grep-a-lot" :fetcher github :repo "ZungBang/emacs-grep-a-lot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manages multiple search results buffers for grep.el" :date (24779 47056) :url "https://github.com/ZungBang/emacs-grep-a-lot") (grey-paper-theme :source "MELPA" :recipe (:package "grey-paper-theme" :fetcher github :repo "gugod/grey-paper-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A greyscale theme with look-n-feel of an eink display" :date (25657 48848) :url "https://github.com/gugod/grey-paper-theme") (greymatters-theme :source "MELPA" :recipe (:package "greymatters-theme" :repo "mswift42/greymatters-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme with a light background" :date (21893 54352) :url "https://github.com/mswift42/greymatters-theme") (grip-mode :source "MELPA" :recipe (:package "grip-mode" :repo "seagle0128/grip-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Instant GitHub-flavored Markdown/Org preview using grip" :date (26397 22608) :url "https://github.com/seagle0128/grip-mode") (grizzl :source "MELPA" :recipe (:package "grizzl" :repo "grizzl/grizzl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast fuzzy search index for Emacs" :date (22452 53328) :url "https://github.com/grizzl/grizzl") (groovy-imports :source "MELPA" :recipe (:package "groovy-imports" :fetcher github :repo "mbezjak/emacs-groovy-imports" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code for dealing with Groovy imports" :date (24721 46544) :url "https://github.com/mbezjak/emacs-groovy-imports") (groovy-mode :source "MELPA" :recipe (:package "groovy-mode" :fetcher github :repo "Groovy-Emacs-Modes/groovy-emacs-modes" :files ("*groovy*.el")) :description "Major mode for Groovy source files" :date (25620 54480) :url "https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes") (gruber-darker-theme :source "MELPA" :recipe (:package "gruber-darker-theme" :repo "rexim/gruber-darker-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gruber Darker color theme for Emacs 24" :date (25913 33232) :url "https://github.com/rexim/gruber-darker-theme") (grugru :source "MELPA" :recipe (:package "grugru" :repo "ROCKTAKEY/grugru" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rotate text at point" :date (25962 18768) :url "https://github.com/ROCKTAKEY/grugru") (grunt :source "MELPA" :recipe (:package "grunt" :fetcher github :repo "gempesaw/grunt.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some glue to stick Emacs and Gruntfiles together" :date (22248 30672) :url "https://github.com/gempesaw/grunt.el") (gruvbox-theme :source "MELPA" :recipe (:package "gruvbox-theme" :fetcher github :repo "greduan/emacs-theme-gruvbox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A retro-groove colour theme for Emacs" :date (26220 44880) :url "https://github.com/greduan/emacs-theme-gruvbox") (gs-mode :source "MELPA" :recipe (:package "gs-mode" :fetcher github :repo "yyr/emacs-grads" :files ("gs-mode.el")) :description "Major mode for editing GrADS script files" :date (22110 2640) :url "https://github.com/yyr/emacs-grads") (gscholar-bibtex :source "MELPA" :recipe (:package "gscholar-bibtex" :repo "cute-jumper/gscholar-bibtex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Retrieve BibTeX from Google Scholar and other online sources(ACM, IEEE, DBLP)" :date (23632 48848) :url "https://github.com/cute-jumper/gscholar-bibtex") (gsettings :source "MELPA" :recipe (:package "gsettings" :fetcher github :repo "wbolster/emacs-gsettings" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GSettings (Gnome) helpers" :date (24684 52176) :url "https://github.com/wbolster/emacs-gsettings") (gsnip :source "MELPA" :recipe (:package "gsnip" :fetcher github :repo "kaiwk/gsnip" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A gitlab snippet client" :date (25086 58704) :url "https://github.com/kaiwk/gsnip") (gtk-pomodoro-indicator :source "MELPA" :recipe (:package "gtk-pomodoro-indicator" :fetcher github :repo "abo-abo/gtk-pomodoro-indicator" :files ("*.el" "*.py" "icons" "pomodoro_indicator")) :description "A pomodoro indicator for the GTK tray" :date (23962 21968) :url "https://github.com/abo-abo/gtk-pomodoro-indicator") (gtk-variant :source "MELPA" :recipe (:package "gtk-variant" :fetcher github :repo "bepvte/gtk-variant.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set the GTK theme variant (titlebar color)" :date (24215 30160) :url "https://github.com/bepvte/gtk-variant.el") (guake :source "MELPA" :recipe (:package "guake" :fetcher github :repo "juergenhoetzel/emacs-guake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with Guake via DBus" :date (25436 17104) :url "https://github.com/juergenhoetzel/emacs-guake") (guess-language :source "MELPA" :recipe (:package "guess-language" :fetcher github :repo "tmalsburg/guess-language.el" :files ("guess-language.el" "trigrams/*")) :description "Robust automatic language detection" :date (26196 62544) :url "https://github.com/tmalsburg/guess-language.el") (guide-key :source "MELPA" :recipe (:package "guide-key" :repo "kai2nenobu/guide-key" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Guide the following key bindings automatically and dynamically" :date (21677 40528) :url "https://github.com/kai2nenobu/guide-key") (guide-key-tip :source "MELPA" :recipe (:package "guide-key-tip" :repo "aki2o/guide-key-tip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show guide-key.el hints using pos-tip.el" :date (22524 336) :url "https://github.com/aki2o/guide-key-tip") (guix :source "MELPA" :recipe (:package "guix" :fetcher git :url "https://git.savannah.gnu.org/git/guix/emacs-guix.git" :files ("elisp/*.el" "doc/*.texi" ("images" "images/*.svg") ("scheme" "scheme/*") (:exclude "scheme/Makefile.am"))) :description "Interface for GNU Guix" :date (25967 36688) :url "https://git.savannah.gnu.org/git/guix/emacs-guix.git") (gulp-task-runner :source "MELPA" :recipe (:package "gulp-task-runner" :fetcher github :repo "NicolasPetton/gulp-task-runner" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gulp task runner" :date (22893 9552) :url "https://github.com/NicolasPetton/gulp-task-runner") (gumshoe :source "MELPA" :recipe (:package "gumshoe" :fetcher github :repo "Overdr0ne/gumshoe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scoped spatial and temporal POINT movement tracking" :date (26324 54736) :url "https://github.com/Overdr0ne/gumshoe") (guru-mode :source "MELPA" :recipe (:package "guru-mode" :fetcher github :repo "bbatsov/guru-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Become an Emacs guru" :date (24949 51536) :url "https://github.com/bbatsov/guru-mode") (gvariant :source "MELPA" :recipe (:package "gvariant" :fetcher github :repo "wbolster/emacs-gvariant" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GVariant (GLib) helpers" :date (24724 22736) :url "https://github.com/wbolster/emacs-gvariant") (gvpr-mode :source "MELPA" :recipe (:package "gvpr-mode" :fetcher github :repo "rodw/gvpr-lib" :files ("extra/*.el")) :description "A major mode offering basic syntax coloring for gvpr scripts" :date (24444 56016) :url "https://github.com/rodw/gvpr-lib") (gxref :source "MELPA" :recipe (:package "gxref" :fetcher github :repo "dedi/gxref" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Xref backend using GNU Global" :date (22763 62032) :url "https://github.com/dedi/gxref") (h5dump-mode :source "MELPA" :recipe (:package "h5dump-mode" :fetcher github :repo "berquist/h5dump-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for navigating h5dump output" :date (25475 53200) :url "https://github.com/berquist/h5dump-mode") (habamax-theme :source "MELPA" :recipe (:package "habamax-theme" :repo "habamax/habamax-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Boring white background color that gets the job done" :date (23473 14672) :url "https://github.com/habamax/habamax-theme") (habitica :source "MELPA" :recipe (:package "habitica" :repo "abrochard/emacs-habitica" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for habitica.com" :date (26202 14928) :url "https://github.com/abrochard/emacs-habitica") (hack-mode :source "MELPA" :recipe (:package "hack-mode" :repo "hhvm/hack-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Hack programming language" :date (26328 51792) :url "https://github.com/hhvm/hack-mode") (hacker-typer :source "MELPA" :recipe (:package "hacker-typer" :fetcher github :repo "dieggsy/emacs-hacker-typer" :files (:defaults "hackerman.png")) :description "Pretend to write code like a pro" :date (22679 37456) :url "https://github.com/dieggsy/emacs-hacker-typer") (hackernews :source "MELPA" :recipe (:package "hackernews" :fetcher github :repo "clarete/hackernews.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hacker News Client for Emacs" :date (26127 5328) :url "https://github.com/clarete/hackernews.el") (haki-theme :source "MELPA" :recipe (:package "haki-theme" :fetcher github :repo "idlip/haki" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elegant, high-contrast dark theme in modern sense" :date (26370 64080) :url "https://github.com/idlip/haki") (hal-mode :source "MELPA" :recipe (:package "hal-mode" :fetcher github :repo "machinekoder/hal-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing HAL files" :date (22393 31952) :url "https://github.com/machinekoder/hal-mode") (halloweenie-theme :source "MELPA" :recipe (:package "halloweenie-theme" :fetcher git :url "https://cicadas.surf/cgit/halloweenie-theme.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark and spooky Halloween color theme" :date (25893 47952) :url "https://cicadas.surf/cgit/halloweenie-theme.git") (ham-mode :source "MELPA" :recipe (:package "ham-mode" :repo "Malabarba/ham-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Html As Markdown. Transparently edit an html file using markdown" :date (21961 4304) :url "https://github.com/Malabarba/ham-mode") (hamburg-theme :source "MELPA" :recipe (:package "hamburg-theme" :repo "mswift42/hamburg-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color Theme with a dark blue background" :date (22178 38992) :url "https://github.com/mswift42/hamburg-theme") (hamburger-menu :source "MELPA" :recipe (:package "hamburger-menu" :repo "iain/hamburger-menu-mode" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode line hamburger menu" :date (25208 12112) :url "https://gitlab.com/iain/hamburger-menu-mode") (haml-mode :source "MELPA" :recipe (:package "haml-mode" :repo "nex3/haml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Haml files" :date (25728 61392) :url "https://github.com/nex3/haml-mode") (hamlet-mode :source "MELPA" :recipe (:package "hamlet-mode" :fetcher github :repo "lightquake/hamlet-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hamlet editing mode" :date (21155 32320) :url "https://github.com/lightquake/hamlet-mode") (hammy :source "MELPA" :recipe (:package "hammy" :fetcher github :repo "alphapapa/hammy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Programmable, interactive interval timers" :date (26344 40016) :url "https://github.com/alphapapa/hammy.el") (handle :source "MELPA" :recipe (:package "handle" :fetcher github :repo "cyruseuros/handle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A handle for major-mode generic functions" :date (23991 22224) :url "https://github.com/cyruseuros/handle") (handlebars-mode :source "MELPA" :recipe (:package "handlebars-mode" :fetcher github :repo "danielevans/handlebars-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Handlebars files" :date (21722 29008) :url "https://github.com/danielevans/handlebars-mode") (handlebars-sgml-mode :source "MELPA" :recipe (:package "handlebars-sgml-mode" :fetcher github :repo "jacott/handlebars-sgml-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add Handlebars contextual indenting support to sgml-mode" :date (20934 576) :url "https://github.com/jacott/handlebars-sgml-mode") (handoff :source "MELPA" :recipe (:package "handoff" :repo "rejeep/handoff.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get your hand off that mouse, damn it!" :date (22009 55376) :url "https://github.com/rejeep/handoff.el") (haproxy-mode :source "MELPA" :recipe (:package "haproxy-mode" :fetcher github :repo "port19x/haproxy-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing HAProxy config files" :date (26050 40400) :url "https://github.com/port19x/haproxy-mode") (hardcore-mode :source "MELPA" :recipe (:package "hardcore-mode" :fetcher github :repo "magnars/hardcore-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Disable arrow keys + optionally backspace and return" :date (22086 20304) :url "https://github.com/magnars/hardcore-mode.el") (hardhat :source "MELPA" :recipe (:package "hardhat" :repo "rolandwalker/hardhat" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Protect against clobbering user-writable files" :date (24734 58576) :url "https://github.com/rolandwalker/hardhat") (harpoon :source "MELPA" :recipe (:package "harpoon" :repo "otavioschwanck/harpoon.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmarks on steroids" :date (26348 37072) :url "https://github.com/otavioschwanck/harpoon.el") (harvest :source "MELPA" :recipe (:package "harvest" :fetcher github :repo "kostajh/harvest.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Harvest integration" :date (22939 18896) :url "https://github.com/kostajh/harvest.el") (haskell-emacs :source "MELPA" :recipe (:package "haskell-emacs" :fetcher github :repo "knupfer/haskell-emacs" :files (:defaults "*.hs" "*.org" "Foreign")) :description "Write emacs extensions in haskell" :date (26047 64208) :url "https://github.com/knupfer/haskell-emacs") (haskell-emacs-base :source "MELPA" :recipe (:package "haskell-emacs-base" :fetcher github :repo "knupfer/haskell-emacs" :files ("modules/base/*.el" "modules/base/*.hs")) :description "Haskell functions from Prelude" :date (22475 14800) :url "https://github.com/knupfer/haskell-emacs") (haskell-emacs-text :source "MELPA" :recipe (:package "haskell-emacs-text" :fetcher github :repo "knupfer/haskell-emacs" :files ("modules/text/*.el" "modules/text/*.hs")) :description "Haskell functions from Data.Text" :date (22475 14800) :url "https://github.com/knupfer/haskell-emacs") (haskell-mode :source "MELPA" :recipe (:package "haskell-mode" :repo "haskell/haskell-mode" :fetcher github :files (:defaults "NEWS" "logo.svg")) :description "A Haskell editing mode" :date (26336 45904) :url "https://github.com/haskell/haskell-mode") (haskell-snippets :source "MELPA" :recipe (:package "haskell-snippets" :fetcher github :repo "haskell/haskell-snippets" :files ("*.el" "snippets")) :description "Yasnippets for Haskell" :date (24634 45776) :url "https://github.com/haskell/haskell-snippets") (haskell-tab-indent :source "MELPA" :recipe (:package "haskell-tab-indent" :fetcher git :url "https://git.spwhitton.name/haskell-tab-indent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tab-based indentation for haskell-mode" :date (24252 24528) :url "https://git.spwhitton.name/haskell-tab-indent") (hasklig-mode :source "MELPA" :recipe (:package "hasklig-mode" :repo "minad/hasklig-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hasklig ligatures" :date (26003 10192) :url "https://github.com/minad/hasklig-mode") (hass :source "MELPA" :recipe (:package "hass" :fetcher github :repo "purplg/hass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with Home Assistant" :date (25715 49360) :url "https://github.com/purplg/hass") (haste :source "MELPA" :recipe (:package "haste" :fetcher github :repo "rlister/emacs-haste-client" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client for hastebin (http://hastebin.com/about.md)" :date (21585 21840) :url "https://github.com/rlister/emacs-haste-client") (haxe-imports :source "MELPA" :recipe (:package "haxe-imports" :fetcher github :repo "accidentalrebel/emacs-haxe-imports" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code for dealing with Haxe imports" :date (22748 8272) :url "https://github.com/accidentalrebel/emacs-haxe-imports") (haxe-mode :source "MELPA" :recipe (:package "haxe-mode" :repo "emacsorphanage/haxe-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Haxe files" :date (26355 10320) :url "https://github.com/emacsorphanage/haxe-mode") (haxor-mode :source "MELPA" :recipe (:package "haxor-mode" :repo "krzysztof-magosa/haxor-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Haxor Assembly Files" :date (22372 25808) :url "https://github.com/krzysztof-magosa/haxor-mode") (hayoo :source "MELPA" :recipe (:package "hayoo" :repo "benma/hayoo.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query hayoo and show results in a tabulated buffer" :date (21506 11584) :url "https://github.com/benma/hayoo.el") (hc-zenburn-theme :source "MELPA" :recipe (:package "hc-zenburn-theme" :fetcher github :repo "edran/hc-zenburn-emacs" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An higher contrast version of the Zenburn theme" :date (22024 22736) :url "https://github.com/edran/hc-zenburn-emacs") (hcl-mode :source "MELPA" :recipe (:package "hcl-mode" :repo "hcl-emacs/hcl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Hashicorp" :date (26067 49488) :url "https://github.com/hcl-emacs/hcl-mode") (headlong :source "MELPA" :recipe (:package "headlong" :repo "abo-abo/headlong" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reckless completion" :date (21808 8912) :url "https://github.com/abo-abo/headlong") (heaven-and-hell :source "MELPA" :recipe (:package "heaven-and-hell" :fetcher github :repo "valignatev/heaven-and-hell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy toggle light/dark themes" :date (23848 62672) :url "https://github.com/valignatev/heaven-and-hell") (heex-ts-mode :source "MELPA" :recipe (:package "heex-ts-mode" :repo "wkirschbaum/heex-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Heex with tree-sitter support" :date (26017 43088) :url "https://github.com/wkirschbaum/heex-ts-mode") (helix-theme :source "MELPA" :recipe (:package "helix-theme" :fetcher github :repo "ibakepunk/helix-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme inspired by Helix editor's default colors" :date (26299 51536) :url "https://github.com/ibakepunk/helix-theme") (helm :source "MELPA" :recipe (:package "helm" :fetcher github :repo "emacs-helm/helm" :files (:defaults "emacs-helm.sh" (:exclude "helm-lib.el" "helm-source.el" "helm-multi-match.el" "helm-core.el"))) :description "Helm is an Emacs incremental and narrowing framework" :date (26407 58448) :url "https://github.com/emacs-helm/helm") (helm-R :source "MELPA" :recipe (:package "helm-R" :repo "myuhe/helm-R.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm-sources and some utilities for GNU R" :date (20529 17856) :url "https://github.com/myuhe/helm-R.el") (helm-ack :source "MELPA" :recipe (:package "helm-ack" :repo "emacsorphanage/helm-ack" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ack command with helm interface" :date (21585 21840) :url "https://github.com/emacsorphanage/helm-ack") (helm-ad :source "MELPA" :recipe (:package "helm-ad" :fetcher github :repo "tnoda/helm-ad" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm source for Active Directory" :date (22119 17616) :url "https://github.com/tnoda/helm-ad") (helm-ag :source "MELPA" :recipe (:package "helm-ag" :repo "emacsorphanage/helm-ag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The silver searcher with helm interface" :date (26398 43472) :url "https://github.com/emacsorphanage/helm-ag") (helm-apt :source "MELPA" :recipe (:package "helm-apt" :fetcher github :repo "emacs-helm/helm-apt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for Debian/Ubuntu packages (apt-*)" :date (25885 53840) :url "https://github.com/emacs-helm/helm-apt") (helm-atoms :source "MELPA" :recipe (:package "helm-atoms" :fetcher github :repo "dantecatalfamo/helm-atoms" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reverse variable lookup using Helm" :date (24452 50128) :url "https://github.com/dantecatalfamo/helm-atoms") (helm-aws :source "MELPA" :recipe (:package "helm-aws" :fetcher github :repo "istib/helm-aws" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage AWS EC2 server instances directly from Emacs" :date (23288 42832) :url "https://github.com/istib/helm-aws") (helm-backup :source "MELPA" :recipe (:package "helm-backup" :fetcher github :repo "antham/helm-backup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backup each file change using git" :date (23446 56144) :url "https://github.com/antham/helm-backup") (helm-bbdb :source "MELPA" :recipe (:package "helm-bbdb" :repo "emacs-helm/helm-bbdb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for bbdb" :date (23868 47952) :url "https://github.com/emacs-helm/helm-bbdb") (helm-bibtex :source "MELPA" :recipe (:package "helm-bibtex" :fetcher github :repo "tmalsburg/helm-bibtex" :files ("helm-bibtex.el")) :description "A bibliography manager based on Helm" :date (25891 6224) :url "https://github.com/tmalsburg/helm-bibtex") (helm-bibtexkey :source "MELPA" :recipe (:package "helm-bibtexkey" :fetcher github :repo "kenbeese/helm-bibtexkey" :files ("*.el" "*.py")) :description "Bibtexkey source for helm" :date (21245 9280) :url "https://github.com/kenbeese/helm-bibtexkey") (helm-bind-key :source "MELPA" :recipe (:package "helm-bind-key" :repo "myuhe/helm-bind-key.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm-source for for bind-key" :date (21598 33872) :url "https://github.com/myuhe/helm-bind-key.el") (helm-bitbucket :source "MELPA" :recipe (:package "helm-bitbucket" :fetcher github :repo "dragonwasrobot/helm-bitbucket" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Bitbucket with Helm" :date (25305 48720) :url "https://github.com/dragonwasrobot/helm-bitbucket") (helm-bm :source "MELPA" :recipe (:package "helm-bm" :fetcher github :repo "emacs-helm/helm-bm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for bm.el" :date (26297 9808) :url "https://github.com/emacs-helm/helm-bm") (helm-books :source "MELPA" :recipe (:package "helm-books" :fetcher github :repo "grugrut/helm-books" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for searching books" :date (22741 35024) :url "https://github.com/grugrut/helm-books") (helm-bufler :source "MELPA" :recipe (:package "helm-bufler" :fetcher github :repo "alphapapa/bufler.el" :files ("helm-bufler.el")) :description "Helm source for Bufler" :date (25860 50640) :url "https://github.com/alphapapa/bufler.el") (helm-bundle-show :source "MELPA" :recipe (:package "helm-bundle-show" :repo "masutaka/emacs-helm-bundle-show" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bundle show with helm interface" :date (23785 44240) :url "https://github.com/masutaka/emacs-helm-bundle-show") (helm-c-moccur :source "MELPA" :recipe (:package "helm-c-moccur" :fetcher github :repo "myuhe/helm-c-moccur.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm source for color-moccur.el" :date (22146 62544) :url "https://github.com/myuhe/helm-c-moccur.el") (helm-c-yasnippet :source "MELPA" :recipe (:package "helm-c-yasnippet" :repo "emacs-jp/helm-c-yasnippet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm source for yasnippet.el" :date (25854 11856) :url "https://github.com/emacs-jp/helm-c-yasnippet") (helm-catkin :source "MELPA" :recipe (:package "helm-catkin" :fetcher github :repo "gollth/helm-catkin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package for compile ROS workspaces with catkin-tools" :date (23744 52816) :url "https://github.com/gollth/helm-catkin") (helm-charinfo :source "MELPA" :recipe (:package "helm-charinfo" :repo "mandoku/helm-charinfo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm source for character information" :date (22923 30672) :url "https://github.com/mandoku/helm-charinfo") (helm-chrome :source "MELPA" :recipe (:package "helm-chrome" :fetcher github :repo "kawabata/helm-chrome" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for Chrome bookmarks" :date (22413 17232) :url "https://github.com/kawabata/helm-chrome") (helm-chrome-control :source "MELPA" :recipe (:package "helm-chrome-control" :fetcher github :repo "xuchunyang/helm-chrome-control" :files (:defaults "*.js")) :description "Control Chrome tabs with Helm (macOS only)" :date (23841 3024) :url "https://github.com/xuchunyang/helm-chrome-control") (helm-chrome-history :source "MELPA" :recipe (:package "helm-chrome-history" :fetcher github :repo "xuchunyang/helm-chrome-history" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse Chrome History with Helm" :date (23993 63952) :url "https://github.com/xuchunyang/helm-chrome-history") (helm-chronos :source "MELPA" :recipe (:package "helm-chronos" :fetcher github :repo "dxknight/helm-chronos" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for chronos timers" :date (21862 12368) :url "https://github.com/dxknight/helm-chronos") (helm-cider :source "MELPA" :recipe (:package "helm-cider" :fetcher github :repo "clojure-emacs/helm-cider" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to CIDER" :date (25284 42576) :url "https://github.com/clojure-emacs/helm-cider") (helm-cider-history :source "MELPA" :recipe (:package "helm-cider-history" :fetcher github :repo "Kungi/helm-cider-history" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for cider history" :date (21930 48720) :url "https://github.com/Kungi/helm-cider-history") (helm-circe :source "MELPA" :recipe (:package "helm-circe" :repo "lesharris/helm-circe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm circe buffer management" :date (22198 24272) :url "https://github.com/lesharris/helm-circe") (helm-clojuredocs :source "MELPA" :recipe (:package "helm-clojuredocs" :repo "mbuczko/helm-clojuredocs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search for help in clojuredocs.org" :date (22274 54736) :url "https://github.com/mbuczko/helm-clojuredocs") (helm-codesearch :source "MELPA" :recipe (:package "helm-codesearch" :fetcher github :repo "youngker/helm-codesearch.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for codesearch" :date (25503 32592) :url "https://github.com/youngker/helm-codesearch.el") (helm-comint :source "MELPA" :recipe (:package "helm-comint" :fetcher github :repo "emacs-helm/helm-comint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Comint prompt navigation for helm" :date (25922 48208) :url "https://github.com/emacs-helm/helm-comint") (helm-commandlinefu :source "MELPA" :recipe (:package "helm-commandlinefu" :repo "xuchunyang/helm-commandlinefu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search and browse commandlinefu.com from helm" :date (21880 42320) :url "https://github.com/xuchunyang/helm-commandlinefu") (helm-company :source "MELPA" :recipe (:package "helm-company" :repo "Sodel-the-Vociferous/helm-company" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for company-mode" :date (25937 15568) :url "https://github.com/Sodel-the-Vociferous/helm-company") (helm-core :source "MELPA" :recipe (:package "helm-core" :repo "emacs-helm/helm" :fetcher github :files ("helm-core.el" "helm-lib.el" "helm-source.el" "helm-multi-match.el")) :description "Development files for Helm" :date (26407 58448) :url "https://github.com/emacs-helm/helm") (helm-cscope :source "MELPA" :recipe (:package "helm-cscope" :fetcher github :repo "alpha22jp/helm-cscope.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for xcscope.el" :date (23812 2768) :url "https://github.com/alpha22jp/helm-cscope.el") (helm-css-scss :source "MELPA" :recipe (:package "helm-css-scss" :fetcher github :repo "emacsorphanage/helm-css-scss" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "CSS/SCSS/LESS Selectors with helm interface" :date (25706 34384) :url "https://github.com/emacsorphanage/helm-css-scss") (helm-ctest :source "MELPA" :recipe (:package "helm-ctest" :fetcher github :repo "danlamanna/helm-ctest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run ctest from within emacs" :date (25304 27856) :url "https://github.com/danlamanna/helm-ctest") (helm-dash :source "MELPA" :recipe (:package "helm-dash" :repo "dash-docs-el/helm-dash" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Offline documentation browser for +150 APIs using Dash docsets" :date (23786 65104) :url "https://github.com/dash-docs-el/helm-dash") (helm-descbinds :source "MELPA" :recipe (:package "helm-descbinds" :repo "emacs-helm/helm-descbinds" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A convenient `describe-bindings' with `helm'" :date (26062 31568) :url "https://github.com/emacs-helm/helm-descbinds") (helm-describe-modes :source "MELPA" :recipe (:package "helm-describe-modes" :fetcher github :repo "emacs-helm/helm-describe-modes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to major and minor modes" :date (22204 63056) :url "https://github.com/emacs-helm/helm-describe-modes") (helm-dictionary :source "MELPA" :recipe (:package "helm-dictionary" :fetcher github :repo "emacs-helm/helm-dictionary" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm source for looking up dictionaries" :date (25868 44752) :url "https://github.com/emacs-helm/helm-dictionary") (helm-directory :source "MELPA" :recipe (:package "helm-directory" :repo "masasam/emacs-helm-directory" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Selecting directory before select the file" :date (22881 18384) :url "https://github.com/masasam/emacs-helm-directory") (helm-dired-recent-dirs :source "MELPA" :recipe (:package "helm-dired-recent-dirs" :fetcher github :repo "zonkyy/helm-dired-recent-dirs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show recent dirs with helm.el support" :date (21181 56384) :url "https://github.com/zonkyy/helm-dired-recent-dirs") (helm-dogears :source "MELPA" :recipe (:package "helm-dogears" :fetcher github :repo "alphapapa/dogears.el" :files ("helm-dogears.el")) :description "Helm source for Dogears" :date (25728 61392) :url "https://github.com/alphapapa/dogears.el") (helm-emmet :source "MELPA" :recipe (:package "helm-emmet" :repo "yasuyk/helm-emmet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for emmet-mode's snippets" :date (22405 23120) :url "https://github.com/yasuyk/helm-emmet") (helm-emms :source "MELPA" :recipe (:package "helm-emms" :repo "emacs-helm/helm-emms" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emms for Helm" :date (25134 23376) :url "https://github.com/emacs-helm/helm-emms") (helm-esa :source "MELPA" :recipe (:package "helm-esa" :repo "masutaka/emacs-helm-esa" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Esa with helm interface" :date (23859 32976) :url "https://github.com/masutaka/emacs-helm-esa") (helm-evil-markers :source "MELPA" :recipe (:package "helm-evil-markers" :repo "xueeinstein/helm-evil-markers" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show evil markers with helm" :date (24241 54224) :url "https://github.com/xueeinstein/helm-evil-markers") (helm-eww :source "MELPA" :recipe (:package "helm-eww" :repo "emacs-helm/helm-eww" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm UI wrapper for EWW" :date (23690 49360) :url "https://github.com/emacs-helm/helm-eww") (helm-ext :source "MELPA" :recipe (:package "helm-ext" :repo "cute-jumper/helm-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A few extensions to Helm" :date (24343 22352) :url "https://github.com/cute-jumper/helm-ext") (helm-exwm :source "MELPA" :recipe (:package "helm-exwm" :repo "emacs-helm/helm-exwm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm for EXWM buffers" :date (24617 36688) :url "https://github.com/emacs-helm/helm-exwm") (helm-file-preview :source "MELPA" :recipe (:package "helm-file-preview" :repo "jcs-legacy/helm-file-preview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview the current helm file selection" :date (26001 54864) :url "https://github.com/jcs-legacy/helm-file-preview") (helm-filesets :source "MELPA" :recipe (:package "helm-filesets" :repo "gcla/helm-filesets" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm source for emacs filesets" :date (21544 26816) :url "https://github.com/gcla/helm-filesets") (helm-firefox :source "MELPA" :recipe (:package "helm-firefox" :repo "emacs-helm/helm-firefox" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Firefox bookmarks" :date (25183 8912) :url "https://github.com/emacs-helm/helm-firefox") (helm-fish-completion :source "MELPA" :recipe (:package "helm-fish-completion" :repo "emacs-helm/helm-fish-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for fish completion" :date (24406 40784) :url "https://github.com/emacs-helm/helm-fish-completion") (helm-flx :source "MELPA" :recipe (:package "helm-flx" :repo "PythonNut/helm-flx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort helm candidates by flx score" :date (25424 25936) :url "https://github.com/PythonNut/helm-flx") (helm-flycheck :source "MELPA" :recipe (:package "helm-flycheck" :fetcher github :repo "yasuyk/helm-flycheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck errors with helm" :date (22401 26064) :url "https://github.com/yasuyk/helm-flycheck") (helm-flymake :source "MELPA" :recipe (:package "helm-flymake" :fetcher github :repo "emacs-helm/helm-flymake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for flymake" :date (26324 54736) :url "https://github.com/emacs-helm/helm-flymake") (helm-flyspell :source "MELPA" :recipe (:package "helm-flyspell" :repo "pronobis/helm-flyspell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm extension for correcting words with flyspell" :date (22684 55376) :url "https://github.com/pronobis/helm-flyspell") (helm-frame :source "MELPA" :recipe (:package "helm-frame" :fetcher github :repo "chee/helm-frame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open helm buffers in a dedicated frame" :date (25321 36944) :url "https://github.com/chee/helm-frame") (helm-fuz :source "MELPA" :recipe (:package "helm-fuz" :repo "rustify-emacs/fuz.el" :fetcher github :files ("helm-fuz.el")) :description "Integrate Helm and Fuz" :date (24371 1744) :url "https://github.com/rustify-emacs/fuz.el") (helm-fuzzier :source "MELPA" :recipe (:package "helm-fuzzier" :repo "EphramPerdition/helm-fuzzier" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better fuzzy matching for Helm" :date (22355 16720) :url "https://github.com/EphramPerdition/helm-fuzzier") (helm-fuzzy :source "MELPA" :recipe (:package "helm-fuzzy" :repo "jcs-legacy/helm-fuzzy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy matching for helm source" :date (26001 54864) :url "https://github.com/jcs-legacy/helm-fuzzy") (helm-fuzzy-find :source "MELPA" :recipe (:package "helm-fuzzy-find" :repo "xuchunyang/helm-fuzzy-find" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find file using Fuzzy Search" :date (23039 31696) :url "https://github.com/xuchunyang/helm-fuzzy-find") (helm-ghq :source "MELPA" :recipe (:package "helm-ghq" :repo "masutaka/emacs-helm-ghq" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ghq with helm interface" :date (24827 11728) :url "https://github.com/masutaka/emacs-helm-ghq") (helm-ghs :source "MELPA" :recipe (:package "helm-ghs" :repo "iory/emacs-helm-ghs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ghs with helm interface" :date (22889 12496) :url "https://github.com/iory/emacs-helm-ghs") (helm-git :source "MELPA" :recipe (:package "helm-git" :repo "maio/helm-git" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm extension for Git" :date (20462 2368) :url "https://github.com/maio/helm-git") (helm-git-grep :source "MELPA" :recipe (:package "helm-git-grep" :fetcher github :repo "yasuyk/helm-git-grep" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm for git grep, an incremental git-grep(1)" :date (22848 21072) :url "https://github.com/yasuyk/helm-git-grep") (helm-github-stars :source "MELPA" :recipe (:package "helm-github-stars" :fetcher github :repo "Sliim/helm-github-stars" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for your github's stars" :date (23748 49872) :url "https://github.com/Sliim/helm-github-stars") (helm-gitignore :source "MELPA" :recipe (:package "helm-gitignore" :fetcher github :repo "emacsorphanage/helm-gitignore" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate .gitignore files with gitignore.io" :date (25610 18640) :url "https://github.com/emacsorphanage/helm-gitignore") (helm-gitlab :source "MELPA" :recipe (:package "helm-gitlab" :fetcher github :repo "nlamirault/emacs-gitlab" :files ("helm-gitlab.el")) :description "Helm interface to Gitlab" :date (23205 39120) :url "https://github.com/nlamirault/emacs-gitlab") (helm-go-package :source "MELPA" :recipe (:package "helm-go-package" :repo "yasuyk/helm-go-package" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for Go programming language's package" :date (22554 21456) :url "https://github.com/yasuyk/helm-go-package") (helm-google :source "MELPA" :recipe (:package "helm-google" :fetcher git :url "https://framagit.org/steckerhalter/helm-google.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Helm Interface for quick Google searches" :date (24750 46800) :url "https://framagit.org/steckerhalter/helm-google.git") (helm-grepint :source "MELPA" :recipe (:package "helm-grepint" :fetcher github :repo "kopoli/helm-grepint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generic helm interface to grep" :date (24369 46416) :url "https://github.com/kopoli/helm-grepint") (helm-growthforecast :source "MELPA" :recipe (:package "helm-growthforecast" :fetcher github :repo "daichirata/helm-growthforecast" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm extensions for growthforecast" :date (21212 11968) :url "https://github.com/daichirata/helm-growthforecast") (helm-gtags :source "MELPA" :recipe (:package "helm-gtags" :repo "emacsorphanage/helm-gtags" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GNU GLOBAL helm interface" :date (26355 10320) :url "https://github.com/emacsorphanage/helm-gtags") (helm-hatena-bookmark :source "MELPA" :recipe (:package "helm-hatena-bookmark" :repo "masutaka/emacs-helm-hatena-bookmark" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hatena::Bookmark with helm interface" :date (24827 11728) :url "https://github.com/masutaka/emacs-helm-hatena-bookmark") (helm-hayoo :source "MELPA" :recipe (:package "helm-hayoo" :repo "markus1189/helm-hayoo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Source and configured helm for searching hayoo" :date (22045 28880) :url "https://github.com/markus1189/helm-hayoo") (helm-helm-commands :source "MELPA" :recipe (:package "helm-helm-commands" :fetcher github :repo "vapniks/helm-helm-commands" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "List all helm commands with helm" :date (21027 40128) :url "https://github.com/vapniks/helm-helm-commands") (helm-hoogle :source "MELPA" :recipe (:package "helm-hoogle" :fetcher github :repo "jwiegley/helm-hoogle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use helm to navigate query results from Hoogle" :date (22545 6480) :url "https://github.com/jwiegley/helm-hoogle") (helm-hunks :source "MELPA" :recipe (:package "helm-hunks" :fetcher github :repo "torgeir/helm-hunks.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm interface for git hunks - browsing, staging, unstaging and killing" :date (23093 35152) :url "https://github.com/torgeir/helm-hunks.el") (helm-icons :source "MELPA" :recipe (:package "helm-icons" :repo "yyoncho/helm-icons" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm icons" :date (25914 54096) :url "https://github.com/yyoncho/helm-icons") (helm-idris :source "MELPA" :recipe (:package "helm-idris" :fetcher github :repo "david-christiansen/helm-idris" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Helm datasource for Idris documentation, queried from the compiler" :date (21628 54992) :url "https://github.com/david-christiansen/helm-idris") (helm-img :source "MELPA" :recipe (:package "helm-img" :repo "mtmtcode/helm-img" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for making image sources for helm" :date (22139 2896) :url "https://github.com/mtmtcode/helm-img") (helm-img-tiqav :source "MELPA" :recipe (:package "helm-img-tiqav" :repo "mtmtcode/helm-img-tiqav" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An helm-source for joking" :date (22139 2896) :url "https://github.com/mtmtcode/helm-img-tiqav") (helm-ispell :source "MELPA" :recipe (:package "helm-ispell" :repo "emacsorphanage/helm-ispell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ispell-complete-word with helm interface" :date (25304 27856) :url "https://github.com/emacsorphanage/helm-ispell") (helm-itunes :source "MELPA" :recipe (:package "helm-itunes" :fetcher github :repo "anschwa/helm-itunes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play local iTunes and Spotify tracks" :date (22044 8016) :url "https://github.com/anschwa/helm-itunes") (helm-j-cheatsheet :source "MELPA" :recipe (:package "helm-j-cheatsheet" :fetcher github :repo "abo-abo/helm-j-cheatsheet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick J reference for Emacs" :date (22694 4816) :url "https://github.com/abo-abo/helm-j-cheatsheet") (helm-jira :source "MELPA" :recipe (:package "helm-jira" :fetcher github :repo "romandecker/helm-jira" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm bindings for JIRA/Bitbucket/stash" :date (23394 8016) :url "https://github.com/romandecker/helm-jira") (helm-js-codemod :source "MELPA" :recipe (:package "helm-js-codemod" :fetcher github :repo "torgeir/helm-js-codemod.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm interface for running js-codemods" :date (23941 15824) :url "https://github.com/torgeir/helm-js-codemod.el") (helm-jstack :source "MELPA" :recipe (:package "helm-jstack" :repo "raghavgautam/helm-jstack" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to Jps & Jstack for Java/JVM processes" :date (21870 6480) :url "https://github.com/raghavgautam/helm-jstack") (helm-kythe :source "MELPA" :recipe (:package "helm-kythe" :fetcher github :repo "MaskRay/emacs-helm-kythe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Google Kythe helm interface" :date (22881 18384) :url "https://github.com/MaskRay/emacs-helm-kythe") (helm-lastpass :source "MELPA" :recipe (:package "helm-lastpass" :fetcher github :repo "xuchunyang/helm-lastpass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface of LastPass" :date (23379 40656) :url "https://github.com/xuchunyang/helm-lastpass") (helm-lib-babel :source "MELPA" :recipe (:package "helm-lib-babel" :fetcher github :repo "dfeich/helm-lib-babel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm insertion of babel function references" :date (23283 24912) :url "https://github.com/dfeich/helm-lib-babel") (helm-lines :source "MELPA" :recipe (:package "helm-lines" :repo "torgeir/helm-lines.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm interface for completing by lines" :date (25042 4688) :url "https://github.com/torgeir/helm-lines.el") (helm-lobsters :source "MELPA" :recipe (:package "helm-lobsters" :repo "julienXX/helm-lobste.rs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm front-end for lobste.rs" :date (25825 11600) :url "https://github.com/julienXX/helm-lobste.rs") (helm-ls-git :source "MELPA" :recipe (:package "helm-ls-git" :repo "emacs-helm/helm-ls-git" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The git project manager for helm" :date (26318 15952) :url "https://github.com/emacs-helm/helm-ls-git") (helm-ls-hg :source "MELPA" :recipe (:package "helm-ls-hg" :repo "emacs-helm/helm-ls-hg" :fetcher github :old-names (helm-mercurial-queue) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "List hg files in hg project" :date (21999 19536) :url "https://github.com/emacs-helm/helm-ls-hg") (helm-ls-svn :source "MELPA" :recipe (:package "helm-ls-svn" :fetcher github :repo "emacsmirror/helm-ls-svn" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm extension to list svn files" :date (23692 4688) :url "https://github.com/emacsmirror/helm-ls-svn") (helm-lsp :source "MELPA" :recipe (:package "helm-lsp" :repo "emacs-lsp/helm-lsp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP helm integration" :date (24700 40400) :url "https://github.com/emacs-lsp/helm-lsp") (helm-lxc :source "MELPA" :recipe (:package "helm-lxc" :repo "montag451/helm-lxc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to manage LXC containers" :date (24183 53712) :url "https://github.com/montag451/helm-lxc") (helm-make :source "MELPA" :recipe (:package "helm-make" :repo "abo-abo/helm-make" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select a Makefile target with helm" :date (24301 10064) :url "https://github.com/abo-abo/helm-make") (helm-migemo :source "MELPA" :recipe (:package "helm-migemo" :repo "emacs-jp/helm-migemo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Migemo plug-in for helm" :date (26349 57936) :url "https://github.com/emacs-jp/helm-migemo") (helm-mode-manager :source "MELPA" :recipe (:package "helm-mode-manager" :fetcher github :repo "istib/helm-mode-manager" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select and toggle major and minor modes with helm" :date (24567 30288) :url "https://github.com/istib/helm-mode-manager") (helm-mt :source "MELPA" :recipe (:package "helm-mt" :repo "dfdeshom/helm-mt" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm multi-term management" :date (22493 44752) :url "https://github.com/dfdeshom/helm-mt") (helm-mu :source "MELPA" :recipe (:package "helm-mu" :fetcher github :repo "emacs-helm/helm-mu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm search for e-mails and contacts in mu4e" :date (26335 25040) :url "https://github.com/emacs-helm/helm-mu") (helm-navi :source "MELPA" :recipe (:package "helm-navi" :fetcher github :repo "emacs-helm/helm-navi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm for navi-mode" :date (25699 61136) :url "https://github.com/emacs-helm/helm-navi") (helm-nixos-options :source "MELPA" :recipe (:package "helm-nixos-options" :fetcher github :repo "nix-community/nix-emacs" :files ("helm-nixos-options.el")) :description "Helm Interface for nixos-options" :date (22044 8016) :url "https://github.com/nix-community/nix-emacs") (helm-notmuch :source "MELPA" :recipe (:package "helm-notmuch" :fetcher github :repo "emacs-helm/helm-notmuch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search emails with Notmuch and Helm" :date (23697 22608) :url "https://github.com/emacs-helm/helm-notmuch") (helm-open-github :source "MELPA" :recipe (:package "helm-open-github" :repo "emacsorphanage/helm-open-github" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities of Opening Github Page" :date (25304 27856) :url "https://github.com/emacsorphanage/helm-open-github") (helm-org :source "MELPA" :recipe (:package "helm-org" :fetcher github :repo "emacs-helm/helm-org" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm for org headlines and keywords completion" :date (26351 13264) :url "https://github.com/emacs-helm/helm-org") (helm-org-multi-wiki :source "MELPA" :recipe (:package "helm-org-multi-wiki" :fetcher github :repo "akirak/org-multi-wiki" :files ("helm-org-multi-wiki.el")) :description "Helm interface to org-multi-wiki" :date (24634 45776) :url "https://github.com/akirak/org-multi-wiki") (helm-org-ql :source "MELPA" :recipe (:package "helm-org-ql" :fetcher github :repo "alphapapa/org-ql" :files ("helm-org-ql.el")) :description "Helm support for org-ql" :date (26218 3152) :url "https://github.com/alphapapa/org-ql") (helm-org-recent-headings :source "MELPA" :recipe (:package "helm-org-recent-headings" :fetcher github :repo "alphapapa/org-recent-headings" :version-regexp "helm-org-recent-headings-v%v" :files ("helm-org-recent-headings.el")) :description "Helm source for org-recent-headings" :date (24931 21584) :url "https://github.com/alphapapa/org-recent-headings") (helm-org-rifle :source "MELPA" :recipe (:package "helm-org-rifle" :fetcher github :repo "alphapapa/org-rifle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rifle through your Org files" :date (25826 32464) :url "https://github.com/alphapapa/org-rifle") (helm-orgcard :source "MELPA" :recipe (:package "helm-orgcard" :repo "emacs-jp/helm-orgcard" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse the orgcard by helm" :date (25304 27856) :url "https://github.com/emacs-jp/helm-orgcard") (helm-osx-app :source "MELPA" :recipe (:package "helm-osx-app" :fetcher github :repo "xuchunyang/helm-osx-app" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch macOS apps with helm" :date (23854 15056) :url "https://github.com/xuchunyang/helm-osx-app") (helm-pages :source "MELPA" :recipe (:package "helm-pages" :fetcher github :repo "david-christiansen/helm-pages" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pages in current buffer as Helm datasource" :date (22578 3792) :url "https://github.com/david-christiansen/helm-pages") (helm-pass :source "MELPA" :recipe (:package "helm-pass" :fetcher github :repo "emacs-helm/helm-pass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface of pass, the standard Unix password manager" :date (24625 30800) :url "https://github.com/emacs-helm/helm-pass") (helm-perldoc :source "MELPA" :recipe (:package "helm-perldoc" :fetcher github :repo "emacsorphanage/helm-perldoc" :files (:defaults "*.pl")) :description "Perldoc with helm interface" :date (25304 27856) :url "https://github.com/emacsorphanage/helm-perldoc") (helm-perspeen :source "MELPA" :recipe (:package "helm-perspeen" :repo "jimo1001/helm-perspeen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for perspeen" :date (22708 37712) :url "https://github.com/jimo1001/helm-perspeen") (helm-phpunit :source "MELPA" :recipe (:package "helm-phpunit" :fetcher github :repo "eric-hansen/helm-phpunit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm integration for phpunit.el" :date (22324 61136) :url "https://github.com/eric-hansen/helm-phpunit") (helm-posframe :source "MELPA" :recipe (:package "helm-posframe" :fetcher github :repo "tumashu/helm-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Using posframe to show helm window" :date (25827 53328) :url "https://github.com/tumashu/helm-posframe") (helm-proc :source "MELPA" :recipe (:package "helm-proc" :repo "markus1189/helm-proc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for managing system processes" :date (22517 27088) :url "https://github.com/markus1189/helm-proc") (helm-project :source "MELPA" :recipe (:package "helm-project" :repo "cmccloud/helm-project" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm source for project management" :date (25728 61392) :url "https://github.com/cmccloud/helm-project") (helm-project-persist :source "MELPA" :recipe (:package "helm-project-persist" :fetcher github :repo "Sliim/helm-project-persist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm integration for project-persist package" :date (22120 38480) :url "https://github.com/Sliim/helm-project-persist") (helm-projectile :source "MELPA" :recipe (:package "helm-projectile" :repo "bbatsov/helm-projectile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm integration for Projectile" :date (25909 36176) :url "https://github.com/bbatsov/helm-projectile") (helm-prosjekt :source "MELPA" :recipe (:package "helm-prosjekt" :fetcher github :repo "abingham/prosjekt" :files ("prosjekt/ext/helm/helm-prosjekt.el")) :description "Helm integration for prosjekt" :date (21224 3136) :url "https://github.com/abingham/prosjekt") (helm-pt :source "MELPA" :recipe (:package "helm-pt" :fetcher github :repo "punassuming/helm-pt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to the platinum searcher" :date (22207 39248) :url "https://github.com/punassuming/helm-pt") (helm-purpose :source "MELPA" :recipe (:package "helm-purpose" :repo "bmag/helm-purpose" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm Interface for Purpose" :date (22649 16336) :url "https://github.com/bmag/helm-purpose") (helm-pydoc :source "MELPA" :recipe (:package "helm-pydoc" :fetcher github :repo "emacsorphanage/helm-pydoc" :files (:defaults "*.py")) :description "Pydoc with helm interface" :date (25304 27856) :url "https://github.com/emacsorphanage/helm-pydoc") (helm-qiita :source "MELPA" :recipe (:package "helm-qiita" :repo "masutaka/emacs-helm-qiita" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Qiita with helm interface" :date (23785 44240) :url "https://github.com/masutaka/emacs-helm-qiita") (helm-rage :source "MELPA" :recipe (:package "helm-rage" :repo "bomgar/helm-rage" :fetcher github :files (:defaults "meme")) :description "Helm command for rage characters" :date (26044 1616) :url "https://github.com/bomgar/helm-rage") (helm-rails :source "MELPA" :recipe (:package "helm-rails" :fetcher github :repo "asok/helm-rails" :files ("helm-rails.el")) :description "Helm extension for Rails projects" :date (20854 59456) :url "https://github.com/asok/helm-rails") (helm-rdefs :source "MELPA" :recipe (:package "helm-rdefs" :fetcher github :repo "saidie/emacs-helm-rdefs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rdefs with helm interface" :date (22589 60496) :url "https://github.com/saidie/emacs-helm-rdefs") (helm-recoll :source "MELPA" :recipe (:package "helm-recoll" :fetcher github :repo "emacs-helm/helm-recoll" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for the recoll desktop search tool" :date (25384 55376) :url "https://github.com/emacs-helm/helm-recoll") (helm-rg :source "MELPA" :recipe (:package "helm-rg" :fetcher github :repo "cosmicexplorer/helm-rg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm interface to ripgrep" :date (24342 1488) :url "https://github.com/cosmicexplorer/helm-rg") (helm-rhythmbox :source "MELPA" :recipe (:package "helm-rhythmbox" :fetcher github :repo "mrBliss/helm-rhythmbox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Rhythmbox's play queue via Helm" :date (22339 28496) :url "https://github.com/mrBliss/helm-rhythmbox") (helm-roam :source "MELPA" :recipe (:package "helm-roam" :fetcher github :repo "vhqr0/helm-roam" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm command for org-roam" :date (26270 51280) :url "https://github.com/vhqr0/helm-roam") (helm-robe :source "MELPA" :recipe (:package "helm-robe" :fetcher github :repo "emacsorphanage/helm-robe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completing read function for robe" :date (22119 17616) :url "https://github.com/emacsorphanage/helm-robe") (helm-ros :source "MELPA" :recipe (:package "helm-ros" :fetcher github :repo "davidlandry93/helm-ros" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interfaces ROS with helm" :date (22444 59216) :url "https://github.com/davidlandry93/helm-ros") (helm-rtags :source "MELPA" :recipe (:package "helm-rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/helm-rtags.el")) :description "A front-end for rtags" :date (24062 34768) :url "https://github.com/Andersbakken/rtags") (helm-rubygems-local :source "MELPA" :recipe (:package "helm-rubygems-local" :repo "hadashiA/helm-rubygems-local" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Installed local rubygems find-file for helm" :date (20959 3776) :url "https://github.com/hadashiA/helm-rubygems-local") (helm-rubygems-org :source "MELPA" :recipe (:package "helm-rubygems-org" :repo "neomantic/helm-rubygems-org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use helm to search rubygems.org" :date (21499 38336) :url "https://github.com/neomantic/helm-rubygems-org") (helm-safari :source "MELPA" :recipe (:package "helm-safari" :fetcher github :repo "xuchunyang/helm-safari" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse your Safari bookmarks and history" :date (22273 33872) :url "https://github.com/xuchunyang/helm-safari") (helm-sage :source "MELPA" :recipe (:package "helm-sage" :fetcher github :repo "sagemath/helm-sage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A helm extension for sage-shell-mode" :date (22326 16464) :url "https://github.com/sagemath/helm-sage") (helm-searcher :source "MELPA" :recipe (:package "helm-searcher" :repo "emacs-helm/helm-searcher" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to use searcher" :date (26001 54864) :url "https://github.com/emacs-helm/helm-searcher") (helm-selected :source "MELPA" :recipe (:package "helm-selected" :fetcher github :repo "takaxp/helm-selected" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm extension for selected.el" :date (23101 29264) :url "https://github.com/takaxp/helm-selected") (helm-selector :source "MELPA" :recipe (:package "helm-selector" :fetcher github :repo "emacs-helm/helm-selector" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm buffer selector" :date (24589 57296) :url "https://github.com/emacs-helm/helm-selector") (helm-sheet :source "MELPA" :recipe (:package "helm-sheet" :repo "yasuyk/helm-sheet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for sheet" :date (20943 15552) :url "https://github.com/yasuyk/helm-sheet") (helm-shell-history :source "MELPA" :recipe (:package "helm-shell-history" :repo "anoopemacs/helm-shell-history" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find shell history from helm" :date (24616 15824) :url "https://github.com/anoopemacs/helm-shell-history") (helm-slime :source "MELPA" :recipe (:package "helm-slime" :repo "emacs-helm/helm-slime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm-sources and some utilities for SLIME" :date (23974 13136) :url "https://github.com/emacs-helm/helm-slime") (helm-sly :source "MELPA" :recipe (:package "helm-sly" :repo "emacs-helm/helm-sly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources and some utilities for SLY" :date (24604 24656) :url "https://github.com/emacs-helm/helm-sly") (helm-smex :source "MELPA" :recipe (:package "helm-smex" :fetcher github :repo "ptrv/helm-smex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for smex" :date (22995 64080) :url "https://github.com/ptrv/helm-smex") (helm-spaces :source "MELPA" :recipe (:package "helm-spaces" :repo "yasuyk/helm-spaces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm sources for spaces" :date (22510 53840) :url "https://github.com/yasuyk/helm-spaces") (helm-spotify :source "MELPA" :recipe (:package "helm-spotify" :fetcher github :repo "krisajenkins/helm-spotify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Spotify with Helm" :date (22476 35664) :url "https://github.com/krisajenkins/helm-spotify") (helm-spotify-plus :source "MELPA" :recipe (:package "helm-spotify-plus" :repo "wandersoncferreira/helm-spotify-plus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Spotify search and select music with Helm" :date (23930 45520) :url "https://github.com/wandersoncferreira/helm-spotify-plus") (helm-sql-connect :source "MELPA" :recipe (:package "helm-sql-connect" :repo "eric-hansen/helm-sql-connect" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Choose a database to connect to via Helm" :date (22733 40912) :url "https://github.com/eric-hansen/helm-sql-connect") (helm-switch-shell :source "MELPA" :recipe (:package "helm-switch-shell" :fetcher github :repo "jamesnvc/helm-switch-shell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Helm source for switching between shell buffers" :date (24812 44368) :url "https://github.com/jamesnvc/helm-switch-shell") (helm-switch-to-repl :source "MELPA" :recipe (:package "helm-switch-to-repl" :fetcher github :repo "emacs-helm/helm-switch-to-repl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm action to switch directory in REPLs" :date (24605 45520) :url "https://github.com/emacs-helm/helm-switch-to-repl") (helm-swoop :source "MELPA" :recipe (:package "helm-swoop" :fetcher github :repo "emacsorphanage/helm-swoop" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Efficiently hopping squeezed lines powered by helm interface" :date (26005 51920) :url "https://github.com/emacsorphanage/helm-swoop") (helm-system-packages :source "MELPA" :recipe (:package "helm-system-packages" :repo "emacs-helm/helm-system-packages" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm UI wrapper for system package managers" :date (25216 6224) :url "https://github.com/emacs-helm/helm-system-packages") (helm-systemd :source "MELPA" :recipe (:package "helm-systemd" :fetcher github :repo "Lompik/helm-systemd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm's systemd interface" :date (24563 33232) :url "https://github.com/Lompik/helm-systemd") (helm-tail :source "MELPA" :recipe (:package "helm-tail" :fetcher github :repo "akirak/helm-tail" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read recent output from various sources" :date (25311 1104) :url "https://github.com/akirak/helm-tail") (helm-taskswitch :source "MELPA" :recipe (:package "helm-taskswitch" :fetcher github :repo "bdc34/helm-taskswitch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use helm to switch windows and buffers" :date (25423 5072) :url "https://github.com/bdc34/helm-taskswitch") (helm-themes :source "MELPA" :recipe (:package "helm-themes" :repo "emacsorphanage/helm-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme selection with helm interface" :date (26355 10320) :url "https://github.com/emacsorphanage/helm-themes") (helm-tramp :source "MELPA" :recipe (:package "helm-tramp" :repo "masasam/emacs-helm-tramp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tramp helm interface for ssh, docker, vagrant" :date (25776 26064) :url "https://github.com/masasam/emacs-helm-tramp") (helm-tree-sitter :source "MELPA" :recipe (:package "helm-tree-sitter" :fetcher github :repo "Giedriusj1/helm-tree-sitter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for tree-sitter" :date (25152 53328) :url "https://github.com/Giedriusj1/helm-tree-sitter") (helm-twitch :source "MELPA" :recipe (:package "helm-twitch" :repo "BenediktBroich/helm-twitch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigate Twitch.tv via `helm'" :date (25183 8912) :url "https://github.com/BenediktBroich/helm-twitch") (helm-unicode :source "MELPA" :recipe (:package "helm-unicode" :repo "bomgar/helm-unicode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm command for unicode characters" :date (23321 40144) :url "https://github.com/bomgar/helm-unicode") (helm-w32-launcher :source "MELPA" :recipe (:package "helm-w32-launcher" :fetcher github :repo "Fanael/helm-w32-launcher" :files (:defaults "helper-src" "license.txt")) :description "Start Menu entry launcher using Helm" :date (21656 34384) :url "https://github.com/Fanael/helm-w32-launcher") (helm-w3m :source "MELPA" :recipe (:package "helm-w3m" :repo "emacs-helm/helm-w3m" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "W3m bookmark - helm interface" :date (24654 31056) :url "https://github.com/emacs-helm/helm-w3m") (helm-wikipedia :source "MELPA" :recipe (:package "helm-wikipedia" :fetcher github :repo "emacs-helm/helm-wikipedia" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wikipedia suggestions" :date (26338 1232) :url "https://github.com/emacs-helm/helm-wikipedia") (helm-wordnet :source "MELPA" :recipe (:package "helm-wordnet" :repo "raghavgautam/helm-wordnet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface to local wordnet dictionary" :date (22185 12240) :url "https://github.com/raghavgautam/helm-wordnet") (helm-xcdoc :source "MELPA" :recipe (:package "helm-xcdoc" :repo "fujimisakari/emacs-helm-xcdoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Xcode Document by docsetutil and eww with helm interface" :date (22169 24016) :url "https://github.com/fujimisakari/emacs-helm-xcdoc") (helm-xref :source "MELPA" :recipe (:package "helm-xref" :repo "brotzeit/helm-xref" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for xref results" :date (24939 15696) :url "https://github.com/brotzeit/helm-xref") (helm-youtube :source "MELPA" :recipe (:package "helm-youtube" :fetcher github :repo "maximus12793/helm-youtube" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query YouTube and play videos in your browser" :date (23594 33616) :url "https://github.com/maximus12793/helm-youtube") (helm-z :source "MELPA" :recipe (:package "helm-z" :fetcher github :repo "zonkyy/helm-z" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show z directory list with helm.el support" :date (23076 26064) :url "https://github.com/zonkyy/helm-z") (helm-zhihu-daily :source "MELPA" :recipe (:package "helm-zhihu-daily" :repo "xuchunyang/helm-zhihu-daily" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm interface for 知乎日报 (http://daily.zhihu.com)" :date (22381 40784) :url "https://github.com/xuchunyang/helm-zhihu-daily") (help-find :source "MELPA" :recipe (:package "help-find" :fetcher github :repo "duncanburke/help-find" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Additional help functions for working with keymaps" :date (25396 46544) :url "https://github.com/duncanburke/help-find") (help-find-org-mode :source "MELPA" :recipe (:package "help-find-org-mode" :fetcher github :repo "emacsorphanage/help-find-org-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Advise help to find org source over tangled code" :date (23557 39248) :url "https://github.com/emacsorphanage/help-find-org-mode") (helpful :source "MELPA" :recipe (:package "helpful" :repo "Wilfred/helpful" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A better *help* buffer" :date (26218 3152) :url "https://github.com/Wilfred/helpful") (hemera-theme :source "MELPA" :recipe (:package "hemera-theme" :fetcher github :repo "guidoschmidt/emacs-hemera-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Light theme" :date (23453 29392) :url "https://github.com/guidoschmidt/emacs-hemera-theme") (hemisu-theme :source "MELPA" :recipe (:package "hemisu-theme" :repo "andrzejsliwa/hemisu-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hemisu for Emacs" :date (20873 23872) :url "https://github.com/andrzejsliwa/hemisu-theme") (hercules :source "MELPA" :recipe (:package "hercules" :repo "cyruseuros/hercules" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An auto-magical, which-key-based hydra banisher" :date (24220 48080) :url "https://github.com/cyruseuros/hercules") (heroku :source "MELPA" :recipe (:package "heroku" :repo "licht1stein/heroku.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Like Magit but for Heroku CLI" :date (25813 20432) :url "https://github.com/licht1stein/heroku.el") (heroku-theme :source "MELPA" :recipe (:package "heroku-theme" :fetcher github :repo "jonathanchu/heroku-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Heroku color theme" :date (21855 39120) :url "https://github.com/jonathanchu/heroku-theme") (hexo :source "MELPA" :recipe (:package "hexo" :fetcher github :repo "kuanyui/hexo.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode & tools for Hexo" :date (25478 29392) :url "https://github.com/kuanyui/hexo.el") (hfst-mode :source "MELPA" :recipe (:package "hfst-mode" :fetcher github :repo "unhammer/hfst-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing HFST files" :date (22398 49872) :url "https://github.com/unhammer/hfst-mode") (hg-histedit :source "MELPA" :recipe (:package "hg-histedit" :fetcher github :repo "jojojames/hg-histedit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit HG histedit files" :date (24637 21968) :url "https://github.com/jojojames/hg-histedit") (hgignore-mode :source "MELPA" :recipe (:package "hgignore-mode" :fetcher github :repo "omajid/hgignore-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing hgignore files" :date (25322 57808) :url "https://github.com/omajid/hgignore-mode") (hgrc-mode :source "MELPA" :recipe (:package "hgrc-mode" :fetcher github :repo "omajid/hgrc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing hgrc files" :date (21797 38608) :url "https://github.com/omajid/hgrc-mode") (hi2 :source "MELPA" :recipe (:package "hi2" :fetcher github :repo "nilcons/hi2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Indentation module for Haskell Mode" :date (21552 20928) :url "https://github.com/nilcons/hi2") (hiccup-cli :source "MELPA" :recipe (:package "hiccup-cli" :fetcher github :repo "kwrooijen/hiccup-cli" :files ("elisp/*.el")) :description "Convert HTML to Hiccup syntax" :date (24612 18768) :url "https://github.com/kwrooijen/hiccup-cli") (hide-lines :source "MELPA" :recipe (:package "hide-lines" :fetcher github :repo "vapniks/hide-lines" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands for hiding lines based on a regexp" :date (24732 16848) :url "https://github.com/vapniks/hide-lines") (hide-mode-line :source "MELPA" :recipe (:package "hide-mode-line" :repo "hlissner/emacs-hide-mode-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode that hides/masks your modeline" :date (26318 15952) :url "https://github.com/hlissner/emacs-hide-mode-line") (hide-secrets :source "MELPA" :recipe (:package "hide-secrets" :fetcher gitlab :repo "ostseepinguin1/hide-secrets-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for hiding secrets in buffers" :date (26175 56400) :url "https://gitlab.com/ostseepinguin1/hide-secrets-el") (hidepw :source "MELPA" :recipe (:package "hidepw" :fetcher github :repo "jekor/hidepw" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to hide passwords" :date (24187 50768) :url "https://github.com/jekor/hidepw") (hideshow-org :source "MELPA" :recipe (:package "hideshow-org" :fetcher github :repo "shanecelis/hideshow-org" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides org-mode like hide and show for hideshow.el" :date (20293 18752) :url "https://github.com/shanecelis/hideshow-org") (highlight :source "MELPA" :recipe (:package "highlight" :fetcher github :repo "emacsmirror/highlight" :branch "melpa" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlighting commands" :date (24658 28112) :url "https://github.com/emacsmirror/highlight") (highlight-blocks :source "MELPA" :recipe (:package "highlight-blocks" :fetcher github :repo "Fanael/highlight-blocks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the blocks point is in" :date (23694 46416) :url "https://github.com/Fanael/highlight-blocks") (highlight-context-line :source "MELPA" :recipe (:package "highlight-context-line" :repo "ska2342/highlight-context-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve orientation when scrolling" :date (23541 51024) :url "https://github.com/ska2342/highlight-context-line") (highlight-defined :source "MELPA" :recipe (:package "highlight-defined" :fetcher github :repo "Fanael/highlight-defined" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighting of known Elisp symbols" :date (24690 4560) :url "https://github.com/Fanael/highlight-defined") (highlight-doxygen :source "MELPA" :recipe (:package "highlight-doxygen" :repo "Lindydancer/highlight-doxygen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight Doxygen comments" :date (24260 18640) :url "https://github.com/Lindydancer/highlight-doxygen") (highlight-escape-sequences :source "MELPA" :recipe (:package "highlight-escape-sequences" :fetcher github :repo "dgutov/highlight-escape-sequences" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight escape sequences" :date (24534 32976) :url "https://github.com/dgutov/highlight-escape-sequences") (highlight-function-calls :source "MELPA" :recipe (:package "highlight-function-calls" :fetcher github :repo "alphapapa/highlight-function-calls" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight function/macro calls" :date (26351 13264) :url "https://github.com/alphapapa/highlight-function-calls") (highlight-indent-guides :source "MELPA" :recipe (:package "highlight-indent-guides" :fetcher github :repo "DarthFennec/highlight-indent-guides" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to highlight indentation" :date (24381 37584) :url "https://github.com/DarthFennec/highlight-indent-guides") (highlight-indentation :source "MELPA" :recipe (:package "highlight-indentation" :repo "antonj/Highlight-Indentation-for-Emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor modes for highlighting indentation" :date (24625 30800) :url "https://github.com/antonj/Highlight-Indentation-for-Emacs") (highlight-leading-spaces :source "MELPA" :recipe (:package "highlight-leading-spaces" :repo "mrBliss/highlight-leading-spaces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight leading spaces" :date (22128 32592) :url "https://github.com/mrBliss/highlight-leading-spaces") (highlight-numbers :source "MELPA" :recipe (:package "highlight-numbers" :fetcher github :repo "Fanael/highlight-numbers" :old-names (number-font-lock-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight numbers in source code" :date (23489 2896) :url "https://github.com/Fanael/highlight-numbers") (highlight-operators :source "MELPA" :recipe (:package "highlight-operators" :fetcher github :repo "jpkotta/highlight-operators" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A face for operators in programming modes" :date (22688 52432) :url "https://github.com/jpkotta/highlight-operators") (highlight-parentheses :source "MELPA" :recipe (:package "highlight-parentheses" :fetcher sourcehut :repo "tsdh/highlight-parentheses.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight surrounding parentheses" :date (26131 2384) :url "https://git.sr.ht/~tsdh/highlight-parentheses.el") (highlight-quoted :source "MELPA" :recipe (:package "highlight-quoted" :fetcher github :repo "Fanael/highlight-quoted" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight Lisp quotes and quoted symbols" :date (21527 17728) :url "https://github.com/Fanael/highlight-quoted") (highlight-refontification :source "MELPA" :recipe (:package "highlight-refontification" :repo "Lindydancer/highlight-refontification" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visualize font-lock refontification" :date (22686 10704) :url "https://github.com/Lindydancer/highlight-refontification") (highlight-stages :source "MELPA" :recipe (:package "highlight-stages" :repo "zk-phi/highlight-stages" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight staged (quasi-quoted) expressions" :date (24642 39888) :url "https://github.com/zk-phi/highlight-stages") (highlight-symbol :source "MELPA" :recipe (:package "highlight-symbol" :fetcher github :repo "nschum/highlight-symbol.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic and manual symbol highlighting" :date (22150 59600) :url "https://github.com/nschum/highlight-symbol.el") (highlight-thing :source "MELPA" :recipe (:package "highlight-thing" :fetcher github :repo "fgeller/highlight-thing.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic minor mode to highlight current thing under point" :date (25582 39248) :url "https://github.com/fgeller/highlight-thing.el") (highlight-unique-symbol :source "MELPA" :recipe (:package "highlight-unique-symbol" :fetcher github :repo "hitode909/emacs-highlight-unique-symbol" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight symbols which not appear in the repository" :date (20919 33216) :url "https://github.com/hitode909/emacs-highlight-unique-symbol") (highlight2clipboard :source "MELPA" :recipe (:package "highlight2clipboard" :repo "Lindydancer/highlight2clipboard" :fetcher github :files (:defaults "bin")) :description "Copy text to clipboard with highlighting" :date (26181 8784) :url "https://github.com/Lindydancer/highlight2clipboard") (hima-theme :source "MELPA" :recipe (:package "hima-theme" :fetcher github :repo "meain/hima-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimal theme with pretty colors" :date (26363 4432) :url "https://github.com/meain/hima-theme") (himalaya :source "MELPA" :recipe (:package "himalaya" :fetcher github :repo "dantecatalfamo/himalaya-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for the email client Himalaya CLI" :date (26107 20048) :url "https://github.com/dantecatalfamo/himalaya-emacs") (hindent :source "MELPA" :recipe (:package "hindent" :fetcher github :repo "mihaimaruseac/hindent" :files ("elisp/*.el")) :description "Indent haskell code using the \"hindent\" program" :date (26331 27984) :url "https://github.com/mihaimaruseac/hindent") (hippie-exp-ext :source "MELPA" :recipe (:package "hippie-exp-ext" :repo "rubikitch/hippie-exp-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension of hippie-expand" :date (22310 28240) :url "https://github.com/rubikitch/hippie-exp-ext") (hippie-expand-slime :source "MELPA" :recipe (:package "hippie-expand-slime" :repo "purcell/hippie-expand-slime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hook slime's completion into hippie-expand" :date (22899 48336) :url "https://github.com/purcell/hippie-expand-slime") (hippie-namespace :source "MELPA" :recipe (:package "hippie-namespace" :repo "rolandwalker/hippie-namespace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Special treatment for namespace prefixes in hippie-expand" :date (21354 37056) :url "https://github.com/rolandwalker/hippie-namespace") (hippo-themes :source "MELPA" :recipe (:package "hippo-themes" :repo "kimim/emacs-hippo-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hippo color theme" :date (25752 43728) :url "https://github.com/kimim/emacs-hippo-theme") (historian :source "MELPA" :recipe (:package "historian" :fetcher github :repo "PythonNut/historian.el" :files ("historian.el")) :description "Persistently store selected minibuffer candidates" :date (24119 14416) :url "https://github.com/PythonNut/historian.el") (history :source "MELPA" :recipe (:package "history" :fetcher github :repo "tcw165/history" :files (:defaults ("images" "images/*.xpm" "images/*.png"))) :description "History utility for source code navigation" :date (22456 50384) :url "https://github.com/tcw165/history") (historyf :source "MELPA" :recipe (:package "historyf" :repo "k1LoW/emacs-historyf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "File history library like browser" :date (22099 32336) :url "https://github.com/k1LoW/emacs-historyf") (hive :source "MELPA" :recipe (:package "hive" :fetcher github :repo "r0man/hive-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hive SQL mode extension" :date (21167 23488) :url "https://github.com/r0man/hive-el") (hiwin :source "MELPA" :recipe (:package "hiwin" :fetcher github :repo "yoshida-mediba/hiwin-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visible active window mode" :date (21979 34256) :url "https://github.com/yoshida-mediba/hiwin-mode") (hl-anything :source "MELPA" :recipe (:package "hl-anything" :fetcher github :repo "hl-anything/hl-anything-emacs" :files (:defaults ("images" "images/*.xpm" "images/*.png"))) :description "Highlight symbols, selections, enclosing parens and more" :date (22297 16208) :url "https://github.com/hl-anything/hl-anything-emacs") (hl-block-mode :source "MELPA" :recipe (:package "hl-block-mode" :fetcher codeberg :repo "ideasman42/emacs-hl-block-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlighting nested blocks" :date (26149 32336) :url "https://codeberg.org/ideasman42/emacs-hl-block-mode") (hl-indent :source "MELPA" :recipe (:package "hl-indent" :fetcher github :repo "ikirill/hl-indent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight irregular indentation" :date (22787 44368) :url "https://github.com/ikirill/hl-indent") (hl-indent-scope :source "MELPA" :recipe (:package "hl-indent-scope" :fetcher codeberg :repo "ideasman42/emacs-hl-indent-scope" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight indentation by scope" :date (26149 32336) :url "https://codeberg.org/ideasman42/emacs-hl-indent-scope") (hl-prog-extra :source "MELPA" :recipe (:package "hl-prog-extra" :fetcher codeberg :repo "ideasman42/emacs-hl-prog-extra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Customizable highlighting for source-code" :date (26319 36816) :url "https://codeberg.org/ideasman42/emacs-hl-prog-extra") (hl-sentence :source "MELPA" :recipe (:package "hl-sentence" :repo "milkypostman/hl-sentence" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight a sentence based on customizable face" :date (23014 28496) :url "https://github.com/milkypostman/hl-sentence") (hl-todo :source "MELPA" :recipe (:package "hl-todo" :repo "tarsius/hl-todo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight TODO and similar keywords" :date (26287 60368) :url "https://github.com/tarsius/hl-todo") (hledger-mode :source "MELPA" :recipe (:package "hledger-mode" :fetcher github :repo "narendraj9/hledger-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode for writing journal entries for hledger" :date (26140 17360) :url "https://github.com/narendraj9/hledger-mode") (hlint-refactor :source "MELPA" :recipe (:package "hlint-refactor" :fetcher github :repo "mpickering/hlint-refactor-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply HLint suggestions" :date (23612 63568) :url "https://github.com/mpickering/hlint-refactor-mode") (hlinum :source "MELPA" :recipe (:package "hlinum" :repo "tom-tan/hlinum-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension for linum.el to highlight current line number" :date (23259 42576) :url "https://github.com/tom-tan/hlinum-mode") (hmac :source "MELPA" :recipe (:package "hmac" :fetcher github :repo "grimnebulin/emacs-hmac" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hash-based message authentication code" :date (24440 58960) :url "https://github.com/grimnebulin/emacs-hmac") (hnreader :source "MELPA" :recipe (:package "hnreader" :fetcher github :repo "thanhvg/emacs-hnreader" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A hackernews reader" :date (25461 20304) :url "https://github.com/thanhvg/emacs-hnreader") (hoa-mode :source "MELPA" :recipe (:package "hoa-mode" :fetcher git :url "https://gitlab.lrde.epita.fr/spot/emacs-modes.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the HOA format" :date (24287 63568) :url "https://gitlab.lrde.epita.fr/spot/emacs-modes.git") (holiday-pascha-etc :source "MELPA" :recipe (:package "holiday-pascha-etc" :fetcher github :repo "hexmode/holiday-pascha-etc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eastern Christian analog to holiday-easter-etc" :date (22458 5712) :url "https://github.com/hexmode/holiday-pascha-etc") (holy-books :source "MELPA" :recipe (:package "holy-books" :fetcher github :repo "alhassy/holy-books" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode links/tooltips/lookups for Quran & Bible" :date (24949 51536) :url "https://github.com/alhassy/holy-books") (home-end :source "MELPA" :recipe (:package "home-end" :fetcher github :repo "Boruch-Baum/emacs-home-end" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart multi-purpose home / end keys" :date (23605 3920) :url "https://github.com/Boruch-Baum/emacs-home-end") (honcho :source "MELPA" :recipe (:package "honcho" :fetcher github :repo "emacs-pe/honcho.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run and manage long-running services" :date (25591 54224) :url "https://github.com/emacs-pe/honcho.el") (hookify :source "MELPA" :recipe (:package "hookify" :fetcher github :repo "Silex/hookify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive commands to create temporary hooks" :date (21647 19408) :url "https://github.com/Silex/hookify") (horizon-theme :source "MELPA" :recipe (:package "horizon-theme" :repo "aodhneine/horizon-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A beautifully warm dual theme" :date (24340 46160) :url "https://github.com/aodhneine/horizon-theme.el") (horoscope :source "MELPA" :recipe (:package "horoscope" :fetcher github :repo "mschuldt/horoscope.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate horoscopes" :date (23242 33488) :url "https://github.com/mschuldt/horoscope.el") (hotfuzz :source "MELPA" :recipe (:package "hotfuzz" :repo "axelf4/hotfuzz" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fuzzy completion style" :date (26390 49360) :url "https://github.com/axelf4/hotfuzz") (hound :source "MELPA" :recipe (:package "hound" :repo "ryoung786/hound.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display hound search results in a compilation window" :date (24103 26192) :url "https://github.com/ryoung786/hound.el") (hover :source "MELPA" :recipe (:package "hover" :repo "ericdallo/hover.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package to use hover with flutter" :date (25076 22864) :url "https://github.com/ericdallo/hover.el") (howdoi :source "MELPA" :recipe (:package "howdoi" :repo "atykhonov/emacs-howdoi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Instant coding answers via Emacs" :date (21713 14032) :url "https://github.com/atykhonov/emacs-howdoi") (howdoyou :source "MELPA" :recipe (:package "howdoyou" :fetcher github :repo "thanhvg/emacs-howdoyou" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A stackoverflow and its sisters' sites reader" :date (25876 38864) :url "https://github.com/thanhvg/emacs-howdoyou") (howm :source "MELPA" :recipe (:package "howm" :fetcher github :repo "kaorahi/howm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wiki-like note-taking tool" :date (26385 31440) :url "https://github.com/kaorahi/howm") (hsluv :source "MELPA" :recipe (:package "hsluv" :fetcher github :repo "hsluv/hsluv-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hsluv color space conversions" :date (23548 24272) :url "https://github.com/hsluv/hsluv-emacs") (ht :source "MELPA" :recipe (:package "ht" :fetcher github :repo "Wilfred/ht.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The missing hash table library for Emacs" :date (25761 58704) :url "https://github.com/Wilfred/ht.el") (html-check-frag :source "MELPA" :recipe (:package "html-check-frag" :repo "TobiasZawada/html-check-frag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Check html-fragments" :date (24484 26576) :url "https://github.com/TobiasZawada/html-check-frag") (html-script-src :source "MELPA" :recipe (:package "html-script-src" :repo "rejeep/html-script-src.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert <script src=\"..\"> for popular JavaScript libraries" :date (20993 21952) :url "https://github.com/rejeep/html-script-src.el") (html-to-hiccup :source "MELPA" :recipe (:package "html-to-hiccup" :repo "plexus/html-to-hiccup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert HTML to Hiccup syntax" :date (25793 35152) :url "https://github.com/plexus/html-to-hiccup") (html-to-markdown :source "MELPA" :recipe (:package "html-to-markdown" :repo "Malabarba/html-to-markdown" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "HTML to Markdown converter written in Emacs-lisp" :date (22074 29136) :url "https://github.com/Malabarba/html-to-markdown") (html2org :source "MELPA" :recipe (:package "html2org" :fetcher github :repo "lujun9972/html2org.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert html to org format text" :date (22773 11472) :url "https://github.com/lujun9972/html2org.el") (htmlize :source "MELPA" :recipe (:package "htmlize" :fetcher github :repo "hniksic/emacs-htmlize" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert buffer text and decorations to HTML" :date (26341 63824) :url "https://github.com/hniksic/emacs-htmlize") (htmltagwrap :source "MELPA" :recipe (:package "htmltagwrap" :repo "emacs-vs/htmltagwrap" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wraps a chunk of HTML code in tags" :date (26026 58064) :url "https://github.com/emacs-vs/htmltagwrap") (http :source "MELPA" :recipe (:package "http" :fetcher github :repo "emacs-pe/http.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another HTTP client" :date (24448 53072) :url "https://github.com/emacs-pe/http.el") (http-post-simple :source "MELPA" :recipe (:package "http-post-simple" :fetcher github :repo "emacsorphanage/http-post-simple" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "HTTP POST requests using the url library" :date (22889 12496) :url "https://github.com/emacsorphanage/http-post-simple") (http-twiddle :source "MELPA" :recipe (:package "http-twiddle" :fetcher github :repo "hassy/http-twiddle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send & twiddle & resend HTTP requests" :date (25482 26448) :url "https://github.com/hassy/http-twiddle") (httpcode :source "MELPA" :recipe (:package "httpcode" :fetcher github :repo "rspivak/httpcode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Explains the meaning of an HTTP status code" :date (20585 63040) :url "https://github.com/rspivak/httpcode.el") (httprepl :source "MELPA" :recipe (:package "httprepl" :fetcher github :repo "gregsexton/httprepl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An HTTP REPL" :date (21587 63568) :url "https://github.com/gregsexton/httprepl.el") (huecycle :source "MELPA" :recipe (:package "huecycle" :repo "pnor/huecycle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Idle color animation" :date (26219 24016) :url "https://github.com/pnor/huecycle") (hugsql-ghosts :source "MELPA" :recipe (:package "hugsql-ghosts" :fetcher github :repo "rkaercher/hugsql-ghosts" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display hugsql defqueries in clojure code as an overlay" :date (24989 22096) :url "https://github.com/rkaercher/hugsql-ghosts") (humanoid-themes :source "MELPA" :recipe (:package "humanoid-themes" :repo "humanoid-colors/emacs-humanoid-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color themes with a dark and light variant" :date (25988 42832) :url "https://github.com/humanoid-colors/emacs-humanoid-themes") (hungarian-holidays :source "MELPA" :recipe (:package "hungarian-holidays" :fetcher github :repo "gergelypolonkai/hungarian-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds a list of Hungarian public holidays to Emacs calendar" :date (22535 57040) :url "https://github.com/gergelypolonkai/hungarian-holidays") (hungry-delete :source "MELPA" :recipe (:package "hungry-delete" :fetcher github :repo "nflath/hungry-delete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hungry delete minor mode" :date (24687 28368) :url "https://github.com/nflath/hungry-delete") (hush :source "MELPA" :recipe (:package "hush" :fetcher github :repo "tirimia/hush" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pluggable secret manager (auth-source alternative)" :date (25889 50896) :url "https://github.com/tirimia/hush") (hy-mode :source "MELPA" :recipe (:package "hy-mode" :repo "hylang/hy-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Hylang" :date (24937 60368) :url "https://github.com/hylang/hy-mode") (hyai :source "MELPA" :recipe (:package "hyai" :fetcher github :repo "iquiw/hyai" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haskell Yet Another Indentation" :date (22709 58576) :url "https://github.com/iquiw/hyai") (hybrid-reverse-theme :source "MELPA" :recipe (:package "hybrid-reverse-theme" :repo "Riyyi/emacs-hybrid-reverse" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs theme with material color scheme" :date (25386 10704) :url "https://github.com/Riyyi/emacs-hybrid-reverse") (hydandata-light-theme :source "MELPA" :recipe (:package "hydandata-light-theme" :fetcher github :repo "chkhd/hydandata-light-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light color theme that is easy on your eyes" :date (23884 36176) :url "https://github.com/chkhd/hydandata-light-theme") (hyde :source "MELPA" :recipe (:package "hyde" :fetcher github :repo "nibrahim/Hyde" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode to help create and manage Jekyll blogs" :date (22318 22352) :url "https://github.com/nibrahim/Hyde") (hydra :source "MELPA" :recipe (:package "hydra" :repo "abo-abo/hydra" :fetcher github :files (:defaults (:exclude "lv.el"))) :description "Make bindings that stick around" :date (25371 43344) :url "https://github.com/abo-abo/hydra") (hyperbole :source "MELPA" :recipe (:package "hyperbole" :url "https://git.savannah.gnu.org/git/hyperbole.git" :fetcher git :files ("*.el" "MANIFEST" "dir" "ChangeLog" "Makefile" "HY-ABOUT" "HY-ANNOUNCE" "HY-CONCEPTS.kotl" "HY-NEWS" "HY-WHY.kotl" "INSTALL" "DEMO" "DEMO-ROLO.otl" "FAST-DEMO" "README.md" "_hypb" ".hypb" "hyrolo.py" "smart-clib-sym" "topwin.py" "hyperbole-banner.png" ("kotl" "kotl/MANIFEST" "kotl/EXAMPLE.kotl" "kotl/*.el") ("man" "man/hyperbole.texi" "man/hyperbole.css" "man/hkey-help.txt" "man/hyperbole.info" "man/hyperbole.html" "man/hyperbole.pdf") ("man/im" "man/im/*.png") ("HY-TALK" "HY-TALK/.hypb" "HY-TALK/HYPB" "HY-TALK/HY-TALK.org" "HY-TALK/HYPERAMP.org" "HY-TALK/HYPERORG.org") ("test" "test/MANIFEST" "test/*tests.el" "test/hy-test-*.el"))) :description "GNU Hyperbole: The Everyday Hypertextual Information Manager" :date (26398 43472) :url "https://git.savannah.gnu.org/git/hyperbole.git") (hyperdrive :source "MELPA" :recipe (:package "hyperdrive" :fetcher sourcehut :repo "ushin/hyperdrive.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "P2P filesystem" :date (26403 61392) :url "https://git.sr.ht/~ushin/hyperdrive.el") (hyperdrive-org-transclusion :source "MELPA" :recipe (:package "hyperdrive-org-transclusion" :fetcher sourcehut :repo "ushin/hyperdrive-org-transclusion" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tranclude hyperdrive content" :date (26398 43472) :url "https://git.sr.ht/~ushin/hyperdrive-org-transclusion") (hyperkitty :source "MELPA" :recipe (:package "hyperkitty" :fetcher github :repo "maxking/hyperkitty.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface for Hyperkitty archives" :date (25113 17232) :url "https://github.com/maxking/hyperkitty.el") (hyperlist-mode :source "MELPA" :recipe (:package "hyperlist-mode" :fetcher github :repo "vifon/hyperlist-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for viewing Hyperlists" :date (25544 24016) :url "https://github.com/vifon/hyperlist-mode") (hyperspace :source "MELPA" :recipe (:package "hyperspace" :fetcher codeberg :repo "emacs-weirdware/hyperspace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get there from here" :date (25701 16464) :url "https://codeberg.org/emacs-weirdware/hyperspace") (hyperstitional-themes :source "MELPA" :recipe (:package "hyperstitional-themes" :fetcher github :repo "precompute/hyperstitional-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weird themes with incremental palettes" :date (26196 62544) :url "https://github.com/precompute/hyperstitional-themes") (i-ching :source "MELPA" :recipe (:package "i-ching" :repo "zzkt/i-ching" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Book of Changes" :date (26278 45392) :url "https://github.com/zzkt/i-ching") (i2b2-mode :source "MELPA" :recipe (:package "i2b2-mode" :fetcher github :repo "danlamanna/i2b2-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlights corresponding PHI data in the text portion of an i2b2 XML Document" :date (21437 40768) :url "https://github.com/danlamanna/i2b2-mode") (i3bar :source "MELPA" :recipe (:package "i3bar" :fetcher github :repo "Stebalien/i3bar.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display status from an i3status command in the tab bar" :date (26394 46416) :url "https://github.com/Stebalien/i3bar.el") (i3wm :source "MELPA" :recipe (:package "i3wm" :fetcher git :url "https://git.flintfam.org/swf-projects/emacs-i3.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "I3wm integration library" :date (22939 18896) :url "https://git.flintfam.org/swf-projects/emacs-i3.git") (i3wm-config-mode :source "MELPA" :recipe (:package "i3wm-config-mode" :repo "Alexander-Miller/i3wm-Config-Mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better syntax highlighting for i3wm's config file" :date (25375 40400) :url "https://github.com/Alexander-Miller/i3wm-Config-Mode") (ialign :source "MELPA" :recipe (:package "ialign" :fetcher github :repo "mkcms/interactive-align" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual align-regexp" :date (26355 10320) :url "https://github.com/mkcms/interactive-align") (iasm-mode :source "MELPA" :recipe (:package "iasm-mode" :fetcher github :repo "RAttab/iasm-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive assembly major mode" :date (23021 1744) :url "https://github.com/RAttab/iasm-mode") (ibrowse :source "MELPA" :recipe (:package "ibrowse" :fetcher sourcehut :repo "ngraves/ibrowse.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with your browser" :date (25873 62672) :url "https://git.sr.ht/~ngraves/ibrowse.el") (ibuffer-git :source "MELPA" :recipe (:package "ibuffer-git" :fetcher github :repo "jrockway/ibuffer-git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show git status in ibuffer column" :date (19909 42176) :url "https://github.com/jrockway/ibuffer-git") (ibuffer-project :source "MELPA" :recipe (:package "ibuffer-project" :fetcher github :repo "muffinmad/emacs-ibuffer-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Group ibuffer's list by project or any function" :date (25143 38352) :url "https://github.com/muffinmad/emacs-ibuffer-project") (ibuffer-projectile :source "MELPA" :recipe (:package "ibuffer-projectile" :fetcher github :repo "purcell/ibuffer-projectile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Group ibuffer's list by projectile root" :date (25821 14544) :url "https://github.com/purcell/ibuffer-projectile") (ibuffer-rcirc :source "MELPA" :recipe (:package "ibuffer-rcirc" :repo "fgallina/ibuffer-rcirc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ibuffer integration for rcirc" :date (21727 46928) :url "https://github.com/fgallina/ibuffer-rcirc") (ibuffer-sidebar :source "MELPA" :recipe (:package "ibuffer-sidebar" :fetcher github :repo "jojojames/ibuffer-sidebar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sidebar for `ibuffer'" :date (24725 43600) :url "https://github.com/jojojames/ibuffer-sidebar") (ibuffer-tramp :source "MELPA" :recipe (:package "ibuffer-tramp" :repo "svend/ibuffer-tramp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Group ibuffer's list by TRAMP connection" :date (23147 38608) :url "https://github.com/svend/ibuffer-tramp") (ibuffer-vc :source "MELPA" :recipe (:package "ibuffer-vc" :repo "purcell/ibuffer-vc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Group ibuffer's list by VC project, or show VC status" :date (25821 14544) :url "https://github.com/purcell/ibuffer-vc") (iceberg-theme :source "MELPA" :recipe (:package "iceberg-theme" :fetcher github :repo "conao3/iceberg-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Well-designed, eye-friendly, dark blue color scheme" :date (25266 12624) :url "https://github.com/conao3/iceberg-theme.el") (icl-mode :source "MELPA" :recipe (:package "icl-mode" :fetcher github :repo "CeleritasCelery/icl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for IEEE 1687 ICL/PDL" :date (26401 19664) :url "https://github.com/CeleritasCelery/icl-mode") (icomplete-vertical :source "MELPA" :recipe (:package "icomplete-vertical" :repo "oantolin/icomplete-vertical" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display icomplete candidates vertically" :date (25180 32720) :url "https://github.com/oantolin/icomplete-vertical") (icsql :source "MELPA" :recipe (:package "icsql" :fetcher github :repo "plandes/icsql" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive iSQL iteraface to ciSQL" :date (25906 59984) :url "https://github.com/plandes/icsql") (id-manager :source "MELPA" :recipe (:package "id-manager" :fetcher github :repo "kiwanami/emacs-id-manager" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Id-password management" :date (22734 61776) :url "https://github.com/kiwanami/emacs-id-manager") (idea-darkula-theme :source "MELPA" :recipe (:package "idea-darkula-theme" :fetcher codeberg :repo "fourier/idea-darkula-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme based on IntelliJ IDEA Darkula color theme" :date (25740 52560) :url "https://codeberg.org/fourier/idea-darkula-theme") (identica-mode :source "MELPA" :recipe (:package "identica-mode" :fetcher github :repo "gabrielsaldana/Emacs-Identica-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode API client for status.net open microblogging" :date (20750 49600) :url "https://github.com/gabrielsaldana/Emacs-Identica-mode") (idle-highlight-in-visible-buffers-mode :source "MELPA" :recipe (:package "idle-highlight-in-visible-buffers-mode" :repo "ignacy/idle-highlight-in-visible-buffers-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the word the point is on" :date (26009 48976) :url "https://github.com/ignacy/idle-highlight-in-visible-buffers-mode") (idle-highlight-mode :source "MELPA" :recipe (:package "idle-highlight-mode" :fetcher codeberg :repo "ideasman42/emacs-idle-highlight-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the word the point is on" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-idle-highlight-mode") (idle-org-agenda :source "MELPA" :recipe (:package "idle-org-agenda" :fetcher github :repo "enisozgen/idle-org-agenda" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows your agenda when editor is idle" :date (23601 6864) :url "https://github.com/enisozgen/idle-org-agenda") (idle-require :source "MELPA" :recipe (:package "idle-require" :fetcher github :repo "nschum/idle-require.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Load elisp libraries while Emacs is idle" :date (19036 58304) :url "https://github.com/nschum/idle-require.el") (ido-at-point :source "MELPA" :recipe (:package "ido-at-point" :repo "katspaugh/ido-at-point" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ido-style completion-at-point" :date (22084 64976) :url "https://github.com/katspaugh/ido-at-point") (ido-complete-space-or-hyphen :source "MELPA" :recipe (:package "ido-complete-space-or-hyphen" :fetcher github :repo "DarwinAwardWinner/ido-complete-space-or-hyphen" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Allow spaces to also match hyphens in ido" :date (24605 45520) :url "https://github.com/DarwinAwardWinner/ido-complete-space-or-hyphen") (ido-completing-read+ :source "MELPA" :recipe (:package "ido-completing-read+" :repo "DarwinAwardWinner/ido-completing-read-plus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A completing-read-function using ido" :date (26040 4560) :url "https://github.com/DarwinAwardWinner/ido-completing-read-plus") (ido-exit-target :source "MELPA" :recipe (:package "ido-exit-target" :repo "waymondo/ido-exit-target" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands and keys for selecting other window and frame targets within ido" :date (22891 54224) :url "https://github.com/waymondo/ido-exit-target") (ido-flex-with-migemo :source "MELPA" :recipe (:package "ido-flex-with-migemo" :repo "ROCKTAKEY/ido-flex-with-migemo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use ido with flex and migemo" :date (23722 25808) :url "https://github.com/ROCKTAKEY/ido-flex-with-migemo") (ido-gnus :source "MELPA" :recipe (:package "ido-gnus" :fetcher github :repo "vapniks/ido-gnus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access gnus groups or servers using ido" :date (21247 51008) :url "https://github.com/vapniks/ido-gnus") (ido-grid-mode :source "MELPA" :recipe (:package "ido-grid-mode" :fetcher github :repo "larkery/ido-grid-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display ido-prospects in the minibuffer in a grid" :date (22177 18128) :url "https://github.com/larkery/ido-grid-mode.el") (ido-hacks :source "MELPA" :recipe (:package "ido-hacks" :fetcher github :repo "scottjad/ido-hacks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Put more IDO in your IDO" :date (23641 63824) :url "https://github.com/scottjad/ido-hacks") (ido-load-library :source "MELPA" :recipe (:package "ido-load-library" :repo "rolandwalker/ido-load-library" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Load-library alternative using ido-completing-read" :date (21399 25536) :url "https://github.com/rolandwalker/ido-load-library") (ido-migemo :source "MELPA" :recipe (:package "ido-migemo" :fetcher github :repo "emacsattic/ido-migemo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Migemo plug-in for Ido" :date (23975 34000) :url "https://github.com/emacsattic/ido-migemo") (ido-occasional :source "MELPA" :recipe (:package "ido-occasional" :repo "abo-abo/ido-occasional" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use ido where you choose" :date (21726 26064) :url "https://github.com/abo-abo/ido-occasional") (ido-select-window :source "MELPA" :recipe (:package "ido-select-window" :fetcher github :repo "pjones/ido-select-window" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select a window using ido and buffer names" :date (21171 20544) :url "https://github.com/pjones/ido-select-window") (ido-skk :source "MELPA" :recipe (:package "ido-skk" :repo "tsukimizake/ido-skk" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ido interface for skk henkan" :date (22082 23248) :url "https://github.com/tsukimizake/ido-skk") (ido-sort-mtime :source "MELPA" :recipe (:package "ido-sort-mtime" :repo "pkkm/ido-sort-mtime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort Ido's file list by modification time" :date (23059 16976) :url "https://github.com/pkkm/ido-sort-mtime") (ido-springboard :source "MELPA" :recipe (:package "ido-springboard" :fetcher github :repo "jwiegley/springboard" :files ("ido-springboard.el")) :description "Temporarily change default-directory for one command" :date (22638 46032) :url "https://github.com/jwiegley/springboard") (ido-vertical-mode :source "MELPA" :recipe (:package "ido-vertical-mode" :fetcher github :repo "creichert/ido-vertical-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Makes ido-mode display vertically" :date (24604 24656) :url "https://github.com/creichert/ido-vertical-mode.el") (ido-yes-or-no :source "MELPA" :recipe (:package "ido-yes-or-no" :fetcher github :repo "DarwinAwardWinner/ido-yes-or-no" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use Ido to answer yes-or-no questions" :date (22560 60240) :url "https://github.com/DarwinAwardWinner/ido-yes-or-no") (idomenu :source "MELPA" :recipe (:package "idomenu" :repo "birkenfeld/idomenu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imenu tag selection a la ido" :date (21616 63824) :url "https://github.com/birkenfeld/idomenu") (idris-mode :source "MELPA" :recipe (:package "idris-mode" :repo "idris-hackers/idris-mode" :fetcher github :files (:defaults "logo-small.png")) :description "Major mode for editing Idris code" :date (26245 48080) :url "https://github.com/idris-hackers/idris-mode") (ids-edit :source "MELPA" :recipe (:package "ids-edit" :repo "kawabata/ids-edit" :fetcher github :files ("ids-edit.el" "ids-cdp.txt" "ucs-strokes.txt")) :description "IDS (Ideographic Description Sequence) editing tool" :date (22934 976) :url "https://github.com/kawabata/ids-edit") (iedit :source "MELPA" :recipe (:package "iedit" :repo "victorhge/iedit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit multiple regions in the same way simultaneously" :date (25100 5200) :url "https://github.com/victorhge/iedit") (ietf-docs :source "MELPA" :recipe (:package "ietf-docs" :fetcher github :repo "choppsv1/ietf-docs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fetch, Cache and Load IETF documents" :date (23738 14032) :url "https://github.com/choppsv1/ietf-docs") (iflipb :source "MELPA" :recipe (:package "iflipb" :repo "jrosdahl/iflipb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively flip between recently visited buffers" :date (25253 592) :url "https://github.com/jrosdahl/iflipb") (igist :source "MELPA" :recipe (:package "igist" :fetcher github :repo "KarimAziev/igist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "List, create, update and delete GitHub gists" :date (26257 39248) :url "https://github.com/KarimAziev/igist") (ignoramus :source "MELPA" :recipe (:package "ignoramus" :repo "rolandwalker/ignoramus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ignore backups, build files, et al" :date (25251 45264) :url "https://github.com/rolandwalker/ignoramus") (igv :source "MELPA" :recipe (:package "igv" :fetcher git :url "https://bitbucket.org/sbarbit/eigv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control Integrative Genomic Viewer within Emacs" :date (21639 25296) :url "https://bitbucket.org/sbarbit/eigv") (image+ :source "MELPA" :recipe (:package "image+" :fetcher github :repo "emacsorphanage/image-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Image manipulate extensions for Emacs" :date (21914 60496) :url "https://github.com/emacsorphanage/image-plus") (image-archive :source "MELPA" :recipe (:package "image-archive" :repo "mhayashi1120/Emacs-image-archive" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Image thumbnails in archive file with non-blocking" :date (21893 54352) :url "https://github.com/mhayashi1120/Emacs-image-archive") (image-dired+ :source "MELPA" :recipe (:package "image-dired+" :repo "mhayashi1120/Emacs-image-diredx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Image-dired extensions" :date (21825 18000) :url "https://github.com/mhayashi1120/Emacs-image-diredx") (imakado :source "MELPA" :recipe (:package "imakado" :fetcher github :repo "imakado/emacs-imakado" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imakado's usefull macros and functions" :date (21577 24128) :url "https://github.com/imakado/emacs-imakado") (imake :source "MELPA" :recipe (:package "imake" :fetcher github :repo "tarsius/imake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple, opinionated make target runner" :date (26363 4432) :url "https://github.com/tarsius/imake") (imapfilter :source "MELPA" :recipe (:package "imapfilter" :fetcher github :repo "tarsius/imapfilter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run the imapfilter executable" :date (23213 33232) :url "https://github.com/tarsius/imapfilter") (imbot :source "MELPA" :recipe (:package "imbot" :fetcher github :repo "QiangF/imbot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic system input method switcher" :date (26365 46160) :url "https://github.com/QiangF/imbot") (imenu-anywhere :source "MELPA" :recipe (:package "imenu-anywhere" :repo "vspinu/imenu-anywhere" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ido/ivy/helm imenu across same mode/project/etc buffers" :date (24599 6736) :url "https://github.com/vspinu/imenu-anywhere") (imenu-extra :source "MELPA" :recipe (:package "imenu-extra" :fetcher github :repo "redguardtoo/imenu-extra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add extra items into existing imenu items" :date (24554 18256) :url "https://github.com/redguardtoo/imenu-extra") (imenu-list :source "MELPA" :recipe (:package "imenu-list" :repo "bmag/imenu-list" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show imenu entries in a separate buffer" :date (24701 61264) :url "https://github.com/bmag/imenu-list") (imenus :source "MELPA" :recipe (:package "imenus" :repo "alezost/imenus.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imenu for multiple buffers and without subgroups" :date (24353 58192) :url "https://github.com/alezost/imenus.el") (imgbb :source "MELPA" :recipe (:package "imgbb" :fetcher github :repo "ecraven/imgbb.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple image upload client for imgbb.com" :date (23322 61008) :url "https://github.com/ecraven/imgbb.el") (immaterial-theme :source "MELPA" :recipe (:package "immaterial-theme" :fetcher github :repo "petergardfjall/emacs-immaterial-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flexible theme based on material design principles" :date (26332 48848) :url "https://github.com/petergardfjall/emacs-immaterial-theme") (immersive-translate :source "MELPA" :recipe (:package "immersive-translate" :repo "Elilif/emacs-immersive-translate" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Translate the current buffer immersively" :date (25880 35920) :url "https://github.com/Elilif/emacs-immersive-translate") (immortal-scratch :source "MELPA" :recipe (:package "immortal-scratch" :fetcher github :repo "jpkotta/immortal-scratch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Respawn the scratch buffer when it's killed" :date (22330 13520) :url "https://github.com/jpkotta/immortal-scratch") (immutant-server :source "MELPA" :recipe (:package "immutant-server" :fetcher github :repo "leathekd/immutant-server.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run your Immutant server in Emacs" :date (21278 6592) :url "https://github.com/leathekd/immutant-server.el") (impatient-mode :source "MELPA" :recipe (:package "impatient-mode" :fetcher github :repo "skeeto/impatient-mode" :files ("*.html" "*.js" "impatient-mode.el")) :description "Serve buffers live over HTTP" :date (25692 1488) :url "https://github.com/skeeto/impatient-mode") (impatient-showdown :source "MELPA" :recipe (:package "impatient-showdown" :repo "jcs-elpa/impatient-showdown" :fetcher github :files (:defaults "preview.html")) :description "Preview markdown buffer live over HTTP using showdown" :date (26223 21072) :url "https://github.com/jcs-elpa/impatient-showdown") (import-js :source "MELPA" :recipe (:package "import-js" :repo "Galooshi/emacs-import-js" :fetcher github :files ("plugin/import-js.el")) :description "Import Javascript dependencies" :date (25098 49872) :url "https://github.com/Galooshi/emacs-import-js") (import-popwin :source "MELPA" :recipe (:package "import-popwin" :repo "emacsorphanage/import-popwin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Popwin buffer near by import statements with popwin" :date (22695 25680) :url "https://github.com/emacsorphanage/import-popwin") (importmagic :source "MELPA" :recipe (:package "importmagic" :fetcher github :repo "anachronic/importmagic.el" :files (:defaults "importmagicserver.py")) :description "Fix Python imports using importmagic" :date (23296 36944) :url "https://github.com/anachronic/importmagic.el") (impostman :source "MELPA" :recipe (:package "impostman" :fetcher github :repo "flashcode/impostman" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import Postman collections" :date (26191 44624) :url "https://github.com/flashcode/impostman") (incus-tramp :source "MELPA" :recipe (:package "incus-tramp" :repo "lckarssen/incus-tramp" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP integration for Incus containers" :date (26344 40016) :url "https://gitlab.com/lckarssen/incus-tramp") (indent-control :source "MELPA" :recipe (:package "indent-control" :repo "jcs-elpa/indent-control" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Management for indentation level" :date (26355 10320) :url "https://github.com/jcs-elpa/indent-control") (indent-guide :source "MELPA" :recipe (:package "indent-guide" :fetcher github :repo "zk-phi/indent-guide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show vertical lines to guide indentation" :date (24576 45264) :url "https://github.com/zk-phi/indent-guide") (indent-info :source "MELPA" :recipe (:package "indent-info" :fetcher github :repo "terlar/indent-info.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show indentation information in status bar" :date (24571 27344) :url "https://github.com/terlar/indent-info.el") (indent-lint :source "MELPA" :recipe (:package "indent-lint" :fetcher github :repo "conao3/indent-lint.el" :files (:defaults (:exclude "flycheck-indent.el"))) :description "Async indentation checker" :date (25827 53328) :url "https://github.com/conao3/indent-lint.el") (indent-tools :source "MELPA" :recipe (:package "indent-tools" :fetcher gitlab :repo "emacs-stuff/indent-tools" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Indent, navigate (and more) by blocks of indentation: yaml, python etc" :date (24784 64976) :url "https://gitlab.com/emacs-stuff/indent-tools") (indian-ext :source "MELPA" :recipe (:package "indian-ext" :fetcher github :repo "paddymcall/indian-ext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension to Indian language utilities" :date (25891 6224) :url "https://github.com/paddymcall/indian-ext") (indicators :source "MELPA" :recipe (:package "indicators" :fetcher github :repo "Fuco1/indicators.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the buffer relative location of line in the fringe" :date (26107 20048) :url "https://github.com/Fuco1/indicators.el") (indium :source "MELPA" :recipe (:package "indium" :fetcher github :repo "NicolasPetton/Indium" :old-names (jade) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JavaScript Awesome Development Environment" :date (24646 36944) :url "https://github.com/NicolasPetton/Indium") (indy :source "MELPA" :recipe (:package "indy" :repo "kwrooijen/indy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode and EDSL to manage your mode's indentation rules" :date (23881 59984) :url "https://github.com/kwrooijen/indy") (inf-clojure :source "MELPA" :recipe (:package "inf-clojure" :repo "clojure-emacs/inf-clojure" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run an external Clojure process in an Emacs buffer" :date (25851 35664) :url "https://github.com/clojure-emacs/inf-clojure") (inf-crystal :source "MELPA" :recipe (:package "inf-crystal" :repo "brantou/inf-crystal.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a Inferior-Crystal process in a buffer" :date (23137 2768) :url "https://github.com/brantou/inf-crystal.el") (inf-elixir :source "MELPA" :recipe (:package "inf-elixir" :fetcher github :repo "J3RN/inf-elixir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run an interactive Elixir shell" :date (25732 58448) :url "https://github.com/J3RN/inf-elixir") (inf-mongo :source "MELPA" :recipe (:package "inf-mongo" :fetcher github :repo "endofunky/inf-mongo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a MongoDB shell process in a buffer" :date (23241 12624) :url "https://github.com/endofunky/inf-mongo") (inf-ruby :source "MELPA" :recipe (:package "inf-ruby" :repo "nonsequitur/inf-ruby" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a Ruby process in a buffer" :date (26355 10320) :url "https://github.com/nonsequitur/inf-ruby") (inferior-islisp :source "MELPA" :recipe (:package "inferior-islisp" :repo "sasanidas/islisp-mode" :fetcher gitlab :files ("inferior-islisp.el")) :description "Run inferior ISLisp processes" :date (25390 7760) :url "https://gitlab.com/sasanidas/islisp-mode") (inflections :source "MELPA" :recipe (:package "inflections" :repo "eschulte/jump.el" :fetcher github :files ("inflections.el")) :description "Convert english words between singular and plural" :date (24570 6480) :url "https://github.com/eschulte/jump.el") (info-beamer :source "MELPA" :recipe (:package "info-beamer" :fetcher github :repo "dakra/info-beamer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for working with info-beamer" :date (24711 10704) :url "https://github.com/dakra/info-beamer.el") (info-buffer :source "MELPA" :recipe (:package "info-buffer" :fetcher gitlab :repo "llvilanova/info-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display info topics in separate buffers" :date (22646 40144) :url "https://gitlab.com/llvilanova/info-buffer") (info-colors :source "MELPA" :recipe (:package "info-colors" :fetcher github :repo "ubolonton/info-colors" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra colors for Info-mode" :date (25394 4816) :url "https://github.com/ubolonton/info-colors") (info-rename-buffer :source "MELPA" :recipe (:package "info-rename-buffer" :fetcher github :repo "oitofelix/info-rename-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rename Info buffers to match manuals" :date (24190 26960) :url "https://github.com/oitofelix/info-rename-buffer") (inform :source "MELPA" :recipe (:package "inform" :fetcher github :repo "dieter-wilhelm/inform" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Symbol links in Info buffers to their help documentation" :date (24344 43216) :url "https://github.com/dieter-wilhelm/inform") (inform7 :source "MELPA" :recipe (:package "inform7" :fetcher github :repo "GuiltyDolphin/inform7-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for working with Inform 7 files" :date (24233 60112) :url "https://github.com/GuiltyDolphin/inform7-mode") (inherit-local :source "MELPA" :recipe (:package "inherit-local" :fetcher github :repo "shlevy/inherit-local" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inherited buffer-local variables" :date (22761 20304) :url "https://github.com/shlevy/inherit-local") (inheritenv :source "MELPA" :recipe (:package "inheritenv" :fetcher github :repo "purcell/inheritenv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make temp buffers inherit buffer-local environment variables" :date (25804 5456) :url "https://github.com/purcell/inheritenv") (ini :source "MELPA" :recipe (:package "ini" :repo "EsaLaine/ini.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Converting between INI files and association lists" :date (25353 13392) :url "https://github.com/EsaLaine/ini.el") (ini-mode :source "MELPA" :recipe (:package "ini-mode" :repo "Lindydancer/ini-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Windows-style ini files" :date (25574 45136) :url "https://github.com/Lindydancer/ini-mode") (init-dir :source "MELPA" :recipe (:package "init-dir" :fetcher github :repo "chaosemer/init-dir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Init directory instead of just a single file" :date (26353 54992) :url "https://github.com/chaosemer/init-dir") (init-loader :source "MELPA" :recipe (:package "init-loader" :repo "emacs-jp/init-loader" :fetcher github :files ("init-loader.el")) :description "Loader for configuration files" :date (26121 52944) :url "https://github.com/emacs-jp/init-loader") (init-open-recentf :source "MELPA" :recipe (:package "init-open-recentf" :fetcher github :repo "zonuexe/init-open-recentf.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Invoke a command immediately after startup" :date (25105 23120) :url "https://github.com/zonuexe/init-open-recentf.el") (initsplit :source "MELPA" :recipe (:package "initsplit" :fetcher github :repo "dabrahams/initsplit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code to split customizations into different files" :date (22495 80) :url "https://github.com/dabrahams/initsplit") (ink-mode :source "MELPA" :recipe (:package "ink-mode" :repo "Kungsgeten/ink-mode" :fetcher github :files (:defaults "snippets")) :description "Major mode for writing interactive fiction in Ink" :date (24483 5712) :url "https://github.com/Kungsgeten/ink-mode") (inkpot-theme :source "MELPA" :recipe (:package "inkpot-theme" :fetcher codeberg :repo "ideasman42/emacs-theme-inkpot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A port of vim's inkpot theme" :date (26214 6096) :url "https://codeberg.org/ideasman42/emacs-theme-inkpot") (inline-crypt :source "MELPA" :recipe (:package "inline-crypt" :fetcher github :repo "Sodel-the-Vociferous/inline-crypt-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple inline encryption via openssl" :date (22941 60624) :url "https://github.com/Sodel-the-Vociferous/inline-crypt-el") (inline-docs :source "MELPA" :recipe (:package "inline-docs" :fetcher git :url "https://repo.or.cz/inline-docs.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show inline contextual docs" :date (25768 31952) :url "https://repo.or.cz/inline-docs.git") (inlineR :source "MELPA" :recipe (:package "inlineR" :fetcher github :repo "emacsattic/inlineR" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert Tag for inline image of R graphics" :date (23975 34000) :url "https://github.com/emacsattic/inlineR") (inputrc-mode :source "MELPA" :recipe (:package "inputrc-mode" :repo "nverno/inputrc-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for readline configuration" :date (26332 48848) :url "https://github.com/nverno/inputrc-mode") (insecure-lock :source "MELPA" :recipe (:package "insecure-lock" :repo "kchanqvq/insecure-lock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensible screen lock framework" :date (25672 16208) :url "https://github.com/kchanqvq/insecure-lock") (insert-char-preview :source "MELPA" :recipe (:package "insert-char-preview" :repo "matsievskiysv/insert-char-preview" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert Unicode char" :date (24465 62160) :url "https://gitlab.com/matsievskiysv/insert-char-preview") (insert-esv :source "MELPA" :recipe (:package "insert-esv" :fetcher github :repo "sam030820/insert-esv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert ESV Bible passages" :date (24517 23888) :url "https://github.com/sam030820/insert-esv") (insert-kaomoji :source "MELPA" :recipe (:package "insert-kaomoji" :fetcher sourcehut :repo "pkal/insert-kaomoji" :files (:defaults "KAOMOJIS")) :description "Easily insert kaomojis" :date (25098 49872) :url "https://git.sr.ht/~pkal/insert-kaomoji") (insert-random :source "MELPA" :recipe (:package "insert-random" :fetcher github :repo "lassik/emacs-insert-random" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert random characters from various character sets" :date (25576 464) :url "https://github.com/lassik/emacs-insert-random") (insert-shebang :source "MELPA" :recipe (:package "insert-shebang" :fetcher github :repo "psachin/insert-shebang" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert shebang line automatically" :date (24520 80) :url "https://github.com/psachin/insert-shebang") (insfactor :source "MELPA" :recipe (:package "insfactor" :fetcher github :repo "duelinmarkers/insfactor.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for a Clojure project with insfactor in it" :date (21609 4176) :url "https://github.com/duelinmarkers/insfactor.el") (inspire :source "MELPA" :recipe (:package "inspire" :fetcher github :repo "Simon-Lin/inspire.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for inspirehep.net" :date (25695 64080) :url "https://github.com/Simon-Lin/inspire.el") (instapaper :source "MELPA" :recipe (:package "instapaper" :fetcher git :url "https://git.carcosa.net/jmcbray/emacs-instapaper.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "[No description available]" :date (19884 38976) :url "https://git.carcosa.net/jmcbray/emacs-instapaper.git") (intel-hex-mode :source "MELPA" :recipe (:package "intel-hex-mode" :fetcher github :repo "mschuldt/intel-hex-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for Intel Hex files" :date (23260 63440) :url "https://github.com/mschuldt/intel-hex-mode") (intellij-theme :source "MELPA" :recipe (:package "intellij-theme" :fetcher gitlab :repo "fommil/emacs-intellij-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inspired by IntelliJ's default theme" :date (23013 7632) :url "https://gitlab.com/fommil/emacs-intellij-theme") (interaction-log :source "MELPA" :recipe (:package "interaction-log" :fetcher github :repo "michael-heerdegen/interaction-log.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Exhaustive log of interactions with Emacs" :date (22233 63312) :url "https://github.com/michael-heerdegen/interaction-log.el") (interval-list :source "MELPA" :recipe (:package "interval-list" :fetcher github :repo "Fuco1/interval-list" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interval list data structure for 1D selections" :date (21780 29520) :url "https://github.com/Fuco1/interval-list") (interval-tree :source "MELPA" :recipe (:package "interval-tree" :fetcher github :repo "Fuco1/interval-tree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interval tree data structure for 1D range queries" :date (20815 23360) :url "https://github.com/Fuco1/interval-tree") (inverse-acme-theme :source "MELPA" :recipe (:package "inverse-acme-theme" :fetcher github :repo "dcjohnson/inverse-acme-theme" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme that looks like an inverse of Acme's color scheme" :date (24603 3792) :url "https://github.com/dcjohnson/inverse-acme-theme") (io-mode :source "MELPA" :recipe (:package "io-mode" :fetcher github :repo "superbobry/io-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode to edit Io language files in Emacs" :date (22514 50896) :url "https://github.com/superbobry/io-mode") (io-mode-inf :source "MELPA" :recipe (:package "io-mode-inf" :fetcher github :repo "slackorama/io-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interaction with an Io interpreter" :date (21222 47808) :url "https://github.com/slackorama/io-emacs") (iodine-theme :source "MELPA" :recipe (:package "iodine-theme" :fetcher github :repo "srdja/iodine-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light emacs color theme" :date (22067 55888) :url "https://github.com/srdja/iodine-theme") (iosevka-theme :source "MELPA" :recipe (:package "iosevka-theme" :fetcher codeberg :repo "mekeor/iosevka-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme using various stylistic sets of Iosevka font" :date (26228 38992) :url "https://codeberg.org/mekeor/iosevka-theme") (iota :source "MELPA" :recipe (:package "iota" :fetcher sourcehut :repo "mango/iota.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace marker with increasing integers" :date (25863 26832) :url "https://git.sr.ht/~mango/iota.el") (ipcalc :source "MELPA" :recipe (:package "ipcalc" :fetcher github :repo "dotemacs/ipcalc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "IP subnet calculator" :date (24881 15184) :url "https://github.com/dotemacs/ipcalc.el") (ipe :source "MELPA" :recipe (:package "ipe" :fetcher github :repo "BriansEmacs/insert-pair-edit.el" :files (:defaults "modes/ipe-*.el")) :description "Insert, Update and Delete PAIRs using overlays" :date (26385 31440) :url "https://github.com/BriansEmacs/insert-pair-edit.el") (iplayer :source "MELPA" :recipe (:package "iplayer" :fetcher github :repo "csrhodes/iplayer-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse and download BBC TV/radio shows" :date (26086 13904) :url "https://github.com/csrhodes/iplayer-el") (ipp :source "MELPA" :recipe (:package "ipp" :fetcher github :repo "emarsden/ipp-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Implementation of the Internet Printing Protocol" :date (25776 26064) :url "https://github.com/emarsden/ipp-el") (ipretty :source "MELPA" :recipe (:package "ipretty" :fetcher git :url "https://framagit.org/steckerhalter/ipretty.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive Emacs Lisp pretty-printing" :date (23318 63952) :url "https://framagit.org/steckerhalter/ipretty.git") (ipython-shell-send :source "MELPA" :recipe (:package "ipython-shell-send" :fetcher github :repo "jackkamm/ipython-shell-send-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send code (including magics) to ipython shell" :date (23660 28240) :url "https://github.com/jackkamm/ipython-shell-send-el") (iqa :source "MELPA" :recipe (:package "iqa" :repo "a13/iqa.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Init file(and directory) Quick Access" :date (24493 41552) :url "https://github.com/a13/iqa.el") (ir-black-theme :source "MELPA" :recipe (:package "ir-black-theme" :repo "jmdeldin/ir-black-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of ir-black theme" :date (20786 23104) :url "https://github.com/jmdeldin/ir-black-theme.el") (iregister :source "MELPA" :recipe (:package "iregister" :fetcher github :repo "atykhonov/iregister.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive register commands for Emacs" :date (21845 3280) :url "https://github.com/atykhonov/iregister.el") (irony :source "MELPA" :recipe (:package "irony" :fetcher github :repo "Sarcasm/irony-mode" :files (:defaults "server")) :description "C/C++ minor mode powered by libclang" :date (25902 62928) :url "https://github.com/Sarcasm/irony-mode") (irony-eldoc :source "MELPA" :recipe (:package "irony-eldoc" :fetcher github :repo "ikirill/irony-eldoc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Irony-mode support for eldoc-mode" :date (24303 51792) :url "https://github.com/ikirill/irony-eldoc") (iscroll :source "MELPA" :recipe (:package "iscroll" :repo "casouri/iscroll" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smooth scrolling over images" :date (25253 592) :url "https://github.com/casouri/iscroll") (isearch-dabbrev :source "MELPA" :recipe (:package "isearch-dabbrev" :fetcher github :repo "Dewdrops/isearch-dabbrev" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use dabbrev in isearch" :date (21657 55248) :url "https://github.com/Dewdrops/isearch-dabbrev") (isearch-project :source "MELPA" :recipe (:package "isearch-project" :repo "jcs-elpa/isearch-project" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Incremental search through the whole project" :date (26001 54864) :url "https://github.com/jcs-elpa/isearch-project") (isearch-symbol-at-point :source "MELPA" :recipe (:package "isearch-symbol-at-point" :repo "re5et/isearch-symbol-at-point" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use isearch to search for the symbol at point" :date (20980 9920) :url "https://github.com/re5et/isearch-symbol-at-point") (isend-mode :source "MELPA" :recipe (:package "isend-mode" :fetcher github :repo "ffevotte/isend-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively send parts of an Emacs buffer to an interpreter" :date (24564 54096) :url "https://github.com/ffevotte/isend-mode.el") (isgd :source "MELPA" :recipe (:package "isgd" :fetcher github :repo "chmouel/isgd.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shorten URLs using the isgd.com shortener service" :date (21804 11856) :url "https://github.com/chmouel/isgd.el") (islisp-mode :source "MELPA" :recipe (:package "islisp-mode" :repo "sasanidas/islisp-mode" :fetcher gitlab :files ("islisp-mode.el" "islisp-hyperdraft.el" ("advance" "advance/*") ("implementations" "implementations/*"))) :description "Major mode for ISLisp programming" :date (25390 7760) :url "https://gitlab.com/sasanidas/islisp-mode") (iso-639 :source "MELPA" :recipe (:package "iso-639" :fetcher codeberg :repo "WammKD/emacs-iso-639" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ISO 639" :date (26065 7760) :url "https://codeberg.org/WammKD/emacs-iso-639") (isortify :source "MELPA" :recipe (:package "isortify" :fetcher github :repo "pythonic-emacs/isortify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "(automatically) format python buffers using isort" :date (25826 32464) :url "https://github.com/pythonic-emacs/isortify") (ispc-mode :source "MELPA" :recipe (:package "ispc-mode" :fetcher github :repo "Munksgaard/ispc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax coloring for ispc programs" :date (24535 53840) :url "https://github.com/Munksgaard/ispc-mode") (iss-mode :source "MELPA" :recipe (:package "iss-mode" :repo "rasmus-toftdahl-olesen/iss-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for InnoSetup install scripts" :date (21547 3008) :url "https://github.com/rasmus-toftdahl-olesen/iss-mode") (itail :source "MELPA" :recipe (:package "itail" :repo "re5et/itail" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interactive tail mode" :date (23047 25808) :url "https://github.com/re5et/itail") (itasca :source "MELPA" :recipe (:package "itasca" :repo "jkfurtney/itasca-emacs" :fetcher github :files ("itasca.el" "ac-dict" "snippets")) :description "Major modes for Itasca software data files" :date (22831 11984) :url "https://github.com/jkfurtney/itasca-emacs") (iter2 :source "MELPA" :recipe (:package "iter2" :repo "doublep/iter2" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reimplementation of Elisp generators" :date (25444 11216) :url "https://github.com/doublep/iter2") (iterator :source "MELPA" :recipe (:package "iterator" :fetcher github :repo "thierryvolpiatto/iterator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library to create and use elisp iterators objects" :date (24568 51152) :url "https://github.com/thierryvolpiatto/iterator") (ivariants :source "MELPA" :recipe (:package "ivariants" :fetcher github :repo "kawabata/emacs-ivariants" :files ("ivariants*.el" "tables")) :description "Ideographic variants editor and browser" :date (22940 39760) :url "https://github.com/kawabata/emacs-ivariants") (ivs-edit :source "MELPA" :recipe (:package "ivs-edit" :repo "kawabata/ivs-edit" :fetcher github :files ("ivs-edit.el" "IVD_Sequences.txt" "jp-old-style.txt")) :description "IVS (Ideographic Variation Sequence) editing tool" :date (22934 976) :url "https://github.com/kawabata/ivs-edit") (ivy :source "MELPA" :recipe (:package "ivy" :repo "abo-abo/swiper" :fetcher github :files (:defaults "doc/ivy-help.org" (:exclude "swiper.el" "counsel.el" "ivy-hydra.el" "ivy-avy.el"))) :description "Incremental Vertical completYon" :date (26319 36816) :url "https://github.com/abo-abo/swiper") (ivy-avy :source "MELPA" :recipe (:package "ivy-avy" :repo "abo-abo/swiper" :fetcher github :files ("ivy-avy.el")) :description "Avy integration for Ivy" :date (26059 55376) :url "https://github.com/abo-abo/swiper") (ivy-bibtex :source "MELPA" :recipe (:package "ivy-bibtex" :fetcher github :repo "tmalsburg/helm-bibtex" :files ("ivy-bibtex.el")) :description "A bibliography manager based on Ivy" :date (24912 57168) :url "https://github.com/tmalsburg/helm-bibtex") (ivy-clipmenu :source "MELPA" :recipe (:package "ivy-clipmenu" :repo "wpcarro/ivy-clipmenu.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy client for clipmenu" :date (25081 40784) :url "https://github.com/wpcarro/ivy-clipmenu.el") (ivy-clojuredocs :source "MELPA" :recipe (:package "ivy-clojuredocs" :repo "wandersoncferreira/ivy-clojuredocs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search for help in clojuredocs.org" :date (24514 47696) :url "https://github.com/wandersoncferreira/ivy-clojuredocs") (ivy-emms :source "MELPA" :recipe (:package "ivy-emms" :fetcher github :repo "franburstall/ivy-emms" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface to emms tracks" :date (25935 60240) :url "https://github.com/franburstall/ivy-emms") (ivy-emoji :source "MELPA" :recipe (:package "ivy-emoji" :fetcher github :repo "Sbozzolo/ivy-emoji" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert emojis with ivy" :date (24174 38736) :url "https://github.com/Sbozzolo/ivy-emoji") (ivy-erlang-complete :source "MELPA" :recipe (:package "ivy-erlang-complete" :repo "s-kostyaev/ivy-erlang-complete" :fetcher github :files (:defaults "bin")) :description "Erlang context sensitive completion at point using ivy. It also support xref and eldoc" :date (24941 57424) :url "https://github.com/s-kostyaev/ivy-erlang-complete") (ivy-explorer :source "MELPA" :recipe (:package "ivy-explorer" :repo "clemera/ivy-explorer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamic file browsing grid using ivy" :date (23925 27600) :url "https://github.com/clemera/ivy-explorer") (ivy-file-preview :source "MELPA" :recipe (:package "ivy-file-preview" :repo "jcs-legacy/ivy-file-preview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview the current ivy file selection" :date (26001 54864) :url "https://github.com/jcs-legacy/ivy-file-preview") (ivy-fuz :source "MELPA" :recipe (:package "ivy-fuz" :repo "Silex/ivy-fuz.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration between fuz and ivy" :date (24062 34768) :url "https://github.com/Silex/ivy-fuz.el") (ivy-gitlab :source "MELPA" :recipe (:package "ivy-gitlab" :fetcher github :repo "nlamirault/emacs-gitlab" :files ("ivy-gitlab.el")) :description "Ivy interface to Gitlab" :date (23589 15696) :url "https://github.com/nlamirault/emacs-gitlab") (ivy-historian :source "MELPA" :recipe (:package "ivy-historian" :fetcher github :repo "PythonNut/historian.el" :files ("ivy-historian.el")) :description "Persistently store selected minibuffer candidates" :date (24813 65232) :url "https://github.com/PythonNut/historian.el") (ivy-hoogle :source "MELPA" :recipe (:package "ivy-hoogle" :fetcher github :repo "aartamonau/ivy-hoogle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Hoogle using ivy" :date (26003 10192) :url "https://github.com/aartamonau/ivy-hoogle") (ivy-hydra :source "MELPA" :recipe (:package "ivy-hydra" :repo "abo-abo/swiper" :fetcher github :files ("ivy-hydra.el")) :description "Additional key bindings for Ivy" :date (26059 55376) :url "https://github.com/abo-abo/swiper") (ivy-lobsters :source "MELPA" :recipe (:package "ivy-lobsters" :repo "julienXX/ivy-lobsters" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse lobste.rs stories with ivy" :date (24378 61392) :url "https://github.com/julienXX/ivy-lobsters") (ivy-migemo :source "MELPA" :recipe (:package "ivy-migemo" :repo "ROCKTAKEY/ivy-migemo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use migemo on ivy" :date (25547 208) :url "https://github.com/ROCKTAKEY/ivy-migemo") (ivy-mpdel :source "MELPA" :recipe (:package "ivy-mpdel" :fetcher github :repo "mpdel/ivy-mpdel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface to navigate MPD" :date (23748 49872) :url "https://github.com/mpdel/ivy-mpdel") (ivy-omni-org :source "MELPA" :recipe (:package "ivy-omni-org" :repo "akirak/ivy-omni-org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse anything in Org mode" :date (24368 25552) :url "https://github.com/akirak/ivy-omni-org") (ivy-pass :source "MELPA" :recipe (:package "ivy-pass" :fetcher github :repo "ecraven/ivy-pass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface for pass" :date (22926 6864) :url "https://github.com/ecraven/ivy-pass") (ivy-posframe :source "MELPA" :recipe (:package "ivy-posframe" :fetcher github :repo "tumashu/ivy-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Using posframe to show Ivy" :date (26392 4688) :url "https://github.com/tumashu/ivy-posframe") (ivy-prescient :source "MELPA" :recipe (:package "ivy-prescient" :fetcher github :repo "radian-software/prescient.el" :files ("ivy-prescient.el")) :description "Prescient.el + Ivy" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (ivy-purpose :source "MELPA" :recipe (:package "ivy-purpose" :repo "bmag/ivy-purpose" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy Interface for Purpose" :date (22419 56016) :url "https://github.com/bmag/ivy-purpose") (ivy-rich :source "MELPA" :recipe (:package "ivy-rich" :repo "Yevgnen/ivy-rich" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "More friendly display transformer for ivy" :date (25670 60880) :url "https://github.com/Yevgnen/ivy-rich") (ivy-rtags :source "MELPA" :recipe (:package "ivy-rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/ivy-rtags.el")) :description "RTags completion back-end for ivy" :date (24062 34768) :url "https://github.com/Andersbakken/rtags") (ivy-searcher :source "MELPA" :recipe (:package "ivy-searcher" :repo "jcs-legacy/ivy-searcher" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface to use searcher" :date (26001 54864) :url "https://github.com/jcs-legacy/ivy-searcher") (ivy-spotify :source "MELPA" :recipe (:package "ivy-spotify" :fetcher codeberg :repo "jao/espotify" :files ("ivy-spotify.el")) :description "Search spotify with ivy" :date (24672 61008) :url "https://codeberg.org/jao/espotify") (ivy-todo :source "MELPA" :recipe (:package "ivy-todo" :repo "Kungsgeten/ivy-todo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage org-mode TODOs with ivy" :date (24183 53712) :url "https://github.com/Kungsgeten/ivy-todo") (ivy-xcdoc :source "MELPA" :recipe (:package "ivy-xcdoc" :repo "hex2010/emacs-ivy-xcdoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Xcode documents with ivy interface" :date (22492 23888) :url "https://github.com/hex2010/emacs-ivy-xcdoc") (ivy-xref :source "MELPA" :recipe (:package "ivy-xref" :fetcher github :repo "alexmurray/ivy-xref" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface for xref results" :date (24927 24528) :url "https://github.com/alexmurray/ivy-xref") (ivy-yasnippet :source "MELPA" :recipe (:package "ivy-yasnippet" :fetcher github :repo "mkcms/ivy-yasnippet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview yasnippets with ivy" :date (24319 40016) :url "https://github.com/mkcms/ivy-yasnippet") (ivy-ycmd :source "MELPA" :recipe (:package "ivy-ycmd" :fetcher github :repo "abingham/emacs-ivy-ycmd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ivy interface to ycmd" :date (23444 14416) :url "https://github.com/abingham/emacs-ivy-ycmd") (ivy-youtube :source "MELPA" :recipe (:package "ivy-youtube" :fetcher github :repo "squiter/ivy-youtube" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query YouTube and play videos in your browser" :date (25681 31184) :url "https://github.com/squiter/ivy-youtube") (ix :source "MELPA" :recipe (:package "ix" :repo "theanalyst/ix.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client for http://ix.io pastebin" :date (21100 8000) :url "https://github.com/theanalyst/ix.el") (j-mode :source "MELPA" :recipe (:package "j-mode" :fetcher github :repo "zellio/j-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing J programs" :date (26348 37072) :url "https://github.com/zellio/j-mode") (jabber :source "MELPA" :recipe (:package "jabber" :fetcher codeberg :repo "emacs-jabber/emacs-jabber" :files (:defaults "*.org" ("jabber-fallback-lib" "jabber-fallback-lib/hexrgb.el"))) :description "A Jabber client for Emacs" :date (26232 36048) :url "https://codeberg.org/emacs-jabber/emacs-jabber") (jack :source "MELPA" :recipe (:package "jack" :fetcher github :repo "tonyaldon/jack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "HTML generator library" :date (25467 59088) :url "https://github.com/tonyaldon/jack") (jack-connect :source "MELPA" :recipe (:package "jack-connect" :fetcher git :url "https://bitbucket.org/sbarbit/jack-connect" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage jack connections within Emacs" :date (25080 19920) :url "https://bitbucket.org/sbarbit/jack-connect") (jack-ts-mode :source "MELPA" :recipe (:package "jack-ts-mode" :repo "nverno/jack-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for jack buffers using tree-sitter" :date (25933 18512) :url "https://github.com/nverno/jack-ts-mode") (jade-mode :source "MELPA" :recipe (:package "jade-mode" :fetcher github :repo "brianc/jade-mode" :files ("jade-mode.el")) :description "Major mode for editing .jade files" :date (24887 53968) :url "https://github.com/brianc/jade-mode") (jami-bot :source "MELPA" :recipe (:package "jami-bot" :fetcher gitlab :repo "hperrey/jami-bot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An extendable chat bot for the private messenger GNU Jami" :date (26045 22480) :url "https://gitlab.com/hperrey/jami-bot") (jammer :source "MELPA" :recipe (:package "jammer" :fetcher git :url "https://depp.brause.cc/jammer.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Punish yourself for using Emacs inefficiently" :date (24725 43600) :url "https://depp.brause.cc/jammer.git") (janet-mode :source "MELPA" :recipe (:package "janet-mode" :repo "ALSchwalm/janet-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Defines a major mode for Janet" :date (24908 60112) :url "https://github.com/ALSchwalm/janet-mode") (japanese-holidays :source "MELPA" :recipe (:package "japanese-holidays" :repo "emacs-jp/japanese-holidays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calendar functions for the Japanese calendar" :date (24554 18256) :url "https://github.com/emacs-jp/japanese-holidays") (jape-mode :source "MELPA" :recipe (:package "jape-mode" :repo "tanzoniteblack/jape-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs editing mode mode for GATE's JAPE files" :date (21510 8640) :url "https://github.com/tanzoniteblack/jape-mode") (jar-manifest-mode :source "MELPA" :recipe (:package "jar-manifest-mode" :fetcher github :repo "omajid/jar-manifest-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode to edit JAR manifest files" :date (22309 7376) :url "https://github.com/omajid/jar-manifest-mode") (jasminejs-mode :source "MELPA" :recipe (:package "jasminejs-mode" :fetcher github :repo "stoltene2/jasminejs-mode" :files ("jasminejs-mode.el" "snippets/jasminejs-mode")) :description "A minor mode for manipulating jasmine test files" :date (21860 57040) :url "https://github.com/stoltene2/jasminejs-mode") (jastadd-ast-mode :source "MELPA" :recipe (:package "jastadd-ast-mode" :fetcher github :repo "rudi/jastadd-ast-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing JastAdd AST files" :date (24430 23120) :url "https://github.com/rudi/jastadd-ast-mode") (java-imports :source "MELPA" :recipe (:package "java-imports" :fetcher github :repo "dakrone/emacs-java-imports" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code for dealing with Java imports" :date (25775 5200) :url "https://github.com/dakrone/emacs-java-imports") (java-snippets :source "MELPA" :recipe (:package "java-snippets" :fetcher github :repo "nekop/yasnippet-java-mode" :files ("*.el" "snippets")) :description "Yasnippets for Java" :date (22384 16976) :url "https://github.com/nekop/yasnippet-java-mode") (javadoc-lookup :source "MELPA" :recipe (:package "javadoc-lookup" :repo "skeeto/javadoc-lookup" :fetcher github :files ("*.el" ("webcache" "webcache/*"))) :description "Javadoc Emacs integration with Maven" :date (22207 39248) :url "https://github.com/skeeto/javadoc-lookup") (javap-mode :source "MELPA" :recipe (:package "javap-mode" :fetcher github :repo "hiredman/javap-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Javap major mode" :date (20293 18752) :url "https://github.com/hiredman/javap-mode") (jaword :source "MELPA" :recipe (:package "jaword" :fetcher github :repo "zk-phi/jaword" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor-mode for handling Japanese words better" :date (24642 39888) :url "https://github.com/zk-phi/jaword") (jazz-theme :source "MELPA" :recipe (:package "jazz-theme" :fetcher github :repo "donderom/jazz-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A warm color theme for Emacs 24+" :date (25817 17488) :url "https://github.com/donderom/jazz-theme") (jbeans-theme :source "MELPA" :recipe (:package "jbeans-theme" :fetcher github :repo "synic/jbeans-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jbeans theme for GNU Emacs 24 (deftheme)" :date (24427 46928) :url "https://github.com/synic/jbeans-emacs") (jdecomp :source "MELPA" :recipe (:package "jdecomp" :fetcher github :repo "xiongtx/jdecomp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to Java decompilers" :date (22703 19792) :url "https://github.com/xiongtx/jdecomp") (jdee :source "MELPA" :recipe (:package "jdee" :fetcher github :repo "jdee-emacs/jdee" :files ("*.el" "*.info" (:exclude ".dir-locals.el"))) :description "Java Development Environment for Emacs" :date (23996 40144) :url "https://github.com/jdee-emacs/jdee") (jedi :source "MELPA" :recipe (:package "jedi" :fetcher github :repo "tkf/emacs-jedi" :files ("jedi.el")) :description "A Python auto-completion for Emacs" :date (23967 39888) :url "https://github.com/tkf/emacs-jedi") (jedi-core :source "MELPA" :recipe (:package "jedi-core" :fetcher github :repo "tkf/emacs-jedi" :files ("jedi-core.el" "jediepcserver.py" "Makefile" "setup.py")) :description "Common code of jedi.el and company-jedi.el" :date (24719 4816) :url "https://github.com/tkf/emacs-jedi") (jedi-direx :source "MELPA" :recipe (:package "jedi-direx" :fetcher github :repo "tkf/emacs-jedi-direx" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree style source code viewer for Python buffer" :date (21276 51264) :url "https://github.com/tkf/emacs-jedi-direx") (jeison :source "MELPA" :recipe (:package "jeison" :repo "SavchenkoValeriy/jeison" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library for declarative JSON parsing" :date (23859 32976) :url "https://github.com/SavchenkoValeriy/jeison") (jekyll-modes :source "MELPA" :recipe (:package "jekyll-modes" :fetcher github :repo "fred-o/jekyll-modes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major modes (markdown and HTML) for authoring Jekyll content" :date (21609 4176) :url "https://github.com/fred-o/jekyll-modes") (jemdoc-mode :source "MELPA" :recipe (:package "jemdoc-mode" :repo "drdv/jemdoc-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing jemdoc files" :date (22874 45136) :url "https://github.com/drdv/jemdoc-mode") (jenkins :source "MELPA" :recipe (:package "jenkins" :fetcher github :repo "rmuslimov/jenkins.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic Jenkins client for Emacs" :date (24265 36560) :url "https://github.com/rmuslimov/jenkins.el") (jenkins-watch :source "MELPA" :recipe (:package "jenkins-watch" :fetcher github :repo "ataylor284/jenkins-watch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Watch continuous integration build status" :date (20588 39232) :url "https://github.com/ataylor284/jenkins-watch") (jenkinsfile-mode :source "MELPA" :recipe (:package "jenkinsfile-mode" :repo "john2x/jenkinsfile-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Jenkins declarative pipeline syntax" :date (25710 31440) :url "https://github.com/john2x/jenkinsfile-mode") (jest :source "MELPA" :recipe (:package "jest" :repo "edmundmiller/emacs-jest" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers to run jest" :date (25326 54864) :url "https://github.com/edmundmiller/emacs-jest") (jest-test-mode :source "MELPA" :recipe (:package "jest-test-mode" :repo "rymndhng/jest-test-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for running Node.js tests using jest" :date (25971 33744) :url "https://github.com/rymndhng/jest-test-mode") (jet :source "MELPA" :recipe (:package "jet" :repo "ericdallo/jet.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for jet Clojure tool" :date (26280 720) :url "https://github.com/ericdallo/jet.el") (jetbrains :source "MELPA" :recipe (:package "jetbrains" :fetcher github :repo "emacs-php/jetbrains.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JetBrains IDE bridge" :date (23191 6224) :url "https://github.com/emacs-php/jetbrains.el") (jetbrains-darcula-theme :source "MELPA" :recipe (:package "jetbrains-darcula-theme" :fetcher github :repo "ianyepan/jetbrains-darcula-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A complete port of the default JetBrains Darcula theme" :date (25590 33360) :url "https://github.com/ianyepan/jetbrains-darcula-emacs-theme") (jg-quicknav :source "MELPA" :recipe (:package "jg-quicknav" :fetcher github :repo "jeffgran/jg-quicknav" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly navigate the file system to find a file" :date (22922 9808) :url "https://github.com/jeffgran/jg-quicknav") (jinja2-mode :source "MELPA" :recipe (:package "jinja2-mode" :fetcher github :repo "paradoxxxzero/jinja2-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for jinja2" :date (25060 34640) :url "https://github.com/paradoxxxzero/jinja2-mode") (jinx :source "MELPA" :recipe (:package "jinx" :repo "minad/jinx" :files (:defaults "jinx-mod.c" "emacs-module.h") :fetcher github) :description "Enchanted Spell Checker" :date (26356 31184) :url "https://github.com/minad/jinx") (jira-markup-mode :source "MELPA" :recipe (:package "jira-markup-mode" :repo "mnuessler/jira-markup-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Major mode for JIRA-markup-formatted text files" :date (21867 30288) :url "https://github.com/mnuessler/jira-markup-mode") (jiralib2 :source "MELPA" :recipe (:package "jiralib2" :fetcher github :repo "nyyManni/jiralib2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JIRA REST API bindings to Elisp" :date (24260 18640) :url "https://github.com/nyyManni/jiralib2") (jirascope :source "MELPA" :recipe (:package "jirascope" :fetcher github :repo "Duckonaut/jirascope" :files ("jirascope/jirascope*.el")) :description "A Jira client" :date (26029 34256) :url "https://github.com/Duckonaut/jirascope") (jist :source "MELPA" :recipe (:package "jist" :fetcher github :repo "emacs-pe/jist.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gist integration" :date (22628 10192) :url "https://github.com/emacs-pe/jist.el") (jit-lock-stealth-progress :source "MELPA" :recipe (:package "jit-lock-stealth-progress" :fetcher codeberg :repo "ideasman42/emacs-jit-lock-stealth-progress" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JIT lock stealth mode-line progress" :date (26222 208) :url "https://codeberg.org/ideasman42/emacs-jit-lock-stealth-progress") (jknav :source "MELPA" :recipe (:package "jknav" :repo "aculich/jknav.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically enable j/k keys for line-based navigation" :date (20591 15424) :url "https://github.com/aculich/jknav.el") (jmespath :source "MELPA" :recipe (:package "jmespath" :repo "UnresolvedCold/jmespath" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query JSON using jmespath" :date (26020 19280) :url "https://github.com/UnresolvedCold/jmespath") (jmt-mode :source "MELPA" :recipe (:package "jmt-mode" :repo "Michael-Allan/Java_Mode_Tamed" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JMT Mode" :date (26223 21072) :url "https://github.com/Michael-Allan/Java_Mode_Tamed") (jonprl-mode :source "MELPA" :recipe (:package "jonprl-mode" :fetcher github :repo "david-christiansen/jonprl-mode" :files (:defaults "jonprl-icon.png")) :description "A major mode for editing JonPRL files" :date (22454 8656) :url "https://github.com/david-christiansen/jonprl-mode") (journalctl-mode :source "MELPA" :recipe (:package "journalctl-mode" :fetcher github :repo "SebastianMeisel/journalctl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sample major mode for  viewing output journalctl" :date (26066 28624) :url "https://github.com/SebastianMeisel/journalctl-mode") (jpop :source "MELPA" :recipe (:package "jpop" :fetcher github :repo "domtronn/jpop.el" :files (:defaults "create-file-alist.py")) :description "Lightweight project caching and navigation framework" :date (22762 41168) :url "https://github.com/domtronn/jpop.el") (jq-format :source "MELPA" :recipe (:package "jq-format" :fetcher github :repo "wbolster/emacs-jq-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat JSON and JSONLines using jq" :date (23748 49872) :url "https://github.com/wbolster/emacs-jq-format") (jq-mode :source "MELPA" :recipe (:package "jq-mode" :repo "ljos/jq-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit jq scripts" :date (26196 62544) :url "https://github.com/ljos/jq-mode") (jq-ts-mode :source "MELPA" :recipe (:package "jq-ts-mode" :repo "nverno/jq-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree-sitter support for jq buffers" :date (26086 13904) :url "https://github.com/nverno/jq-ts-mode") (jquery-doc :source "MELPA" :recipe (:package "jquery-doc" :fetcher github :repo "ananthakumaran/jquery-doc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JQuery api documentation interface for emacs" :date (21962 25168) :url "https://github.com/ananthakumaran/jquery-doc.el") (js-auto-beautify :source "MELPA" :recipe (:package "js-auto-beautify" :fetcher github :repo "Qquanwei/auto-beautify.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto format you js/jsx file" :date (22550 24400) :url "https://github.com/Qquanwei/auto-beautify.el") (js-auto-format-mode :source "MELPA" :recipe (:package "js-auto-format-mode" :fetcher github :repo "ybiquitous/js-auto-format-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for auto-formatting JavaScript code" :date (23400 46800) :url "https://github.com/ybiquitous/js-auto-format-mode") (js-codemod :source "MELPA" :recipe (:package "js-codemod" :fetcher github :repo "torgeir/js-codemod.el" :files (:defaults "replace")) :description "Run js-codemod on current sentence or selected region" :date (23941 15824) :url "https://github.com/torgeir/js-codemod.el") (js-comint :source "MELPA" :recipe (:package "js-comint" :repo "redguardtoo/js-comint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JavaScript interpreter in window" :date (26386 52304) :url "https://github.com/redguardtoo/js-comint") (js-doc :source "MELPA" :recipe (:package "js-doc" :fetcher github :repo "mooz/js-doc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert JsDoc style comment easily" :date (22407 64848) :url "https://github.com/mooz/js-doc") (js-format :source "MELPA" :recipe (:package "js-format" :fetcher github :repo "futurist/js-format.el" :files (:defaults "*.js" "*.json" "styles")) :description "Format or transform code style using NodeJS server with different javascript formatter" :date (22655 55120) :url "https://github.com/futurist/js-format.el") (js-import :source "MELPA" :recipe (:package "js-import" :fetcher github :repo "jakoblind/js-import" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import Javascript files from your current project or dependencies" :date (25560 12240) :url "https://github.com/jakoblind/js-import") (js-react-redux-yasnippets :source "MELPA" :recipe (:package "js-react-redux-yasnippets" :fetcher github :repo "sooqua/js-react-redux-yasnippets" :files ("*.el" "snippets")) :description "JavaScript,React,Redux yasnippets" :date (24174 38736) :url "https://github.com/sooqua/js-react-redux-yasnippets") (js2-closure :source "MELPA" :recipe (:package "js2-closure" :fetcher github :repo "jart/js2-closure" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Google Closure dependency manager" :date (22931 24784) :url "https://github.com/jart/js2-closure") (js2-highlight-vars :source "MELPA" :recipe (:package "js2-highlight-vars" :fetcher github :repo "unhammer/js2-highlight-vars.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight occurrences of the variable under cursor" :date (22773 11472) :url "https://github.com/unhammer/js2-highlight-vars.el") (js2-mode :source "MELPA" :recipe (:package "js2-mode" :repo "mooz/js2-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved JavaScript editing mode" :date (26332 48848) :url "https://github.com/mooz/js2-mode") (js2-refactor :source "MELPA" :recipe (:package "js2-refactor" :repo "js-emacs/js2-refactor.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A JavaScript refactoring library for emacs" :date (24642 39888) :url "https://github.com/js-emacs/js2-refactor.el") (js2hl :source "MELPA" :recipe (:package "js2hl" :fetcher github :repo "redguardtoo/js2hl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight/rename things using js2-mode parser" :date (24501 35664) :url "https://github.com/redguardtoo/js2hl") (js3-mode :source "MELPA" :recipe (:package "js3-mode" :repo "tamzinblake/js3-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An improved JavaScript editing mode" :date (22327 37328) :url "https://github.com/tamzinblake/js3-mode") (jscs :source "MELPA" :recipe (:package "jscs" :repo "papaeye/emacs-jscs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Consistent JavaScript editing using JSCS" :date (22046 49744) :url "https://github.com/papaeye/emacs-jscs") (jsdoc :source "MELPA" :recipe (:package "jsdoc" :fetcher github :repo "isamert/jsdoc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert JSDoc comments" :date (26344 40016) :url "https://github.com/isamert/jsdoc.el") (jsfmt :source "MELPA" :recipe (:package "jsfmt" :repo "brettlangdon/jsfmt.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to jsfmt command for javascript files" :date (23458 47312) :url "https://github.com/brettlangdon/jsfmt.el") (json-mode :source "MELPA" :recipe (:package "json-mode" :fetcher github :repo "json-emacs/json-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing JSON files" :date (26156 5584) :url "https://github.com/json-emacs/json-mode") (json-navigator :source "MELPA" :recipe (:package "json-navigator" :fetcher github :repo "DamienCassou/json-navigator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View and navigate JSON structures" :date (26402 40528) :url "https://github.com/DamienCassou/json-navigator") (json-par :source "MELPA" :recipe (:package "json-par" :repo "taku0/json-par" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for structural editing of JSON" :date (26211 29904) :url "https://github.com/taku0/json-par") (json-process-client :source "MELPA" :recipe (:package "json-process-client" :fetcher github :repo "DamienCassou/json-process-client" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with a TCP process using JSON" :date (25843 41552) :url "https://github.com/DamienCassou/json-process-client") (json-reformat :source "MELPA" :recipe (:package "json-reformat" :fetcher github :repo "gongo/json-reformat" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformatting tool for JSON" :date (25365 4560) :url "https://github.com/gongo/json-reformat") (json-rpc :source "MELPA" :recipe (:package "json-rpc" :fetcher github :repo "skeeto/elisp-json-rpc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JSON-RPC library" :date (24216 51024) :url "https://github.com/skeeto/elisp-json-rpc") (json-rpc-server :source "MELPA" :recipe (:package "json-rpc-server" :fetcher github :repo "jcaw/json-rpc-server.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Server-side JSON-RPC library" :date (25085 37840) :url "https://github.com/jcaw/json-rpc-server.el") (json-snatcher :source "MELPA" :recipe (:package "json-snatcher" :fetcher github :repo "Sterlingg/json-snatcher" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grabs the path to JSON values in a JSON file" :date (24417 11088) :url "https://github.com/Sterlingg/json-snatcher") (jsonian :source "MELPA" :recipe (:package "jsonian" :fetcher github :repo "iwahbe/jsonian" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing JSON files" :date (25997 57808) :url "https://github.com/iwahbe/jsonian") (jsonl :source "MELPA" :recipe (:package "jsonl" :repo "ebpa/jsonl.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility functions for working with line-delimited JSON" :date (23822 38608) :url "https://github.com/ebpa/jsonl.el") (jsonnet-mode :source "MELPA" :recipe (:package "jsonnet-mode" :fetcher github :repo "tminor/jsonnet-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing jsonnet files" :date (25065 52560) :url "https://github.com/tminor/jsonnet-mode") (jss :source "MELPA" :recipe (:package "jss" :fetcher github :repo "segv/jss" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An emacs interface to webkit and mozilla debuggers" :date (20873 23872) :url "https://github.com/segv/jss") (jst :source "MELPA" :recipe (:package "jst" :fetcher github :repo "victorteokw/jst-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JS test mode" :date (21871 27344) :url "https://github.com/victorteokw/jst-mode") (jtags :source "MELPA" :recipe (:package "jtags" :fetcher git :url "https://git.code.sf.net/p/jtags/code" :files ("src/lisp/*.el")) :description "Enhanced tags functionality for Java development" :date (22203 42192) :url "https://git.code.sf.net/p/jtags/code") (jtsx :source "MELPA" :recipe (:package "jtsx" :fetcher github :repo "llemaitre19/jtsx" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extends JSX/TSX built-in support" :date (26260 15440) :url "https://github.com/llemaitre19/jtsx") (julia-formatter :source "MELPA" :recipe (:package "julia-formatter" :fetcher codeberg :repo "FelipeLema/julia-formatter.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use JuliaFormatter.jl for julia code" :date (25959 42576) :url "https://codeberg.org/FelipeLema/julia-formatter.el") (julia-mode :source "MELPA" :recipe (:package "julia-mode" :repo "JuliaEditorSupport/julia-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Julia source code" :date (26356 31184) :url "https://github.com/JuliaEditorSupport/julia-emacs") (julia-repl :source "MELPA" :recipe (:package "julia-repl" :fetcher github :repo "tpapp/julia-repl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for a Julia REPL" :date (26131 2384) :url "https://github.com/tpapp/julia-repl") (julia-shell :source "MELPA" :recipe (:package "julia-shell" :fetcher github :repo "dennisog/julia-shell-mode" :files (:defaults "*.jl")) :description "Major mode for an inferior Julia shell" :date (22583 21712) :url "https://github.com/dennisog/julia-shell-mode") (julia-snail :source "MELPA" :recipe (:package "julia-snail" :fetcher github :repo "gcv/julia-snail" :files (:defaults "*.jl" "*.toml" "extensions")) :description "Julia Snail" :date (26297 9808) :url "https://github.com/gcv/julia-snail") (julia-ts-mode :source "MELPA" :recipe (:package "julia-ts-mode" :repo "JuliaEditorSupport/julia-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Julia source code using tree-sitter" :date (25867 23888) :url "https://github.com/JuliaEditorSupport/julia-ts-mode") (julia-vterm :source "MELPA" :recipe (:package "julia-vterm" :repo "shg/julia-vterm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode for Julia REPL using vterm" :date (26178 32592) :url "https://github.com/shg/julia-vterm.el") (jumblr :source "MELPA" :recipe (:package "jumblr" :repo "mkmcc/jumblr" :fetcher github :files ("jumblr.el" "dict")) :description "An anagram game for emacs" :date (22905 720) :url "https://github.com/mkmcc/jumblr") (jump :source "MELPA" :recipe (:package "jump" :repo "eschulte/jump.el" :fetcher github :files ("jump.el")) :description "Build functions which contextually jump between files" :date (24570 6480) :url "https://github.com/eschulte/jump.el") (jump-char :source "MELPA" :recipe (:package "jump-char" :fetcher github :repo "lewang/jump-char" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigation by char" :date (23312 25168) :url "https://github.com/lewang/jump-char") (jump-to-line :source "MELPA" :recipe (:package "jump-to-line" :repo "ongaeshi/jump-to-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to line number at point" :date (20733 40512) :url "https://github.com/ongaeshi/jump-to-line") (jump-tree :source "MELPA" :recipe (:package "jump-tree" :repo "yangwen0228/jump-tree" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Treat position history as a tree" :date (23009 10576) :url "https://github.com/yangwen0228/jump-tree") (jumplist :source "MELPA" :recipe (:package "jumplist" :repo "ganmacs/jumplist" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump like vim jumplist or ex jumplist" :date (22094 14416) :url "https://github.com/ganmacs/jumplist") (jupyter :source "MELPA" :recipe (:package "jupyter" :fetcher github :repo "emacs-jupyter/jupyter" :files (:defaults "Makefile" "widget.html" "js")) :description "Jupyter" :date (26367 1488) :url "https://github.com/emacs-jupyter/jupyter") (just-mode :source "MELPA" :recipe (:package "just-mode" :repo "leon-barrett/just-mode.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Justfile editing mode" :date (26152 8528) :url "https://github.com/leon-barrett/just-mode.el") (just-ts-mode :source "MELPA" :recipe (:package "just-ts-mode" :fetcher github :repo "leon-barrett/just-ts-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Justfile editing mode" :date (26380 13520) :url "https://github.com/leon-barrett/just-ts-mode.el") (justl :source "MELPA" :recipe (:package "justl" :repo "psibi/justl.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for driving just files" :date (26355 10320) :url "https://github.com/psibi/justl.el") (jvm-mode :source "MELPA" :recipe (:package "jvm-mode" :fetcher github :repo "martintrojer/jvm-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Monitor and manage your JVMs" :date (21814 47696) :url "https://github.com/martintrojer/jvm-mode.el") (jwt :source "MELPA" :recipe (:package "jwt" :fetcher github :repo "joshbax189/jwt-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with JSON Web Tokens" :date (26402 40528) :url "https://github.com/joshbax189/jwt-el") (k8s-mode :source "MELPA" :recipe (:package "k8s-mode" :fetcher github :repo "TxGVNN/emacs-k8s-mode" :files ("*.el" ("snippets/k8s-mode" "snippets/k8s-mode/*"))) :description "Major mode for Kubernetes configuration file" :date (25603 45392) :url "https://github.com/TxGVNN/emacs-k8s-mode") (kaesar :source "MELPA" :recipe (:package "kaesar" :fetcher github :repo "mhayashi1120/Emacs-kaesar" :files ("kaesar.el")) :description "AES algorithm encrypt/decrypt" :date (25752 43728) :url "https://github.com/mhayashi1120/Emacs-kaesar") (kaesar-file :source "MELPA" :recipe (:package "kaesar-file" :fetcher github :repo "mhayashi1120/Emacs-kaesar" :files ("kaesar-file.el") :version-regexp "file-%v") :description "AES encrypt/decrypt file" :date (25736 55504) :url "https://github.com/mhayashi1120/Emacs-kaesar") (kaesar-mode :source "MELPA" :recipe (:package "kaesar-mode" :fetcher github :repo "mhayashi1120/Emacs-kaesar" :files ("kaesar-mode.el") :version-regexp "mode-%v") :description "AES encrypt/decrypt buffer" :date (25752 43728) :url "https://github.com/mhayashi1120/Emacs-kaesar") (kaesar-pbkdf2 :source "MELPA" :recipe (:package "kaesar-pbkdf2" :fetcher github :repo "mhayashi1120/Emacs-kaesar" :files ("kaesar-pbkdf2.el") :version-regexp "pbkdf2-%v") :description "PBKDF2 extension for kaesar.el" :date (25752 43728) :url "https://github.com/mhayashi1120/Emacs-kaesar") (kagi :source "MELPA" :recipe (:package "kagi" :fetcher codeberg :repo "bram85/kagi.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kagi API integration" :date (26295 54480) :url "https://codeberg.org/bram85/kagi.el") (kakapo-mode :source "MELPA" :recipe (:package "kakapo-mode" :fetcher github :repo "listx/kakapo-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TABS (hard or soft) for indentation (leading whitespace), and SPACES for alignment" :date (22995 64080) :url "https://github.com/listx/kakapo-mode") (kakoune :source "MELPA" :recipe (:package "kakoune" :repo "jmorag/kakoune.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simulation, but not emulation, of kakoune" :date (25568 6352) :url "https://github.com/jmorag/kakoune.el") (kaleidoscope :source "MELPA" :recipe (:package "kaleidoscope" :fetcher git :url "https://git.madhouse-project.org/algernon/kaleidoscope.el" :files ("kaleidoscope.el")) :description "Controlling Kaleidoscope-powered devices" :date (22920 54480) :url "https://git.madhouse-project.org/algernon/kaleidoscope.el") (kaleidoscope-evil-state-flash :source "MELPA" :recipe (:package "kaleidoscope-evil-state-flash" :fetcher git :url "https://git.madhouse-project.org/algernon/kaleidoscope.el" :files ("kaleidoscope-evil-state-flash.el")) :description "Flash keyboard LEDs when changing Evil state" :date (22906 21584) :url "https://git.madhouse-project.org/algernon/kaleidoscope.el") (kana :source "MELPA" :recipe (:package "kana" :fetcher github :repo "chenyanming/kana" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Learn Japanese hiragana and katakana" :date (24755 64720) :url "https://github.com/chenyanming/kana") (kanagawa-themes :source "MELPA" :recipe (:package "kanagawa-themes" :fetcher github :repo "Fabiokleis/kanagawa-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elegant theme inspired by The Great Wave off Kanagawa" :date (26398 43472) :url "https://github.com/Fabiokleis/kanagawa-emacs") (kanji-mode :source "MELPA" :recipe (:package "kanji-mode" :fetcher github :repo "wsgac/kanji-mode" :files (:defaults "kanji")) :description "View stroke order for kanji characters at cursor" :date (25876 38864) :url "https://github.com/wsgac/kanji-mode") (kaocha-runner :source "MELPA" :recipe (:package "kaocha-runner" :fetcher github :repo "magnars/kaocha-runner.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for running Kaocha tests via CIDER" :date (26233 56912) :url "https://github.com/magnars/kaocha-runner.el") (kaolin-themes :source "MELPA" :recipe (:package "kaolin-themes" :fetcher github :repo "ogdenwebb/emacs-kaolin-themes" :old-names (kaolin-theme) :files (:defaults "themes/*.el")) :description "A set of eye pleasing themes" :date (26407 58448) :url "https://github.com/ogdenwebb/emacs-kaolin-themes") (kaomoji :source "MELPA" :recipe (:package "kaomoji" :repo "kuanyui/kaomoji.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Input kaomoji superb easily" :date (25304 27856) :url "https://github.com/kuanyui/kaomoji.el") (kapacitor :source "MELPA" :recipe (:package "kapacitor" :repo "manojm321/kapacitor-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Main file for kapacitor-mode" :date (23730 19920) :url "https://github.com/manojm321/kapacitor-el") (karma :source "MELPA" :recipe (:package "karma" :fetcher github :repo "tonini/karma.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Karma Test Runner Emacs Integration" :date (22215 33360) :url "https://github.com/tonini/karma.el") (kconfig-mode :source "MELPA" :recipe (:package "kconfig-mode" :fetcher github :repo "delaanthonio/kconfig-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Kconfig files" :date (25242 30288) :url "https://github.com/delaanthonio/kconfig-mode") (kconfig-ref :source "MELPA" :recipe (:package "kconfig-ref" :fetcher github :repo "seokbeomKim/kconfig-ref" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple package for looking up kconfig symbol quickly" :date (25817 17488) :url "https://github.com/seokbeomKim/kconfig-ref") (kdeconnect :source "MELPA" :recipe (:package "kdeconnect" :fetcher github :repo "carldotac/kdeconnect.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for KDE Connect" :date (25917 30288) :url "https://github.com/carldotac/kdeconnect.el") (keepass-mode :source "MELPA" :recipe (:package "keepass-mode" :fetcher github :repo "ifosch/keepass-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for KeePass DB" :date (24956 24784) :url "https://github.com/ifosch/keepass-mode") (keg :source "MELPA" :recipe (:package "keg" :fetcher github :repo "conao3/keg.el" :files (:defaults (:exclude "keg-mode.el" "flycheck-keg.el"))) :description "Modern Elisp package development system" :date (26257 39248) :url "https://github.com/conao3/keg.el") (keg-mode :source "MELPA" :recipe (:package "keg-mode" :fetcher github :repo "conao3/keg.el" :files ("keg-mode.el")) :description "Major mode for editing Keg files" :date (25125 8400) :url "https://github.com/conao3/keg.el") (kele :source "MELPA" :recipe (:package "kele" :repo "jinnovation/kele.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spritzy Kubernetes cluster management" :date (26357 52048) :url "https://github.com/jinnovation/kele.el") (kerl :source "MELPA" :recipe (:package "kerl" :fetcher github :repo "correl/kerl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for kerl" :date (21817 23888) :url "https://github.com/correl/kerl.el") (key-assist :source "MELPA" :recipe (:package "key-assist" :fetcher github :repo "Boruch-Baum/emacs-key-assist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minibuffer keybinding cheatsheet and launcher" :date (25970 12880) :url "https://github.com/Boruch-Baum/emacs-key-assist") (key-chord :source "MELPA" :recipe (:package "key-chord" :fetcher github :repo "emacsorphanage/key-chord" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Map pairs of simultaneously pressed keys to commands" :date (26335 25040) :url "https://github.com/emacsorphanage/key-chord") (key-combo :source "MELPA" :recipe (:package "key-combo" :fetcher github :repo "uk-ar/key-combo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Map key sequence to commands" :date (25627 27728) :url "https://github.com/uk-ar/key-combo") (key-intercept :source "MELPA" :recipe (:package "key-intercept" :repo "tarao/key-intercept-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intercept prefix keys" :date (21241 12224) :url "https://github.com/tarao/key-intercept-el") (key-leap :source "MELPA" :recipe (:package "key-leap" :fetcher github :repo "MartinRykfors/key-leap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Leap between lines by typing keywords" :date (22469 62416) :url "https://github.com/MartinRykfors/key-leap") (key-quiz :source "MELPA" :recipe (:package "key-quiz" :repo "federicotdn/key-quiz" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Keys Quiz" :date (24149 35536) :url "https://github.com/federicotdn/key-quiz") (key-seq :source "MELPA" :recipe (:package "key-seq" :fetcher github :repo "vlevit/key-seq.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Map pairs of sequentially pressed keys to commands" :date (21996 43344) :url "https://github.com/vlevit/key-seq.el") (keycast :source "MELPA" :recipe (:package "keycast" :fetcher github :repo "tarsius/keycast" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show current command and its binding" :date (26287 60368) :url "https://github.com/tarsius/keycast") (keychain-environment :source "MELPA" :recipe (:package "keychain-environment" :repo "tarsius/keychain-environment" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Load keychain environment variables" :date (23213 33232) :url "https://github.com/tarsius/keychain-environment") (keydef :source "MELPA" :recipe (:package "keydef" :fetcher github :repo "emacsorphanage/keydef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simpler way to define keys, with kbd syntax" :date (18934 3776) :url "https://github.com/emacsorphanage/keydef") (keyfreq :source "MELPA" :recipe (:package "keyfreq" :fetcher github :repo "dacap/keyfreq" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track command frequencies" :date (25929 21456) :url "https://github.com/dacap/keyfreq") (keymap-utils :source "MELPA" :recipe (:package "keymap-utils" :repo "tarsius/keymap-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keymap utilities" :date (26287 60368) :url "https://github.com/tarsius/keymap-utils") (keypress-multi-event :source "MELPA" :recipe (:package "keypress-multi-event" :fetcher github :repo "Boruch-Baum/emacs-keypress-multi-event" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perform different actions for the same keypress" :date (23605 3920) :url "https://github.com/Boruch-Baum/emacs-keypress-multi-event") (keypression :source "MELPA" :recipe (:package "keypression" :repo "chuntaro/emacs-keypression" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keystroke visualizer" :date (26015 1360) :url "https://github.com/chuntaro/emacs-keypression") (keyset :source "MELPA" :recipe (:package "keyset" :fetcher github :repo "HKey/keyset" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A small library for structuring key bindings" :date (21734 20176) :url "https://github.com/HKey/keyset") (keystore-mode :source "MELPA" :recipe (:package "keystore-mode" :fetcher github :repo "peterpaul/keystore-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for viewing and managing (java) keystores" :date (23723 46672) :url "https://github.com/peterpaul/keystore-mode") (keyswap :source "MELPA" :recipe (:package "keyswap" :repo "hardenedapple/keyswap.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Swap bindings between key pairs" :date (26262 57168) :url "https://github.com/hardenedapple/keyswap.el") (keytar :source "MELPA" :recipe (:package "keytar" :repo "emacs-grammarly/keytar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Lisp interface for node-keytar" :date (26001 54864) :url "https://github.com/emacs-grammarly/keytar") (keyword-search :source "MELPA" :recipe (:package "keyword-search" :repo "keyword-search/keyword-search" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browser keyword search from Emacs" :date (23262 18768) :url "https://github.com/keyword-search/keyword-search") (kfg :source "MELPA" :recipe (:package "kfg" :fetcher github :repo "czipperz/kfg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An emacs configuration system" :date (21518 2752) :url "https://github.com/czipperz/kfg") (khalel :source "MELPA" :recipe (:package "khalel" :fetcher gitlab :repo "hperrey/khalel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import, edit and create calendar events through khal" :date (26195 41680) :url "https://gitlab.com/hperrey/khalel") (khardel :source "MELPA" :recipe (:package "khardel" :fetcher github :repo "DamienCassou/khardel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate with khard" :date (25954 24656) :url "https://github.com/DamienCassou/khardel") (khoj :source "MELPA" :recipe (:package "khoj" :fetcher github :repo "khoj-ai/khoj" :files ("src/interface/emacs/*.el")) :description "Your Second Brain" :date (26405 16720) :url "https://github.com/khoj-ai/khoj") (kibit-helper :source "MELPA" :recipe (:package "kibit-helper" :fetcher github :repo "brunchboy/kibit-helper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Conveniently use the Kibit Leiningen plugin from Emacs" :date (21835 53840) :url "https://github.com/brunchboy/kibit-helper") (kill-file-path :source "MELPA" :recipe (:package "kill-file-path" :repo "chyla/kill-file-path" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Copy file name into kill ring" :date (25605 720) :url "https://github.com/chyla/kill-file-path") (kill-or-bury-alive :source "MELPA" :recipe (:package "kill-or-bury-alive" :repo "mrkkrp/kill-or-bury-alive" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Precise control over buffer killing" :date (25726 19664) :url "https://github.com/mrkkrp/kill-or-bury-alive") (kill-ring-search :source "MELPA" :recipe (:package "kill-ring-search" :fetcher github :repo "nschum/kill-ring-search.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Incremental search for the kill ring" :date (21333 30912) :url "https://github.com/nschum/kill-ring-search.el") (killer :source "MELPA" :recipe (:package "killer" :repo "tarsius/killer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kill and delete text" :date (23630 7120) :url "https://github.com/tarsius/killer") (kite :source "MELPA" :recipe (:package "kite" :fetcher github :repo "jscheid/kite" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "WebKit inspector front-end" :date (20746 52544) :url "https://github.com/jscheid/kite") (kite-mini :source "MELPA" :recipe (:package "kite-mini" :repo "tungd/kite-mini.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Remotely evaluate JavaScript in the WebKit debugger" :date (22318 22352) :url "https://github.com/tungd/kite-mini.el") (kivy-mode :source "MELPA" :recipe (:package "kivy-mode" :repo "kivy/kivy" :fetcher github :files ("kivy/tools/highlight/kivy-mode.el")) :description "Emacs major mode for editing Kivy files" :date (26007 7248) :url "https://github.com/kivy/kivy") (kiwix :source "MELPA" :recipe (:package "kiwix" :fetcher git :url "https://repo.or.cz/kiwix.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Searching offline Wikipedia through Kiwix" :date (25136 65104) :url "https://repo.or.cz/kiwix.el.git") (kixtart-mode :source "MELPA" :recipe (:package "kixtart-mode" :fetcher github :repo "ryrun/kixtart-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Kixtart scripting files" :date (21880 42320) :url "https://github.com/ryrun/kixtart-mode") (kkp :source "MELPA" :recipe (:package "kkp" :fetcher github :repo "benjaminor/kkp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable support for the Kitty Keyboard Protocol" :date (26076 64464) :url "https://github.com/benjaminor/kkp") (klere-theme :source "MELPA" :recipe (:package "klere-theme" :fetcher codeberg :repo "WammKD/emacs-klere-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme with lambent color highlights and incremental grays" :date (26301 6864) :url "https://codeberg.org/WammKD/emacs-klere-theme") (klondike :source "MELPA" :recipe (:package "klondike" :fetcher codeberg :repo "WammKD/Emacs-Klondike" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Klondike" :date (26041 25424) :url "https://codeberg.org/WammKD/Emacs-Klondike") (kmacro-x :source "MELPA" :recipe (:package "kmacro-x" :repo "vifon/kmacro-x.el" :fetcher github :old-names (kmacro-mc) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keyboard macro helpers and extensions" :date (26268 9552) :url "https://github.com/vifon/kmacro-x.el") (know-your-http-well :source "MELPA" :recipe (:package "know-your-http-well" :fetcher github :repo "for-GET/know-your-http-well" :files ("emacs/*.el")) :description "Look up the meaning of HTTP headers, methods, relations, status codes" :date (26274 48336) :url "https://github.com/for-GET/know-your-http-well") (kodi-remote :source "MELPA" :recipe (:package "kodi-remote" :fetcher github :repo "spiderbit/kodi-remote.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Remote Control for Kodi" :date (23821 17744) :url "https://github.com/spiderbit/kodi-remote.el") (kolon-mode :source "MELPA" :recipe (:package "kolon-mode" :fetcher github :repo "samvtran/kolon-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighting for Text::Xslate's Kolon syntax" :date (21214 53696) :url "https://github.com/samvtran/kolon-mode") (koopa-mode :source "MELPA" :recipe (:package "koopa-mode" :fetcher github :repo "sch0lars/koopa-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for Microsoft PowerShell" :date (25846 17744) :url "https://github.com/sch0lars/koopa-mode") (kooten-theme :source "MELPA" :recipe (:package "kooten-theme" :fetcher github :repo "kootenpv/emacs-kooten-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme" :date (22539 54096) :url "https://github.com/kootenpv/emacs-kooten-theme") (korean-holidays :source "MELPA" :recipe (:package "korean-holidays" :fetcher github :repo "tttuuu888/korean-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Korean holidays for calendar" :date (23595 54480) :url "https://github.com/tttuuu888/korean-holidays") (kosmos-theme :source "MELPA" :recipe (:package "kosmos-theme" :repo "habamax/kosmos-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Black and lightgray theme with not so much syntax highlighting" :date (22791 41424) :url "https://github.com/habamax/kosmos-theme") (kotlin-mode :source "MELPA" :recipe (:package "kotlin-mode" :repo "Emacs-Kotlin-Mode-Maintainers/kotlin-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for kotlin" :date (25549 41936) :url "https://github.com/Emacs-Kotlin-Mode-Maintainers/kotlin-mode") (kotlin-ts-mode :source "MELPA" :recipe (:package "kotlin-ts-mode" :fetcher gitlab :repo "bricka/emacs-kotlin-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode for editing Kotlin files based on tree-sitter" :date (26344 40016) :url "https://gitlab.com/bricka/emacs-kotlin-ts-mode") (kpm-list :source "MELPA" :recipe (:package "kpm-list" :fetcher github :repo "KMahoney/kpm-list" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An emacs buffer list that tries to intelligently group together buffers" :date (22982 52048) :url "https://github.com/KMahoney/kpm-list") (kroman :source "MELPA" :recipe (:package "kroman" :fetcher github :repo "victorteokw/kroman-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Korean hangul romanization" :date (21982 10448) :url "https://github.com/victorteokw/kroman-el") (ksp-cfg-mode :source "MELPA" :recipe (:package "ksp-cfg-mode" :fetcher github :repo "lashtear/ksp-cfg-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing KSP CFG files" :date (23730 19920) :url "https://github.com/lashtear/ksp-cfg-mode") (ksp-mode :source "MELPA" :recipe (:package "ksp-mode" :fetcher github :repo "youngker/ksp-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing ksp files" :date (25504 53456) :url "https://github.com/youngker/ksp-mode.el") (kubectx-mode :source "MELPA" :recipe (:package "kubectx-mode" :fetcher github :repo "terjesannum/emacs-kubectx-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change kubectl context/namespace and show in mode line" :date (26095 28880) :url "https://github.com/terjesannum/emacs-kubectx-mode") (kubedoc :source "MELPA" :recipe (:package "kubedoc" :fetcher github :repo "r0bobo/kubedoc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kubernetes API Documentation" :date (26011 4304) :url "https://github.com/r0bobo/kubedoc.el") (kubel :source "MELPA" :recipe (:package "kubel" :fetcher github :repo "abrochard/kubel" :files (:defaults (:exclude "kubel-evil.el"))) :description "Control Kubernetes with limited permissions" :date (26310 21840) :url "https://github.com/abrochard/kubel") (kubel-evil :source "MELPA" :recipe (:package "kubel-evil" :repo "abrochard/kubel" :fetcher github :files ("kubel-evil.el")) :description "Extension for kubel to provide evil keybindings" :date (25991 19024) :url "https://github.com/abrochard/kubel") (kubernetes :source "MELPA" :recipe (:package "kubernetes" :repo "kubernetes-el/kubernetes-el" :fetcher github :files (:defaults (:exclude "kubernetes-evil.el"))) :description "Magit-like porcelain for Kubernetes" :date (25516 44624) :url "https://github.com/kubernetes-el/kubernetes-el") (kubernetes-evil :source "MELPA" :recipe (:package "kubernetes-evil" :repo "kubernetes-el/kubernetes-el" :fetcher github :files ("kubernetes-evil.el")) :description "Kubernetes keybindings for evil-mode" :date (25270 9680) :url "https://github.com/kubernetes-el/kubernetes-el") (kubernetes-helm :source "MELPA" :recipe (:package "kubernetes-helm" :repo "abrochard/kubernetes-helm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension for helm, the package manager for kubernetes" :date (25587 57168) :url "https://github.com/abrochard/kubernetes-helm") (kubernetes-tramp :source "MELPA" :recipe (:package "kubernetes-tramp" :fetcher github :repo "gruggiero/kubernetes-tramp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP integration for kubernetes containers" :date (23589 15696) :url "https://github.com/gruggiero/kubernetes-tramp") (kurecolor :source "MELPA" :recipe (:package "kurecolor" :fetcher github :repo "emacsfodder/kurecolor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color editing goodies" :date (25495 38480) :url "https://github.com/emacsfodder/kurecolor") (kuronami-theme :source "MELPA" :recipe (:package "kuronami-theme" :repo "inj0h/kuronami" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A deep blue theme with cool autumnal colors" :date (26005 51920) :url "https://github.com/inj0h/kuronami") (kv :source "MELPA" :recipe (:package "kv" :fetcher github :repo "nicferrier/emacs-kv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Key/value data structure functions" :date (21196 23744) :url "https://github.com/nicferrier/emacs-kv") (kwin :source "MELPA" :recipe (:package "kwin" :fetcher github :repo "reactormonk/kwin-minor-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Communicatewith the KWin window manager" :date (25064 31696) :url "https://github.com/reactormonk/kwin-minor-mode") (laas :source "MELPA" :recipe (:package "laas" :fetcher github :repo "tecosaur/LaTeX-auto-activating-snippets" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A bundle of as-you-type LaTeX snippets" :date (25637 63568) :url "https://github.com/tecosaur/LaTeX-auto-activating-snippets") (lab :source "MELPA" :recipe (:package "lab" :fetcher github :repo "isamert/lab.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for GitLab" :date (26367 1488) :url "https://github.com/isamert/lab.el") (lab-themes :source "MELPA" :recipe (:package "lab-themes" :fetcher github :repo "MetroWind/lab-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A custom theme carefully constructed in the LAB space" :date (24374 64336) :url "https://github.com/MetroWind/lab-theme") (labburn-theme :source "MELPA" :recipe (:package "labburn-theme" :repo "ksjogo/labburn-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lab color space zenburn theme" :date (25488 65232) :url "https://github.com/ksjogo/labburn-theme") (lacquer :source "MELPA" :recipe (:package "lacquer" :repo "zakudriver/lacquer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch theme/font by selecting from a cache" :date (25830 29520) :url "https://github.com/zakudriver/lacquer") (laguna-theme :source "MELPA" :recipe (:package "laguna-theme" :repo "HenryNewcomer/laguna-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An updated blue-green Laguna Theme" :date (25322 57808) :url "https://github.com/HenryNewcomer/laguna-theme") (lambdapi-mode :source "MELPA" :recipe (:package "lambdapi-mode" :fetcher github :repo "Deducteam/lambdapi" :files ("editors/emacs/*.el" (:exclude "editors/emacs/lambdapi-site-file.el"))) :description "A major mode to edit Lambdapi files" :date (26278 45392) :url "https://github.com/Deducteam/lambdapi") (lammps-mode :source "MELPA" :recipe (:package "lammps-mode" :fetcher github :repo "HaoZeke/lammps-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic syntax highlighting for LAMMPS files" :date (23392 52688) :url "https://github.com/HaoZeke/lammps-mode") (lang-refactor-perl :source "MELPA" :recipe (:package "lang-refactor-perl" :fetcher github :repo "jplindstrom/emacs-lang-refactor-perl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple refactorings, primarily for Perl" :date (21134 26176) :url "https://github.com/jplindstrom/emacs-lang-refactor-perl") (langdoc :source "MELPA" :recipe (:package "langdoc" :repo "tom-tan/langdoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help to define help document mode for various languages" :date (21731 43984) :url "https://github.com/tom-tan/langdoc") (langtool :source "MELPA" :recipe (:package "langtool" :fetcher github :repo "mhayashi1120/Emacs-langtool" :files ("langtool.el")) :description "Grammar check utility using LanguageTool" :date (25589 12496) :url "https://github.com/mhayashi1120/Emacs-langtool") (langtool-ignore-fonts :source "MELPA" :recipe (:package "langtool-ignore-fonts" :fetcher github :repo "cjl8zf/langtool-ignore-fonts" :files (:defaults (:exclude "doc/*"))) :description "Force langtool to ignore certain fonts" :date (24749 25936) :url "https://github.com/cjl8zf/langtool-ignore-fonts") (langtool-popup :source "MELPA" :recipe (:package "langtool-popup" :fetcher github :repo "mhayashi1120/Emacs-langtool" :files ("langtool-popup.el") :version-regexp "popup-%v") :description "Popup message extension for langtool.el" :date (25589 12496) :url "https://github.com/mhayashi1120/Emacs-langtool") (language-detection :source "MELPA" :recipe (:package "language-detection" :fetcher github :repo "andreasjansson/language-detection.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic language detection from code snippets" :date (22580 45520) :url "https://github.com/andreasjansson/language-detection.el") (language-id :source "MELPA" :recipe (:package "language-id" :fetcher github :repo "lassik/emacs-language-id" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library to work with programming language identifiers" :date (26393 25552) :url "https://github.com/lassik/emacs-language-id") (languagetool :source "MELPA" :recipe (:package "languagetool" :repo "PillFall/languagetool.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LanguageTool integration for grammar and spell check" :date (25630 3920) :url "https://github.com/PillFall/languagetool.el") (lark-mode :source "MELPA" :recipe (:package "lark-mode" :repo "taquangtrung/lark-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Lark parser code" :date (25987 21968) :url "https://github.com/taquangtrung/lark-mode") (lastfm :source "MELPA" :recipe (:package "lastfm" :fetcher github :repo "mihaiolteanu/lastfm.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Last.fm API for Emacs Lisp" :date (24940 36560) :url "https://github.com/mihaiolteanu/lastfm.el") (lastpass :source "MELPA" :recipe (:package "lastpass" :repo "storvik/emacs-lastpass" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LastPass command wrapper" :date (24554 18256) :url "https://github.com/storvik/emacs-lastpass") (latex-change-env :source "MELPA" :recipe (:package "latex-change-env" :fetcher gitlab :repo "slotThe/change-env" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change in and out of LaTeX environments" :date (26103 22992) :url "https://gitlab.com/slotThe/change-env") (latex-extra :source "MELPA" :recipe (:package "latex-extra" :repo "Malabarba/latex-extra" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds several useful functionalities to LaTeX-mode" :date (26334 4176) :url "https://github.com/Malabarba/latex-extra") (latex-labeler :source "MELPA" :recipe (:package "latex-labeler" :fetcher github :repo "X9hRRDys/latex-labeler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplify equation labeling in LaTeX" :date (26316 60624) :url "https://github.com/X9hRRDys/latex-labeler") (latex-math-preview :source "MELPA" :recipe (:package "latex-math-preview" :fetcher gitlab :repo "latex-math-preview/latex-math-preview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview LaTeX mathematical expressions" :date (25034 10576) :url "https://gitlab.com/latex-math-preview/latex-math-preview") (latex-pretty-symbols :source "MELPA" :recipe (:package "latex-pretty-symbols" :repo "epa095/latex-pretty-symbols.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display many latex symbols as their unicode counterparts" :date (22083 44112) :url "https://github.com/epa095/latex-pretty-symbols.el") (latex-preview-pane :source "MELPA" :recipe (:package "latex-preview-pane" :fetcher github :repo "jsinglet/latex-preview-pane" :files ("*.el" "*.txt")) :description "Makes LaTeX editing less painful by providing a updatable preview pane" :date (23482 29648) :url "https://github.com/jsinglet/latex-preview-pane") (latex-table-wizard :source "MELPA" :recipe (:package "latex-table-wizard" :repo "enricoflor/latex-table-wizard" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magic editing of LaTeX tables" :date (25843 41552) :url "https://github.com/enricoflor/latex-table-wizard") (latex-unicode-math-mode :source "MELPA" :recipe (:package "latex-unicode-math-mode" :fetcher github :repo "Christoph-D/latex-unicode-math-mode" :files (:defaults "*.sty")) :description "Input method for Unicode math symbols" :date (25972 54608) :url "https://github.com/Christoph-D/latex-unicode-math-mode") (latexdiff :source "MELPA" :recipe (:package "latexdiff" :fetcher github :repo "galaunay/latexdiff.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Latexdiff integration in Emacs" :date (23908 18512) :url "https://github.com/galaunay/latexdiff.el") (latvian-holidays :source "MELPA" :recipe (:package "latvian-holidays" :fetcher github :repo "ashumilov/latvian-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Latvian holidays for the calendar" :date (25631 24784) :url "https://github.com/ashumilov/latvian-holidays") (launch :source "MELPA" :recipe (:package "launch" :fetcher github :repo "sfllaw/emacs-launch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch files with OS-standard associated applications" :date (20928 48192) :url "https://github.com/sfllaw/emacs-launch") (launch-mode :source "MELPA" :recipe (:package "launch-mode" :fetcher github :repo "iory/launch-mode" :files (:defaults "*.py")) :description "Major mode for launch-formatted text" :date (22638 46032) :url "https://github.com/iory/launch-mode") (launchctl :source "MELPA" :recipe (:package "launchctl" :fetcher github :repo "pekingduck/launchctl-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to launchctl on Mac OS X" :date (24770 32080) :url "https://github.com/pekingduck/launchctl-el") (lavender-theme :source "MELPA" :recipe (:package "lavender-theme" :fetcher github :repo "emacsfodder/emacs-lavender-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Lavender (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-lavender-theme") (lavenderless-theme :source "MELPA" :recipe (:package "lavenderless-theme" :fetcher sourcehut :repo "lthms/colorless-themes.el" :files ("lavenderless-theme.el")) :description "A mostly colorless version of lavender-theme" :date (24545 3280) :url "https://git.sr.ht/~lthms/colorless-themes.el") (lazy-ruff :source "MELPA" :recipe (:package "lazy-ruff" :fetcher github :repo "christophermadsen/emacs-lazy-ruff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration with the Ruff Python linter/formatter" :date (26336 45904) :url "https://github.com/christophermadsen/emacs-lazy-ruff") (lcb-mode :source "MELPA" :recipe (:package "lcb-mode" :repo "peter-b/lcb-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LiveCode Builder major mode" :date (22450 11600) :url "https://github.com/peter-b/lcb-mode") (lcr :source "MELPA" :recipe (:package "lcr" :repo "jyp/lcr" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight coroutines" :date (25413 55632) :url "https://github.com/jyp/lcr") (le-thesaurus :source "MELPA" :recipe (:package "le-thesaurus" :repo "AnselmC/le-thesaurus.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query thesaurus.com for synonyms of a given word" :date (25535 9040) :url "https://github.com/AnselmC/le-thesaurus.el") (leader-key :source "MELPA" :recipe (:package "leader-key" :fetcher github :repo "Havner/leader-key" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Leader key configuration (e.g. for god-mode)" :date (25880 35920) :url "https://github.com/Havner/leader-key") (leaf :source "MELPA" :recipe (:package "leaf" :fetcher github :repo "conao3/leaf.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplify your init.el configuration, extended use-package" :date (26385 31440) :url "https://github.com/conao3/leaf.el") (leaf-convert :source "MELPA" :recipe (:package "leaf-convert" :fetcher github :repo "conao3/leaf-convert.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert many format to leaf format" :date (24857 32848) :url "https://github.com/conao3/leaf-convert.el") (leaf-defaults :source "MELPA" :recipe (:package "leaf-defaults" :fetcher github :repo "conao3/leaf-defaults.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Awesome leaf config collections" :date (24636 1104) :url "https://github.com/conao3/leaf-defaults.el") (leaf-keywords :source "MELPA" :recipe (:package "leaf-keywords" :fetcher github :repo "conao3/leaf-keywords.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Additional leaf.el keywords for external packages" :date (26291 57424) :url "https://github.com/conao3/leaf-keywords.el") (leaf-manager :source "MELPA" :recipe (:package "leaf-manager" :fetcher github :repo "conao3/leaf-manager.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configuration manager for leaf based init.el" :date (25030 13520) :url "https://github.com/conao3/leaf-manager.el") (leaf-tree :source "MELPA" :recipe (:package "leaf-tree" :fetcher github :repo "conao3/leaf-tree.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive side-bar feature for init.el using leaf" :date (24964 18896) :url "https://github.com/conao3/leaf-tree.el") (leanote :source "MELPA" :recipe (:package "leanote" :fetcher github :repo "aborn/leanote-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode writing markdown leanote" :date (22620 16080) :url "https://github.com/aborn/leanote-emacs") (learn-ocaml :source "MELPA" :recipe (:package "learn-ocaml" :fetcher github :repo "pfitaxel/learn-ocaml.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs frontend for learn-ocaml" :date (24920 51280) :url "https://github.com/pfitaxel/learn-ocaml.el") (ledger-import :source "MELPA" :recipe (:package "ledger-import" :fetcher github :repo "DamienCassou/ledger-import" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fetch OFX files from bank and push them to Ledger" :date (25844 62416) :url "https://github.com/DamienCassou/ledger-import") (ledger-mode :source "MELPA" :recipe (:package "ledger-mode" :fetcher github :repo "ledger/ledger-mode" :files ("ledger-*.el" "doc/*.texi") :old-names (ldg-mode)) :description "Helper code for use with the \"ledger\" command-line tool" :date (26370 64080) :url "https://github.com/ledger/ledger-mode") (leerzeichen :source "MELPA" :recipe (:package "leerzeichen" :fetcher github :repo "fgeller/leerzeichen.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to display whitespace characters" :date (25271 30544) :url "https://github.com/fgeller/leerzeichen.el") (leetcode :source "MELPA" :recipe (:package "leetcode" :fetcher github :repo "kaiwk/leetcode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An leetcode client" :date (26290 36560) :url "https://github.com/kaiwk/leetcode.el") (legalese :source "MELPA" :recipe (:package "legalese" :fetcher github :repo "jorgenschaefer/legalese" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add legalese to your program files" :date (24099 29136) :url "https://github.com/jorgenschaefer/legalese") (lem :source "MELPA" :recipe (:package "lem" :fetcher codeberg :repo "martianh/lem.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lemmy client" :date (26405 16720) :url "https://codeberg.org/martianh/lem.el") (lemon-mode :source "MELPA" :recipe (:package "lemon-mode" :repo "mooz/lemon-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing lemon grammar files" :date (20766 37824) :url "https://github.com/mooz/lemon-mode") (lentic :source "MELPA" :recipe (:package "lentic" :fetcher github :repo "phillord/lentic" :files (:defaults "lenticular.org" (:exclude "build.el" "noisy-change.el")) :old-names (linked-buffer)) :description "One buffer as a view of another" :date (26083 37712) :url "https://github.com/phillord/lentic") (lentic-server :source "MELPA" :recipe (:package "lentic-server" :fetcher github :repo "phillord/lentic-server" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Web Server for Emacs Literate Source" :date (26099 25936) :url "https://github.com/phillord/lentic-server") (leo :source "MELPA" :recipe (:package "leo" :repo "mtenders/emacs-leo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for dict.leo.org" :date (25052 40528) :url "https://github.com/mtenders/emacs-leo") (lesim-mode :source "MELPA" :recipe (:package "lesim-mode" :fetcher github :repo "drghirlanda/lesim-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Learning Simulator scripts" :date (25753 64592) :url "https://github.com/drghirlanda/lesim-mode") (less-css-mode :source "MELPA" :recipe (:package "less-css-mode" :repo "purcell/less-css-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing LESS CSS files (lesscss.org)" :date (22510 53840) :url "https://github.com/purcell/less-css-mode") (letcheck :source "MELPA" :recipe (:package "letcheck" :fetcher github :repo "Fuco1/letcheck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Check the erroneous assignments in let forms" :date (22191 51024) :url "https://github.com/Fuco1/letcheck") (letterbox-mode :source "MELPA" :recipe (:package "letterbox-mode" :repo "pacha64/letterbox-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hide sensitive text on a buffer" :date (22872 3408) :url "https://github.com/pacha64/letterbox-mode") (leuven-theme :source "MELPA" :recipe (:package "leuven-theme" :fetcher github :repo "fniessen/emacs-leuven-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elegant Emacs color theme for a white background" :date (26257 39248) :url "https://github.com/fniessen/emacs-leuven-theme") (levenshtein :source "MELPA" :recipe (:package "levenshtein" :fetcher github :repo "emacsorphanage/levenshtein" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit distance between two strings" :date (19097 35008) :url "https://github.com/emacsorphanage/levenshtein") (lexbind-mode :source "MELPA" :recipe (:package "lexbind-mode" :fetcher github :repo "spacebat/lexbind-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Puts the value of lexical-binding in the mode line" :date (21581 24784) :url "https://github.com/spacebat/lexbind-mode") (lexic :source "MELPA" :recipe (:package "lexic" :repo "tecosaur/lexic" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode to find out more about words" :date (25197 41808) :url "https://github.com/tecosaur/lexic") (lf :source "MELPA" :recipe (:package "lf" :fetcher github :repo "alhassy/lf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Language Features library for Emacs Lisp" :date (24846 62544) :url "https://github.com/alhassy/lf") (lfe-mode :source "MELPA" :recipe (:package "lfe-mode" :fetcher github :repo "rvirding/lfe" :files ("emacs/inferior-lfe.el" "emacs/lfe-mode.el" "emacs/lfe-indent.el")) :description "Lisp Flavoured Erlang mode" :date (25521 62544) :url "https://github.com/rvirding/lfe") (lgr :source "MELPA" :recipe (:package "lgr" :fetcher github :repo "Fuco1/emacs-lgr" :files ("lgr.el")) :description "A fully featured logging framework" :date (25647 13008) :url "https://github.com/Fuco1/emacs-lgr") (libbcel :source "MELPA" :recipe (:package "libbcel" :fetcher github :repo "DamienCassou/libbcel" :old-names (libbasecampel) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library to connect to basecamp 3 API" :date (25833 5712) :url "https://github.com/DamienCassou/libbcel") (libelcouch :source "MELPA" :recipe (:package "libelcouch" :fetcher github :repo "DamienCassou/libelcouch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Communication with CouchDB" :date (25843 41552) :url "https://github.com/DamienCassou/libelcouch") (liberime :source "MELPA" :recipe (:package "liberime" :repo "merrickluo/liberime" :files (:defaults "src" "emacs-module" "LICENSE" "Makefile" "README.org") :fetcher github) :description "Rime elisp binding" :date (26357 52048) :url "https://github.com/merrickluo/liberime") (liblouis :source "MELPA" :recipe (:package "liblouis" :fetcher github :repo "liblouis/liblouis-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing liblouis braille translation tables" :date (25191 3024) :url "https://github.com/liblouis/liblouis-mode") (libmpdee :source "MELPA" :recipe (:package "libmpdee" :repo "andyetitmoves/libmpdee" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client end library for mpd, a music playing daemon" :date (25350 37200) :url "https://github.com/andyetitmoves/libmpdee") (libmpdel :source "MELPA" :recipe (:package "libmpdel" :fetcher github :repo "mpdel/libmpdel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Communication with an MPD server" :date (25819 59216) :url "https://github.com/mpdel/libmpdel") (librera-sync :source "MELPA" :recipe (:package "librera-sync" :fetcher github :repo "jumper047/librera-sync" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sync document's position with Librera Reader for Android" :date (25842 20688) :url "https://github.com/jumper047/librera-sync") (lice :source "MELPA" :recipe (:package "lice" :fetcher github :repo "buzztaiki/lice-el" :files ("*.el" "template")) :description "License And Header Template" :date (25131 47184) :url "https://github.com/buzztaiki/lice-el") (license-snippets :source "MELPA" :recipe (:package "license-snippets" :repo "sei40kr/license-snippets" :fetcher github :files (:defaults "snippets")) :description "LICENSE templates for yasnippet" :date (24498 59472) :url "https://github.com/sei40kr/license-snippets") (license-templates :source "MELPA" :recipe (:package "license-templates" :repo "jcs-elpa/license-templates" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create LICENSE using GitHub API" :date (26001 54864) :url "https://github.com/jcs-elpa/license-templates") (ligature :source "MELPA" :recipe (:package "ligature" :fetcher github :repo "mickeynp/ligature.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display typographical ligatures in major modes" :date (25328 10192) :url "https://github.com/mickeynp/ligature.el") (ligature-pragmatapro :source "MELPA" :recipe (:package "ligature-pragmatapro" :repo "wavexx/ligature-pragmatapro.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "PragmataPro support for ligature.el" :date (25474 32336) :url "https://gitlab.com/wavexx/ligature-pragmatapro.el") (light-soap-theme :source "MELPA" :recipe (:package "light-soap-theme" :repo "mswift42/light-soap-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme with a light background" :date (21875 24400) :url "https://github.com/mswift42/light-soap-theme") (line-reminder :source "MELPA" :recipe (:package "line-reminder" :repo "emacs-vs/line-reminder" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Line annotation for changed and saved lines" :date (26260 15440) :url "https://github.com/emacs-vs/line-reminder") (line-up-words :source "MELPA" :recipe (:package "line-up-words" :fetcher github :repo "janestreet/line-up-words" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Align words in an intelligent way" :date (23177 59728) :url "https://github.com/janestreet/line-up-words") (lines-at-once :source "MELPA" :recipe (:package "lines-at-once" :repo "jiahaoli95/lines-at-once.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert and edit multiple lines at once" :date (23259 42576) :url "https://github.com/jiahaoli95/lines-at-once.el") (lingr :source "MELPA" :recipe (:package "lingr" :fetcher github :repo "lugecy/lingr-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lingr Client for GNU Emacs" :date (19548 27072) :url "https://github.com/lugecy/lingr-el") (linguistic :source "MELPA" :recipe (:package "linguistic" :fetcher github :repo "andcarnivorous/linguistic" :files (:defaults "graphs.org")) :description "A package for basic linguistic analysis" :date (23551 464) :url "https://github.com/andcarnivorous/linguistic") (lingva :source "MELPA" :recipe (:package "lingva" :fetcher codeberg :repo "martianh/lingva.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access Google Translate without tracking via lingva.ml" :date (26210 9040) :url "https://codeberg.org/martianh/lingva.el") (link :source "MELPA" :recipe (:package "link" :repo "myrkr/dictionary-el" :fetcher github :files ("link.el")) :description "Hypertext links in text buffers" :date (24008 31312) :url "https://github.com/myrkr/dictionary-el") (link-hint :source "MELPA" :recipe (:package "link-hint" :fetcher github :repo "noctuid/link-hint.el" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use avy to open, copy, etc. visible links" :date (26326 10064) :url "https://github.com/noctuid/link-hint.el") (linkode :source "MELPA" :recipe (:package "linkode" :fetcher github :repo "erickgnavar/linkode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate a linkode snippet with region/buffer content" :date (26206 11984) :url "https://github.com/erickgnavar/linkode.el") (linphone :source "MELPA" :recipe (:package "linphone" :fetcher github :repo "zabbal/emacs-linphone" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to Linphone" :date (20894 30016) :url "https://github.com/zabbal/emacs-linphone") (linum-off :source "MELPA" :recipe (:package "linum-off" :fetcher github :repo "mattfidler/linum-off" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides an interface for turning line-numbering off" :date (22211 36304) :url "https://github.com/mattfidler/linum-off") (linum-relative :source "MELPA" :recipe (:package "linum-relative" :fetcher github :repo "coldnew/linum-relative" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display relative line number in emacs" :date (25430 64720) :url "https://github.com/coldnew/linum-relative") (liquid-types :source "MELPA" :recipe (:package "liquid-types" :fetcher github :repo "ucsd-progsys/liquid-types.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show inferred liquid-types" :date (22110 2640) :url "https://github.com/ucsd-progsys/liquid-types.el") (liquidmetal :source "MELPA" :recipe (:package "liquidmetal" :repo "jcs-legacy/liquidmetal" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mimetic poly-alloy of the Quicksilver scoring algorithm" :date (26001 54864) :url "https://github.com/jcs-legacy/liquidmetal") (lirve :source "MELPA" :recipe (:package "lirve" :repo "tanrax/lirve.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Learn irregular verbs in English" :date (26145 35280) :url "https://github.com/tanrax/lirve.el") (liso-theme :source "MELPA" :recipe (:package "liso-theme" :fetcher github :repo "caisah/liso-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eclectic Dark Theme for GNU Emacs" :date (22281 27984) :url "https://github.com/caisah/liso-theme") (lisp-butt-mode :source "MELPA" :recipe (:package "lisp-butt-mode" :repo "marcowahl/lisp-butt-mode" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Slim Lisp Butts" :date (24617 36688) :url "https://gitlab.com/marcowahl/lisp-butt-mode") (lisp-extra-font-lock :source "MELPA" :recipe (:package "lisp-extra-font-lock" :repo "Lindydancer/lisp-extra-font-lock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight bound variables and quoted exprs" :date (23482 29648) :url "https://github.com/Lindydancer/lisp-extra-font-lock") (lisp-local :source "MELPA" :recipe (:package "lisp-local" :fetcher github :repo "lispunion/emacs-lisp-local" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Allow different Lisp indentation in each buffer" :date (24762 37968) :url "https://github.com/lispunion/emacs-lisp-local") (lispxmp :source "MELPA" :recipe (:package "lispxmp" :fetcher github :repo "rubikitch/lispxmp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automagic emacs lisp code annotation" :date (22985 28240) :url "https://github.com/rubikitch/lispxmp") (lispy :source "MELPA" :recipe (:package "lispy" :repo "abo-abo/lispy" :fetcher github :files (:defaults "lispy-clojure.clj" "lispy-clojure.cljs" "lispy-python.py")) :description "Vi-like Paredit" :date (25615 36560) :url "https://github.com/abo-abo/lispy") (lispyville :source "MELPA" :recipe (:package "lispyville" :fetcher github :repo "noctuid/lispyville" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for integrating evil with lispy" :date (25296 33744) :url "https://github.com/noctuid/lispyville") (list-environment :source "MELPA" :recipe (:package "list-environment" :fetcher github :repo "dgtized/list-environment.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A tabulated process environment editor" :date (24916 54224) :url "https://github.com/dgtized/list-environment.el") (list-packages-ext :source "MELPA" :recipe (:package "list-packages-ext" :repo "laynor/list-packages-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extras for list-packages" :date (22087 41168) :url "https://github.com/laynor/list-packages-ext") (list-unicode-display :source "MELPA" :recipe (:package "list-unicode-display" :fetcher github :repo "purcell/list-unicode-display" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search for and list unicode characters by name" :date (25581 18384) :url "https://github.com/purcell/list-unicode-display") (list-utils :source "MELPA" :recipe (:package "list-utils" :repo "rolandwalker/list-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "List-manipulation utility functions" :date (25666 63824) :url "https://github.com/rolandwalker/list-utils") (listenbrainz :source "MELPA" :recipe (:package "listenbrainz" :repo "zzkt/metabrainz" :fetcher github :files ("listenbrainz.el")) :description "ListenBrainz API interface" :date (25717 4688) :url "https://github.com/zzkt/metabrainz") (lister :source "MELPA" :recipe (:package "lister" :repo "publicimageltd/lister" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another list printer" :date (26003 10192) :url "https://github.com/publicimageltd/lister") (lit-mode :source "MELPA" :recipe (:package "lit-mode" :fetcher github :repo "HectorAE/lit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for lit" :date (21632 52048) :url "https://github.com/HectorAE/lit-mode") (litable :source "MELPA" :recipe (:package "litable" :fetcher github :repo "Fuco1/litable" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamic evaluation replacement with emacs" :date (26107 20048) :url "https://github.com/Fuco1/litable") (litanize :source "MELPA" :recipe (:package "litanize" :repo "zzkt/litanizer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate \"Latour Litanies\"" :date (25663 1232) :url "https://github.com/zzkt/litanizer") (literal-string :source "MELPA" :recipe (:package "literal-string" :fetcher github :repo "joodie/literal-string-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit string literals in a dedicated buffer" :date (23983 28112) :url "https://github.com/joodie/literal-string-mode") (literate-calc-mode :source "MELPA" :recipe (:package "literate-calc-mode" :fetcher github :repo "sulami/literate-calc-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inline results from calc" :date (26311 42704) :url "https://github.com/sulami/literate-calc-mode.el") (literate-coffee-mode :source "MELPA" :recipe (:package "literate-coffee-mode" :fetcher github :repo "emacsorphanage/literate-coffee-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for Literate CoffeeScript" :date (22686 10704) :url "https://github.com/emacsorphanage/literate-coffee-mode") (literate-elisp :source "MELPA" :recipe (:package "literate-elisp" :fetcher github :repo "jingtaozf/literate-elisp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Load Emacs Lisp code blocks from Org files" :date (25271 30544) :url "https://github.com/jingtaozf/literate-elisp") (litex-mode :source "MELPA" :recipe (:package "litex-mode" :repo "Atreyagaurav/litex-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for converting lisp to LaTeX" :date (25448 8272) :url "https://github.com/Atreyagaurav/litex-mode") (live-code-talks :source "MELPA" :recipe (:package "live-code-talks" :fetcher github :repo "david-christiansen/live-code-talks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for slides with live code in them" :date (23441 38224) :url "https://github.com/david-christiansen/live-code-talks") (live-preview :source "MELPA" :recipe (:package "live-preview" :fetcher github :repo "lassik/emacs-live-preview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live preview by any shell command while editing" :date (25979 27856) :url "https://github.com/lassik/emacs-live-preview") (live-py-mode :source "MELPA" :recipe (:package "live-py-mode" :fetcher github :repo "donkirkby/live-py-plugin" :files ("emacs-live-py-mode/live-py-mode.el" "plugin/PySrc/*")) :description "Live Coding in Python" :date (26266 54224) :url "https://github.com/donkirkby/live-py-plugin") (lively :source "MELPA" :recipe (:package "lively" :fetcher github :repo "purcell/lively" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively updating text" :date (22997 19408) :url "https://github.com/purcell/lively") (livereload :source "MELPA" :recipe (:package "livereload" :repo "joaotavora/emacs-livereload" :fetcher github :files (:defaults "livereload.js")) :description "Livereload server" :date (22868 6352) :url "https://github.com/joaotavora/emacs-livereload") (livescript-mode :source "MELPA" :recipe (:package "livescript-mode" :fetcher github :repo "yhisamatsu/livescript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing LiveScript files" :date (25417 52688) :url "https://github.com/yhisamatsu/livescript-mode") (livid-mode :source "MELPA" :recipe (:package "livid-mode" :fetcher github :repo "pandeiro/livid-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live browser eval of JavaScript every time a buffer changes" :date (21126 32064) :url "https://github.com/pandeiro/livid-mode") (ll-debug :source "MELPA" :recipe (:package "ll-debug" :fetcher github :repo "replrep/ll-debug" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low level debug tools" :date (24919 30416) :url "https://github.com/replrep/ll-debug") (llama :source "MELPA" :recipe (:package "llama" :fetcher github :repo "tarsius/llama" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compact syntax for short lambda" :date (26407 58448) :url "https://github.com/tarsius/llama") (llama-cpp :source "MELPA" :recipe (:package "llama-cpp" :fetcher github :repo "kurnevsky/llama-cpp.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A client for llama-cpp server" :date (26174 35536) :url "https://github.com/kurnevsky/llama-cpp.el") (llvm-ts-mode :source "MELPA" :recipe (:package "llvm-ts-mode" :repo "nverno/llvm-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LLVM major mode using tree-sitter" :date (25946 30544) :url "https://github.com/nverno/llvm-ts-mode") (load-bash-alias :source "MELPA" :recipe (:package "load-bash-alias" :repo "daviderestivo/load-bash-alias" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert bash aliases into eshell ones" :date (26004 31056) :url "https://github.com/daviderestivo/load-bash-alias") (load-env-vars :source "MELPA" :recipe (:package "load-env-vars" :fetcher github :repo "diasjorge/emacs-load-env-vars" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Load environment variables from files" :date (23284 45776) :url "https://github.com/diasjorge/emacs-load-env-vars") (load-relative :source "MELPA" :recipe (:package "load-relative" :fetcher github :repo "rocky/emacs-load-relative" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Relative file load (within a multi-file Emacs package)" :date (25578 42192) :url "https://github.com/rocky/emacs-load-relative") (load-theme-buffer-local :source "MELPA" :recipe (:package "load-theme-buffer-local" :fetcher github :repo "vic/color-theme-buffer-local" :files ("load-theme-buffer-local.el")) :description "Install emacs24 color themes by buffer" :date (20464 44096) :url "https://github.com/vic/color-theme-buffer-local") (loc-changes :source "MELPA" :recipe (:package "loc-changes" :fetcher github :repo "rocky/emacs-loc-changes" :files ("loc-changes.el")) :description "Keep track of positions even after buffer changes" :date (25578 42192) :url "https://github.com/rocky/emacs-loc-changes") (loccur :source "MELPA" :recipe (:package "loccur" :fetcher codeberg :repo "fourier/loccur" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perform an occur-like folding in current buffer" :date (26214 6096) :url "https://codeberg.org/fourier/loccur") (lockfile-mode :source "MELPA" :recipe (:package "lockfile-mode" :repo "preetpalS/emacs-lockfile-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for .lock files" :date (22862 53968) :url "https://github.com/preetpalS/emacs-lockfile-mode") (loco :source "MELPA" :recipe (:package "loco" :fetcher github :repo "csmclaren/loco" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enter complex key sequences with ease!" :date (26264 12496) :url "https://github.com/csmclaren/loco") (lodgeit :source "MELPA" :recipe (:package "lodgeit" :repo "ionrock/lodgeit-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste to a lodgeit powered pastebin" :date (23875 21200) :url "https://github.com/ionrock/lodgeit-el") (log4e :source "MELPA" :recipe (:package "log4e" :repo "aki2o/log4e" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide logging framework for elisp" :date (26030 55120) :url "https://github.com/aki2o/log4e") (log4j-mode :source "MELPA" :recipe (:package "log4j-mode" :repo "dykstrom/log4j-mode" :fetcher github :files ("src/*.el")) :description "Major mode for viewing log files" :date (25833 5712) :url "https://github.com/dykstrom/log4j-mode") (logalimacs :source "MELPA" :recipe (:package "logalimacs" :repo "logaling/logalimacs" :fetcher github :files ("logalimacs.el")) :description "Front-end to logaling-command for Ruby gems" :date (21092 13888) :url "https://github.com/logaling/logalimacs") (logito :source "MELPA" :recipe (:package "logito" :repo "sigma/logito" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Logging library for Emacs" :date (24550 21200) :url "https://github.com/sigma/logito") (logms :source "MELPA" :recipe (:package "logms" :repo "jcs-elpa/logms" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Log message with clickable links to context" :date (26001 54864) :url "https://github.com/jcs-elpa/logms") (lognav-mode :source "MELPA" :recipe (:package "lognav-mode" :fetcher github :repo "ellisvelo/lognav-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigate Log Error Messages" :date (26020 19280) :url "https://github.com/ellisvelo/lognav-mode") (logpad :source "MELPA" :recipe (:package "logpad" :fetcher github :repo "dertuxmalwieder/logpad.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simulate Windows Notepad for logging" :date (24493 41552) :url "https://github.com/dertuxmalwieder/logpad.el") (logstash-conf :source "MELPA" :recipe (:package "logstash-conf" :repo "Wilfred/logstash-conf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic mode for editing logstash configuration" :date (24587 15568) :url "https://github.com/Wilfred/logstash-conf.el") (logview :source "MELPA" :recipe (:package "logview" :repo "doublep/logview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for viewing log files" :date (26407 58448) :url "https://github.com/doublep/logview") (lol-data-dragon :source "MELPA" :recipe (:package "lol-data-dragon" :fetcher github :repo "xuchunyang/lol-data-dragon.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse Champions of League of Legends on Data Dragon" :date (24320 60880) :url "https://github.com/xuchunyang/lol-data-dragon.el") (lolcat :source "MELPA" :recipe (:package "lolcat" :fetcher github :repo "xuchunyang/lolcat.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rainbows and unicorns!" :date (23786 65104) :url "https://github.com/xuchunyang/lolcat.el") (lolcode-mode :source "MELPA" :recipe (:package "lolcode-mode" :fetcher github :repo "bodil/lolcode-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing LOLCODE" :date (20103 28992) :url "https://github.com/bodil/lolcode-mode") (look-dired :source "MELPA" :recipe (:package "look-dired" :fetcher github :repo "vapniks/look-dired" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions to look-mode for dired buffers" :date (22426 29264) :url "https://github.com/vapniks/look-dired") (look-mode :source "MELPA" :recipe (:package "look-mode" :fetcher github :repo "petermao/look-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick file viewer for image and text file browsing" :date (25271 30544) :url "https://github.com/petermao/look-mode") (loop :source "MELPA" :recipe (:package "loop" :repo "Wilfred/loop.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Friendly imperative loop structures" :date (22446 14544) :url "https://github.com/Wilfred/loop.el") (loophole :source "MELPA" :recipe (:package "loophole" :fetcher github :repo "0x60df/loophole" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage temporary key bindings" :date (25473 11472) :url "https://github.com/0x60df/loophole") (loopy :source "MELPA" :recipe (:package "loopy" :fetcher github :repo "okamsn/loopy" :files (:defaults (:exclude "loopy-dash.el"))) :description "A looping macro" :date (26340 42960) :url "https://github.com/okamsn/loopy") (loopy-dash :source "MELPA" :recipe (:package "loopy-dash" :fetcher github :repo "okamsn/loopy" :files ("loopy-dash.el")) :description "Dash destructuring for `loopy'" :date (26305 3920) :url "https://github.com/okamsn/loopy") (lorem-ipsum :source "MELPA" :recipe (:package "lorem-ipsum" :fetcher github :repo "jschaf/emacs-lorem-ipsum" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert dummy pseudo Latin text" :date (25496 59344) :url "https://github.com/jschaf/emacs-lorem-ipsum") (lox-mode :source "MELPA" :recipe (:package "lox-mode" :repo "timmyjose-projects/lox-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Lox programming language" :date (24299 54736) :url "https://github.com/timmyjose-projects/lox-mode") (lox-ts-mode :source "MELPA" :recipe (:package "lox-ts-mode" :repo "nverno/lox-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Lox using tree-sitter" :date (26307 45648) :url "https://github.com/nverno/lox-ts-mode") (lpy :source "MELPA" :recipe (:package "lpy" :repo "abo-abo/lpy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lispy interface to Python" :date (25913 33232) :url "https://github.com/abo-abo/lpy") (lsp-cfn :source "MELPA" :recipe (:package "lsp-cfn" :repo "LaurenceWarne/lsp-cfn.el" :fetcher github :files (:defaults "snippets")) :description "LSP integration for cfn-lsp-extra" :date (26016 22224) :url "https://github.com/LaurenceWarne/lsp-cfn.el") (lsp-dart :source "MELPA" :recipe (:package "lsp-dart" :repo "emacs-lsp/lsp-dart" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dart support lsp-mode" :date (26186 26704) :url "https://github.com/emacs-lsp/lsp-dart") (lsp-docker :source "MELPA" :recipe (:package "lsp-docker" :repo "emacs-lsp/lsp-docker" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP Docker integration" :date (26145 35280) :url "https://github.com/emacs-lsp/lsp-docker") (lsp-focus :source "MELPA" :recipe (:package "lsp-focus" :fetcher github :repo "emacs-lsp/lsp-focus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Focus.el support for lsp-mode" :date (24403 64592) :url "https://github.com/emacs-lsp/lsp-focus") (lsp-grammarly :source "MELPA" :recipe (:package "lsp-grammarly" :repo "emacs-grammarly/lsp-grammarly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP Clients for Grammarly" :date (26079 40656) :url "https://github.com/emacs-grammarly/lsp-grammarly") (lsp-haskell :source "MELPA" :recipe (:package "lsp-haskell" :repo "emacs-lsp/lsp-haskell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haskell support for lsp-mode" :date (26393 25552) :url "https://github.com/emacs-lsp/lsp-haskell") (lsp-intellij :source "MELPA" :recipe (:package "lsp-intellij" :repo "Ruin0x11/lsp-intellij" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intellij lsp client" :date (23432 23248) :url "https://github.com/Ruin0x11/lsp-intellij") (lsp-ivy :source "MELPA" :recipe (:package "lsp-ivy" :repo "emacs-lsp/lsp-ivy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP ivy integration" :date (25358 31312) :url "https://github.com/emacs-lsp/lsp-ivy") (lsp-java :source "MELPA" :recipe (:package "lsp-java" :repo "emacs-lsp/lsp-java" :fetcher github :files (:defaults "icons")) :description "Java support for lsp-mode" :date (26191 44624) :url "https://github.com/emacs-lsp/lsp-java") (lsp-javacomp :source "MELPA" :recipe (:package "lsp-javacomp" :repo "tigersoldier/lsp-javacomp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide Java IDE features powered by JavaComp" :date (23624 54736) :url "https://github.com/tigersoldier/lsp-javacomp") (lsp-jedi :source "MELPA" :recipe (:package "lsp-jedi" :repo "fredcamps/lsp-jedi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lsp client plugin for Python Jedi Language Server" :date (25830 29520) :url "https://github.com/fredcamps/lsp-jedi") (lsp-julia :source "MELPA" :recipe (:package "lsp-julia" :fetcher github :repo "gdkrmr/lsp-julia" :files (:defaults "languageserver")) :description "Julia support for lsp-mode" :date (25859 29776) :url "https://github.com/gdkrmr/lsp-julia") (lsp-latex :source "MELPA" :recipe (:package "lsp-latex" :repo "ROCKTAKEY/lsp-latex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP-mode client for LaTeX, on texlab" :date (26369 43216) :url "https://github.com/ROCKTAKEY/lsp-latex") (lsp-ltex :source "MELPA" :recipe (:package "lsp-ltex" :repo "emacs-languagetool/lsp-ltex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP Clients for LTEX" :date (26153 29392) :url "https://github.com/emacs-languagetool/lsp-ltex") (lsp-metals :source "MELPA" :recipe (:package "lsp-metals" :repo "emacs-lsp/lsp-metals" :fetcher github :files (:defaults "icons")) :description "Scala Client settings" :date (26309 976) :url "https://github.com/emacs-lsp/lsp-metals") (lsp-mode :source "MELPA" :recipe (:package "lsp-mode" :repo "emacs-lsp/lsp-mode" :fetcher github :files (:defaults "clients/*.el")) :description "LSP mode" :date (26402 40528) :url "https://github.com/emacs-lsp/lsp-mode") (lsp-mssql :source "MELPA" :recipe (:package "lsp-mssql" :repo "emacs-lsp/lsp-mssql" :files (:defaults "images" "snippets") :fetcher github) :description "MSSQL LSP bindings" :date (25690 46160) :url "https://github.com/emacs-lsp/lsp-mssql") (lsp-origami :source "MELPA" :recipe (:package "lsp-origami" :repo "emacs-lsp/lsp-origami" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Origami.el support for lsp-mode" :date (25818 38352) :url "https://github.com/emacs-lsp/lsp-origami") (lsp-p4 :source "MELPA" :recipe (:package "lsp-p4" :fetcher github :repo "dmakarov/p4ls" :files ("clients/emacs/*.el")) :description "P4 support for lsp-mode" :date (23628 51792) :url "https://github.com/dmakarov/p4ls") (lsp-pascal :source "MELPA" :recipe (:package "lsp-pascal" :fetcher github :repo "arjanadriaanse/lsp-pascal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP client for Pascal" :date (24223 24272) :url "https://github.com/arjanadriaanse/lsp-pascal") (lsp-pyre :source "MELPA" :recipe (:package "lsp-pyre" :repo "jra3/lsp-pyre" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lsp-mode client for python using pyre" :date (23719 49616) :url "https://github.com/jra3/lsp-pyre") (lsp-pyright :source "MELPA" :recipe (:package "lsp-pyright" :repo "emacs-lsp/lsp-pyright" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python LSP client using Pyright" :date (26405 16720) :url "https://github.com/emacs-lsp/lsp-pyright") (lsp-python-ms :source "MELPA" :recipe (:package "lsp-python-ms" :fetcher github :repo "emacs-lsp/lsp-python-ms" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The lsp-mode client for Microsoft python-language-server" :date (25798 53072) :url "https://github.com/emacs-lsp/lsp-python-ms") (lsp-rescript :source "MELPA" :recipe (:package "lsp-rescript" :fetcher github :repo "jjlee/lsp-rescript" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP client configuration for lsp-mode and rescript-vscode" :date (25134 23376) :url "https://github.com/jjlee/lsp-rescript") (lsp-scheme :source "MELPA" :recipe (:package "lsp-scheme" :fetcher codeberg :repo "rgherdt/emacs-lsp-scheme" :files (:defaults "scripts")) :description "Scheme support for lsp-mode" :date (25726 19664) :url "https://codeberg.org/rgherdt/emacs-lsp-scheme") (lsp-shader :source "MELPA" :recipe (:package "lsp-shader" :repo "shader-ls/lsp-shader" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "LSP Clients for ShaderLab" :date (26079 40656) :url "https://github.com/shader-ls/lsp-shader") (lsp-sonarlint :source "MELPA" :recipe (:package "lsp-sonarlint" :fetcher github :repo "emacs-lsp/lsp-sonarlint" :files ("lsp-sonarlint.el" ("languages" "languages/*/*.el") ("server" "server/*"))) :description "Emacs SonarLint lsp client" :date (26289 15696) :url "https://github.com/emacs-lsp/lsp-sonarlint") (lsp-sourcekit :source "MELPA" :recipe (:package "lsp-sourcekit" :repo "emacs-lsp/lsp-sourcekit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sourcekit-lsp client for lsp-mode" :date (26328 51792) :url "https://github.com/emacs-lsp/lsp-sourcekit") (lsp-tailwindcss :source "MELPA" :recipe (:package "lsp-tailwindcss" :repo "merrickluo/lsp-tailwindcss" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lsp-mode client for tailwindcss" :date (26385 31440) :url "https://github.com/merrickluo/lsp-tailwindcss") (lsp-treemacs :source "MELPA" :recipe (:package "lsp-treemacs" :repo "emacs-lsp/lsp-treemacs" :fetcher github :files (:defaults "icons")) :description "LSP treemacs" :date (26128 26192) :url "https://github.com/emacs-lsp/lsp-treemacs") (lsp-ui :source "MELPA" :recipe (:package "lsp-ui" :repo "emacs-lsp/lsp-ui" :fetcher github :files (:defaults "lsp-ui-doc.html" "resources")) :description "UI modules for lsp-mode" :date (26178 32592) :url "https://github.com/emacs-lsp/lsp-ui") (lua-mode :source "MELPA" :recipe (:package "lua-mode" :repo "immerrr/lua-mode" :fetcher github :files (:defaults (:exclude "init-tryout.el"))) :description "A major-mode for editing Lua scripts" :date (25909 36176) :url "https://github.com/immerrr/lua-mode") (luarocks :source "MELPA" :recipe (:package "luarocks" :fetcher github :repo "emacs-pe/luarocks.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Luarocks tools" :date (22788 65232) :url "https://github.com/emacs-pe/luarocks.el") (lurk-mode :source "MELPA" :recipe (:package "lurk-mode" :fetcher github :repo "argumentcomputer/lurk-emacs" :files ("lurk-mode.el")) :description "A major mode for editing lurk files" :date (25545 44880) :url "https://github.com/argumentcomputer/lurk-emacs") (lush-theme :source "MELPA" :recipe (:package "lush-theme" :fetcher github :repo "andre-richter/emacs-lush-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme with lush colors" :date (23412 37968) :url "https://github.com/andre-richter/emacs-lush-theme") (lusty-explorer :source "MELPA" :recipe (:package "lusty-explorer" :repo "sjbach/lusty-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamic filesystem explorer and buffer switcher" :date (24277 27728) :url "https://github.com/sjbach/lusty-emacs") (lux-mode :source "MELPA" :recipe (:package "lux-mode" :repo "hawk/lux" :fetcher github :files ("emacs/lux-mode.el")) :description "Major mode for editing lux files" :date (26011 4304) :url "https://github.com/hawk/lux") (lv :source "MELPA" :recipe (:package "lv" :repo "abo-abo/hydra" :fetcher github :files ("lv.el")) :description "Other echo area" :date (24243 9552) :url "https://github.com/abo-abo/hydra") (lxc :source "MELPA" :recipe (:package "lxc" :fetcher github :repo "nicferrier/emacs-lxc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lxc integration with Emacs" :date (21317 42688) :url "https://github.com/nicferrier/emacs-lxc") (lxc-tramp :source "MELPA" :recipe (:package "lxc-tramp" :repo "montag451/lxc-tramp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP integration for LXC containers" :date (25544 24016) :url "https://github.com/montag451/lxc-tramp") (lxd-tramp :source "MELPA" :recipe (:package "lxd-tramp" :repo "onixie/lxd-tramp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP integration for LXD containers" :date (23502 14928) :url "https://github.com/onixie/lxd-tramp") (lyrics :source "MELPA" :recipe (:package "lyrics" :fetcher github :repo "emacs-pe/lyrics.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show lyrics" :date (25086 58704) :url "https://github.com/emacs-pe/lyrics.el") (lyrics-fetcher :source "MELPA" :recipe (:package "lyrics-fetcher" :repo "SqrtMinusOne/lyrics-fetcher.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fetch song lyrics and album covers" :date (25992 39888) :url "https://github.com/SqrtMinusOne/lyrics-fetcher.el") (m-buffer :source "MELPA" :recipe (:package "m-buffer" :fetcher github :repo "phillord/m-buffer-el" :files (:defaults "m-buffer-doc.org" "m-buffer-doc.css")) :description "List-Oriented, Functional Buffer Manipulation" :date (26082 16848) :url "https://github.com/phillord/m-buffer-el") (mac-pseudo-daemon :source "MELPA" :recipe (:package "mac-pseudo-daemon" :repo "DarwinAwardWinner/mac-pseudo-daemon" :fetcher github :files ("mac-pseudo-daemon.el")) :description "Daemon mode that plays nice with Mac OS" :date (25007 52048) :url "https://github.com/DarwinAwardWinner/mac-pseudo-daemon") (maces-game :source "MELPA" :recipe (:package "maces-game" :repo "pawelbx/maces-game" :fetcher github :files (:defaults "words.txt")) :description "Another anagram game" :date (22955 7120) :url "https://github.com/pawelbx/maces-game") (macports :source "MELPA" :recipe (:package "macports" :repo "amake/macports.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A porcelain for MacPorts" :date (26299 51536) :url "https://github.com/amake/macports.el") (macro-math :source "MELPA" :recipe (:package "macro-math" :fetcher github :repo "nschum/macro-math.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "In-buffer mathematical operations" :date (20819 20416) :url "https://github.com/nschum/macro-math.el") (macrostep :source "MELPA" :recipe (:package "macrostep" :fetcher github :repo "emacsorphanage/macrostep" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive macro expander" :date (26394 46416) :url "https://github.com/emacsorphanage/macrostep") (macrostep-geiser :source "MELPA" :recipe (:package "macrostep-geiser" :fetcher github :repo "nbfalcon/macrostep-geiser" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Macrostep for `geiser'" :date (24817 62288) :url "https://github.com/nbfalcon/macrostep-geiser") (madhat2r-theme :source "MELPA" :recipe (:package "madhat2r-theme" :fetcher github :repo "madhat2r/madhat2r-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme that is easy on the eyes" :date (22675 40400) :url "https://github.com/madhat2r/madhat2r-theme") (mag-menu :source "MELPA" :recipe (:package "mag-menu" :repo "chumpage/mag-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intuitive keyboard-centric menu system" :date (21831 56784) :url "https://github.com/chumpage/mag-menu") (magic-filetype :source "MELPA" :recipe (:package "magic-filetype" :fetcher github :repo "emacs-php/magic-filetype.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhance filetype major mode" :date (26040 4560) :url "https://github.com/emacs-php/magic-filetype.el") (magic-latex-buffer :source "MELPA" :recipe (:package "magic-latex-buffer" :repo "zk-phi/magic-latex-buffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magically enhance LaTeX-mode font-locking for semi-WYSIWYG editing" :date (24642 39888) :url "https://github.com/zk-phi/magic-latex-buffer") (magik-mode :source "MELPA" :recipe (:package "magik-mode" :fetcher github :repo "roadrunner1776/magik" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs major mode for Smallworld Magik files" :date (26403 61392) :url "https://github.com/roadrunner1776/magik") (magit :source "MELPA" :recipe (:package "magit" :fetcher github :repo "magit/magit" :files ("lisp/magit*.el" "lisp/git-*.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "magit-pkg.el" (:exclude "lisp/magit-section.el"))) :description "A Git porcelain inside Emacs" :date (26405 16720) :url "https://github.com/magit/magit") (magit-annex :source "MELPA" :recipe (:package "magit-annex" :fetcher github :repo "magit/magit-annex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control git-annex from Magit" :date (26295 54480) :url "https://github.com/magit/magit-annex") (magit-commit-mark :source "MELPA" :recipe (:package "magit-commit-mark" :fetcher codeberg :repo "ideasman42/emacs-magit-commit-mark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support marking commits as read" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-magit-commit-mark") (magit-delta :source "MELPA" :recipe (:package "magit-delta" :fetcher github :repo "dandavison/magit-delta" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use Delta when displaying diffs in Magit" :date (25071 4944) :url "https://github.com/dandavison/magit-delta") (magit-diff-flycheck :source "MELPA" :recipe (:package "magit-diff-flycheck" :repo "ragone/magit-diff-flycheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Report errors in diffs" :date (23783 2512) :url "https://github.com/ragone/magit-diff-flycheck") (magit-file-icons :source "MELPA" :recipe (:package "magit-file-icons" :fetcher github :repo "gekoke/magit-file-icons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Icons for file entries in Magit buffers" :date (26236 33104) :url "https://github.com/gekoke/magit-file-icons") (magit-filenotify :source "MELPA" :recipe (:package "magit-filenotify" :fetcher github :repo "ruediger/magit-filenotify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Refresh status buffer when git tree changes" :date (22088 62032) :url "https://github.com/ruediger/magit-filenotify") (magit-find-file :source "MELPA" :recipe (:package "magit-find-file" :repo "bradwright/magit-find-file.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completing-read over all files in Git" :date (21908 21712) :url "https://github.com/bradwright/magit-find-file.el") (magit-gerrit :source "MELPA" :recipe (:package "magit-gerrit" :repo "emacsorphanage/magit-gerrit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit plugin for Gerrit Code Review" :date (26396 1744) :url "https://github.com/emacsorphanage/magit-gerrit") (magit-gh-pulls :source "MELPA" :recipe (:package "magit-gh-pulls" :fetcher github :repo "sigma/magit-gh-pulls" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "GitHub pull requests extension for Magit" :date (24073 5072) :url "https://github.com/sigma/magit-gh-pulls") (magit-gitflow :source "MELPA" :recipe (:package "magit-gitflow" :fetcher github :repo "jtatarik/magit-gitflow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gitflow extension for magit" :date (22989 25296) :url "https://github.com/jtatarik/magit-gitflow") (magit-gitlab :source "MELPA" :recipe (:package "magit-gitlab" :fetcher gitlab :repo "arvidnl/magit-gitlab" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit plugin for manipulating GitLab merge requests" :date (26249 45136) :url "https://gitlab.com/arvidnl/magit-gitlab") (magit-gptcommit :source "MELPA" :recipe (:package "magit-gptcommit" :fetcher github :repo "douo/magit-gptcommit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git commit with help of gpt" :date (26233 56912) :url "https://github.com/douo/magit-gptcommit") (magit-imerge :source "MELPA" :recipe (:package "magit-imerge" :fetcher github :repo "magit/magit-imerge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit extension for git-imerge" :date (26295 54480) :url "https://github.com/magit/magit-imerge") (magit-lfs :source "MELPA" :recipe (:package "magit-lfs" :fetcher github :repo "Ailrun/magit-lfs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit plugin for Git LFS" :date (25438 58832) :url "https://github.com/Ailrun/magit-lfs") (magit-org-todos :source "MELPA" :recipe (:package "magit-org-todos" :repo "danielma/magit-org-todos.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add local todo items to the magit status buffer" :date (23362 31568) :url "https://github.com/danielma/magit-org-todos.el") (magit-p4 :source "MELPA" :recipe (:package "magit-p4" :repo "emacsorphanage/magit-p4" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git-p4 plug-in for Magit" :date (25346 40144) :url "https://github.com/emacsorphanage/magit-p4") (magit-patch-changelog :source "MELPA" :recipe (:package "magit-patch-changelog" :repo "dickmao/magit-patch-changelog" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate a patch according to emacs-mirror/CONTRIBUTE" :date (25490 20560) :url "https://github.com/dickmao/magit-patch-changelog") (magit-popup :source "MELPA" :recipe (:package "magit-popup" :fetcher github :repo "magit/magit-popup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define prefix-infix-suffix command combos" :date (24339 25296) :url "https://github.com/magit/magit-popup") (magit-rbr :source "MELPA" :recipe (:package "magit-rbr" :fetcher github :repo "fanatoly/magit-rbr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for git rbr in Magit" :date (23483 50512) :url "https://github.com/fanatoly/magit-rbr") (magit-reviewboard :source "MELPA" :recipe (:package "magit-reviewboard" :fetcher github :repo "jtamagnan/magit-reviewboard" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show open Reviewboard reviews in Magit" :date (24349 61136) :url "https://github.com/jtamagnan/magit-reviewboard") (magit-section :source "MELPA" :recipe (:package "magit-section" :fetcher github :repo "magit/magit" :files ("lisp/magit-section.el" "docs/magit-section.texi" "magit-section-pkg.el")) :description "Sections for read-only buffers" :date (26405 16720) :url "https://github.com/magit/magit") (magit-stats :source "MELPA" :recipe (:package "magit-stats" :repo "LionyxML/magit-stats" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generates GIT Repo Statistics Report" :date (25590 33360) :url "https://github.com/LionyxML/magit-stats") (magit-stgit :source "MELPA" :recipe (:package "magit-stgit" :fetcher github :repo "stacked-git/magit-stgit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "StGit extension for Magit" :date (26377 37328) :url "https://github.com/stacked-git/magit-stgit") (magit-svn :source "MELPA" :recipe (:package "magit-svn" :fetcher github :repo "emacsorphanage/magit-svn" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Git-Svn extension for Magit" :date (25134 23376) :url "https://github.com/emacsorphanage/magit-svn") (magit-tbdiff :source "MELPA" :recipe (:package "magit-tbdiff" :fetcher github :repo "magit/magit-tbdiff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit extension for range diffs" :date (26295 54480) :url "https://github.com/magit/magit-tbdiff") (magit-todos :source "MELPA" :recipe (:package "magit-todos" :fetcher github :repo "alphapapa/magit-todos" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show source file TODOs in Magit" :date (26357 52048) :url "https://github.com/alphapapa/magit-todos") (magit-topgit :source "MELPA" :recipe (:package "magit-topgit" :fetcher github :repo "greenrd/magit-topgit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TopGit extension for Magit" :date (22556 63184) :url "https://github.com/greenrd/magit-topgit") (magit-vcsh :source "MELPA" :recipe (:package "magit-vcsh" :fetcher git :url "https://git.smrk.net/magit-vcsh.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit vcsh integration" :date (25640 39760) :url "https://git.smrk.net/magit-vcsh.el") (magithub :source "MELPA" :recipe (:package "magithub" :fetcher github :repo "vermiculus/magithub" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit interfaces for GitHub" :date (25135 44240) :url "https://github.com/vermiculus/magithub") (magma-mode :source "MELPA" :recipe (:package "magma-mode" :fetcher github :repo "ThibautVerron/magma-mode" :files ("*.el" "snippets" ("data" "data/magma_symbols.txt") ("bin" "bin/build_completion_table.sh"))) :description "Mode for editing Magma source code" :date (24940 36560) :url "https://github.com/ThibautVerron/magma-mode") (magnatune :source "MELPA" :recipe (:package "magnatune" :repo "eikek/magnatune.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse magnatune's music catalog" :date (22066 35024) :url "https://github.com/eikek/magnatune.el") (magrant :source "MELPA" :recipe (:package "magrant" :repo "p3r7/magrant" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient Interface to Vagrant" :date (24803 29392) :url "https://github.com/p3r7/magrant") (majapahit-themes :source "MELPA" :recipe (:package "majapahit-themes" :fetcher github :repo "emacsmirror/majapahit-themes" :old-names (majapahit-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme with a dark and light versions" :date (25487 44368) :url "https://github.com/emacsmirror/majapahit-themes") (major-mode-hydra :source "MELPA" :recipe (:package "major-mode-hydra" :repo "jerrypnz/major-mode-hydra.el" :fetcher github :files ("major-mode-hydra.el")) :description "Major mode keybindings managed by Hydra" :date (25883 12112) :url "https://github.com/jerrypnz/major-mode-hydra.el") (major-mode-icons :source "MELPA" :recipe (:package "major-mode-icons" :fetcher git :url "https://repo.or.cz/major-mode-icons.git" :files (:defaults "icons")) :description "Display icon for major-mode on mode-line" :date (25092 11088) :url "https://repo.or.cz/major-mode-icons.git") (make-color :source "MELPA" :recipe (:package "make-color" :repo "alezost/make-color.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" :date (21417 55488) :url "https://github.com/alezost/make-color.el") (make-it-so :source "MELPA" :recipe (:package "make-it-so" :repo "abo-abo/make-it-so" :fetcher github :files ("make-it-so.el" "recipes")) :description "Transform files with Makefile recipes" :date (23825 14800) :url "https://github.com/abo-abo/make-it-so") (makefile-executor :source "MELPA" :recipe (:package "makefile-executor" :repo "Olivia5k/makefile-executor.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands for conveniently running makefile targets" :date (25591 54224) :url "https://github.com/Olivia5k/makefile-executor.el") (makey :source "MELPA" :recipe (:package "makey" :fetcher github :repo "mickeynp/makey" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive commandline mode" :date (21185 53440) :url "https://github.com/mickeynp/makey") (malinka :source "MELPA" :recipe (:package "malinka" :repo "LefterisJP/malinka" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A C/C++ project configuration package for Emacs" :date (23073 49872) :url "https://github.com/LefterisJP/malinka") (mallard-mode :source "MELPA" :recipe (:package "mallard-mode" :repo "jhradilek/emacs-mallard-mode" :fetcher github :files ("mallard-mode.el" "schema")) :description "Major mode for editing Mallard files" :date (21150 14400) :url "https://github.com/jhradilek/emacs-mallard-mode") (mallard-snippets :source "MELPA" :recipe (:package "mallard-snippets" :repo "jhradilek/emacs-mallard-snippets" :fetcher github :files ("mallard-snippets.el" "snippets")) :description "Yasnippets for Mallard" :date (21094 55616) :url "https://github.com/jhradilek/emacs-mallard-snippets") (malyon :source "MELPA" :recipe (:package "malyon" :repo "speedenator/malyon" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode to execute Z-code files version 3, 5, 8" :date (22600 30800) :url "https://github.com/speedenator/malyon") (mame :source "MELPA" :recipe (:package "mame" :fetcher github :repo "Iacob/elmame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A MAME front-end" :date (26318 15952) :url "https://github.com/Iacob/elmame") (man-commands :source "MELPA" :recipe (:package "man-commands" :fetcher github :repo "nflath/man-commands" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add interactive commands for every manpages installed in your computer" :date (22135 5840) :url "https://github.com/nflath/man-commands") (manage-minor-mode :source "MELPA" :recipe (:package "manage-minor-mode" :fetcher github :repo "emacsorphanage/manage-minor-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage your minor-modes easily" :date (26355 10320) :url "https://github.com/emacsorphanage/manage-minor-mode") (manage-minor-mode-table :source "MELPA" :recipe (:package "manage-minor-mode-table" :repo "jcs-elpa/manage-minor-mode-table" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage minor-modes in table" :date (26001 54864) :url "https://github.com/jcs-elpa/manage-minor-mode-table") (mandm-theme :source "MELPA" :recipe (:package "mandm-theme" :fetcher github :repo "choppsv1/emacs-mandm-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An M&M color theme" :date (25963 39632) :url "https://github.com/choppsv1/emacs-mandm-theme") (mandoku :source "MELPA" :recipe (:package "mandoku" :fetcher github :repo "mandoku/mandoku" :files (:defaults "lisp/*.org")) :description "A tool to access repositories of premodern Chinese texts" :date (23234 39376) :url "https://github.com/mandoku/mandoku") (mandoku-tls :source "MELPA" :recipe (:package "mandoku-tls" :fetcher github :repo "mandoku/mandoku-tls" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A tool to access the TLS database" :date (23055 19920) :url "https://github.com/mandoku/mandoku-tls") (map-progress :source "MELPA" :recipe (:package "map-progress" :repo "tarsius/map-progress" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mapping macros that report progress" :date (23630 7120) :url "https://github.com/tarsius/map-progress") (map-regexp :source "MELPA" :recipe (:package "map-regexp" :repo "tarsius/map-regexp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Map over matches of a regular expression" :date (23630 7120) :url "https://github.com/tarsius/map-regexp") (marcopolo :source "MELPA" :recipe (:package "marcopolo" :fetcher github :repo "nlamirault/marcopolo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client to the Docker HUB/Registry API" :date (22295 60880) :url "https://github.com/nlamirault/marcopolo") (marginalia :source "MELPA" :recipe (:package "marginalia" :repo "minad/marginalia" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enrich existing commands with completion annotations" :date (26356 31184) :url "https://github.com/minad/marginalia") (mark-multiple :source "MELPA" :recipe (:package "mark-multiple" :fetcher github :repo "magnars/mark-multiple.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sorta lets you mark several regions at once" :date (20647 60608) :url "https://github.com/magnars/mark-multiple.el") (mark-thing-at :source "MELPA" :recipe (:package "mark-thing-at" :fetcher github :repo "plandes/mark-thing-at" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mark a pattern at the current point" :date (26390 49360) :url "https://github.com/plandes/mark-thing-at") (mark-tools :source "MELPA" :recipe (:package "mark-tools" :repo "stsquad/emacs-mark-tools" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some simple tools to access the mark-ring in Emacs" :date (20922 9408) :url "https://github.com/stsquad/emacs-mark-tools") (mark-yank :source "MELPA" :recipe (:package "mark-yank" :fetcher github :repo "mkleehammer/mark-yank" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set region to the last yank" :date (25926 45264) :url "https://github.com/mkleehammer/mark-yank") (markdown-changelog :source "MELPA" :recipe (:package "markdown-changelog" :fetcher github :repo "plandes/markdown-changelog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Maintain changelog entries" :date (25805 26320) :url "https://github.com/plandes/markdown-changelog") (markdown-mode :source "MELPA" :recipe (:package "markdown-mode" :fetcher github :repo "jrblevin/markdown-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Markdown-formatted text" :date (26319 36816) :url "https://github.com/jrblevin/markdown-mode") (markdown-preview-eww :source "MELPA" :recipe (:package "markdown-preview-eww" :fetcher github :repo "niku/markdown-preview-eww" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Realtime preview by eww" :date (22162 50768) :url "https://github.com/niku/markdown-preview-eww") (markdown-preview-mode :source "MELPA" :recipe (:package "markdown-preview-mode" :fetcher github :repo "ancane/markdown-preview-mode" :files (:defaults "preview.html" "favicon.ico")) :description "Markdown realtime preview minor mode" :date (25767 11088) :url "https://github.com/ancane/markdown-preview-mode") (markdown-soma :source "MELPA" :recipe (:package "markdown-soma" :fetcher github :repo "jasonm23/markdown-soma" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live preview for Markdown" :date (26061 10704) :url "https://github.com/jasonm23/markdown-soma") (markdown-toc :source "MELPA" :recipe (:package "markdown-toc" :fetcher github :repo "ardumont/markdown-toc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple TOC generator for markdown file" :date (24883 56912) :url "https://github.com/ardumont/markdown-toc") (markdown-ts-mode :source "MELPA" :recipe (:package "markdown-ts-mode" :repo "LionyxML/markdown-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Markdown using Treesitter" :date (26149 32336) :url "https://github.com/LionyxML/markdown-ts-mode") (markdownfmt :source "MELPA" :recipe (:package "markdownfmt" :fetcher github :repo "nlamirault/emacs-markdownfmt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format markdown using markdownfmt" :date (22360 34640) :url "https://github.com/nlamirault/emacs-markdownfmt") (markless :source "MELPA" :recipe (:package "markless" :fetcher github :repo "Shirakumo/markless.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Markless documents" :date (26065 7760) :url "https://github.com/Shirakumo/markless.el") (markup :source "MELPA" :recipe (:package "markup" :fetcher github :repo "leoc/markup.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple markup generation helpers" :date (22775 53200) :url "https://github.com/leoc/markup.el") (markup-faces :source "MELPA" :recipe (:package "markup-faces" :fetcher github :repo "sensorflo/markup-faces" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Collection of faces for markup language modes" :date (21599 54736) :url "https://github.com/sensorflo/markup-faces") (marmalade-client :source "MELPA" :recipe (:package "marmalade-client" :fetcher github :repo "nicferrier/emacs-marmalade-upload" :old-names (marmalade-upload) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for marmalade API from emacs" :date (21667 4688) :url "https://github.com/nicferrier/emacs-marmalade-upload") (marquee-header :source "MELPA" :recipe (:package "marquee-header" :repo "jcs-elpa/marquee-header" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code interface for displaying marquee in header" :date (26001 54864) :url "https://github.com/jcs-elpa/marquee-header") (marshal :source "MELPA" :recipe (:package "marshal" :fetcher github :repo "sigma/marshal.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eieio extension for automatic (un)marshalling" :date (24546 24144) :url "https://github.com/sigma/marshal.el") (maruo-macro-mode :source "MELPA" :recipe (:package "maruo-macro-mode" :fetcher github :repo "zonuexe/maruo-macro-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Hidemaru/Maruo macro script" :date (22369 49616) :url "https://github.com/zonuexe/maruo-macro-mode.el") (masm-mode :source "MELPA" :recipe (:package "masm-mode" :fetcher github :repo "YiGeeker/masm-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MASM x86 and x64 assembly major mode" :date (24164 2896) :url "https://github.com/YiGeeker/masm-mode") (mastodon :source "MELPA" :recipe (:package "mastodon" :fetcher codeberg :repo "martianh/mastodon.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for fediverse services using the Mastodon API" :date (26405 16720) :url "https://codeberg.org/martianh/mastodon.el") (material-theme :source "MELPA" :recipe (:package "material-theme" :fetcher github :repo "cpaulik/emacs-material-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Theme based on the colors of the Google Material Design" :date (24882 36048) :url "https://github.com/cpaulik/emacs-material-theme") (math-preview :source "MELPA" :recipe (:package "math-preview" :fetcher gitlab :repo "matsievskiysv/math-preview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview TeX math equations inline" :date (26282 42448) :url "https://gitlab.com/matsievskiysv/math-preview") (math-symbol-lists :source "MELPA" :recipe (:package "math-symbol-lists" :fetcher github :repo "vspinu/math-symbol-lists" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lists of Unicode math symbols and latex commands" :date (25354 34256) :url "https://github.com/vspinu/math-symbol-lists") (math-symbols :source "MELPA" :recipe (:package "math-symbols" :fetcher github :repo "kawabata/math-symbols" :files ("math-symbols*.el" "unimathsymbols.txt")) :description "Math Symbol Input methods and conversion tools" :date (24442 14288) :url "https://github.com/kawabata/math-symbols") (math-tex-convert :source "MELPA" :recipe (:package "math-tex-convert" :repo "enricoflor/math-tex-convert" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert LaTeX macros to unicode and back" :date (25491 41424) :url "https://github.com/enricoflor/math-tex-convert") (matlab-mode :source "MELPA" :recipe (:package "matlab-mode" :fetcher github :repo "mathworks/Emacs-MATLAB-Mode" :files (:defaults "*.m" ("toolbox" "toolbox/*.m") ("toolbox/+emacs" "toolbox/+emacs/*.m") ("toolbox/+emacs/@Breakpoints" "toolbox/+emacs/@Breakpoints/*.m") ("toolbox/+emacs/@EmacsServer" "toolbox/+emacs/@EmacsServer/*.m") ("toolbox/+emacs/@Stack" "toolbox/+emacs/@Stack/*.m") ("bin" "bin/*.sh"))) :description "Major mode for MATLAB(R) dot-m files" :date (26407 58448) :url "https://github.com/mathworks/Emacs-MATLAB-Mode") (maude-mode :source "MELPA" :recipe (:package "maude-mode" :fetcher github :repo "rudi/maude-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs mode for the programming language Maude" :date (25682 52048) :url "https://github.com/rudi/maude-mode") (maven-test-mode :source "MELPA" :recipe (:package "maven-test-mode" :fetcher github :repo "rranelli/maven-test-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for navigating test files and running maven test tasks" :date (21652 37328) :url "https://github.com/rranelli/maven-test-mode") (maxframe :source "MELPA" :recipe (:package "maxframe" :fetcher github :repo "rmm5t/maxframe.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Maximize the emacs frame based on display size" :date (22657 10448) :url "https://github.com/rmm5t/maxframe.el") (maxima :source "MELPA" :recipe (:package "maxima" :fetcher gitlab :repo "sasanidas/maxima" :files ("maxima.el" "maxima-font-lock.el" ("keywords" "keywords/*"))) :description "Major mode for Maxima" :date (25715 49360) :url "https://gitlab.com/sasanidas/maxima") (mb-url :source "MELPA" :recipe (:package "mb-url" :fetcher github :repo "dochang/mb-url" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple Backends for Emacs URL package" :date (26322 13008) :url "https://github.com/dochang/mb-url") (mbe :source "MELPA" :recipe (:package "mbe" :fetcher github :repo "ijp/mbe.el" :files ("mbe.el")) :description "Macros by Example" :date (22102 8528) :url "https://github.com/ijp/mbe.el") (mbo70s-theme :source "MELPA" :recipe (:package "mbo70s-theme" :fetcher github :repo "emacsfodder/emacs-mbo70s-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "70s style palette, with similarities to mbo theme" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-mbo70s-theme") (mbsync :source "MELPA" :recipe (:package "mbsync" :fetcher github :repo "dimitri/mbsync-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run mbsync to fetch mails" :date (24111 20304) :url "https://github.com/dimitri/mbsync-el") (mc-calc :source "MELPA" :recipe (:package "mc-calc" :fetcher github :repo "hatheroldev/mc-calc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Combine multiple-cursors and calc" :date (24220 48080) :url "https://github.com/hatheroldev/mc-calc") (mc-extras :source "MELPA" :recipe (:package "mc-extras" :fetcher github :repo "knu/mc-extras.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra functions for multiple-cursors mode" :date (25967 36688) :url "https://github.com/knu/mc-extras.el") (md-readme :source "MELPA" :recipe (:package "md-readme" :repo "thomas11/md-readme" :fetcher github :files (:defaults "bin")) :description "Markdown-formatted READMEs for your ELisp" :date (24009 52176) :url "https://github.com/thomas11/md-readme") (md4rd :source "MELPA" :recipe (:package "md4rd" :repo "ahungry/md4rd" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for reddit (browse it)" :date (25790 58960) :url "https://github.com/ahungry/md4rd") (media-progress :source "MELPA" :recipe (:package "media-progress" :repo "jumper047/media-progress" :fetcher github :files ("media-progress.el")) :description "Display position where media player stopped" :date (25805 26320) :url "https://github.com/jumper047/media-progress") (media-progress-dired :source "MELPA" :recipe (:package "media-progress-dired" :repo "jumper047/media-progress" :fetcher github :files ("media-progress-dired.el")) :description "Display position where media player stopped in dired buffer" :date (25713 7632) :url "https://github.com/jumper047/media-progress") (media-progress-dirvish :source "MELPA" :recipe (:package "media-progress-dirvish" :repo "jumper047/media-progress" :fetcher github :files ("media-progress-dirvish.el")) :description "Display position where media player stopped in dirvish" :date (25703 58192) :url "https://github.com/jumper047/media-progress") (media-thumbnail :source "MELPA" :recipe (:package "media-thumbnail" :fetcher github :repo "jojojames/media-thumbnail" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility package to provide media icons" :date (26302 27728) :url "https://github.com/jojojames/media-thumbnail") (mediawiki :source "MELPA" :recipe (:package "mediawiki" :repo "hexmode/mediawiki-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mediawiki frontend" :date (25388 52432) :url "https://github.com/hexmode/mediawiki-el") (meghanada :source "MELPA" :recipe (:package "meghanada" :fetcher github :repo "mopemope/meghanada-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A better java development mode" :date (25039 28496) :url "https://github.com/mopemope/meghanada-emacs") (melancholy-theme :source "MELPA" :recipe (:package "melancholy-theme" :repo "baaash/melancholy-theme" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme that's pretty sad  -*- lexical-binding: t; -" :date (26142 59088) :url "https://gitlab.com/baaash/melancholy-theme") (mellow-theme :source "MELPA" :recipe (:package "mellow-theme" :fetcher github :repo "emacsfodder/emacs-mellow-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Mellow (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-mellow-theme") (melpa-upstream-visit :source "MELPA" :recipe (:package "melpa-upstream-visit" :repo "laynor/melpa-upstream-visit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A set of kludges to visit a melpa-hosted package's homepage" :date (20969 39616) :url "https://github.com/laynor/melpa-upstream-visit") (memento-mori :source "MELPA" :recipe (:package "memento-mori" :fetcher github :repo "gvol/emacs-memento-mori" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reminder of our mortality" :date (26243 6352) :url "https://github.com/gvol/emacs-memento-mori") (memoize :source "MELPA" :recipe (:package "memoize" :repo "skeeto/emacs-memoize" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Memoization functions" :date (24078 22992) :url "https://github.com/skeeto/emacs-memoize") (memolist :source "MELPA" :recipe (:package "memolist" :repo "mikanfactory/memolist.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Memolist.el is Emacs port of memolist.vim" :date (21951 54864) :url "https://github.com/mikanfactory/memolist.el") (mentor :source "MELPA" :recipe (:package "mentor" :repo "skangas/mentor" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Frontend for the rTorrent bittorrent client" :date (25523 17872) :url "https://github.com/skangas/mentor") (meow :source "MELPA" :recipe (:package "meow" :repo "meow-edit/meow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet Another modal editing" :date (26406 37584) :url "https://github.com/meow-edit/meow") (meow-tree-sitter :source "MELPA" :recipe (:package "meow-tree-sitter" :fetcher github :repo "skissue/meow-tree-sitter" :files (:defaults "queries")) :description "Tree-sitter powered motions for Meow" :date (26241 51024) :url "https://github.com/skissue/meow-tree-sitter") (merlin :source "MELPA" :recipe (:package "merlin" :fetcher github :repo "ocaml/merlin" :files ("emacs/*.el" (:exclude "emacs/merlin-ac.el" "emacs/merlin-company.el" "emacs/merlin-iedit.el"))) :description "Mode for Merlin, an assistant for OCaml" :date (26355 10320) :url "https://github.com/ocaml/merlin") (merlin-ac :source "MELPA" :recipe (:package "merlin-ac" :fetcher github :repo "ocaml/merlin" :files ("emacs/merlin-ac.el")) :description "Merlin and auto-complete integration" :date (25469 14416) :url "https://github.com/ocaml/merlin") (merlin-company :source "MELPA" :recipe (:package "merlin-company" :fetcher github :repo "ocaml/merlin" :files ("emacs/merlin-company.el")) :description "Merlin and company mode integration" :date (25469 14416) :url "https://github.com/ocaml/merlin") (merlin-eldoc :source "MELPA" :recipe (:package "merlin-eldoc" :fetcher github :repo "Khady/merlin-eldoc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eldoc for OCaml and Reason" :date (25577 21328) :url "https://github.com/Khady/merlin-eldoc") (merlin-iedit :source "MELPA" :recipe (:package "merlin-iedit" :fetcher github :repo "ocaml/merlin" :files ("emacs/merlin-iedit.el")) :description "Merlin and iedit integration" :date (25469 14416) :url "https://github.com/ocaml/merlin") (mermaid-docker-mode :source "MELPA" :recipe (:package "mermaid-docker-mode" :fetcher github :repo "KeyWeeUsr/mermaid-docker-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Render mermaid graphs with Docker service" :date (25954 24656) :url "https://github.com/KeyWeeUsr/mermaid-docker-mode") (mermaid-mode :source "MELPA" :recipe (:package "mermaid-mode" :repo "abrochard/mermaid-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for working with mermaid graphs" :date (26309 976) :url "https://github.com/abrochard/mermaid-mode") (mermaid-ts-mode :source "MELPA" :recipe (:package "mermaid-ts-mode" :fetcher github :repo "JonathanHope/mermaid-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Mermaid" :date (25880 35920) :url "https://github.com/JonathanHope/mermaid-ts-mode") (meson-mode :source "MELPA" :recipe (:package "meson-mode" :fetcher github :repo "wentasah/meson-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Meson build system files" :date (26202 14928) :url "https://github.com/wentasah/meson-mode") (mess :source "MELPA" :recipe (:package "mess" :fetcher github :repo "Iacob/mess.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Front-end for MAME MESS" :date (25781 43984) :url "https://github.com/Iacob/mess.el") (message-attachment-reminder :source "MELPA" :recipe (:package "message-attachment-reminder" :fetcher github :repo "alexmurray/message-attachment-reminder" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Remind if missing attachment" :date (25550 62800) :url "https://github.com/alexmurray/message-attachment-reminder") (message-view-patch :source "MELPA" :recipe (:package "message-view-patch" :repo "seanfarley/message-view-patch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Colorize patch-like emails in mu4e" :date (24882 36048) :url "https://github.com/seanfarley/message-view-patch") (messages-are-flowing :source "MELPA" :recipe (:package "messages-are-flowing" :repo "legoscia/messages-are-flowing" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visible indication when composing \"flowed\" emails" :date (23991 22224) :url "https://github.com/legoscia/messages-are-flowing") (meta-presenter :source "MELPA" :recipe (:package "meta-presenter" :repo "myTerminal/meta-presenter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple multi-file presentation tool for Emacs" :date (24813 65232) :url "https://github.com/myTerminal/meta-presenter") (metal-archives :source "MELPA" :recipe (:package "metal-archives" :fetcher github :repo "seblemaguer/metal-archives.el" :files ("metal-archives.el")) :description "List future releases using Metal-Archives API" :date (26312 63568) :url "https://github.com/seblemaguer/metal-archives.el") (metal-archives-shopping-list :source "MELPA" :recipe (:package "metal-archives-shopping-list" :fetcher github :repo "seblemaguer/metal-archives.el" :files ("metal-archives-shopping-list.el")) :description "Add shopping list generation support to metal-archives" :date (26312 63568) :url "https://github.com/seblemaguer/metal-archives.el") (metalheart-theme :source "MELPA" :recipe (:package "metalheart-theme" :repo "mswift42/MetalHeart-Emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low-contrast theme with a dark blue-green background" :date (22401 26064) :url "https://github.com/mswift42/MetalHeart-Emacs") (metamorph :source "MELPA" :recipe (:package "metamorph" :fetcher github :repo "AdamNiederer/metamorph" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transform your buffers with lisp" :date (25152 53328) :url "https://github.com/AdamNiederer/metamorph") (metascript-mode :source "MELPA" :recipe (:package "metascript-mode" :fetcher github :repo "metascript/metascript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Metascript programming language" :date (21917 36688) :url "https://github.com/metascript/metascript-mode") (metaweblog :source "MELPA" :recipe (:package "metaweblog" :fetcher github :repo "org2blog/org2blog" :files ("metaweblog.el")) :description "An XML-RPC MetaWeblog and WordPress API client" :date (25678 54992) :url "https://github.com/org2blog/org2blog") (metrics-tracker :source "MELPA" :recipe (:package "metrics-tracker" :repo "ianxm/emacs-tracker" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate reports of personal metrics from diary entries" :date (25887 9168) :url "https://github.com/ianxm/emacs-tracker") (metronome :source "MELPA" :recipe (:package "metronome" :fetcher sourcehut :repo "jagrg/metronome" :fetcher sourcehut :files (:defaults "sounds")) :description "The missing metronome for GNU Emacs" :date (25697 19408) :url "https://git.sr.ht/~jagrg/metronome") (mew :source "MELPA" :recipe (:package "mew" :fetcher github :repo "kazu-yamamoto/Mew" :files ("elisp/*.el" "etc" "info/*.info*")) :description "Messaging in the Emacs World" :date (26336 45904) :url "https://github.com/kazu-yamamoto/Mew") (mexican-holidays :source "MELPA" :recipe (:package "mexican-holidays" :fetcher github :repo "sggutier/mexican-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mexico holidays for Emacs calendar" :date (24761 17104) :url "https://github.com/sggutier/mexican-holidays") (meyvn :source "MELPA" :recipe (:package "meyvn" :fetcher github :repo "danielsz/meyvn-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Meyvn client" :date (26328 51792) :url "https://github.com/danielsz/meyvn-el") (mgmtconfig-mode :source "MELPA" :recipe (:package "mgmtconfig-mode" :fetcher github :repo "purpleidea/mgmt" :files ("misc/emacs/*.el")) :description "Mgmt configuration management language" :date (26119 11216) :url "https://github.com/purpleidea/mgmt") (mhc :source "MELPA" :recipe (:package "mhc" :fetcher github :repo "yoshinari-nomura/mhc" :files ("emacs/mhc*.el")) :description "Message Harmonized Calendaring system" :date (26145 35280) :url "https://github.com/yoshinari-nomura/mhc") (mic :source "MELPA" :recipe (:package "mic" :repo "ROCKTAKEY/mic" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimal and combinable configuration manager" :date (26289 15696) :url "https://github.com/ROCKTAKEY/mic") (mic-paren :source "MELPA" :recipe (:package "mic-paren" :fetcher github :repo "emacsattic/mic-paren" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Advanced highlighting of matching parentheses" :date (22910 18640) :url "https://github.com/emacsattic/mic-paren") (micgoline :source "MELPA" :recipe (:package "micgoline" :fetcher github :repo "yzprofile/micgoline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Powerline mode, color schemes from microsoft and google's logo" :date (22288 1232) :url "https://github.com/yzprofile/micgoline") (micromamba :source "MELPA" :recipe (:package "micromamba" :fetcher github :repo "SqrtMinusOne/micromamba.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library for working with micromamba environments" :date (25992 39888) :url "https://github.com/SqrtMinusOne/micromamba.el") (migemo :source "MELPA" :recipe (:package "migemo" :repo "emacs-jp/migemo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Japanese incremental search through dynamic pattern expansion" :date (25946 30544) :url "https://github.com/emacs-jp/migemo") (milkode :source "MELPA" :recipe (:package "milkode" :repo "ongaeshi/emacs-milkode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command line search and direct jump with Milkode" :date (21541 50624) :url "https://github.com/ongaeshi/emacs-milkode") (mimetypes :source "MELPA" :recipe (:package "mimetypes" :repo "cniles/emacs-mimetypes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Guess a file's mimetype by extension" :date (24496 17744) :url "https://github.com/cniles/emacs-mimetypes") (mindre-theme :source "MELPA" :recipe (:package "mindre-theme" :repo "erikbackman/mindre-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimal, light theme" :date (26214 6096) :url "https://github.com/erikbackman/mindre-theme") (mindstream :source "MELPA" :recipe (:package "mindstream" :repo "countvajhula/mindstream" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Start writing, stay focused, don't worry" :date (26393 25552) :url "https://github.com/countvajhula/mindstream") (mingus :source "MELPA" :recipe (:package "mingus" :repo "pft/mingus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MPD Interface" :date (25701 16464) :url "https://github.com/pft/mingus") (mini-echo :source "MELPA" :recipe (:package "mini-echo" :fetcher github :repo "liuyinz/mini-echo.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Echo buffer status in minibuffer window" :date (26399 64336) :url "https://github.com/liuyinz/mini-echo.el") (mini-frame :source "MELPA" :recipe (:package "mini-frame" :fetcher github :repo "muffinmad/emacs-mini-frame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show minibuffer in child frame on read-from-minibuffer" :date (25272 51408) :url "https://github.com/muffinmad/emacs-mini-frame") (mini-header-line :source "MELPA" :recipe (:package "mini-header-line" :fetcher github :repo "ksjogo/mini-header-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimal header-line" :date (22857 36048) :url "https://github.com/ksjogo/mini-header-line") (mini-modeline :source "MELPA" :recipe (:package "mini-modeline" :repo "kiennq/emacs-mini-modeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display modeline in minibuffer" :date (25605 720) :url "https://github.com/kiennq/emacs-mini-modeline") (minibuf-isearch :source "MELPA" :recipe (:package "minibuf-isearch" :repo "knagano/minibuf-isearch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Incremental search on minibuffer history" :date (22141 44624) :url "https://github.com/knagano/minibuf-isearch") (minibuffer-complete-cycle :source "MELPA" :recipe (:package "minibuffer-complete-cycle" :repo "knu/minibuffer-complete-cycle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle through the *Completions* buffer" :date (21001 16064) :url "https://github.com/knu/minibuffer-complete-cycle") (minibuffer-cua :source "MELPA" :recipe (:package "minibuffer-cua" :fetcher github :repo "knu/minibuffer-cua.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make CUA mode's S-up/S-down work in minibuffer" :date (21032 58048) :url "https://github.com/knu/minibuffer-cua.el") (minibuffer-modifier-keys :source "MELPA" :recipe (:package "minibuffer-modifier-keys" :fetcher github :repo "SpringHan/minibuffer-modifier-keys" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use spacebar as a modifier key in the minibuffer" :date (24866 47824) :url "https://github.com/SpringHan/minibuffer-modifier-keys") (miniedit :source "MELPA" :recipe (:package "miniedit" :fetcher github :repo "emacsorphanage/miniedit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced editing for minibuffer fields" :date (19403 25792) :url "https://github.com/emacsorphanage/miniedit") (minimal-session-saver :source "MELPA" :recipe (:package "minimal-session-saver" :repo "rolandwalker/minimal-session-saver" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Very lean session saver" :date (21354 37056) :url "https://github.com/rolandwalker/minimal-session-saver") (minimal-theme :source "MELPA" :recipe (:package "minimal-theme" :repo "anler/minimal-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A light/dark minimalistic Emacs 24 theme" :date (23610 21840) :url "https://github.com/anler/minimal-theme") (minions :source "MELPA" :recipe (:package "minions" :fetcher github :repo "tarsius/minions" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor-mode menu for the mode line" :date (26287 60368) :url "https://github.com/tarsius/minions") (minitest :source "MELPA" :recipe (:package "minitest" :repo "arthurnn/minitest-emacs" :fetcher github :files ("minitest.el" "snippets")) :description "An Emacs mode for ruby minitest files" :date (25988 42832) :url "https://github.com/arthurnn/minitest-emacs") (minizinc-mode :source "MELPA" :recipe (:package "minizinc-mode" :repo "m00nlight/minizinc-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for MiniZinc code" :date (23154 11856) :url "https://github.com/m00nlight/minizinc-mode") (minor-mode-hack :source "MELPA" :recipe (:package "minor-mode-hack" :fetcher github :repo "rubikitch/minor-mode-hack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change priority of minor-mode keymaps" :date (22985 28240) :url "https://github.com/rubikitch/minor-mode-hack") (minsk-theme :source "MELPA" :recipe (:package "minsk-theme" :fetcher github :repo "jlpaca/minsk-theme" :files ("theme/emacs/minsk-theme.el")) :description "Minsk, a theme in deep muted greens" :date (24161 26704) :url "https://github.com/jlpaca/minsk-theme") (mint-mode :source "MELPA" :recipe (:package "mint-mode" :fetcher github :repo "creatorrr/emacs-mint-mode" :files (:defaults "tokens")) :description "Major mode for the Mint programming language" :date (25438 58832) :url "https://github.com/creatorrr/emacs-mint-mode") (mip-mode :source "MELPA" :recipe (:package "mip-mode" :fetcher gitlab :repo "gaudecker/mip-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Virtual projects for emacs" :date (22103 29392) :url "https://gitlab.com/gaudecker/mip-mode") (mips-mode :source "MELPA" :recipe (:package "mips-mode" :repo "hlissner/emacs-mips-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for MIPS assembly" :date (25247 48208) :url "https://github.com/hlissner/emacs-mips-mode") (mise :source "MELPA" :recipe (:package "mise" :fetcher github :repo "liuyinz/mise.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for `mise' cli" :date (26399 64336) :url "https://github.com/liuyinz/mise.el") (mistty :source "MELPA" :recipe (:package "mistty" :fetcher github :repo "szermatt/mistty" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shell/Comint alternative based on term.el" :date (26394 46416) :url "https://github.com/szermatt/mistty") (mix :source "MELPA" :recipe (:package "mix" :fetcher github :repo "ayrat555/mix.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mix Major Mode. Build Elixir using Mix" :date (26029 34256) :url "https://github.com/ayrat555/mix.el") (mixed-pitch :source "MELPA" :recipe (:package "mixed-pitch" :fetcher gitlab :repo "jabranham/mixed-pitch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use a variable pitch, keeping fixed pitch where it's sensible" :date (24639 63696) :url "https://gitlab.com/jabranham/mixed-pitch") (mkdown :source "MELPA" :recipe (:package "mkdown" :fetcher github :repo "ajtulloch/mkdown.el" :files ("*.el" "*.css")) :description "Pretty Markdown previews based on mkdown.com" :date (21366 28224) :url "https://github.com/ajtulloch/mkdown.el") (mlscroll :source "MELPA" :recipe (:package "mlscroll" :repo "jdtsmith/mlscroll" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A scroll bar for the modeline" :date (26389 28496) :url "https://github.com/jdtsmith/mlscroll") (mmm-jinja2 :source "MELPA" :recipe (:package "mmm-jinja2" :repo "glynnforrest/mmm-jinja2" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MMM submode class for Jinja2 Templates" :date (22725 46800) :url "https://github.com/glynnforrest/mmm-jinja2") (mmm-mode :source "MELPA" :recipe (:package "mmm-mode" :repo "dgutov/mmm-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Allow Multiple Major Modes in a buffer" :date (26070 25680) :url "https://github.com/dgutov/mmm-mode") (mmt :source "MELPA" :recipe (:package "mmt" :repo "mrkkrp/mmt" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Missing macro tools for Emacs Lisp" :date (25726 19664) :url "https://github.com/mrkkrp/mmt") (mo-git-blame :source "MELPA" :recipe (:package "mo-git-blame" :repo "mbunkus/mo-git-blame" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interactive, iterative 'git blame' mode for Emacs" :date (22186 33104) :url "https://gitlab.com/mbunkus/mo-git-blame") (mo-vi-ment-mode :source "MELPA" :recipe (:package "mo-vi-ment-mode" :fetcher github :repo "AjayMT/mo-vi-ment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide vi-like cursor movement that's easy on the fingers" :date (23574 48336) :url "https://github.com/AjayMT/mo-vi-ment") (mobdebug-mode :source "MELPA" :recipe (:package "mobdebug-mode" :fetcher github :repo "deftsp/mobdebug-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for MobDebug" :date (21198 65472) :url "https://github.com/deftsp/mobdebug-mode") (mocha :source "MELPA" :recipe (:package "mocha" :repo "scottaj/mocha.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run Mocha or Jasmine tests" :date (24352 37328) :url "https://github.com/scottaj/mocha.el") (mocha-snippets :source "MELPA" :recipe (:package "mocha-snippets" :fetcher github :repo "cowboyd/mocha-snippets.el" :files ("*.el" "snippets")) :description "Yasnippets for the Mocha JS Testing Framework" :date (23734 16976) :url "https://github.com/cowboyd/mocha-snippets.el") (mocker :source "MELPA" :recipe (:package "mocker" :repo "sigma/mocker.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mocking framework for emacs" :date (25312 21968) :url "https://github.com/sigma/mocker.el") (modaled :source "MELPA" :recipe (:package "modaled" :fetcher github :repo "DCsunset/modaled" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Build your own minor modes for modal editing" :date (26277 24528) :url "https://github.com/DCsunset/modaled") (modalka :source "MELPA" :recipe (:package "modalka" :repo "mrkkrp/modalka" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modal editing your way" :date (25726 19664) :url "https://github.com/mrkkrp/modalka") (mode-icons :source "MELPA" :recipe (:package "mode-icons" :fetcher github :repo "ryuslash/mode-icons" :files ("*.el" "icons")) :description "Show icons for modes" :date (25854 11856) :url "https://github.com/ryuslash/mode-icons") (mode-line-bell :source "MELPA" :recipe (:package "mode-line-bell" :fetcher github :repo "purcell/mode-line-bell" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flash the mode line instead of ringing the bell" :date (23510 9040) :url "https://github.com/purcell/mode-line-bell") (mode-line-debug :source "MELPA" :recipe (:package "mode-line-debug" :repo "tarsius/mode-line-debug" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show status of debug-on-error in mode-line" :date (26287 60368) :url "https://github.com/tarsius/mode-line-debug") (mode-line-idle :source "MELPA" :recipe (:package "mode-line-idle" :fetcher codeberg :repo "ideasman42/emacs-mode-line-idle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluate mode line content when idle" :date (26282 42448) :url "https://codeberg.org/ideasman42/emacs-mode-line-idle") (modelica-mode :source "MELPA" :recipe (:package "modelica-mode" :repo "modelica-tools/modelica-mode" :fetcher github :files ("modelica-mode.el")) :description "Major mode for editing Modelica files" :date (25688 4432) :url "https://github.com/modelica-tools/modelica-mode") (modern-cpp-font-lock :source "MELPA" :recipe (:package "modern-cpp-font-lock" :fetcher github :repo "ludwigpacifici/modern-cpp-font-lock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Font-locking for \"Modern C++\"" :date (24682 10448) :url "https://github.com/ludwigpacifici/modern-cpp-font-lock") (modern-fringes :source "MELPA" :recipe (:package "modern-fringes" :repo "SpecialBomb/emacs-modern-fringes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replaces default fringe bitmaps with better looking ones" :date (25158 5712) :url "https://github.com/SpecialBomb/emacs-modern-fringes") (modern-sh :source "MELPA" :recipe (:package "modern-sh" :fetcher github :repo "damon-kwok/modern-sh" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing shell script" :date (24959 976) :url "https://github.com/damon-kwok/modern-sh") (modtime-skip-mode :source "MELPA" :recipe (:package "modtime-skip-mode" :fetcher github :repo "jordonbiondo/modtime-skip-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for disabling modtime and supersession checks on files" :date (21222 47808) :url "https://github.com/jordonbiondo/modtime-skip-mode") (modular-config :source "MELPA" :recipe (:package "modular-config" :fetcher github :repo "SidharthArya/modular-config.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Organize your config into small and loadable modules" :date (24829 53456) :url "https://github.com/SidharthArya/modular-config.el") (modus-themes :source "MELPA" :recipe (:package "modus-themes" :fetcher github :repo "protesilaos/modus-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elegant, highly legible and customizable themes" :date (26398 43472) :url "https://github.com/protesilaos/modus-themes") (moe-theme :source "MELPA" :recipe (:package "moe-theme" :fetcher github :repo "kuanyui/moe-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A colorful eye-candy theme. Moe, moe, kyun!" :date (26261 36304) :url "https://github.com/kuanyui/moe-theme.el") (molar-mass :source "MELPA" :recipe (:package "molar-mass" :fetcher github :repo "sergiruiztrepat/molar-mass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calculates molar mass of a molecule" :date (25387 31568) :url "https://github.com/sergiruiztrepat/molar-mass") (molecule :source "MELPA" :recipe (:package "molecule" :fetcher gitlab :repo "drymerisnothere/molecule-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple wrapper for molecule" :date (23305 51920) :url "https://gitlab.com/drymerisnothere/molecule-el") (molokai-theme :source "MELPA" :recipe (:package "molokai-theme" :repo "alloy-d/color-theme-molokai" :fetcher github :files ("molokai-theme.el")) :description "Molokai theme with Emacs theme engine" :date (25046 1744) :url "https://github.com/alloy-d/color-theme-molokai") (mongo :source "MELPA" :recipe (:package "mongo" :fetcher github :repo "emacsorphanage/mongo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MongoDB driver for Emacs Lisp" :date (21764 41296) :url "https://github.com/emacsorphanage/mongo") (monitor :source "MELPA" :recipe (:package "monitor" :fetcher github :repo "GuiltyDolphin/monitor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for monitoring expressions" :date (22533 15312) :url "https://github.com/GuiltyDolphin/monitor") (monkeytype :source "MELPA" :recipe (:package "monkeytype" :repo "jpablobr/emacs-monkeytype" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for speed typing" :date (24570 6480) :url "https://github.com/jpablobr/emacs-monkeytype") (monky :source "MELPA" :recipe (:package "monky" :fetcher github :repo "ananthakumaran/monky" :files ("*.el" "*.info" "style")) :description "Control Hg from Emacs" :date (25589 12496) :url "https://github.com/ananthakumaran/monky") (mono-complete :source "MELPA" :recipe (:package "mono-complete" :fetcher codeberg :repo "ideasman42/emacs-mono-complete" :files (:defaults "mono-complete-backend-word-predict.py")) :description "Completion suggestions with multiple back-ends" :date (26236 33104) :url "https://codeberg.org/ideasman42/emacs-mono-complete") (monochrome-theme :source "MELPA" :recipe (:package "monochrome-theme" :fetcher github :repo "fxn/monochrome-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark Emacs 24 theme for your focused hacking sessions" :date (21297 57408) :url "https://github.com/fxn/monochrome-theme.el") (monokai-alt-theme :source "MELPA" :recipe (:package "monokai-alt-theme" :repo "dawidof/emacs-monokai-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme with a dark background. Based on sublime monokai theme" :date (22869 27216) :url "https://github.com/dawidof/emacs-monokai-theme") (monokai-pro-theme :source "MELPA" :recipe (:package "monokai-pro-theme" :fetcher github :repo "belak/emacs-monokai-pro-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple theme based on the Monokai Pro Sublime color schemes" :date (25946 30544) :url "https://github.com/belak/emacs-monokai-pro-theme") (monokai-theme :source "MELPA" :recipe (:package "monokai-theme" :repo "oneKelvinSmith/monokai-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A fruity color theme for Emacs" :date (26336 45904) :url "https://github.com/oneKelvinSmith/monokai-emacs") (monotropic-theme :source "MELPA" :recipe (:package "monotropic-theme" :repo "caffo/monotropic-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Monotropic Theme" :date (24978 51792) :url "https://github.com/caffo/monotropic-theme") (monroe :source "MELPA" :recipe (:package "monroe" :fetcher github :repo "sanel/monroe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another client for nREPL" :date (25378 16592) :url "https://github.com/sanel/monroe") (mood-line :source "MELPA" :recipe (:package "mood-line" :fetcher gitlab :repo "jessieh/mood-line" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimal mode line inspired by doom-modeline" :date (25972 54608) :url "https://gitlab.com/jessieh/mood-line") (mood-one-theme :source "MELPA" :recipe (:package "mood-one-theme" :fetcher gitlab :repo "jessieh/mood-one-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark color scheme inspired by the Doom One theme" :date (25507 29648) :url "https://gitlab.com/jessieh/mood-one-theme") (moody :source "MELPA" :recipe (:package "moody" :fetcher github :repo "tarsius/moody" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tabs and ribbons for the mode line" :date (26287 60368) :url "https://github.com/tarsius/moody") (moom :source "MELPA" :recipe (:package "moom" :repo "takaxp/moom" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands to control frame position and size" :date (26283 63312) :url "https://github.com/takaxp/moom") (moonscript :source "MELPA" :recipe (:package "moonscript" :fetcher github :repo "k2052/moonscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing MoonScript code" :date (22951 10064) :url "https://github.com/k2052/moonscript-mode") (moonshot :source "MELPA" :recipe (:package "moonshot" :fetcher github :repo "ageldama/moonshot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run executable file, debug and build commands on project" :date (24791 38224) :url "https://github.com/ageldama/moonshot") (morganey-mode :source "MELPA" :recipe (:package "morganey-mode" :repo "morganey-lang/morganey-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Morganey files" :date (22654 34256) :url "https://github.com/morganey-lang/morganey-mode") (morgentau-theme :source "MELPA" :recipe (:package "morgentau-theme" :fetcher github :repo "Melchizedek6809/morgentau-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tango-based custom theme" :date (25140 62160) :url "https://github.com/Melchizedek6809/morgentau-theme") (morlock :source "MELPA" :recipe (:package "morlock" :repo "tarsius/morlock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "More font-lock keywords for elisp" :date (26363 4432) :url "https://github.com/tarsius/morlock") (morrowind-theme :source "MELPA" :recipe (:package "morrowind-theme" :fetcher github :repo "SamuelBanya/morrowind-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme" :date (25855 32720) :url "https://github.com/SamuelBanya/morrowind-theme") (mos-mode :source "MELPA" :recipe (:package "mos-mode" :fetcher github :repo "themkat/mos-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MOS toolkit usage" :date (25490 20560) :url "https://github.com/themkat/mos-mode") (mosey :source "MELPA" :recipe (:package "mosey" :fetcher github :repo "alphapapa/mosey.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mosey around your buffers" :date (23329 34256) :url "https://github.com/alphapapa/mosey.el") (most-faces :source "MELPA" :recipe (:package "most-faces" :fetcher codeberg :repo "mekeor/most-faces" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A List of Most Available Faces" :date (26227 18128) :url "https://codeberg.org/mekeor/most-faces") (most-used-words :source "MELPA" :recipe (:package "most-used-words" :fetcher github :repo "udyantw/most-used-words" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display most used words in buffer" :date (24365 49360) :url "https://github.com/udyantw/most-used-words") (mote-mode :source "MELPA" :recipe (:package "mote-mode" :fetcher github :repo "inkel/mote-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mote minor mode" :date (22178 38992) :url "https://github.com/inkel/mote-mode") (motion-mode :source "MELPA" :recipe (:package "motion-mode" :fetcher github :repo "ainame/motion-mode" :files ("*.el" "bin" "lib")) :description "Major mode for RubyMotion enviroment" :date (21532 35648) :url "https://github.com/ainame/motion-mode") (move-dup :source "MELPA" :recipe (:package "move-dup" :fetcher github :repo "wyuenho/move-dup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eclipse-like moving and duplicating lines or rectangles" :date (24592 33488) :url "https://github.com/wyuenho/move-dup") (move-mode :source "MELPA" :recipe (:package "move-mode" :repo "amnn/move-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing Move language" :date (26132 23248) :url "https://github.com/amnn/move-mode") (move-text :source "MELPA" :recipe (:package "move-text" :fetcher github :repo "emacsfodder/move-text" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Move current line or region with M-up or M-down" :date (25964 60496) :url "https://github.com/emacsfodder/move-text") (mowedline :source "MELPA" :recipe (:package "mowedline" :fetcher github :repo "retroj/mowedline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp utilities for using mowedline" :date (23094 56016) :url "https://github.com/retroj/mowedline") (mowie :source "MELPA" :recipe (:package "mowie" :fetcher codeberg :repo "mekeor/mowie" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle Through Point-Moving Commands" :date (26235 12240) :url "https://codeberg.org/mekeor/mowie") (mozc :source "MELPA" :recipe (:package "mozc" :fetcher github :repo "google/mozc" :files ("src/unix/emacs/mozc.el")) :description "Minor mode to input Japanese with Mozc" :date (26278 45392) :url "https://github.com/google/mozc") (mozc-cand-posframe :source "MELPA" :recipe (:package "mozc-cand-posframe" :fetcher github :repo "akirak/mozc-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Posframe frontend for mozc.el" :date (24125 53200) :url "https://github.com/akirak/mozc-posframe") (mozc-im :source "MELPA" :recipe (:package "mozc-im" :fetcher github :repo "d5884/mozc-im" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mozc with input-method-function interface" :date (22284 4176) :url "https://github.com/d5884/mozc-im") (mozc-popup :source "MELPA" :recipe (:package "mozc-popup" :fetcher github :repo "d5884/mozc-popup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mozc with popup" :date (21739 38096) :url "https://github.com/d5884/mozc-popup") (mozc-temp :source "MELPA" :recipe (:package "mozc-temp" :repo "HKey/mozc-temp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use mozc temporarily" :date (22226 3664) :url "https://github.com/HKey/mozc-temp") (mpages :source "MELPA" :recipe (:package "mpages" :fetcher github :repo "slevin/mpages" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs buffer for quickly writing your Morning Pages" :date (21918 57552) :url "https://github.com/slevin/mpages") (mpdel :source "MELPA" :recipe (:package "mpdel" :fetcher github :repo "mpdel/mpdel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play and control your MPD music" :date (25843 41552) :url "https://github.com/mpdel/mpdel") (mpdel-embark :source "MELPA" :recipe (:package "mpdel-embark" :fetcher github :repo "mpdel/mpdel-embark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate MPDel with Embark" :date (25523 17872) :url "https://github.com/mpdel/mpdel-embark") (mpdmacs :source "MELPA" :recipe (:package "mpdmacs" :fetcher github :repo "sp1ff/mpdmacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lightweight MPD client" :date (26344 40016) :url "https://github.com/sp1ff/mpdmacs") (mpmc-queue :source "MELPA" :recipe (:package "mpmc-queue" :repo "smizoe/mpmc-queue" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A multiple-producer-multiple-consumer queue" :date (23193 47952) :url "https://github.com/smizoe/mpmc-queue") (mpv :source "MELPA" :recipe (:package "mpv" :repo "kljohann/mpv.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control mpv for easy note-taking" :date (25318 60752) :url "https://github.com/kljohann/mpv.el") (mpvi :source "MELPA" :recipe (:package "mpvi" :fetcher github :repo "lorniu/mpvi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Media tool based on EMMS and MPV" :date (26099 25936) :url "https://github.com/lorniu/mpvi") (mqr :source "MELPA" :recipe (:package "mqr" :repo "calancha/multi-replace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi-dimensional query and replace" :date (23305 51920) :url "https://github.com/calancha/multi-replace") (mqtt-mode :source "MELPA" :recipe (:package "mqtt-mode" :repo "andrmuel/mqtt-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for interaction with MQTT servers" :date (23325 37200) :url "https://github.com/andrmuel/mqtt-mode") (msgpack :source "MELPA" :recipe (:package "msgpack" :fetcher github :repo "xuchunyang/msgpack.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read and write MessagePack object" :date (24183 53712) :url "https://github.com/xuchunyang/msgpack.el") (msvc :source "MELPA" :recipe (:package "msvc" :fetcher github :repo "yaruopooner/msvc" :files (:defaults "*.cpp" "*.bat" "*.vcxproj")) :description "Microsoft Visual C/C++ mode" :date (25417 52688) :url "https://github.com/yaruopooner/msvc") (mtg-deck-mode :source "MELPA" :recipe (:package "mtg-deck-mode" :fetcher github :repo "mattiasb/mtg-deck-mode" :files (:defaults "formats")) :description "Major mode to edit MTG decks" :date (25962 18768) :url "https://github.com/mattiasb/mtg-deck-mode") (mu-cite :source "MELPA" :recipe (:package "mu-cite" :repo "ksato9700/mu-cite" :fetcher github :version-regexp "ignore-all-tags" :files ("*.el" (:exclude "mu-bbdb.el"))) :description "A library to provide MIME features" :date (23876 42064) :url "https://github.com/ksato9700/mu-cite") (mu2tex :source "MELPA" :recipe (:package "mu2tex" :fetcher github :repo "cdominik/mu2tex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert plain text molecule names and units to TeX" :date (24249 48336) :url "https://github.com/cdominik/mu2tex") (mu4e-alert :source "MELPA" :recipe (:package "mu4e-alert" :fetcher github :repo "xzz53/mu4e-alert" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Desktop notification for mu4e" :date (26336 45904) :url "https://github.com/xzz53/mu4e-alert") (mu4e-column-faces :source "MELPA" :recipe (:package "mu4e-column-faces" :repo "Alexander-Miller/mu4e-column-faces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Faces for individual mu4e columns" :date (26103 22992) :url "https://github.com/Alexander-Miller/mu4e-column-faces") (mu4e-conversation :source "MELPA" :recipe (:package "mu4e-conversation" :fetcher gitlab :repo "ambrevar/mu4e-conversation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show a complete thread in a single buffer" :date (23804 8656) :url "https://gitlab.com/ambrevar/mu4e-conversation") (mu4e-jump-to-list :source "MELPA" :recipe (:package "mu4e-jump-to-list" :repo "wavexx/mu4e-jump-to-list.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mu4e jump-to-list extension" :date (25481 5584) :url "https://gitlab.com/wavexx/mu4e-jump-to-list.el") (mu4e-marker-icons :source "MELPA" :recipe (:package "mu4e-marker-icons" :url "https://repo.or.cz/mu4e-marker-icons.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display icons for mu4e markers" :date (25668 19152) :url "https://repo.or.cz/mu4e-marker-icons.git") (mu4e-overview :source "MELPA" :recipe (:package "mu4e-overview" :fetcher github :repo "mkcms/mu4e-overview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show overview of maildir" :date (26406 37584) :url "https://github.com/mkcms/mu4e-overview") (mu4e-query-fragments :source "MELPA" :recipe (:package "mu4e-query-fragments" :repo "wavexx/mu4e-query-fragments.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mu4e query fragments extension" :date (26140 17360) :url "https://gitlab.com/wavexx/mu4e-query-fragments.el") (mu4e-views :source "MELPA" :recipe (:package "mu4e-views" :fetcher github :repo "lordpretzel/mu4e-views" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View emails in mu4e using xwidget-webkit" :date (26121 52944) :url "https://github.com/lordpretzel/mu4e-views") (mu4easy :source "MELPA" :recipe (:package "mu4easy" :repo "danielfleischer/mu4easy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Packages + configs for using mu4e with multiple accounts" :date (26372 19408) :url "https://github.com/danielfleischer/mu4easy") (muban :source "MELPA" :recipe (:package "muban" :repo "jiahaoli95/muban.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight template expansion tool" :date (23250 27600) :url "https://github.com/jiahaoli95/muban.el") (mugur :source "MELPA" :recipe (:package "mugur" :fetcher github :repo "mihaiolteanu/mugur" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configurator for QMK compatible keyboards" :date (26398 43472) :url "https://github.com/mihaiolteanu/mugur") (multi :source "MELPA" :recipe (:package "multi" :fetcher github :repo "kurisuwhyte/emacs-multi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clojure-style multi-methods for emacs lisp" :date (21081 43584) :url "https://github.com/kurisuwhyte/emacs-multi") (multi-compile :source "MELPA" :recipe (:package "multi-compile" :fetcher github :repo "ReanGD/emacs-multi-compile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi target interface to compile" :date (24974 54736) :url "https://github.com/ReanGD/emacs-multi-compile") (multi-line :source "MELPA" :recipe (:package "multi-line" :repo "colonelpanic8/multi-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi-line statements" :date (25785 41040) :url "https://github.com/colonelpanic8/multi-line") (multi-project :source "MELPA" :recipe (:package "multi-project" :fetcher github :repo "ellisvelo/multi-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find files, compile, and search in multiple projects" :date (26020 19280) :url "https://github.com/ellisvelo/multi-project") (multi-run :source "MELPA" :recipe (:package "multi-run" :repo "sagarjha/multi-run" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Efficiently manage multiple remote nodes" :date (24567 30288) :url "https://github.com/sagarjha/multi-run") (multi-term :source "MELPA" :recipe (:package "multi-term" :fetcher github :repo "manateelazycat/multi-term" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Managing multiple terminal buffers in Emacs" :date (24252 24528) :url "https://github.com/manateelazycat/multi-term") (multi-vterm :source "MELPA" :recipe (:package "multi-vterm" :fetcher github :repo "suonlight/multi-vterm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Like multi-term.el but for vterm" :date (25438 58832) :url "https://github.com/suonlight/multi-vterm") (multi-web-mode :source "MELPA" :recipe (:package "multi-web-mode" :repo "fgallina/multi-web-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple major mode support for web editing" :date (21015 48960) :url "https://github.com/fgallina/multi-web-mode") (multicolumn :source "MELPA" :recipe (:package "multicolumn" :repo "Lindydancer/multicolumn" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Creating and managing multiple side-by-side windows" :date (21710 37840) :url "https://github.com/Lindydancer/multicolumn") (multifiles :source "MELPA" :recipe (:package "multifiles" :repo "magnars/multifiles.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View and edit parts of multiple files in one buffer" :date (20923 30272) :url "https://github.com/magnars/multifiles.el") (multiple-cursors :source "MELPA" :recipe (:package "multiple-cursors" :fetcher github :repo "magnars/multiple-cursors.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple cursors for Emacs" :date (26071 46544) :url "https://github.com/magnars/multiple-cursors.el") (multistate :source "MELPA" :recipe (:package "multistate" :repo "matsievskiysv/multistate" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multistate mode" :date (24588 36432) :url "https://gitlab.com/matsievskiysv/multistate") (multitran :source "MELPA" :recipe (:package "multitran" :fetcher github :repo "zevlg/multitran.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to multitran" :date (26049 19536) :url "https://github.com/zevlg/multitran.el") (musicbrainz :source "MELPA" :recipe (:package "musicbrainz" :repo "zzkt/metabrainz" :fetcher github :files ("musicbrainz.el")) :description "MusicBrainz API interface" :date (25717 4688) :url "https://github.com/zzkt/metabrainz") (mustache :source "MELPA" :recipe (:package "mustache" :fetcher github :repo "Wilfred/mustache.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mustache templating library in emacs lisp" :date (25775 5200) :url "https://github.com/Wilfred/mustache.el") (mustache-mode :source "MELPA" :recipe (:package "mustache-mode" :fetcher github :repo "mustache/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Mustache files" :date (21577 24128) :url "https://github.com/mustache/emacs") (mustang-theme :source "MELPA" :recipe (:package "mustang-theme" :repo "mswift42/mustang-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of vim's mustang theme" :date (22894 30416) :url "https://github.com/mswift42/mustang-theme") (mustard-theme :source "MELPA" :recipe (:package "mustard-theme" :fetcher github :repo "emacsfodder/emacs-mustard-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Mustard (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-mustard-theme") (mutant :source "MELPA" :recipe (:package "mutant" :fetcher github :repo "p-lambert/mutant.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for the Mutant testing tool" :date (22179 59856) :url "https://github.com/p-lambert/mutant.el") (mutt-mode :source "MELPA" :recipe (:package "mutt-mode" :fetcher gitlab :repo "flexw/mutt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing mutt configuration" :date (23996 40144) :url "https://gitlab.com/flexw/mutt-mode") (mvn :source "MELPA" :recipe (:package "mvn" :fetcher github :repo "apg/mvn-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers for compiling with maven" :date (23474 35536) :url "https://github.com/apg/mvn-el") (mw-thesaurus :source "MELPA" :recipe (:package "mw-thesaurus" :repo "agzam/mw-thesaurus.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Merriam-Webster Thesaurus" :date (25672 16208) :url "https://github.com/agzam/mw-thesaurus.el") (mwim :source "MELPA" :recipe (:package "mwim" :repo "alezost/mwim.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch between the beginning/end of line or code" :date (23525 62800) :url "https://github.com/alezost/mwim.el") (mxf-view :source "MELPA" :recipe (:package "mxf-view" :fetcher github :repo "t-suwa/mxf-view" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple MXF viewer" :date (23271 33744) :url "https://github.com/t-suwa/mxf-view") (my-repo-pins :source "MELPA" :recipe (:package "my-repo-pins" :fetcher github :repo "picnoir/my-repo-pins" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep your git repositories organized" :date (25545 44880) :url "https://github.com/picnoir/my-repo-pins") (myanmar-input-methods :source "MELPA" :recipe (:package "myanmar-input-methods" :repo "yelinkyaw/emacs-myanmar-input-methods" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Input Method for Myanmar" :date (22156 11984) :url "https://github.com/yelinkyaw/emacs-myanmar-input-methods") (mybigword :source "MELPA" :recipe (:package "mybigword" :repo "redguardtoo/mybigword" :fetcher github :files ("mybigword.el" "eng.zipf")) :description "Vocabulary builder using Zipf to extract English big words" :date (25810 44240) :url "https://github.com/redguardtoo/mybigword") (mybuild-mode :source "MELPA" :recipe (:package "mybuild-mode" :fetcher github :repo "easimonenko/mybuild-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Mybuild files from Embox" :date (25407 16848) :url "https://github.com/easimonenko/mybuild-mode") (mykie :source "MELPA" :recipe (:package "mykie" :fetcher github :repo "yuutayamada/mykie-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command multiplexer: Register multiple functions to a keybind" :date (21957 7248) :url "https://github.com/yuutayamada/mykie-el") (mynt-mode :source "MELPA" :recipe (:package "mynt-mode" :fetcher github :repo "cbrst/mynt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to work with the mynt static site generator" :date (21841 6224) :url "https://github.com/cbrst/mynt-mode") (myrddin-mode :source "MELPA" :recipe (:package "myrddin-mode" :fetcher sourcehut :repo "jakob/myrddin-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Myrddin source files" :date (24066 31824) :url "https://git.sr.ht/~jakob/myrddin-mode") (mysql-to-org :source "MELPA" :recipe (:package "mysql-to-org" :fetcher github :repo "mallt/mysql-to-org-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to output the results of mysql queries to org tables" :date (24784 64976) :url "https://github.com/mallt/mysql-to-org-mode") (myterminal-controls :source "MELPA" :recipe (:package "myterminal-controls" :repo "myTerminal/myterminal-controls" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick toggle controls at a key-stroke" :date (24882 36048) :url "https://github.com/myTerminal/myterminal-controls") (n4js :source "MELPA" :recipe (:package "n4js" :fetcher github :repo "tmtxt/n4js.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Neo4j Shell" :date (21924 9936) :url "https://github.com/tmtxt/n4js.el") (naga-theme :source "MELPA" :recipe (:package "naga-theme" :fetcher github :repo "kenranunderscore/emacs-naga-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme with green foreground color" :date (26260 15440) :url "https://github.com/kenranunderscore/emacs-naga-theme") (name-this-color :source "MELPA" :recipe (:package "name-this-color" :repo "knl/name-this-color.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Match RGB codes to names easily and precisely" :date (22045 28880) :url "https://github.com/knl/name-this-color.el") (named-timer :source "MELPA" :recipe (:package "named-timer" :fetcher github :repo "DarwinAwardWinner/emacs-named-timer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplified timer management for Emacs Lisp" :date (23539 9296) :url "https://github.com/DarwinAwardWinner/emacs-named-timer") (nameframe :source "MELPA" :recipe (:package "nameframe" :fetcher github :repo "john2x/nameframe" :files ("nameframe.el")) :description "Manage frames by name" :date (25428 22992) :url "https://github.com/john2x/nameframe") (nameframe-perspective :source "MELPA" :recipe (:package "nameframe-perspective" :fetcher github :repo "john2x/nameframe" :files ("nameframe-perspective.el")) :description "Nameframe integration with perspective.el" :date (25428 22992) :url "https://github.com/john2x/nameframe") (nameframe-project :source "MELPA" :recipe (:package "nameframe-project" :fetcher github :repo "john2x/nameframe" :files ("nameframe-project.el")) :description "Nameframe integration with project.el" :date (25429 43856) :url "https://github.com/john2x/nameframe") (nameframe-projectile :source "MELPA" :recipe (:package "nameframe-projectile" :fetcher github :repo "john2x/nameframe" :files ("nameframe-projectile.el")) :description "Nameframe integration with Projectile" :date (25428 22992) :url "https://github.com/john2x/nameframe") (nameless :source "MELPA" :recipe (:package "nameless" :repo "Malabarba/Nameless" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hide package namespace in your emacs-lisp code" :date (25535 9040) :url "https://github.com/Malabarba/Nameless") (names :source "MELPA" :recipe (:package "names" :repo "Malabarba/names" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols" :date (25514 2896) :url "https://github.com/Malabarba/names") (namespaces :source "MELPA" :recipe (:package "namespaces" :fetcher github :repo "chrisbarrett/elisp-namespaces" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An implementation of namespaces for Elisp, with an emphasis on immutabilty" :date (20816 44224) :url "https://github.com/chrisbarrett/elisp-namespaces") (nand2tetris :source "MELPA" :recipe (:package "nand2tetris" :fetcher github :repo "CestDiego/nand2tetris.el" :files ("nand2tetris.el" "nand2tetris-core.el" "snippets")) :description "Major mode for HDL files in the nand2tetris course" :date (23072 29008) :url "https://github.com/CestDiego/nand2tetris.el") (nand2tetris-assembler :source "MELPA" :recipe (:package "nand2tetris-assembler" :fetcher github :repo "CestDiego/nand2tetris.el" :files ("nand2tetris-assembler.el")) :description "Assembler For the Nand2tetris Course" :date (23072 29008) :url "https://github.com/CestDiego/nand2tetris.el") (nanowrimo :source "MELPA" :recipe (:package "nanowrimo" :fetcher gitlab :repo "gvol/nanowrimo.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track progress for nanowrimo" :date (22074 29136) :url "https://gitlab.com/gvol/nanowrimo.el") (naquadah-theme :source "MELPA" :recipe (:package "naquadah-theme" :fetcher github :repo "jd/naquadah-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme based on Tango color set" :date (23667 1488) :url "https://github.com/jd/naquadah-theme") (narrow-reindent :source "MELPA" :recipe (:package "narrow-reindent" :fetcher github :repo "emallson/narrow-reindent.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Defines a minor mode to left-align narrowed regions" :date (21934 45776) :url "https://github.com/emallson/narrow-reindent.el") (narrowed-page-navigation :source "MELPA" :recipe (:package "narrowed-page-navigation" :fetcher github :repo "david-christiansen/narrowed-page-navigation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for showing one page at a time" :date (21678 61392) :url "https://github.com/david-christiansen/narrowed-page-navigation") (narumi :source "MELPA" :recipe (:package "narumi" :repo "ryotaro612/narumi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dashboard that displays a ramdom sampled image" :date (25115 58960) :url "https://github.com/ryotaro612/narumi") (nash-mode :source "MELPA" :recipe (:package "nash-mode" :fetcher github :repo "i4ki/nash-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Nash major mode" :date (22468 41552) :url "https://github.com/i4ki/nash-mode.el") (nasm-mode :source "MELPA" :recipe (:package "nasm-mode" :repo "skeeto/nasm-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "NASM x86 assembly major mode" :date (26214 6096) :url "https://github.com/skeeto/nasm-mode") (native-complete :source "MELPA" :recipe (:package "native-complete" :fetcher github :repo "CeleritasCelery/emacs-native-shell-complete" :files ("native-complete.el")) :description "Shell completion using native complete mechanisms" :date (26334 4176) :url "https://github.com/CeleritasCelery/emacs-native-shell-complete") (nav :source "MELPA" :recipe (:package "nav" :fetcher github :repo "ijt/emacs-nav" :files ("ack*" "nav.el")) :description "Emacs mode for filesystem navigation" :date (20390 55360) :url "https://github.com/ijt/emacs-nav") (nav-flash :source "MELPA" :recipe (:package "nav-flash" :repo "rolandwalker/nav-flash" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Briefly highlight the current line" :date (25311 1104) :url "https://github.com/rolandwalker/nav-flash") (navi-mode :source "MELPA" :recipe (:package "navi-mode" :fetcher github :repo "alphapapa/navi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for easy buffer-navigation" :date (24542 27088) :url "https://github.com/alphapapa/navi") (navi2ch :source "MELPA" :recipe (:package "navi2ch" :fetcher github :repo "naota/navi2ch" :files ("navi2ch*.el" "contrib/*.el" ("icons" "icons/*.xpm"))) :description "Navigator for 2ch for Emacsen" :date (24113 62032) :url "https://github.com/naota/navi2ch") (navigel :source "MELPA" :recipe (:package "navigel" :fetcher github :repo "DamienCassou/navigel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Facilitate the creation of tabulated-list based UIs" :date (26323 33872) :url "https://github.com/DamienCassou/navigel") (navorski :source "MELPA" :recipe (:package "navorski" :repo "roman/navorski.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helping you live in the terminal, like Viktor did" :date (21630 10320) :url "https://github.com/roman/navorski.el") (naysayer-theme :source "MELPA" :recipe (:package "naysayer-theme" :repo "nickav/naysayer-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The naysayer color theme" :date (26067 49488) :url "https://github.com/nickav/naysayer-theme.el") (ncl-mode :source "MELPA" :recipe (:package "ncl-mode" :fetcher github :repo "yyr/ncl-mode" :files ("*.el" "snippets" "snippets_generated" "dict" "tools" "img")) :description "Major Mode for editing NCL scripts and other goodies" :date (23150 14800) :url "https://github.com/yyr/ncl-mode") (nclip :source "MELPA" :recipe (:package "nclip" :fetcher github :repo "maio/nclip.el" :files ("nclip.el" "nclip.rb" "nclip.py")) :description "Network (HTTP) Clipboard" :date (20926 6464) :url "https://github.com/maio/nclip.el") (neato-graph-bar :source "MELPA" :recipe (:package "neato-graph-bar" :fetcher gitlab :repo "RobertCochran/neato-graph-bar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Neat-o graph bars CPU/memory etc" :date (23552 21328) :url "https://gitlab.com/RobertCochran/neato-graph-bar") (neil :source "MELPA" :recipe (:package "neil" :fetcher github :repo "babashka/neil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Companion for Babashka Neil" :date (26384 10576) :url "https://github.com/babashka/neil") (nemerle :source "MELPA" :recipe (:package "nemerle" :fetcher github :repo "rsdn/nemerle" :files ("misc/nemerle.el")) :description "Major mode for editing nemerle programs" :date (22547 48208) :url "https://github.com/rsdn/nemerle") (neon-mode :source "MELPA" :recipe (:package "neon-mode" :fetcher github :repo "Fuco1/neon-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple major mode for editing neon files" :date (23238 36432) :url "https://github.com/Fuco1/neon-mode") (neotree :source "MELPA" :recipe (:package "neotree" :repo "jaypei/emacs-neotree" :fetcher github :files (:defaults "icons")) :description "A tree plugin like NerdTree for Vim" :date (26268 9552) :url "https://github.com/jaypei/emacs-neotree") (nerd-icons :source "MELPA" :recipe (:package "nerd-icons" :repo "rainstormstudio/nerd-icons.el" :fetcher github :files (:defaults "data")) :description "Emacs Nerd Font Icons Library" :date (26380 13520) :url "https://github.com/rainstormstudio/nerd-icons.el") (nerd-icons-completion :source "MELPA" :recipe (:package "nerd-icons-completion" :repo "rainstormstudio/nerd-icons-completion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add icons to completion candidates" :date (26281 21584) :url "https://github.com/rainstormstudio/nerd-icons-completion") (nerd-icons-corfu :source "MELPA" :recipe (:package "nerd-icons-corfu" :fetcher github :repo "LuigiPiucco/nerd-icons-corfu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Icons for Corfu via nerd-icons" :date (26403 61392) :url "https://github.com/LuigiPiucco/nerd-icons-corfu") (nerd-icons-dired :source "MELPA" :recipe (:package "nerd-icons-dired" :repo "rainstormstudio/nerd-icons-dired" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shows icons for each file in dired mode" :date (26378 58192) :url "https://github.com/rainstormstudio/nerd-icons-dired") (nerd-icons-ibuffer :source "MELPA" :recipe (:package "nerd-icons-ibuffer" :repo "seagle0128/nerd-icons-ibuffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display nerd icons in ibuffer" :date (25660 25040) :url "https://github.com/seagle0128/nerd-icons-ibuffer") (nerd-icons-ivy-rich :source "MELPA" :recipe (:package "nerd-icons-ivy-rich" :fetcher github :repo "seagle0128/nerd-icons-ivy-rich" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Excellent experience with nerd icons for ivy/counsel" :date (25785 41040) :url "https://github.com/seagle0128/nerd-icons-ivy-rich") (nerdtab :source "MELPA" :recipe (:package "nerdtab" :repo "casouri/nerdtab" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keyboard-oriented tabs" :date (23405 64720) :url "https://github.com/casouri/nerdtab") (netease-cloud-music :source "MELPA" :recipe (:package "netease-cloud-music" :repo "SpringHan/netease-cloud-music.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Netease Cloud Music client" :date (25993 60752) :url "https://github.com/SpringHan/netease-cloud-music.el") (netease-music :source "MELPA" :recipe (:package "netease-music" :repo "nicehiro/netease-music" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Listen netease music" :date (24690 4560) :url "https://github.com/nicehiro/netease-music") (netherlands-holidays :source "MELPA" :recipe (:package "netherlands-holidays" :repo "abo-abo/netherlands-holidays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Netherlands holidays for Emacs calendar" :date (21710 37840) :url "https://github.com/abo-abo/netherlands-holidays") (netrunner :source "MELPA" :recipe (:package "netrunner" :repo "Kungsgeten/netrunner" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create Android: Netrunner decklists using Company, Helm and org-mode" :date (22483 8912) :url "https://github.com/Kungsgeten/netrunner") (network-watch :source "MELPA" :recipe (:package "network-watch" :repo "jamiguet/network-watch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for intermittent network connectivity" :date (23061 58704) :url "https://github.com/jamiguet/network-watch") (neuron-mode :source "MELPA" :recipe (:package "neuron-mode" :fetcher github :repo "felko/neuron-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing zettelkasten notes using neuron" :date (25300 30800) :url "https://github.com/felko/neuron-mode") (neut-mode :source "MELPA" :recipe (:package "neut-mode" :fetcher github :repo "vekatze/neut-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for Neut" :date (26360 28240) :url "https://github.com/vekatze/neut-mode") (never-comment :source "MELPA" :recipe (:package "never-comment" :fetcher github :repo "To1ne/never-comment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Never blocks are comment" :date (21191 5824) :url "https://github.com/To1ne/never-comment") (newlisp-mode :source "MELPA" :recipe (:package "newlisp-mode" :fetcher github :repo "kosh04/newlisp-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "NewLISP editing mode for Emacs" :date (22223 27472) :url "https://github.com/kosh04/newlisp-mode") (newspeak-mode :source "MELPA" :recipe (:package "newspeak-mode" :fetcher github :repo "danielsz/newspeak-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Newspeak programming language" :date (24931 21584) :url "https://github.com/danielsz/newspeak-mode") (nexus :source "MELPA" :recipe (:package "nexus" :fetcher github :repo "juergenhoetzel/emacs-nexus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "REST Client for Nexus Maven Repository servers" :date (25361 7504) :url "https://github.com/juergenhoetzel/emacs-nexus") (nezburn-theme :source "MELPA" :recipe (:package "nezburn-theme" :fetcher github :repo "lanjoni/nezburn" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A low contrast color theme for Emacs (inspired by zenburn)" :date (25792 14288) :url "https://github.com/lanjoni/nezburn") (ng2-mode :source "MELPA" :recipe (:package "ng2-mode" :fetcher github :repo "AdamNiederer/ng2-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major modes for editing Angular 2" :date (24520 80) :url "https://github.com/AdamNiederer/ng2-mode") (nginx-mode :source "MELPA" :recipe (:package "nginx-mode" :fetcher github :repo "ajc/nginx-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing nginx config files" :date (26136 20304) :url "https://github.com/ajc/nginx-mode") (niceify-info :source "MELPA" :recipe (:package "niceify-info" :fetcher github :repo "aaron-em/niceify-info.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve usability of Info pages" :date (22289 22096) :url "https://github.com/aaron-em/niceify-info.el") (nickel-mode :source "MELPA" :recipe (:package "nickel-mode" :repo "nickel-lang/nickel-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Nickel source code" :date (26178 32592) :url "https://github.com/nickel-lang/nickel-mode") (niconama :source "MELPA" :recipe (:package "niconama" :fetcher github :repo "NOBUTOKA/niconama.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tools for Niconico Live Broadcast" :date (22964 22096) :url "https://github.com/NOBUTOKA/niconama.el") (night-owl-theme :source "MELPA" :recipe (:package "night-owl-theme" :repo "aaronjensen/night-owl-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme for the night owls out there" :date (24303 51792) :url "https://github.com/aaronjensen/night-owl-emacs") (nikki :source "MELPA" :recipe (:package "nikki" :repo "th994/nikki" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple diary mode" :date (24634 45776) :url "https://github.com/th994/nikki") (nikola :source "MELPA" :recipe (:package "nikola" :fetcher gitlab :repo "drymerisnothere/nikola-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple wrapper for nikola" :date (22873 24272) :url "https://gitlab.com/drymerisnothere/nikola-el") (nim-mode :source "MELPA" :recipe (:package "nim-mode" :fetcher github :repo "nim-lang/nim-mode" :old-names (nimrod-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Nim programming language" :date (26067 49488) :url "https://github.com/nim-lang/nim-mode") (nimbus-theme :source "MELPA" :recipe (:package "nimbus-theme" :fetcher github :repo "mrcnski/nimbus-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Nimbus dark theme" :date (26306 24784) :url "https://github.com/mrcnski/nimbus-theme") (ninja-mode :source "MELPA" :recipe (:package "ninja-mode" :fetcher github :repo "jhasse/ninja-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing .ninja files" :date (26406 37584) :url "https://github.com/jhasse/ninja-emacs") (nix-buffer :source "MELPA" :recipe (:package "nix-buffer" :fetcher github :repo "shlevy/nix-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set up buffer environments with nix" :date (23168 44752) :url "https://github.com/shlevy/nix-buffer") (nix-env-install :source "MELPA" :recipe (:package "nix-env-install" :fetcher github :repo "akirak/nix-env-install" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Install packages using nix-env" :date (24371 1744) :url "https://github.com/akirak/nix-env-install") (nix-haskell-mode :source "MELPA" :recipe (:package "nix-haskell-mode" :fetcher github :repo "matthewbauer/nix-haskell-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haskell-mode integrations for Nix" :date (23812 2768) :url "https://github.com/matthewbauer/nix-haskell-mode") (nix-mode :source "MELPA" :recipe (:package "nix-mode" :fetcher github :repo "NixOS/nix-mode" :files (:defaults (:exclude "nix-company.el" "nix-mode-mmm.el"))) :description "Major mode for editing .nix files" :date (25665 42960) :url "https://github.com/NixOS/nix-mode") (nix-modeline :source "MELPA" :recipe (:package "nix-modeline" :repo "ocelot-project/nix-modeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Info about in-progress Nix evaluations on your modeline" :date (24682 10448) :url "https://github.com/ocelot-project/nix-modeline") (nix-sandbox :source "MELPA" :recipe (:package "nix-sandbox" :fetcher github :repo "nix-community/nix-emacs" :version-regexp "missing-from-latest" :files ("nix-sandbox.el")) :description "Utility functions to work with nix-shell sandboxes" :date (24667 43088) :url "https://github.com/nix-community/nix-emacs") (nix-ts-mode :source "MELPA" :recipe (:package "nix-ts-mode" :fetcher github :repo "nix-community/nix-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Nix expressions, powered by tree-sitter" :date (26361 49104) :url "https://github.com/nix-community/nix-ts-mode") (nix-update :source "MELPA" :recipe (:package "nix-update" :repo "jwiegley/nix-update-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Update \"fetch\" blocks in .nix expressions" :date (25338 46032) :url "https://github.com/jwiegley/nix-update-el") (nixfmt :source "MELPA" :recipe (:package "nixfmt" :fetcher github :repo "purcell/emacs-nixfmt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat Nix using nixfmt" :date (26272 6608) :url "https://github.com/purcell/emacs-nixfmt") (nixos-options :source "MELPA" :recipe (:package "nixos-options" :fetcher github :repo "nix-community/nix-emacs" :files ("nixos-options.el")) :description "Interface for browsing and completing NixOS options" :date (22201 464) :url "https://github.com/nix-community/nix-emacs") (nixpkgs-fmt :source "MELPA" :recipe (:package "nixpkgs-fmt" :fetcher github :repo "purcell/emacs-nixpkgs-fmt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat Nix using nixpkgs-fmt" :date (24189 6096) :url "https://github.com/purcell/emacs-nixpkgs-fmt") (nlinum-hl :source "MELPA" :recipe (:package "nlinum-hl" :repo "hlissner/emacs-nlinum-hl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Heal nlinum's line numbers" :date (24973 33872) :url "https://github.com/hlissner/emacs-nlinum-hl") (nlinum-relative :source "MELPA" :recipe (:package "nlinum-relative" :repo "xcodebuild/nlinum-relative" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Relative line number with nlinum" :date (22342 4688) :url "https://github.com/xcodebuild/nlinum-relative") (nndiscourse :source "MELPA" :recipe (:package "nndiscourse" :repo "dickmao/nndiscourse" :fetcher github :files ("nndiscourse.el" ("nndiscourse" "nndiscourse/Gemfile" "nndiscourse/Gemfile.lock" "nndiscourse/nndiscourse.gemspec" "nndiscourse/nndiscourse.thor" "nndiscourse/lib"))) :description "Gnus backend for Discourse" :date (26380 13520) :url "https://github.com/dickmao/nndiscourse") (nnhackernews :source "MELPA" :recipe (:package "nnhackernews" :repo "dickmao/nnhackernews" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnus backend for Hacker News" :date (25764 34896) :url "https://github.com/dickmao/nnhackernews") (nnir-est :source "MELPA" :recipe (:package "nnir-est" :repo "kawabata/nnir-est" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnus nnir interface for HyperEstraier" :date (23363 52432) :url "https://github.com/kawabata/nnir-est") (nnreddit :source "MELPA" :recipe (:package "nnreddit" :fetcher github :repo "dickmao/nnreddit" :files (:defaults "setup.py" "requirements.txt" "nnreddit")) :description "Gnus Backend For Reddit" :date (26380 13520) :url "https://github.com/dickmao/nnreddit") (nntwitter :source "MELPA" :recipe (:package "nntwitter" :fetcher github :repo "dickmao/nntwitter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Gnus Backend For Twitter" :date (25764 34896) :url "https://github.com/dickmao/nntwitter") (no-clown-fiesta-theme :source "MELPA" :recipe (:package "no-clown-fiesta-theme" :repo "ranmaru22/no-clown-fiesta-theme.el" :fetcher codeberg :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Not-so-colorful-theme" :date (26273 27472) :url "https://codeberg.org/ranmaru22/no-clown-fiesta-theme.el") (no-emoji :source "MELPA" :recipe (:package "no-emoji" :fetcher github :repo "ecraven/no-emoji" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show :emoji-name: instead of emoji characters" :date (23289 63696) :url "https://github.com/ecraven/no-emoji") (no-littering :source "MELPA" :recipe (:package "no-littering" :fetcher github :repo "emacscollective/no-littering" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help keeping ~/.config/emacs clean" :date (26399 64336) :url "https://github.com/emacscollective/no-littering") (no-spam :source "MELPA" :recipe (:package "no-spam" :fetcher github :repo "mamapanda/no-spam" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add repeat delays to commands" :date (23863 30032) :url "https://github.com/mamapanda/no-spam") (noaa :source "MELPA" :recipe (:package "noaa" :fetcher codeberg :repo "thomp/noaa" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get NOAA weather data" :date (26102 2128) :url "https://codeberg.org/thomp/noaa") (noccur :source "MELPA" :recipe (:package "noccur" :fetcher github :repo "NicolasPetton/noccur.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run multi-occur on project/dired files" :date (23972 57808) :url "https://github.com/NicolasPetton/noccur.el") (nocomments-mode :source "MELPA" :recipe (:package "nocomments-mode" :repo "Lindydancer/nocomments-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode that makes comments invisible" :date (22688 52432) :url "https://github.com/Lindydancer/nocomments-mode") (noctilux-theme :source "MELPA" :recipe (:package "noctilux-theme" :fetcher github :repo "sjrmanning/noctilux-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark theme inspired by LightTable" :date (22567 33488) :url "https://github.com/sjrmanning/noctilux-theme") (node-resolver :source "MELPA" :recipe (:package "node-resolver" :fetcher github :repo "meandavejustice/node-resolver.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hook to install node modules in background" :date (21545 47680) :url "https://github.com/meandavejustice/node-resolver.el") (nodejs-repl :source "MELPA" :recipe (:package "nodejs-repl" :fetcher github :repo "abicky/nodejs-repl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run Node.js REPL" :date (26065 7760) :url "https://github.com/abicky/nodejs-repl.el") (nodemcu-mode :source "MELPA" :recipe (:package "nodemcu-mode" :repo "andrmuel/nodemcu-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for NodeMCU" :date (23271 33744) :url "https://github.com/andrmuel/nodemcu-mode") (noflet :source "MELPA" :recipe (:package "noflet" :fetcher github :repo "nicferrier/emacs-noflet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Locally override functions" :date (21589 18896) :url "https://github.com/nicferrier/emacs-noflet") (nofrils-acme-theme :source "MELPA" :recipe (:package "nofrils-acme-theme" :fetcher gitlab :repo "esessoms/nofrils-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of \"No Frils Acme\" Vim theme" :date (23337 28368) :url "https://gitlab.com/esessoms/nofrils-theme") (noir-mode :source "MELPA" :recipe (:package "noir-mode" :repo "hhamud/noir-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Description" :date (25792 14288) :url "https://github.com/hhamud/noir-mode") (noir-ts-mode :source "MELPA" :recipe (:package "noir-ts-mode" :repo "hhamud/noir-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree-sitter support for Noir" :date (26120 32080) :url "https://github.com/hhamud/noir-ts-mode") (noman :source "MELPA" :recipe (:package "noman" :repo "andykuszyk/noman.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read command line help without a man page" :date (26214 6096) :url "https://github.com/andykuszyk/noman.el") (non-edit-mode :source "MELPA" :recipe (:package "non-edit-mode" :fetcher gitlab :repo "aragaer/non-edit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode that disables editing" :date (25873 62672) :url "https://gitlab.com/aragaer/non-edit-mode") (nord-theme :source "MELPA" :recipe (:package "nord-theme" :fetcher github :repo "nordtheme/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An arctic, north-bluish clean and elegant theme" :date (25611 39504) :url "https://github.com/nordtheme/emacs") (nordic-night-theme :source "MELPA" :recipe (:package "nordic-night-theme" :fetcher codeberg :repo "ashton314/nordic-night" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A darker, more colorful version of the lovely Nord theme" :date (26235 12240) :url "https://codeberg.org/ashton314/nordic-night") (nordless-theme :source "MELPA" :recipe (:package "nordless-theme" :fetcher sourcehut :repo "lthms/colorless-themes.el" :files ("nordless-theme.el")) :description "A mostly colorless version of nord-theme" :date (24545 3280) :url "https://git.sr.ht/~lthms/colorless-themes.el") (norns :source "MELPA" :recipe (:package "norns" :repo "p3r7/norns.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive development environment for monome norns" :date (26376 16464) :url "https://github.com/p3r7/norns.el") (northcode-theme :source "MELPA" :recipe (:package "northcode-theme" :repo "Northcode/northcode-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme focused on blue and orange colors" :date (23260 63440) :url "https://github.com/Northcode/northcode-theme.el") (nothing-theme :source "MELPA" :recipe (:package "nothing-theme" :fetcher github :repo "jaredgorski/nothing.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Monochrome theme" :date (24239 12496) :url "https://github.com/jaredgorski/nothing.el") (notink-theme :source "MELPA" :recipe (:package "notink-theme" :fetcher github :repo "MetroWind/notink-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A custom theme inspired by e-ink displays" :date (26233 56912) :url "https://github.com/MetroWind/notink-theme") (notmuch :source "MELPA" :recipe (:package "notmuch" :url "https://git.notmuchmail.org/git/notmuch" :fetcher git :files ("emacs/*.el" "emacs/*.svg")) :description "Run notmuch within emacs" :date (26302 27728) :url "https://git.notmuchmail.org/git/notmuch") (notmuch-addr :source "MELPA" :recipe (:package "notmuch-addr" :fetcher github :repo "tarsius/notmuch-addr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved address completion for Notmuch" :date (26322 13008) :url "https://github.com/tarsius/notmuch-addr") (notmuch-bookmarks :source "MELPA" :recipe (:package "notmuch-bookmarks" :repo "publicimageltd/notmuch-bookmarks" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add bookmark handling for notmuch buffers" :date (25793 35152) :url "https://github.com/publicimageltd/notmuch-bookmarks") (notmuch-labeler :source "MELPA" :recipe (:package "notmuch-labeler" :fetcher github :repo "DamienCassou/notmuch-labeler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improve notmuch way of displaying labels" :date (21184 32576) :url "https://github.com/DamienCassou/notmuch-labeler") (notmuch-maildir :source "MELPA" :recipe (:package "notmuch-maildir" :fetcher github :repo "tarsius/notmuch-maildir" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display maildirs as a tree" :date (26330 7120) :url "https://github.com/tarsius/notmuch-maildir") (notmuch-transient :source "MELPA" :recipe (:package "notmuch-transient" :fetcher github :repo "tarsius/notmuch-transient" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Command dispatchers for Notmuch" :date (26287 60368) :url "https://github.com/tarsius/notmuch-transient") (nov :source "MELPA" :recipe (:package "nov" :fetcher git :url "https://depp.brause.cc/nov.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Featureful EPUB reader mode" :date (26314 18896) :url "https://depp.brause.cc/nov.el.git") (nova-theme :source "MELPA" :recipe (:package "nova-theme" :repo "muirdm/emacs-nova-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark, pastel color theme" :date (26327 30928) :url "https://github.com/muirdm/emacs-nova-theme") (noxml-fold :source "MELPA" :recipe (:package "noxml-fold" :fetcher github :repo "paddymcall/noXML-fold" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fold away XML things" :date (22940 39760) :url "https://github.com/paddymcall/noXML-fold") (npm :source "MELPA" :recipe (:package "npm" :fetcher github :repo "shaneikennedy/npm.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run your npm workflows" :date (25193 44752) :url "https://github.com/shaneikennedy/npm.el") (npm-mode :source "MELPA" :recipe (:package "npm-mode" :fetcher github :repo "mojochao/npm-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for working with npm projects" :date (23813 23632) :url "https://github.com/mojochao/npm-mode") (nrepl-eval-sexp-fu :source "MELPA" :recipe (:package "nrepl-eval-sexp-fu" :fetcher github :repo "samaaron/nrepl-eval-sexp-fu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tiny functionality enhancements for evaluating sexps" :date (24444 56016) :url "https://github.com/samaaron/nrepl-eval-sexp-fu") (nrepl-sync :source "MELPA" :recipe (:package "nrepl-sync" :fetcher github :repo "phillord/lein-sync" :files ("emacs/nrepl-sync.el")) :description "Connect to nrepl port and eval .sync.clj" :date (21474 35136) :url "https://github.com/phillord/lein-sync") (ns-auto-titlebar :source "MELPA" :recipe (:package "ns-auto-titlebar" :fetcher github :repo "purcell/ns-auto-titlebar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set the MacOS transparent titlebar to match theme" :date (23500 59600) :url "https://github.com/purcell/ns-auto-titlebar") (nsis-mode :source "MELPA" :recipe (:package "nsis-mode" :fetcher github :repo "mattfidler/nsis-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "NSIS-mode" :date (25743 28752) :url "https://github.com/mattfidler/nsis-mode") (nswbuff :source "MELPA" :recipe (:package "nswbuff" :fetcher github :repo "joostkremers/nswbuff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick switching between buffers" :date (25611 39504) :url "https://github.com/joostkremers/nswbuff") (nu-mode :source "MELPA" :recipe (:package "nu-mode" :fetcher github :repo "pyluyten/emacs-nu" :files ("nu-mode/nu-*.el" "doc/nu-mode.info")) :description "Modern Emacs Prompts Based Keybinding" :date (23717 7888) :url "https://github.com/pyluyten/emacs-nu") (nubox :source "MELPA" :recipe (:package "nubox" :fetcher github :repo "martijnat/nubox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Nubox color theme (dark, light and tty versions)" :date (22854 59856) :url "https://github.com/martijnat/nubox") (number :source "MELPA" :recipe (:package "number" :fetcher github :repo "emacsattic/number" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Working with numbers at point" :date (22952 30928) :url "https://github.com/emacsattic/number") (number-lock :source "MELPA" :recipe (:package "number-lock" :fetcher github :repo "Liu233w/number-lock.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enter symbols on your number keys without pressing shift" :date (22468 41552) :url "https://github.com/Liu233w/number-lock.el") (numbers :source "MELPA" :recipe (:package "numbers" :fetcher github :repo "davep/numbers.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display information and trivia about numbers" :date (22912 60368) :url "https://github.com/davep/numbers.el") (numbex :source "MELPA" :recipe (:package "numbex" :repo "enricoflor/numbex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage numbered examples" :date (25719 46416) :url "https://github.com/enricoflor/numbex") (numpydoc :source "MELPA" :recipe (:package "numpydoc" :fetcher github :repo "douglasdavis/numpydoc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "NumPy style docstring insertion" :date (25813 20432) :url "https://github.com/douglasdavis/numpydoc.el") (nushell-mode :source "MELPA" :recipe (:package "nushell-mode" :fetcher github :repo "mrkkrp/nushell-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Nushell scripts" :date (25964 60496) :url "https://github.com/mrkkrp/nushell-mode") (nushell-ts-mode :source "MELPA" :recipe (:package "nushell-ts-mode" :fetcher github :repo "herbertjones/nushell-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree-sitter support for Nushell" :date (25854 11856) :url "https://github.com/herbertjones/nushell-ts-mode") (nv-delete-back :source "MELPA" :recipe (:package "nv-delete-back" :fetcher gitlab :repo "nivaca/nv-delete-back" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Backward delete like modern text editors" :date (22703 19792) :url "https://gitlab.com/nivaca/nv-delete-back") (nvm :source "MELPA" :recipe (:package "nvm" :repo "rejeep/nvm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Node versions within Emacs" :date (26349 57936) :url "https://github.com/rejeep/nvm.el") (nxml-uxml :source "MELPA" :recipe (:package "nxml-uxml" :fetcher gitlab :repo "dpk/nxml-uxml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MicroXML support for nXML" :date (25245 6480) :url "https://gitlab.com/dpk/nxml-uxml") (nyan-mode :source "MELPA" :recipe (:package "nyan-mode" :fetcher github :repo "TeMPOraL/nyan-mode" :files ("nyan-mode.el" "img" "mus")) :description "Nyan Cat shows position in current buffer in mode-line" :date (25167 20688) :url "https://github.com/TeMPOraL/nyan-mode") (nyx-theme :source "MELPA" :recipe (:package "nyx-theme" :fetcher github :repo "guidoschmidt/emacs-nyx-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark theme" :date (22964 22096) :url "https://github.com/guidoschmidt/emacs-nyx-theme") (oauth :source "MELPA" :recipe (:package "oauth" :fetcher gitlab :repo "fvdbeek/emacs-oauth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OAuth 1.0 client library" :date (25765 55760) :url "https://gitlab.com/fvdbeek/emacs-oauth") (oauth2-auto :source "MELPA" :recipe (:package "oauth2-auto" :fetcher github :repo "telotortium/emacs-oauth2-auto" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically refreshing OAuth 2.0 tokens" :date (26113 58832) :url "https://github.com/telotortium/emacs-oauth2-auto") (oauth2-request :source "MELPA" :recipe (:package "oauth2-request" :fetcher github :repo "conao3/oauth2-request.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OAuth2 request package interface" :date (24617 36688) :url "https://github.com/conao3/oauth2-request.el") (ob-acl2 :source "MELPA" :recipe (:package "ob-acl2" :fetcher github :repo "tani/ob-acl2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for ACL2" :date (26166 41424) :url "https://github.com/tani/ob-acl2") (ob-ada-spark :source "MELPA" :recipe (:package "ob-ada-spark" :fetcher github :repo "rocher/ob-ada-spark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel functions for Ada & SPARK" :date (25457 23248) :url "https://github.com/rocher/ob-ada-spark") (ob-applescript :source "MELPA" :recipe (:package "ob-applescript" :repo "stig/ob-applescript.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for AppleScript" :date (23843 44752) :url "https://github.com/stig/ob-applescript.el") (ob-async :source "MELPA" :recipe (:package "ob-async" :repo "astahlman/ob-async" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Asynchronous org-babel src block execution" :date (24712 31568) :url "https://github.com/astahlman/ob-async") (ob-axiom :source "MELPA" :recipe (:package "ob-axiom" :fetcher git :url "https://bitbucket.org/pdo/axiom-environment" :files ("ob-axiom.el")) :description "An org-babel backend for the axiom-environment system" :date (25253 592) :url "https://bitbucket.org/pdo/axiom-environment") (ob-base64 :source "MELPA" :recipe (:package "ob-base64" :fetcher github :repo "KeyWeeUsr/ob-base64" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel for base64 content" :date (26055 58320) :url "https://github.com/KeyWeeUsr/ob-base64") (ob-bitfield :source "MELPA" :recipe (:package "ob-bitfield" :repo "gsingh93/ob-bitfield" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for bitfield" :date (25158 5712) :url "https://github.com/gsingh93/ob-bitfield") (ob-blockdiag :source "MELPA" :recipe (:package "ob-blockdiag" :fetcher github :repo "corpix/ob-blockdiag.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for blockdiag evaluation" :date (24691 25424) :url "https://github.com/corpix/ob-blockdiag.el") (ob-browser :source "MELPA" :recipe (:package "ob-browser" :fetcher github :repo "krisajenkins/ob-browser" :files ("*.js" "*.el")) :description "Render HTML in org-mode blocks" :date (22895 51280) :url "https://github.com/krisajenkins/ob-browser") (ob-cfengine3 :source "MELPA" :recipe (:package "ob-cfengine3" :repo "nickanderson/ob-cfengine3" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org Babel functions for CFEngine 3" :date (25594 30416) :url "https://github.com/nickanderson/ob-cfengine3") (ob-chatgpt-shell :source "MELPA" :recipe (:package "ob-chatgpt-shell" :fetcher github :repo "xenodium/chatgpt-shell" :files ("ob-chatgpt-shell.el")) :description "Org babel functions for ChatGPT evaluation" :date (26403 61392) :url "https://github.com/xenodium/chatgpt-shell") (ob-clojurescript :source "MELPA" :recipe (:package "ob-clojurescript" :repo "statonjr/ob-clojurescript" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for ClojureScript evaluation" :date (23238 36432) :url "https://gitlab.com/statonjr/ob-clojurescript") (ob-coffee :source "MELPA" :recipe (:package "ob-coffee" :fetcher github :repo "zweifisch/ob-coffee" :files (:defaults "repl.js")) :description "Org-babel functions for coffee-script evaluation" :date (22902 24528) :url "https://github.com/zweifisch/ob-coffee") (ob-coffeescript :source "MELPA" :recipe (:package "ob-coffeescript" :repo "brantou/ob-coffeescript" :fetcher github :files ("ob-coffeescript.el")) :description "Org-babel functions for coffee-script evaluation, and fully implementation!" :date (23146 17744) :url "https://github.com/brantou/ob-coffeescript") (ob-compile :source "MELPA" :recipe (:package "ob-compile" :fetcher github :repo "TxGVNN/ob-compile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run compile by org-babel" :date (26111 17104) :url "https://github.com/TxGVNN/ob-compile") (ob-crystal :source "MELPA" :recipe (:package "ob-crystal" :repo "brantou/ob-crystal" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for Crystal evaluation" :date (23146 17744) :url "https://github.com/brantou/ob-crystal") (ob-cypher :source "MELPA" :recipe (:package "ob-cypher" :repo "zweifisch/ob-cypher" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query neo4j using cypher in org-mode blocks" :date (24261 39504) :url "https://github.com/zweifisch/ob-cypher") (ob-d2 :source "MELPA" :recipe (:package "ob-d2" :repo "xcapaldi/ob-d2" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for d2" :date (25615 36560) :url "https://github.com/xcapaldi/ob-d2") (ob-dall-e-shell :source "MELPA" :recipe (:package "ob-dall-e-shell" :fetcher github :repo "xenodium/chatgpt-shell" :files ("ob-dall-e-shell.el")) :description "Org babel functions for DALL-E evaluation" :date (26403 61392) :url "https://github.com/xenodium/chatgpt-shell") (ob-dao :source "MELPA" :recipe (:package "ob-dao" :fetcher github :repo "xuchunyang/ob-dao" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org Babel Functions for Dao" :date (22931 24784) :url "https://github.com/xuchunyang/ob-dao") (ob-dart :source "MELPA" :recipe (:package "ob-dart" :fetcher github :repo "mzimmerm/ob-dart" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluate Dart source blocks in org-mode" :date (25479 50256) :url "https://github.com/mzimmerm/ob-dart") (ob-deno :source "MELPA" :recipe (:package "ob-deno" :repo "taiju/ob-deno" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for Javascript/TypeScript with Deno" :date (24460 44240) :url "https://github.com/taiju/ob-deno") (ob-diagrams :source "MELPA" :recipe (:package "ob-diagrams" :fetcher github :repo "bergey/org-babel-diagrams" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for diagrams evaluation" :date (22277 30928) :url "https://github.com/bergey/org-babel-diagrams") (ob-drawtiming :source "MELPA" :recipe (:package "ob-drawtiming" :fetcher github :repo "perfab71/ob-drawtiming" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions for drawtiming evaluation in org-babel" :date (25612 60368) :url "https://github.com/perfab71/ob-drawtiming") (ob-dsq :source "MELPA" :recipe (:package "ob-dsq" :fetcher github :repo "fritzgrabo/ob-dsq" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel functions for the `dsq` CLI tool by Multiprocess Labs" :date (25378 16592) :url "https://github.com/fritzgrabo/ob-dsq") (ob-elixir :source "MELPA" :recipe (:package "ob-elixir" :repo "zweifisch/ob-elixir" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for elixir evaluation" :date (22902 24528) :url "https://github.com/zweifisch/ob-elixir") (ob-elm :source "MELPA" :recipe (:package "ob-elm" :fetcher github :repo "BonfaceKilz/ob-elm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for elm evaluation" :date (24270 54480) :url "https://github.com/BonfaceKilz/ob-elm") (ob-elvish :source "MELPA" :recipe (:package "ob-elvish" :fetcher github :repo "zzamboni/ob-elvish" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for Elvish shell" :date (23266 15824) :url "https://github.com/zzamboni/ob-elvish") (ob-ess-julia :source "MELPA" :recipe (:package "ob-ess-julia" :fetcher github :repo "frederic-santos/ob-ess-julia" :files ("*.el" "*.jl")) :description "Org babel support for Julia language" :date (24694 1616) :url "https://github.com/frederic-santos/ob-ess-julia") (ob-ffuf :source "MELPA" :recipe (:package "ob-ffuf" :repo "daniel-ts/ob-ffuf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel functions for ffuf" :date (25403 19792) :url "https://github.com/daniel-ts/ob-ffuf") (ob-fricas :source "MELPA" :recipe (:package "ob-fricas" :repo "pdo/frimacs" :fetcher github :files ("extras/ob-fricas.el")) :description "A FriCAS backend for Org-Babel" :date (25253 592) :url "https://github.com/pdo/frimacs") (ob-fsharp :source "MELPA" :recipe (:package "ob-fsharp" :repo "juergenhoetzel/ob-fsharp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-Babel F#" :date (25456 2384) :url "https://github.com/juergenhoetzel/ob-fsharp") (ob-git-permalink :source "MELPA" :recipe (:package "ob-git-permalink" :fetcher github :repo "kijimaD/ob-git-permalink" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import GitHub code given a permalink" :date (25272 51408) :url "https://github.com/kijimaD/ob-git-permalink") (ob-go :source "MELPA" :recipe (:package "ob-go" :fetcher github :repo "pope/ob-go" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for go evaluation" :date (23635 25040) :url "https://github.com/pope/ob-go") (ob-graphql :source "MELPA" :recipe (:package "ob-graphql" :fetcher github :repo "jdormit/ob-graphql" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-Babel execution backend for GraphQL source blocks" :date (24545 3280) :url "https://github.com/jdormit/ob-graphql") (ob-html-chrome :source "MELPA" :recipe (:package "ob-html-chrome" :repo "nikclayton/ob-html-chrome" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "HTML code blocks converted to PNG using Chrome" :date (23577 24528) :url "https://github.com/nikclayton/ob-html-chrome") (ob-http :source "MELPA" :recipe (:package "ob-http" :repo "zweifisch/ob-http" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Http request in org-mode babel" :date (23359 55376) :url "https://github.com/zweifisch/ob-http") (ob-hy :source "MELPA" :recipe (:package "ob-hy" :repo "brantou/ob-hy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for Hy-lang evaluation" :date (23353 16592) :url "https://github.com/brantou/ob-hy") (ob-ipython :source "MELPA" :recipe (:package "ob-ipython" :fetcher github :repo "gregsexton/ob-ipython" :files (:defaults "*.py")) :description "Org-babel functions for IPython evaluation" :date (23184 32976) :url "https://github.com/gregsexton/ob-ipython") (ob-julia-vterm :source "MELPA" :recipe (:package "ob-julia-vterm" :repo "shg/ob-julia-vterm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel functions for Julia that work with julia-vterm" :date (26178 32592) :url "https://github.com/shg/ob-julia-vterm.el") (ob-kotlin :source "MELPA" :recipe (:package "ob-kotlin" :repo "zweifisch/ob-kotlin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for kotlin evaluation" :date (23421 52944) :url "https://github.com/zweifisch/ob-kotlin") (ob-latex-as-png :source "MELPA" :recipe (:package "ob-latex-as-png" :fetcher github :repo "alhassy/ob-latex-as-png" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for latex-as-png evaluation" :date (24313 1232) :url "https://github.com/alhassy/ob-latex-as-png") (ob-lesim :source "MELPA" :recipe (:package "ob-lesim" :fetcher github :repo "drghirlanda/ob-lesim" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for lesim-mode" :date (25743 28752) :url "https://github.com/drghirlanda/ob-lesim") (ob-lfe :source "MELPA" :recipe (:package "ob-lfe" :repo "zweifisch/ob-lfe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for lfe evaluation" :date (22902 24528) :url "https://github.com/zweifisch/ob-lfe") (ob-lurk :source "MELPA" :recipe (:package "ob-lurk" :fetcher github :repo "argumentcomputer/lurk-emacs" :files ("ob-lurk.el")) :description "Evaluate lurk code blocks in org mode" :date (25467 59088) :url "https://github.com/argumentcomputer/lurk-emacs") (ob-mermaid :source "MELPA" :recipe (:package "ob-mermaid" :repo "arnm/ob-mermaid" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel support for mermaid evaluation" :date (26330 7120) :url "https://github.com/arnm/ob-mermaid") (ob-ml-marklogic :source "MELPA" :recipe (:package "ob-ml-marklogic" :fetcher github :repo "ndw/ob-ml-marklogic" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for MarkLogic evaluation" :date (23686 52304) :url "https://github.com/ndw/ob-ml-marklogic") (ob-mongo :source "MELPA" :recipe (:package "ob-mongo" :fetcher github :repo "krisajenkins/ob-mongo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Execute mongodb queries within org-mode blocks" :date (22895 51280) :url "https://github.com/krisajenkins/ob-mongo") (ob-napkin :source "MELPA" :recipe (:package "ob-napkin" :repo "pinetr2e/ob-napkin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel functions for Napkin" :date (26127 5328) :url "https://github.com/pinetr2e/ob-napkin") (ob-nim :source "MELPA" :recipe (:package "ob-nim" :fetcher github :repo "Lompik/ob-nim" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for nim" :date (24757 20048) :url "https://github.com/Lompik/ob-nim") (ob-nix :source "MELPA" :recipe (:package "ob-nix" :fetcher codeberg :repo "theesm/ob-nix" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple org-babel support for nix" :date (25510 5840) :url "https://codeberg.org/theesm/ob-nix") (ob-p5js :source "MELPA" :recipe (:package "ob-p5js" :repo "alejandrogallo/ob-p5js" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for p5js in org-babel" :date (25801 29264) :url "https://github.com/alejandrogallo/ob-p5js") (ob-php :source "MELPA" :recipe (:package "ob-php" :fetcher git :url "https://repo.or.cz/ob-php.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Execute PHP within org-mode source blocks" :date (25106 43984) :url "https://repo.or.cz/ob-php.git") (ob-powershell :source "MELPA" :recipe (:package "ob-powershell" :repo "rkiggen/ob-powershell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for powershell evaluation" :date (26264 12496) :url "https://github.com/rkiggen/ob-powershell") (ob-prolog :source "MELPA" :recipe (:package "ob-prolog" :fetcher github :repo "ljos/ob-prolog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for prolog evaluation" :date (23725 2000) :url "https://github.com/ljos/ob-prolog") (ob-raku :source "MELPA" :recipe (:package "ob-raku" :fetcher github :repo "masukomi/ob-raku" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides raku support for org-babel" :date (25415 10960) :url "https://github.com/masukomi/ob-raku") (ob-redis :source "MELPA" :recipe (:package "ob-redis" :fetcher git :url "https://repo.or.cz/ob-redis.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Execute Redis queries within org-mode blocks" :date (25106 43984) :url "https://repo.or.cz/ob-redis.git") (ob-restclient :source "MELPA" :recipe (:package "ob-restclient" :repo "alf/ob-restclient.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for restclient-mode" :date (25996 36944) :url "https://github.com/alf/ob-restclient.el") (ob-reticulate :source "MELPA" :recipe (:package "ob-reticulate" :fetcher github :repo "jackkamm/ob-reticulate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for reticulate" :date (26073 1872) :url "https://github.com/jackkamm/ob-reticulate") (ob-rust :source "MELPA" :recipe (:package "ob-rust" :fetcher github :repo "micanzhang/ob-rust" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for Rust" :date (25349 16336) :url "https://github.com/micanzhang/ob-rust") (ob-sagemath :source "MELPA" :recipe (:package "ob-sagemath" :fetcher github :repo "sagemath/ob-sagemath" :files ("ob-sagemath.el" "*.py")) :description "Org-babel functions for SageMath evaluation" :date (24001 58064) :url "https://github.com/sagemath/ob-sagemath") (ob-smiles :source "MELPA" :recipe (:package "ob-smiles" :fetcher git :url "https://repo.or.cz/ob-smiles.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode Babel support for SMILES" :date (25106 43984) :url "https://repo.or.cz/ob-smiles.git") (ob-sml :source "MELPA" :recipe (:package "ob-sml" :fetcher github :repo "swannodette/ob-sml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for template evaluation" :date (21022 22208) :url "https://github.com/swannodette/ob-sml") (ob-solidity :source "MELPA" :recipe (:package "ob-solidity" :fetcher github :repo "hrkrshnn/ob-solidity" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for solidity evaluation" :date (25096 8144) :url "https://github.com/hrkrshnn/ob-solidity") (ob-spice :source "MELPA" :recipe (:package "ob-spice" :fetcher git :url "https://repo.or.cz/ob-spice.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for spice evaluation" :date (25437 37968) :url "https://repo.or.cz/ob-spice.git") (ob-sql-mode :source "MELPA" :recipe (:package "ob-sql-mode" :repo "nikclayton/ob-sql-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SQL code blocks evaluated by sql-mode" :date (23739 34896) :url "https://github.com/nikclayton/ob-sql-mode") (ob-svgbob :source "MELPA" :recipe (:package "ob-svgbob" :fetcher github :repo "mgxm/ob-svgbob" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Functions for svgbob" :date (23928 3792) :url "https://github.com/mgxm/ob-svgbob") (ob-swift :source "MELPA" :recipe (:package "ob-swift" :fetcher github :repo "zweifisch/ob-swift" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for swift evaluation" :date (22978 54992) :url "https://github.com/zweifisch/ob-swift") (ob-swiftui :source "MELPA" :recipe (:package "ob-swiftui" :fetcher github :repo "xenodium/ob-swiftui" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org babel functions for SwiftUI evaluation" :date (25891 6224) :url "https://github.com/xenodium/ob-swiftui") (ob-tmux :source "MELPA" :recipe (:package "ob-tmux" :fetcher github :repo "ahendriksen/ob-tmux" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Babel Support for Interactive Terminal" :date (25404 40656) :url "https://github.com/ahendriksen/ob-tmux") (ob-translate :source "MELPA" :recipe (:package "ob-translate" :fetcher github :repo "krisajenkins/ob-translate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Translation of text blocks in org-mode" :date (22895 51280) :url "https://github.com/krisajenkins/ob-translate") (ob-typescript :source "MELPA" :recipe (:package "ob-typescript" :repo "lurdan/ob-typescript" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel functions for typescript evaluation" :date (25995 16080) :url "https://github.com/lurdan/ob-typescript") (ob-uart :source "MELPA" :recipe (:package "ob-uart" :repo "andrmuel/ob-uart" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-babel support for UART communication" :date (22816 44624) :url "https://github.com/andrmuel/ob-uart") (oberon :source "MELPA" :recipe (:package "oberon" :fetcher github :repo "emacsorphanage/oberon" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Oberon/Oberon-2 program texts" :date (20481 53184) :url "https://github.com/emacsorphanage/oberon") (obfusurl :source "MELPA" :recipe (:package "obfusurl" :fetcher github :repo "davep/obfusurl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Obfuscate URLs so they aren't spoilers" :date (22922 9808) :url "https://github.com/davep/obfusurl.el") (objc-font-lock :source "MELPA" :recipe (:package "objc-font-lock" :repo "Lindydancer/objc-font-lock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight Objective-C method calls" :date (21573 27072) :url "https://github.com/Lindydancer/objc-font-lock") (objed :source "MELPA" :recipe (:package "objed" :repo "clemera/objed" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigate and edit text objects" :date (24410 37840) :url "https://github.com/clemera/objed") (oblivion-theme :source "MELPA" :recipe (:package "oblivion-theme" :fetcher codeberg :repo "ideasman42/emacs-theme-oblivion" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A port of GEdit oblivion theme" :date (26105 64720) :url "https://codeberg.org/ideasman42/emacs-theme-oblivion") (obsidian :source "MELPA" :recipe (:package "obsidian" :repo "licht1stein/obsidian.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Obsidian Notes interface" :date (26257 39248) :url "https://github.com/licht1stein/obsidian.el") (obsidian-theme :source "MELPA" :recipe (:package "obsidian-theme" :repo "mswift42/obsidian-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Port of the eclipse obsidian theme" :date (22894 30416) :url "https://github.com/mswift42/obsidian-theme") (ocaml-ts-mode :source "MELPA" :recipe (:package "ocaml-ts-mode" :fetcher github :repo "dmitrig/ocaml-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for OCaml using tree-sitter" :date (25825 11600) :url "https://github.com/dmitrig/ocaml-ts-mode") (ocamlformat :source "MELPA" :recipe (:package "ocamlformat" :fetcher github :repo "ocaml-ppx/ocamlformat" :files ("emacs/ocamlformat.el")) :description "Utility functions to format ocaml code" :date (26353 54992) :url "https://github.com/ocaml-ppx/ocamlformat") (occidental-theme :source "MELPA" :recipe (:package "occidental-theme" :repo "olcai/occidental-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom theme for faces based on Adwaita" :date (20798 14272) :url "https://github.com/olcai/occidental-theme") (occur-context-resize :source "MELPA" :recipe (:package "occur-context-resize" :fetcher github :repo "dgtized/occur-context-resize.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamically resize context around matches in occur-mode" :date (24584 39376) :url "https://github.com/dgtized/occur-context-resize.el") (occur-x :source "MELPA" :recipe (:package "occur-x" :fetcher github :repo "juan-leon/occur-x" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extra functionality for occur" :date (20916 57024) :url "https://github.com/juan-leon/occur-x") (occurx-mode :source "MELPA" :recipe (:package "occurx-mode" :repo "k32/occurx-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Occur-like filtering of buffers with rx patterns" :date (25827 53328) :url "https://github.com/k32/occurx-mode") (oceanic-theme :source "MELPA" :recipe (:package "oceanic-theme" :repo "terry3/oceanic-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Oceanic theme" :date (22529 18256) :url "https://github.com/terry3/oceanic-theme") (ocodo-svg-modelines :source "MELPA" :recipe (:package "ocodo-svg-modelines" :fetcher github :repo "ocodo/ocodo-svg-modelines" :files (:defaults ("images" "images/*.base64"))) :description "A collection of beautiful SVG modelines" :date (21846 24144) :url "https://github.com/ocodo/ocodo-svg-modelines") (ocp-indent :source "MELPA" :recipe (:package "ocp-indent" :fetcher github :repo "OCamlPro/ocp-indent" :files ("tools/ocp-indent.el")) :description "Automatic indentation with ocp-indent" :date (24941 57424) :url "https://github.com/OCamlPro/ocp-indent") (octicons :source "MELPA" :recipe (:package "octicons" :fetcher github :repo "emacsorphanage/octicons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Octicons utility" :date (22069 11216) :url "https://github.com/emacsorphanage/octicons") (octo-mode :source "MELPA" :recipe (:package "octo-mode" :fetcher github :repo "cryon/octo-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Octo assembly language" :date (22520 3280) :url "https://github.com/cryon/octo-mode") (octopress :source "MELPA" :recipe (:package "octopress" :fetcher github :repo "aaronbieber/octopress.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A lightweight wrapper for Jekyll and Octopress" :date (23623 33872) :url "https://github.com/aaronbieber/octopress.el") (oer-reveal :source "MELPA" :recipe (:package "oer-reveal" :fetcher gitlab :repo "oer/oer-reveal" :files (:defaults "README*" "LICENSE*" "org" "css" "title-slide" "examples")) :description "OER with reveal.js, plugins, and org-re-reveal" :date (26328 51792) :url "https://gitlab.com/oer/oer-reveal") (offlineimap :source "MELPA" :recipe (:package "offlineimap" :fetcher github :repo "jd/offlineimap.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run OfflineIMAP from Emacs" :date (22008 34512) :url "https://github.com/jd/offlineimap.el") (oj :source "MELPA" :recipe (:package "oj" :fetcher github :repo "conao3/oj.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Competitive programming tools client for AtCoder, Codeforces" :date (25576 464) :url "https://github.com/conao3/oj.el") (ol-notmuch :source "MELPA" :recipe (:package "ol-notmuch" :fetcher github :repo "tarsius/ol-notmuch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Links to notmuch messages" :date (26287 60368) :url "https://github.com/tarsius/ol-notmuch") (ol-tmsu :source "MELPA" :recipe (:package "ol-tmsu" :repo "vifon/tmsu.el" :fetcher github :files ("ol-tmsu.el")) :description "Org-mode links to TMSU queries" :date (25569 27216) :url "https://github.com/vifon/tmsu.el") (olc :source "MELPA" :recipe (:package "olc" :fetcher git :url "https://gitlab.liu.se/davby02/olc.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open location code library" :date (24378 61392) :url "https://gitlab.liu.se/davby02/olc.git") (old-norse-input :source "MELPA" :recipe (:package "old-norse-input" :repo "david-christiansen/emacs-old-norse-input" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An input method for Old Norse" :date (22931 24784) :url "https://github.com/david-christiansen/emacs-old-norse-input") (oldlace-theme :source "MELPA" :recipe (:package "oldlace-theme" :repo "mswift42/oldlace-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme with an 'oldlace' background" :date (21912 18768) :url "https://github.com/mswift42/oldlace-theme") (olivetti :source "MELPA" :recipe (:package "olivetti" :fetcher github :repo "rnkn/olivetti" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to automatically balance window margins" :date (26401 19664) :url "https://github.com/rnkn/olivetti") (om-mode :source "MELPA" :recipe (:package "om-mode" :fetcher github :repo "danielsz/om-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert Om component template with life cycle" :date (21525 62400) :url "https://github.com/danielsz/om-mode") (omni-kill :source "MELPA" :recipe (:package "omni-kill" :fetcher github :repo "AdrieanKhisbe/omni-kill.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kill all the things" :date (23011 52304) :url "https://github.com/AdrieanKhisbe/omni-kill.el") (omni-log :source "MELPA" :recipe (:package "omni-log" :fetcher github :repo "AdrieanKhisbe/omni-log.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Logging utilities" :date (24158 50512) :url "https://github.com/AdrieanKhisbe/omni-log.el") (omni-quotes :source "MELPA" :recipe (:package "omni-quotes" :fetcher github :repo "AdrieanKhisbe/omni-quotes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Random quotes displayer" :date (24158 50512) :url "https://github.com/AdrieanKhisbe/omni-quotes.el") (omni-scratch :source "MELPA" :recipe (:package "omni-scratch" :fetcher github :repo "AdrieanKhisbe/omni-scratch.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy and mode-specific draft buffers" :date (23002 37328) :url "https://github.com/AdrieanKhisbe/omni-scratch.el") (omni-tags :source "MELPA" :recipe (:package "omni-tags" :fetcher github :repo "AdrieanKhisbe/omni-tags.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight and Actions for 'Tags'" :date (22783 47312) :url "https://github.com/AdrieanKhisbe/omni-tags.el") (omnibox :source "MELPA" :recipe (:package "omnibox" :repo "sebastiencs/omnibox" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Selection package" :date (23260 63440) :url "https://github.com/sebastiencs/omnibox") (omnisharp :source "MELPA" :recipe (:package "omnisharp" :fetcher github :repo "OmniSharp/omnisharp-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Omnicompletion (intellisense) and more for C#" :date (24828 32592) :url "https://github.com/OmniSharp/omnisharp-emacs") (omtose-phellack-themes :source "MELPA" :recipe (:package "omtose-phellack-themes" :fetcher github :repo "emacsorphanage/omtose-phellack-themes" :old-names (omtose-phellack-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Two dark themes, with cold blusish touch" :date (26359 7376) :url "https://github.com/emacsorphanage/omtose-phellack-themes") (on :source "MELPA" :recipe (:package "on" :fetcher gitlab :repo "ajgrf/on.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hooks for faster startup" :date (25486 23504) :url "https://gitlab.com/ajgrf/on.el") (on-parens :source "MELPA" :recipe (:package "on-parens" :repo "willghatch/emacs-on-parens" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smartparens wrapper to fit with evil-mode/vim normal-state" :date (24914 12496) :url "https://github.com/willghatch/emacs-on-parens") (on-screen :source "MELPA" :recipe (:package "on-screen" :fetcher github :repo "michael-heerdegen/on-screen.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Guide your eyes while scrolling" :date (22230 720) :url "https://github.com/michael-heerdegen/on-screen.el") (one :source "MELPA" :recipe (:package "one" :fetcher github :repo "tonyaldon/one.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Static Site Generator for org-mode users" :date (25966 15824) :url "https://github.com/tonyaldon/one.el") (one-themes :source "MELPA" :recipe (:package "one-themes" :repo "balajisivaraman/emacs-one-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "One Colorscheme" :date (24340 46160) :url "https://github.com/balajisivaraman/emacs-one-themes") (one-time-pad-encrypt :source "MELPA" :recipe (:package "one-time-pad-encrypt" :repo "garvinguan/emacs-one-time-pad" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "One time pad encryption within file" :date (22265 39760) :url "https://github.com/garvinguan/emacs-one-time-pad") (opam :source "MELPA" :recipe (:package "opam" :repo "emacsorphanage/opam" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OPAM tools" :date (21930 48720) :url "https://github.com/emacsorphanage/opam") (opam-switch-mode :source "MELPA" :recipe (:package "opam-switch-mode" :fetcher github :repo "ProofGeneral/opam-switch-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select OCaml opam switches via a menu" :date (25801 29264) :url "https://github.com/ProofGeneral/opam-switch-mode") (open-color :source "MELPA" :recipe (:package "open-color" :repo "a13/open-color.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open Color color palette" :date (25986 1104) :url "https://github.com/a13/open-color.el") (open-in-msvs :source "MELPA" :recipe (:package "open-in-msvs" :fetcher github :repo "evgeny-panasyuk/open-in-msvs.el" :files (:defaults "*.vbs")) :description "Open current file:line:column in Microsoft Visual Studio" :date (22661 7504) :url "https://github.com/evgeny-panasyuk/open-in-msvs.el") (open-junk-file :source "MELPA" :recipe (:package "open-junk-file" :repo "rubikitch/open-junk-file" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open a junk (memo) file to try-and-error" :date (22603 6992) :url "https://github.com/rubikitch/open-junk-file") (opencc :source "MELPA" :recipe (:package "opencc" :fetcher github :repo "xuchunyang/emacs-opencc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "中文简繁转换 <-> 中文簡繁轉換 (Convert Chinese with OpenCC)" :date (22898 27472) :url "https://github.com/xuchunyang/emacs-opencc") (opencl-c-mode :source "MELPA" :recipe (:package "opencl-c-mode" :fetcher github :repo "salmanebah/opencl-mode" :old-names (opencl-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax coloring for opencl kernels" :date (26256 18384) :url "https://github.com/salmanebah/opencl-mode") (opener :source "MELPA" :recipe (:package "opener" :fetcher github :repo "0robustus1/opener.el" :files ("opener.el" "opener.texi")) :description "Opening urls as buffers" :date (22599 9936) :url "https://github.com/0robustus1/opener.el") (openfoam :source "MELPA" :recipe (:package "openfoam" :fetcher github :repo "ralph-schleicher/emacs-openfoam" :files ("openfoam.el")) :description "OpenFOAM files and directories" :date (24736 13904) :url "https://github.com/ralph-schleicher/emacs-openfoam") (opensource :source "MELPA" :recipe (:package "opensource" :fetcher github :repo "OpenSourceOrg/el-opensourceorg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for Opensource API" :date (22504 15056) :url "https://github.com/OpenSourceOrg/el-opensourceorg") (openstack-cgit-browse-file :source "MELPA" :recipe (:package "openstack-cgit-browse-file" :fetcher github :repo "chmouel/openstack-cgit-browse-file" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse the current file in OpenStack cgit" :date (21009 10176) :url "https://github.com/chmouel/openstack-cgit-browse-file") (opensub :source "MELPA" :recipe (:package "opensub" :repo "danielfleischer/opensub" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search and download from open-subtitles" :date (26161 23504) :url "https://github.com/danielfleischer/opensub") (openwith :source "MELPA" :recipe (:package "openwith" :fetcher github :repo "jpkotta/openwith" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open files with external programs" :date (20422 31808) :url "https://github.com/jpkotta/openwith") (operate-on-number :source "MELPA" :recipe (:package "operate-on-number" :fetcher github :repo "knu/operate-on-number.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Operate on number at point with arithmetic functions" :date (25938 36432) :url "https://github.com/knu/operate-on-number.el") (orangey-bits-theme :source "MELPA" :recipe (:package "orangey-bits-theme" :fetcher github :repo "emacsfodder/emacs-theme-orangey-bits" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Theme with smashing orangey bits" :date (25346 40144) :url "https://github.com/emacsfodder/emacs-theme-orangey-bits") (orca :source "MELPA" :recipe (:package "orca" :repo "abo-abo/orca" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org Capture" :date (25354 34256) :url "https://github.com/abo-abo/orca") (orderless :source "MELPA" :recipe (:package "orderless" :repo "oantolin/orderless" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion style for matching regexps in any order" :date (26356 31184) :url "https://github.com/oantolin/orderless") (ordinal :source "MELPA" :recipe (:package "ordinal" :fetcher github :repo "zonuexe/ordinal.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert number to ordinal number notation" :date (24740 10960) :url "https://github.com/zonuexe/ordinal.el") (org-ac :source "MELPA" :recipe (:package "org-ac" :repo "aki2o/org-ac" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some auto-complete sources for org-mode" :date (22750 50000) :url "https://github.com/aki2o/org-ac") (org-agenda-files-track :source "MELPA" :recipe (:package "org-agenda-files-track" :fetcher sourcehut :repo "ngraves/org-agenda-files-track" :files ("org-agenda-files-track.el")) :description "Fine-track `org-agenda-files' to speed-up `org-agenda'" :date (25971 33744) :url "https://git.sr.ht/~ngraves/org-agenda-files-track") (org-agenda-files-track-ql :source "MELPA" :recipe (:package "org-agenda-files-track-ql" :fetcher sourcehut :repo "ngraves/org-agenda-files-track" :files ("org-agenda-files-track-ql.el")) :description "Fine-track `org-agenda-files' to speed-up `org-ql-views'" :date (25983 24912) :url "https://git.sr.ht/~ngraves/org-agenda-files-track") (org-agenda-property :source "MELPA" :recipe (:package "org-agenda-property" :repo "Malabarba/org-agenda-property" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display org properties in the agenda buffer" :date (21419 10816) :url "https://github.com/Malabarba/org-agenda-property") (org-ai :source "MELPA" :recipe (:package "org-ai" :fetcher github :repo "rksm/org-ai" :files (:defaults "snippets")) :description "Use ChatGPT and other LLMs in org-mode and beyond" :date (26388 7632) :url "https://github.com/rksm/org-ai") (org-alert :source "MELPA" :recipe (:package "org-alert" :fetcher github :repo "spegoraro/org-alert" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Notify org deadlines via notify-send" :date (26216 47824) :url "https://github.com/spegoraro/org-alert") (org-analyzer :source "MELPA" :recipe (:package "org-analyzer" :fetcher github :repo "rksm/clj-org-analyzer" :files ("org-analyzer-el/*.jar" "org-analyzer-el/*.el")) :description "Org-analyzer is a tool that extracts time tracking data from org files" :date (23954 27856) :url "https://github.com/rksm/clj-org-analyzer") (org-anki :source "MELPA" :recipe (:package "org-anki" :fetcher github :repo "eyeinsky/org-anki" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Synchronize org-mode entries to Anki" :date (26240 30160) :url "https://github.com/eyeinsky/org-anki") (org-appear :source "MELPA" :recipe (:package "org-appear" :fetcher github :repo "awth13/org-appear" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-toggle Org elements" :date (26261 36304) :url "https://github.com/awth13/org-appear") (org-arbeitszeit :source "MELPA" :recipe (:package "org-arbeitszeit" :fetcher github :repo "bkaestner/org-arbeitszeit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calculate your worktime" :date (25338 46032) :url "https://github.com/bkaestner/org-arbeitszeit") (org-assistant :source "MELPA" :recipe (:package "org-assistant" :fetcher github :repo "tyler-dodge/org-assistant" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org babel extension for Chat Assistant APIs" :date (25748 46672) :url "https://github.com/tyler-dodge/org-assistant") (org-attach-screenshot :source "MELPA" :recipe (:package "org-attach-screenshot" :fetcher github :repo "dfeich/org-screenshot" :old-names (org-screenshot) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Screenshots integrated with org attachment dirs" :date (24625 30800) :url "https://github.com/dfeich/org-screenshot") (org-auto-expand :source "MELPA" :recipe (:package "org-auto-expand" :fetcher github :repo "alphapapa/org-auto-expand" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically expand certain headings" :date (25887 9168) :url "https://github.com/alphapapa/org-auto-expand") (org-auto-tangle :source "MELPA" :recipe (:package "org-auto-tangle" :repo "yilkalargaw/org-auto-tangle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically and Asynchronously tangles org files on save" :date (25333 28112) :url "https://github.com/yilkalargaw/org-auto-tangle") (org-autoexport :source "MELPA" :recipe (:package "org-autoexport" :fetcher sourcehut :repo "zondo/org-autoexport" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-export org file on save" :date (26324 54736) :url "https://git.sr.ht/~zondo/org-autoexport") (org-autolist :source "MELPA" :recipe (:package "org-autolist" :fetcher github :repo "calvinwyoung/org-autolist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved list management in org-mode" :date (25235 57040) :url "https://github.com/calvinwyoung/org-autolist") (org-babel-eval-in-repl :source "MELPA" :recipe (:package "org-babel-eval-in-repl" :fetcher github :repo "diadochos/org-babel-eval-in-repl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eval org-mode babel code blocks in various REPLs" :date (24523 62672) :url "https://github.com/diadochos/org-babel-eval-in-repl") (org-beautify-theme :source "MELPA" :recipe (:package "org-beautify-theme" :fetcher github :repo "jonnay/org-beautify-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A sub-theme to make org-mode more beautiful" :date (22961 45904) :url "https://github.com/jonnay/org-beautify-theme") (org-board :source "MELPA" :recipe (:package "org-board" :fetcher github :repo "charlesroelli/org-board" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmarking and web archival system for Org mode" :date (25648 33872) :url "https://github.com/charlesroelli/org-board") (org-bookmark-heading :source "MELPA" :recipe (:package "org-bookmark-heading" :fetcher github :repo "alphapapa/org-bookmark-heading" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs bookmark support for Org mode" :date (26330 7120) :url "https://github.com/alphapapa/org-bookmark-heading") (org-bookmarks :source "MELPA" :recipe (:package "org-bookmarks" :fetcher git :url "https://repo.or.cz/org-bookmarks.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage bookmarks in Org mode" :date (26330 7120) :url "https://repo.or.cz/org-bookmarks.git") (org-bookmarks-extractor :source "MELPA" :recipe (:package "org-bookmarks-extractor" :fetcher github :repo "jxq0/org-bookmarks-extractor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extract bookmarks from Org mode" :date (25355 55120) :url "https://github.com/jxq0/org-bookmarks-extractor") (org-books :source "MELPA" :recipe (:package "org-books" :fetcher github :repo "lepisma/org-books" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reading list management with Org mode and helm" :date (24686 7504) :url "https://github.com/lepisma/org-books") (org-brain :source "MELPA" :recipe (:package "org-brain" :repo "Kungsgeten/org-brain" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode concept mapping" :date (25582 39248) :url "https://github.com/Kungsgeten/org-brain") (org-bulletproof :source "MELPA" :recipe (:package "org-bulletproof" :fetcher github :repo "pondersson/org-bulletproof" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic plain list bullet cycling" :date (25738 10832) :url "https://github.com/pondersson/org-bulletproof") (org-bullets :source "MELPA" :recipe (:package "org-bullets" :fetcher github :repo "integral-dw/org-bullets" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show bullets in org-mode as UTF-8 characters" :date (24175 59600) :url "https://github.com/integral-dw/org-bullets") (org-caldav :source "MELPA" :recipe (:package "org-caldav" :repo "dengste/org-caldav" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sync org files with external calendar through CalDAV" :date (26332 48848) :url "https://github.com/dengste/org-caldav") (org-calibre-notes :source "MELPA" :recipe (:package "org-calibre-notes" :repo "bpanthi977/org-calibre-notes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extract highlights and notes from Calibre EPUB reader" :date (25481 5584) :url "https://github.com/bpanthi977/org-calibre-notes") (org-capture-pop-frame :source "MELPA" :recipe (:package "org-capture-pop-frame" :fetcher github :repo "tumashu/org-capture-pop-frame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run org-capture in a new pop frame" :date (25698 40272) :url "https://github.com/tumashu/org-capture-pop-frame") (org-category-capture :source "MELPA" :recipe (:package "org-category-capture" :fetcher github :repo "colonelpanic8/org-project-capture" :files ("org-category-capture*.el")) :description "Contextualy capture of org-mode TODOs" :date (25838 23632) :url "https://github.com/colonelpanic8/org-project-capture") (org-change :source "MELPA" :recipe (:package "org-change" :fetcher github :repo "drghirlanda/org-change" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Annotate changes in org-mode files" :date (26103 22992) :url "https://github.com/drghirlanda/org-change") (org-chef :source "MELPA" :recipe (:package "org-chef" :fetcher github :repo "Chobbes/org-chef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cookbook and recipe management with org-mode" :date (25955 45520) :url "https://github.com/Chobbes/org-chef") (org-cite-overlay :source "MELPA" :recipe (:package "org-cite-overlay" :fetcher sourcehut :repo "swflint/org-cite-overlay" :files ("org-cite-overlay.el")) :description "Overlays for org-cite citations" :date (26380 13520) :url "https://git.sr.ht/~swflint/org-cite-overlay") (org-cite-overlay-sidecar :source "MELPA" :recipe (:package "org-cite-overlay-sidecar" :fetcher sourcehut :repo "swflint/org-cite-overlay" :files ("org-cite-overlay-sidecar.el")) :description "Show Sidecar for overlaid org-cite citations" :date (26380 13520) :url "https://git.sr.ht/~swflint/org-cite-overlay") (org-cliplink :source "MELPA" :recipe (:package "org-cliplink" :repo "rexim/org-cliplink" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert org-mode links from the clipboard" :date (24510 50640) :url "https://github.com/rexim/org-cliplink") (org-clock-agenda-daytime-mode :source "MELPA" :recipe (:package "org-clock-agenda-daytime-mode" :repo "ArneBab/emacs-org-clock-daytime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display the time clocked today in the modeline" :date (26124 29136) :url "https://github.com/ArneBab/emacs-org-clock-daytime") (org-clock-convenience :source "MELPA" :recipe (:package "org-clock-convenience" :fetcher github :repo "dfeich/org-clock-convenience" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convenience functions for org time tracking" :date (25669 40016) :url "https://github.com/dfeich/org-clock-convenience") (org-clock-csv :source "MELPA" :recipe (:package "org-clock-csv" :repo "atheriel/org-clock-csv" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export `org-mode' clock entries to CSV format" :date (24545 3280) :url "https://github.com/atheriel/org-clock-csv") (org-clock-reminder :source "MELPA" :recipe (:package "org-clock-reminder" :fetcher github :repo "inickey/org-clock-reminder" :files (:defaults "icons/*.png")) :description "Notifications that remind you about clocked-in tasks" :date (25589 12496) :url "https://github.com/inickey/org-clock-reminder") (org-clock-split :source "MELPA" :recipe (:package "org-clock-split" :repo "justintaft/org-clock-split" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Split clock entries" :date (24194 24016) :url "https://github.com/justintaft/org-clock-split") (org-clock-today :source "MELPA" :recipe (:package "org-clock-today" :fetcher github :repo "mallt/org-clock-today-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show total clocked time of the current day in the mode line" :date (25382 13648) :url "https://github.com/mallt/org-clock-today-mode") (org-commentary :source "MELPA" :recipe (:package "org-commentary" :repo "smaximov/org-commentary" :fetcher github :files (:defaults "bin")) :description "Generate or update conventional library headers using Org mode files" :date (22431 47184) :url "https://github.com/smaximov/org-commentary") (org-contacts :source "MELPA" :recipe (:package "org-contacts" :fetcher git :url "https://repo.or.cz/org-contacts.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Contacts management system for Org mode" :date (26290 36560) :url "https://repo.or.cz/org-contacts.git") (org-context :source "MELPA" :recipe (:package "org-context" :fetcher github :repo "thisirs/org-context" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Contextual capture and agenda commands for Org-mode" :date (25245 6480) :url "https://github.com/thisirs/org-context") (org-cua-dwim :source "MELPA" :recipe (:package "org-cua-dwim" :fetcher github :repo "mattfidler/org-cua-dwim.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode and Cua mode compatibility layer" :date (20266 60224) :url "https://github.com/mattfidler/org-cua-dwim.el") (org-custom-cookies :source "MELPA" :recipe (:package "org-custom-cookies" :repo "gsingh93/org-custom-cookies" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom cookies for org-mode" :date (26138 62032) :url "https://github.com/gsingh93/org-custom-cookies") (org-d20 :source "MELPA" :recipe (:package "org-d20" :fetcher git :url "https://git.spwhitton.name/org-d20" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for d20 tabletop roleplaying games" :date (26274 48336) :url "https://git.spwhitton.name/org-d20") (org-dashboard :source "MELPA" :recipe (:package "org-dashboard" :fetcher github :repo "bard/org-dashboard" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visually summarize progress in org files" :date (23101 29264) :url "https://github.com/bard/org-dashboard") (org-doing :source "MELPA" :recipe (:package "org-doing" :fetcher github :repo "emacsattic/org-doing" :files (:defaults "bin")) :description "Keep track of what you're doing" :date (22531 59984) :url "https://github.com/emacsattic/org-doing") (org-dotemacs :source "MELPA" :recipe (:package "org-dotemacs" :fetcher github :repo "vapniks/org-dotemacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Store your emacs config as an org file, and choose which bits to load" :date (24991 63824) :url "https://github.com/vapniks/org-dotemacs") (org-download :source "MELPA" :recipe (:package "org-download" :repo "abo-abo/org-download" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Image drag-and-drop for Org-mode" :date (25366 25424) :url "https://github.com/abo-abo/org-download") (org-dp :source "MELPA" :recipe (:package "org-dp" :fetcher github :repo "tj64/org-dp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Declarative Local Programming with Org Elements" :date (23204 18256) :url "https://github.com/tj64/org-dp") (org-drawio :source "MELPA" :recipe (:package "org-drawio" :repo "kimim/org-drawio" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert and include drawio image to orgmode" :date (26058 34512) :url "https://github.com/kimim/org-drawio") (org-drill :source "MELPA" :recipe (:package "org-drill" :fetcher gitlab :repo "phillord/org-drill" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Self-testing using spaced repetition" :date (24711 10704) :url "https://gitlab.com/phillord/org-drill") (org-drill-table :source "MELPA" :recipe (:package "org-drill-table" :fetcher github :repo "chrisbarrett/org-drill-table" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate drill cards from org tables" :date (23131 50384) :url "https://github.com/chrisbarrett/org-drill-table") (org-dropbox :source "MELPA" :recipe (:package "org-dropbox" :fetcher github :repo "heikkil/org-dropbox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Move Dropbox notes from phone into org-mode datetree" :date (21685 34640) :url "https://github.com/heikkil/org-dropbox") (org-easy-img-insert :source "MELPA" :recipe (:package "org-easy-img-insert" :fetcher github :repo "my7h3le/org-easy-img-insert" :old-names (auto-img-link-insert) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An easier way to add images from the web in org mode" :date (22489 47696) :url "https://github.com/my7h3le/org-easy-img-insert") (org-edit-indirect :source "MELPA" :recipe (:package "org-edit-indirect" :fetcher github :repo "agzam/org-edit-indirect.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit anything, not just source blocks" :date (25370 22480) :url "https://github.com/agzam/org-edit-indirect.el") (org-edit-latex :source "MELPA" :recipe (:package "org-edit-latex" :repo "et2010/org-edit-latex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit embedded LaTeX in a dedicated buffer" :date (22961 45904) :url "https://github.com/et2010/org-edit-latex") (org-ehtml :source "MELPA" :recipe (:package "org-ehtml" :fetcher github :repo "eschulte/org-ehtml" :files ("src/*.el" "src/ox-ehtml.js" "src/ox-ehtml.css")) :description "Export Org-mode files as editable web pages" :date (25100 5200) :url "https://github.com/eschulte/org-ehtml") (org-elisp-help :source "MELPA" :recipe (:package "org-elisp-help" :repo "tarsius/org-elisp-help" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org links to emacs-lisp documentation" :date (22579 24656) :url "https://github.com/tarsius/org-elisp-help") (org-elp :source "MELPA" :recipe (:package "org-elp" :repo "guanyilun/org-elp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview latex equations in org mode while editing" :date (24672 61008) :url "https://github.com/guanyilun/org-elp") (org-emms :source "MELPA" :recipe (:package "org-emms" :fetcher sourcehut :repo "jagrg/org-emms" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Playback multimedia files from Org documents" :date (25752 43728) :url "https://git.sr.ht/~jagrg/org-emms") (org-epa-gpg :source "MELPA" :recipe (:package "org-epa-gpg" :fetcher github :repo "KeyWeeUsr/org-epa-gpg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Patch to enable EasyPG .gpg images in Org mode inline" :date (26051 61264) :url "https://github.com/KeyWeeUsr/org-epa-gpg") (org-evil :source "MELPA" :recipe (:package "org-evil" :fetcher github :repo "GuiltyDolphin/org-evil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evil extensions for Org" :date (24848 17872) :url "https://github.com/GuiltyDolphin/org-evil") (org-fancy-priorities :source "MELPA" :recipe (:package "org-fancy-priorities" :repo "harrybournis/org-fancy-priorities" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display org priorities as custom strings" :date (24875 62800) :url "https://github.com/harrybournis/org-fancy-priorities") (org-fragtog :source "MELPA" :recipe (:package "org-fragtog" :fetcher github :repo "io12/org-fragtog" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-toggle Org LaTeX fragments" :date (25295 12880) :url "https://github.com/io12/org-fragtog") (org-gamedb :source "MELPA" :recipe (:package "org-gamedb" :fetcher github :repo "repelliuss/org-gamedb" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track video games in org-mode with giantbomb.com's API" :date (24748 5072) :url "https://github.com/repelliuss/org-gamedb") (org-gcal :source "MELPA" :recipe (:package "org-gcal" :fetcher github :repo "kidd/org-gcal.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org sync with Google Calendar" :date (26154 50256) :url "https://github.com/kidd/org-gcal.el") (org-generate :source "MELPA" :recipe (:package "org-generate" :fetcher github :repo "conao3/org-generate.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate template files/folders from org document" :date (26257 39248) :url "https://github.com/conao3/org-generate.el") (org-gnome :source "MELPA" :recipe (:package "org-gnome" :fetcher github :repo "NicolasPetton/org-gnome.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Orgmode integration with the GNOME desktop" :date (21884 39376) :url "https://github.com/NicolasPetton/org-gnome.el") (org-grep :source "MELPA" :recipe (:package "org-grep" :fetcher sourcehut :repo "minshall/org-grep" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kind of M-x rgrep adapted for Org mode" :date (25826 32464) :url "https://git.sr.ht/~minshall/org-grep") (org-gtd :source "MELPA" :recipe (:package "org-gtd" :fetcher github :repo "Trevoke/org-gtd.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An implementation of GTD" :date (25991 19024) :url "https://github.com/Trevoke/org-gtd.el") (org-habit-stats :source "MELPA" :recipe (:package "org-habit-stats" :repo "ml729/org-habit-stats" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display info about habits" :date (26051 61264) :url "https://github.com/ml729/org-habit-stats") (org-hyperscheduler :source "MELPA" :recipe (:package "org-hyperscheduler" :repo "dmitrym0/org-hyperscheduler" :fetcher github :files (:defaults ("calendar" "calendar/index.html" "calendar/index.js" "calendar/org-hs.css"))) :description "UI (web) representation of org-agenda" :date (25282 848) :url "https://github.com/dmitrym0/org-hyperscheduler") (org-id-cleanup :source "MELPA" :recipe (:package "org-id-cleanup" :fetcher github :repo "marcIhm/org-id-cleanup" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively find, present and maybe delete unused IDs of org-id" :date (25868 44752) :url "https://github.com/marcIhm/org-id-cleanup") (org-if :source "MELPA" :recipe (:package "org-if" :repo "elzair/org-if" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive Fiction Authoring System for Org-Mode" :date (22013 52432) :url "https://gitlab.com/elzair/org-if") (org-incoming :source "MELPA" :recipe (:package "org-incoming" :fetcher github :repo "tinloaf/org-incoming" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort incoming PDFs into your org files" :date (25572 3408) :url "https://github.com/tinloaf/org-incoming") (org-index :source "MELPA" :recipe (:package "org-index" :fetcher github :repo "marcIhm/org-index" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ranked and incremental search among selected org-headlines" :date (26352 34128) :url "https://github.com/marcIhm/org-index") (org-inline-anim :source "MELPA" :recipe (:package "org-inline-anim" :repo "shg/org-inline-anim.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inline playback of animated GIF/PNG for Org" :date (25731 37584) :url "https://github.com/shg/org-inline-anim.el") (org-inline-pdf :source "MELPA" :recipe (:package "org-inline-pdf" :repo "shg/org-inline-pdf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inline PDF previewing for Org" :date (25833 5712) :url "https://github.com/shg/org-inline-pdf.el") (org-inline-pdfcomment :source "MELPA" :recipe (:package "org-inline-pdfcomment" :fetcher sourcehut :repo "swflint/org-inline-pdfcomment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export Support for Inline Tasks as PDF Comments" :date (26380 13520) :url "https://git.sr.ht/~swflint/org-inline-pdfcomment") (org-iv :source "MELPA" :recipe (:package "org-iv" :fetcher github :repo "kuangdash/org-iv" :files (:defaults ("default" "default/org-iv-front-file" "default/org-back-file"))) :description "A tool used to view html (in browser) generated by org-file once the org-file changes" :date (22992 1488) :url "https://github.com/kuangdash/org-iv") (org-ivy-search :source "MELPA" :recipe (:package "org-ivy-search" :repo "beacoder/org-ivy-search" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Full text search for org files powered by ivy" :date (26160 2640) :url "https://github.com/beacoder/org-ivy-search") (org-jami-bot :source "MELPA" :recipe (:package "org-jami-bot" :fetcher gitlab :repo "hperrey/org-jami-bot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Capture GNU Jami messages as notes and todos in Org mode" :date (26045 22480) :url "https://gitlab.com/hperrey/org-jami-bot") (org-jira :source "MELPA" :recipe (:package "org-jira" :fetcher github :repo "ahungry/org-jira" :files ("jiralib.el" "org-jira.el" "org-jira-sdk.el")) :description "Syncing between Jira and Org-mode" :date (26359 7376) :url "https://github.com/ahungry/org-jira") (org-journal :source "MELPA" :recipe (:package "org-journal" :fetcher github :repo "bastibe/org-journal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple org-mode based journaling mode" :date (26065 7760) :url "https://github.com/bastibe/org-journal") (org-journal-list :source "MELPA" :recipe (:package "org-journal-list" :fetcher github :repo "huytd/org-journal-list" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org mode Journal List" :date (23661 49104) :url "https://github.com/huytd/org-journal-list") (org-journal-tags :source "MELPA" :recipe (:package "org-journal-tags" :fetcher github :repo "SqrtMinusOne/org-journal-tags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tagging and querying system for org-journal" :date (26001 54864) :url "https://github.com/SqrtMinusOne/org-journal-tags") (org-kanban :source "MELPA" :recipe (:package "org-kanban" :fetcher github :repo "gizmomogwai/org-kanban" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kanban dynamic block for org-mode" :date (26210 9040) :url "https://github.com/gizmomogwai/org-kanban") (org-kindle :source "MELPA" :recipe (:package "org-kindle" :fetcher git :url "https://repo.or.cz/org-kindle.git" :old-names (org-send-ebook) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send org link file to ebook reader" :date (25092 11088) :url "https://repo.or.cz/org-kindle.git") (org-latex-impatient :source "MELPA" :recipe (:package "org-latex-impatient" :repo "yangsheng6810/org-latex-impatient" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview org-latex Fragments Instantly via MathJax" :date (25453 26192) :url "https://github.com/yangsheng6810/org-latex-impatient") (org-linenote :source "MELPA" :recipe (:package "org-linenote" :fetcher github :repo "seokbeomKim/org-linenote" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package inspired by VSCode Linenote" :date (26133 44112) :url "https://github.com/seokbeomKim/org-linenote") (org-link-beautify :source "MELPA" :recipe (:package "org-link-beautify" :url "https://repo.or.cz/org-link-beautify.git" :fetcher git :files (:defaults "scripts")) :description "Beautify Org Links" :date (26398 43472) :url "https://repo.or.cz/org-link-beautify.git") (org-link-travis :source "MELPA" :recipe (:package "org-link-travis" :repo "aki2o/org-link-travis" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert/Export the link of Travis CI on org-mode" :date (21311 3904) :url "https://github.com/aki2o/org-link-travis") (org-linkotron :source "MELPA" :recipe (:package "org-linkotron" :fetcher gitlab :repo "perweij/org-linkotron" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode link selector" :date (24090 14160) :url "https://gitlab.com/perweij/org-linkotron") (org-listcruncher :source "MELPA" :recipe (:package "org-listcruncher" :fetcher github :repo "dfeich/org-listcruncher" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Planning tool - Parse Org mode lists into table" :date (24803 29392) :url "https://github.com/dfeich/org-listcruncher") (org-mac-link :source "MELPA" :recipe (:package "org-mac-link" :repo "aimebertrand/org-mac-link" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert org-mode links to items selected in various Mac apps" :date (25900 21200) :url "https://gitlab.com/aimebertrand/org-mac-link") (org-make-toc :source "MELPA" :recipe (:package "org-make-toc" :fetcher github :repo "alphapapa/org-make-toc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic tables of contents for Org files" :date (26320 57680) :url "https://github.com/alphapapa/org-make-toc") (org-mime :source "MELPA" :recipe (:package "org-mime" :repo "org-mime/org-mime" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org html export for text/html MIME emails" :date (26363 4432) :url "https://github.com/org-mime/org-mime") (org-mind-map :source "MELPA" :recipe (:package "org-mind-map" :repo "the-ted/org-mind-map" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Creates a directed graph from org-mode files" :date (23425 50000) :url "https://github.com/the-ted/org-mind-map") (org-ml :source "MELPA" :recipe (:package "org-ml" :repo "ndwarshuis/org-ml" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functional Org Mode API" :date (25651 10064) :url "https://github.com/ndwarshuis/org-ml") (org-mobile-sync :source "MELPA" :recipe (:package "org-mobile-sync" :url "https://framagit.org/steckerhalter/org-mobile-sync.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically sync org-mobile on changes" :date (23318 63952) :url "https://framagit.org/steckerhalter/org-mobile-sync.git") (org-modern :source "MELPA" :recipe (:package "org-modern" :repo "minad/org-modern" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modern looks for Org" :date (26356 31184) :url "https://github.com/minad/org-modern") (org-movies :source "MELPA" :recipe (:package "org-movies" :fetcher github :repo "teeann/org-movies" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage watchlist with Org mode" :date (24903 42192) :url "https://github.com/teeann/org-movies") (org-mpv-notes :source "MELPA" :recipe (:package "org-mpv-notes" :repo "bpanthi977/org-mpv-notes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Take notes in org mode while watching videos in mpv" :date (26356 31184) :url "https://github.com/bpanthi977/org-mpv-notes") (org-mru-clock :source "MELPA" :recipe (:package "org-mru-clock" :fetcher github :repo "unhammer/org-mru-clock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clock in/out of tasks with completion and persistent history" :date (26189 2896) :url "https://github.com/unhammer/org-mru-clock") (org-msg :source "MELPA" :recipe (:package "org-msg" :repo "jeremy-compostella/org-msg" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org mode to send and reply to email in HTML" :date (26324 54736) :url "https://github.com/jeremy-compostella/org-msg") (org-multi-wiki :source "MELPA" :recipe (:package "org-multi-wiki" :fetcher github :repo "akirak/org-multi-wiki" :files ("org-multi-wiki.el")) :description "Multiple wikis based on Org mode" :date (24666 22224) :url "https://github.com/akirak/org-multi-wiki") (org-multiple-keymap :source "MELPA" :recipe (:package "org-multiple-keymap" :fetcher github :repo "emacsattic/org-multiple-keymap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set keymap to elements, such as timestamp and priority" :date (23975 34000) :url "https://github.com/emacsattic/org-multiple-keymap") (org-newtab :source "MELPA" :recipe (:package "org-newtab" :repo "Zweihander-Main/org-newtab" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Supercharge your browser's new tab page" :date (26076 64464) :url "https://github.com/Zweihander-Main/org-newtab") (org-nix-shell :source "MELPA" :recipe (:package "org-nix-shell" :repo "AntonHakansson/org-nix-shell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org local nix-shell" :date (26204 56656) :url "https://github.com/AntonHakansson/org-nix-shell") (org-node :source "MELPA" :recipe (:package "org-node" :fetcher github :repo "meedstrom/org-node" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Link org-id entries into a network" :date (26406 37584) :url "https://github.com/meedstrom/org-node") (org-node-fakeroam :source "MELPA" :recipe (:package "org-node-fakeroam" :fetcher github :repo "meedstrom/org-node-fakeroam" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Stand-ins for org-roam-autosync-mode" :date (26406 37584) :url "https://github.com/meedstrom/org-node-fakeroam") (org-notebook :source "MELPA" :recipe (:package "org-notebook" :fetcher github :repo "Rahi374/org-notebook" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ease the use of org-mode as a notebook" :date (22737 37968) :url "https://github.com/Rahi374/org-notebook") (org-noter :source "MELPA" :recipe (:package "org-noter" :fetcher github :repo "org-noter/org-noter" :files ("*.el" "modules" (:exclude "*-test-utils.el" "*-devel.el"))) :description "A synchronized, Org-mode, document annotator" :date (26345 60880) :url "https://github.com/org-noter/org-noter") (org-noter-pdftools :source "MELPA" :recipe (:package "org-noter-pdftools" :repo "fuxialexander/org-pdftools" :fetcher github :files ("org-noter-pdftools.el")) :description "Integration between org-pdftools and org-noter" :date (25790 58960) :url "https://github.com/fuxialexander/org-pdftools") (org-notifications :source "MELPA" :recipe (:package "org-notifications" :fetcher github :repo "doppelc/org-notifications" :files (:defaults "sounds")) :description "Creates notifications for org-mode entries" :date (24901 464) :url "https://github.com/doppelc/org-notifications") (org-octopress :source "MELPA" :recipe (:package "org-octopress" :fetcher github :repo "yoshinari-nomura/org-octopress" :files (:defaults "setupfile-sample.org")) :description "Compose octopress articles using org-mode" :date (22937 63568) :url "https://github.com/yoshinari-nomura/org-octopress") (org-onenote :source "MELPA" :recipe (:package "org-onenote" :fetcher github :repo "ifree/org-onenote" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export org-mode document to onenote" :date (23001 16464) :url "https://github.com/ifree/org-onenote") (org-outline-numbering :source "MELPA" :recipe (:package "org-outline-numbering" :repo "andersjohansson/org-outline-numbering" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show outline numbering as overlays in org-mode" :date (23357 13648) :url "https://gitlab.com/andersjohansson/org-outline-numbering") (org-outlook :source "MELPA" :recipe (:package "org-outlook" :repo "mattfidler/org-outlook.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Outlook org" :date (22394 52816) :url "https://github.com/mattfidler/org-outlook.el") (org-page :source "MELPA" :recipe (:package "org-page" :fetcher github :repo "emacsorphanage/org-page" :files ("*.el" "doc" "themes")) :description "A static site generator based on org mode" :date (25837 2768) :url "https://github.com/emacsorphanage/org-page") (org-pdftools :source "MELPA" :recipe (:package "org-pdftools" :fetcher github :repo "fuxialexander/org-pdftools" :files ("org-pdftools.el") :old-names (org-pdfview)) :description "Support for links to documents in pdfview mode" :date (25142 17488) :url "https://github.com/fuxialexander/org-pdftools") (org-picklink :source "MELPA" :recipe (:package "org-picklink" :repo "tumashu/org-picklink" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pick a headline link from org-agenda" :date (24610 63440) :url "https://github.com/tumashu/org-picklink") (org-pomodoro :source "MELPA" :recipe (:package "org-pomodoro" :fetcher github :repo "marcinkoziej/org-pomodoro" :files (:defaults "resources")) :description "Pomodoro implementation for org-mode" :date (25139 41296) :url "https://github.com/marcinkoziej/org-pomodoro") (org-present :source "MELPA" :recipe (:package "org-present" :fetcher github :repo "rlister/org-present" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalist presentation minor-mode for Emacs org-mode" :date (25325 34000) :url "https://github.com/rlister/org-present") (org-present-remote :source "MELPA" :recipe (:package "org-present-remote" :fetcher sourcehut :repo "duncan-bayne/org-present-remote" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A web-based remote control for org-present" :date (25448 8272) :url "https://git.sr.ht/~duncan-bayne/org-present-remote") (org-pretty-tags :source "MELPA" :recipe (:package "org-pretty-tags" :repo "marcowahl/org-pretty-tags" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Surrogates for tags" :date (25034 10576) :url "https://gitlab.com/marcowahl/org-pretty-tags") (org-preview-html :source "MELPA" :recipe (:package "org-preview-html" :fetcher github :repo "jakebox/org-preview-html" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically preview org-exported HTML files within Emacs" :date (25329 31056) :url "https://github.com/jakebox/org-preview-html") (org-project-capture :source "MELPA" :recipe (:package "org-project-capture" :repo "colonelpanic8/org-project-capture" :fetcher github :files ("org-project-capture.el" "org-project-capture-backend.el")) :description "Repository todo capture and management for org-mode" :date (25838 23632) :url "https://github.com/colonelpanic8/org-project-capture") (org-projectile :source "MELPA" :recipe (:package "org-projectile" :repo "colonelpanic8/org-project-capture" :fetcher github :files ("org-projectile.el")) :description "Repository todo capture and management for org-mode with projectile" :date (25821 14544) :url "https://github.com/colonelpanic8/org-project-capture") (org-projectile-helm :source "MELPA" :recipe (:package "org-projectile-helm" :fetcher github :repo "colonelpanic8/org-project-capture" :files ("org-projectile-helm*.el")) :description "Helm functions for org-projectile" :date (25821 14544) :url "https://github.com/colonelpanic8/org-project-capture") (org-protocol-jekyll :source "MELPA" :recipe (:package "org-protocol-jekyll" :fetcher github :repo "vonavi/org-protocol-jekyll" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jekyll's handler for org-protocol" :date (22745 32080) :url "https://github.com/vonavi/org-protocol-jekyll") (org-ql :source "MELPA" :recipe (:package "org-ql" :fetcher github :repo "alphapapa/org-ql" :files (:defaults (:exclude "helm-org-ql.el"))) :description "Org Query Language, search command, and agenda-like view" :date (26343 19152) :url "https://github.com/alphapapa/org-ql") (org-radiobutton :source "MELPA" :recipe (:package "org-radiobutton" :fetcher github :repo "Fuco1/org-radiobutton" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Radiobutton for org-mode lists" :date (24740 10960) :url "https://github.com/Fuco1/org-radiobutton") (org-rainbow-tags :source "MELPA" :recipe (:package "org-rainbow-tags" :fetcher github :repo "KaratasFurkan/org-rainbow-tags" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Colorize org tags automatically" :date (25867 23888) :url "https://github.com/KaratasFurkan/org-rainbow-tags") (org-random-todo :source "MELPA" :recipe (:package "org-random-todo" :fetcher github :repo "unhammer/org-random-todo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show a random TODO (with alert) every so often" :date (23652 34128) :url "https://github.com/unhammer/org-random-todo") (org-randomnote :source "MELPA" :recipe (:package "org-randomnote" :fetcher github :repo "mwfogleman/org-randomnote" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find a random note in your Org-Mode files" :date (24087 37968) :url "https://github.com/mwfogleman/org-randomnote") (org-re-reveal :source "MELPA" :recipe (:package "org-re-reveal" :repo "oer/org-re-reveal" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org export to reveal.js presentations" :date (26322 13008) :url "https://gitlab.com/oer/org-re-reveal") (org-re-reveal-citeproc :source "MELPA" :recipe (:package "org-re-reveal-citeproc" :repo "oer/org-re-reveal-citeproc" :fetcher gitlab :files (:defaults "README.org" "local.css" "references.bib")) :description "Citations and bibliography for org-re-reveal" :date (24953 48592) :url "https://gitlab.com/oer/org-re-reveal-citeproc") (org-re-reveal-ref :source "MELPA" :recipe (:package "org-re-reveal-ref" :repo "oer/org-re-reveal-ref" :fetcher gitlab :files (:defaults "LICENSES" "README.org" "references.bib")) :description "Citations and bibliography for org-re-reveal" :date (24955 3920) :url "https://gitlab.com/oer/org-re-reveal-ref") (org-recent-headings :source "MELPA" :recipe (:package "org-recent-headings" :fetcher github :repo "alphapapa/org-recent-headings" :files (:defaults (:exclude "helm-org-recent-headings.el"))) :description "Jump to recently used Org headings" :date (24931 21584) :url "https://github.com/alphapapa/org-recent-headings") (org-recur :source "MELPA" :recipe (:package "org-recur" :fetcher github :repo "mrcnski/org-recur" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Recurring org-mode tasks" :date (25550 62800) :url "https://github.com/mrcnski/org-recur") (org-redmine :source "MELPA" :recipe (:package "org-redmine" :fetcher github :repo "emacsorphanage/org-redmine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Redmine tools using Emacs OrgMode" :date (22402 46928) :url "https://github.com/emacsorphanage/org-redmine") (org-ref :source "MELPA" :recipe (:package "org-ref" :fetcher github :repo "jkitchin/org-ref" :files (:defaults "org-ref.org" "org-ref.bib" "citeproc")) :description "Citations, cross-references and bibliographies in org-mode" :date (26283 63312) :url "https://github.com/jkitchin/org-ref") (org-ref-prettify :source "MELPA" :recipe (:package "org-ref-prettify" :fetcher github :repo "alezost/org-ref-prettify.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Prettify org-ref citation links" :date (25205 35920) :url "https://github.com/alezost/org-ref-prettify.el") (org-repo-todo :source "MELPA" :recipe (:package "org-repo-todo" :repo "waymondo/org-repo-todo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple repository todo management with org-mode" :date (23108 2512) :url "https://github.com/waymondo/org-repo-todo") (org-reverse-datetree :source "MELPA" :recipe (:package "org-reverse-datetree" :fetcher github :repo "akirak/org-reverse-datetree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create reverse date trees in org-mode" :date (26283 63312) :url "https://github.com/akirak/org-reverse-datetree") (org-review :source "MELPA" :recipe (:package "org-review" :repo "brabalan/org-review" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Schedule reviews for Org entries" :date (25544 24016) :url "https://github.com/brabalan/org-review") (org-rich-yank :source "MELPA" :recipe (:package "org-rich-yank" :fetcher github :repo "unhammer/org-rich-yank" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste with org-mode markup and link to source" :date (26082 16848) :url "https://github.com/unhammer/org-rich-yank") (org-roam :source "MELPA" :recipe (:package "org-roam" :fetcher github :repo "org-roam/org-roam" :files (:defaults "extensions/*")) :description "A database abstraction layer for Org-mode" :date (26370 64080) :url "https://github.com/org-roam/org-roam") (org-roam-bibtex :source "MELPA" :recipe (:package "org-roam-bibtex" :fetcher github :repo "org-roam/org-roam-bibtex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org Roam meets BibTeX" :date (26079 40656) :url "https://github.com/org-roam/org-roam-bibtex") (org-roam-ql :source "MELPA" :recipe (:package "org-roam-ql" :fetcher github :repo "ahmed-shariff/org-roam-ql" :files ("org-roam-ql.el")) :description "Interface to query and view results from org-roam" :date (26390 49360) :url "https://github.com/ahmed-shariff/org-roam-ql") (org-roam-ql-ql :source "MELPA" :recipe (:package "org-roam-ql-ql" :fetcher github :repo "ahmed-shariff/org-roam-ql" :files ("org-roam-ql-ql.el")) :description "Intgrating org-roam and org-ql" :date (26268 9552) :url "https://github.com/ahmed-shariff/org-roam-ql") (org-roam-timestamps :source "MELPA" :recipe (:package "org-roam-timestamps" :fetcher github :repo "tefkah/org-roam-timestamps" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep track of modification times for org-roam" :date (25444 11216) :url "https://github.com/tefkah/org-roam-timestamps") (org-roam-ui :source "MELPA" :recipe (:package "org-roam-ui" :fetcher github :repo "org-roam/org-roam-ui" :files (:defaults "out")) :description "User Interface for Org-roam" :date (25445 32080) :url "https://github.com/org-roam/org-roam-ui") (org-ros :source "MELPA" :recipe (:package "org-ros" :fetcher github :repo "LionyxML/ros" :files (:defaults "*.ps1")) :description "Rahul's Org-Mode Screenshot" :date (26175 56400) :url "https://github.com/LionyxML/ros") (org-rtm :source "MELPA" :recipe (:package "org-rtm" :repo "pmiddend/org-rtm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple import/export from rememberthemilk to org-mode" :date (22207 39248) :url "https://github.com/pmiddend/org-rtm") (org-runbook :source "MELPA" :recipe (:package "org-runbook" :fetcher github :repo "tyler-dodge/org-runbook" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org mode for runbooks" :date (25681 31184) :url "https://github.com/tyler-dodge/org-runbook") (org-scrum :source "MELPA" :recipe (:package "org-scrum" :repo "ianxm/emacs-scrum" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org mode extensions for scrum planning and reporting" :date (24115 17360) :url "https://github.com/ianxm/emacs-scrum") (org-seek :source "MELPA" :recipe (:package "org-seek" :fetcher git :url "https://repo.or.cz/org-seek.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Searching Org-mode files with search tools" :date (22612 21968) :url "https://repo.or.cz/org-seek.el.git") (org-shoplist :source "MELPA" :recipe (:package "org-shoplist" :fetcher github :repo "lordnik22/org-shoplist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Eat the world" :date (26322 13008) :url "https://github.com/lordnik22/org-shoplist") (org-side-tree :source "MELPA" :recipe (:package "org-side-tree" :fetcher github :repo "localauthor/org-side-tree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigate Org outlines in side window tree" :date (26202 14928) :url "https://github.com/localauthor/org-side-tree") (org-sidebar :source "MELPA" :recipe (:package "org-sidebar" :fetcher github :repo "alphapapa/org-sidebar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpful sidebar for Org buffers" :date (26003 10192) :url "https://github.com/alphapapa/org-sidebar") (org-sliced-images :source "MELPA" :recipe (:package "org-sliced-images" :fetcher github :repo "jcfk/org-sliced-images" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sliced inline images in org-mode" :date (26232 36048) :url "https://github.com/jcfk/org-sliced-images") (org-snooze :source "MELPA" :recipe (:package "org-snooze" :repo "xueeinstein/org-snooze.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Snooze your code, doc and feed" :date (23590 36560) :url "https://github.com/xueeinstein/org-snooze.el") (org-special-block-extras :source "MELPA" :recipe (:package "org-special-block-extras" :fetcher github :repo "alhassy/org-special-block-extras" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "30 new custom blocks & 34 link types for Org-mode" :date (25785 41040) :url "https://github.com/alhassy/org-special-block-extras") (org-sql :source "MELPA" :recipe (:package "org-sql" :repo "ndwarshuis/org-sql" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-Mode SQL converter" :date (26306 24784) :url "https://github.com/ndwarshuis/org-sql") (org-starter :source "MELPA" :recipe (:package "org-starter" :repo "akirak/org-starter" :fetcher github :files (:defaults (:exclude "counsel-org-starter.el" "helm-org-starter.el" "org-starter-swiper.el" "org-starter-extras.el"))) :description "A basic configuration framework for org mode" :date (25150 11600) :url "https://github.com/akirak/org-starter") (org-starter-swiper :source "MELPA" :recipe (:package "org-starter-swiper" :fetcher github :repo "akirak/org-starter" :files ("org-starter-swiper.el")) :description "Swiper for org-starter" :date (25150 11600) :url "https://github.com/akirak/org-starter") (org-static-blog :source "MELPA" :recipe (:package "org-static-blog" :repo "bastibe/org-static-blog" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple org-mode based static blog generator" :date (26276 3664) :url "https://github.com/bastibe/org-static-blog") (org-sticky-header :source "MELPA" :recipe (:package "org-sticky-header" :fetcher github :repo "alphapapa/org-sticky-header" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show off-screen Org heading at top of window" :date (24546 24144) :url "https://github.com/alphapapa/org-sticky-header") (org-super-agenda :source "MELPA" :recipe (:package "org-super-agenda" :fetcher github :repo "alphapapa/org-super-agenda" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Supercharge your agenda" :date (26343 19152) :url "https://github.com/alphapapa/org-super-agenda") (org-superstar :source "MELPA" :recipe (:package "org-superstar" :fetcher github :repo "integral-dw/org-superstar-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Prettify headings and plain lists in Org mode" :date (25540 26960) :url "https://github.com/integral-dw/org-superstar-mode") (org-sync :source "MELPA" :recipe (:package "org-sync" :repo "arbox/org-sync" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Synchronize Org documents with External Issue Trackers" :date (23557 39248) :url "https://github.com/arbox/org-sync") (org-sync-snippets :source "MELPA" :recipe (:package "org-sync-snippets" :repo "abrochard/org-sync-snippets" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export snippets to org-mode and vice versa" :date (24571 27344) :url "https://github.com/abrochard/org-sync-snippets") (org-table-color :source "MELPA" :recipe (:package "org-table-color" :fetcher github :repo "fosskers/org-table-color" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add color to your org-mode table cells" :date (25130 26320) :url "https://github.com/fosskers/org-table-color") (org-table-comment :source "MELPA" :recipe (:package "org-table-comment" :fetcher github :repo "mattfidler/org-table-comment.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org table comment modes" :date (20274 54336) :url "https://github.com/mattfidler/org-table-comment.el") (org-table-sticky-header :source "MELPA" :recipe (:package "org-table-sticky-header" :repo "cute-jumper/org-table-sticky-header" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sticky header for org-mode tables" :date (23945 12880) :url "https://github.com/cute-jumper/org-table-sticky-header") (org-tag-beautify :source "MELPA" :recipe (:package "org-tag-beautify" :url "https://repo.or.cz/org-tag-beautify.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Beautify Org mode tags" :date (26365 46160) :url "https://repo.or.cz/org-tag-beautify.git") (org-tagged :source "MELPA" :recipe (:package "org-tagged" :fetcher github :repo "gizmomogwai/org-tagged" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dynamic block for tagged org-mode todos" :date (25392 49488) :url "https://github.com/gizmomogwai/org-tagged") (org-tanglesync :source "MELPA" :recipe (:package "org-tanglesync" :fetcher gitlab :repo "mtekman/org-tanglesync.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syncing org src blocks with tangled external files" :date (24109 64976) :url "https://gitlab.com/mtekman/org-tanglesync.el") (org-tfl :source "MELPA" :recipe (:package "org-tfl" :fetcher github :repo "storax/org-tfl" :files (:defaults "*.svg")) :description "Transport for London meets Orgmode" :date (22981 31184) :url "https://github.com/storax/org-tfl") (org-tidy :source "MELPA" :recipe (:package "org-tidy" :fetcher github :repo "jxq0/org-tidy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to tidy org-mode buffers" :date (26013 46032) :url "https://github.com/jxq0/org-tidy") (org-time-budgets :source "MELPA" :recipe (:package "org-time-budgets" :fetcher github :repo "leoc/org-time-budgets" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define time budgets and display clocked time" :date (24334 7376) :url "https://github.com/leoc/org-time-budgets") (org-timeblock :source "MELPA" :recipe (:package "org-timeblock" :fetcher github :repo "ichernyshovvv/org-timeblock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive SVG calendar for orgmode tasks" :date (26397 22608) :url "https://github.com/ichernyshovvv/org-timeblock") (org-timeline :source "MELPA" :recipe (:package "org-timeline" :fetcher github :repo "Fuco1/org-timeline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add graphical view of agenda to agenda buffer" :date (24970 57680) :url "https://github.com/Fuco1/org-timeline") (org-toodledo :source "MELPA" :recipe (:package "org-toodledo" :repo "myuhe/org-toodledo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toodledo integration for Emacs Org mode" :date (21746 11344) :url "https://github.com/myuhe/org-toodledo") (org-tracktable :source "MELPA" :recipe (:package "org-tracktable" :fetcher github :repo "tty-tourist/org-tracktable" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track your writing progress in an org-table" :date (22574 6736) :url "https://github.com/tty-tourist/org-tracktable") (org-transclusion-http :source "MELPA" :recipe (:package "org-transclusion-http" :fetcher sourcehut :repo "ushin/org-transclusion-http" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transclude over HTTP" :date (26225 62800) :url "https://git.sr.ht/~ushin/org-transclusion-http") (org-transform-tree-table :source "MELPA" :recipe (:package "org-transform-tree-table" :repo "jplindstrom/emacs-org-transform-tree-table" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transform org-mode tree with properties to a table, and the other way around" :date (24211 33104) :url "https://github.com/jplindstrom/emacs-org-transform-tree-table") (org-tree-slide :source "MELPA" :recipe (:package "org-tree-slide" :fetcher github :repo "takaxp/org-tree-slide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A presentation tool for org-mode" :date (25833 5712) :url "https://github.com/takaxp/org-tree-slide") (org-tree-slide-pauses :source "MELPA" :recipe (:package "org-tree-slide-pauses" :fetcher github :repo "cnngimenez/org-tree-slide-pauses" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bring the pause command from Beamer to org-tree-slide" :date (24535 53840) :url "https://github.com/cnngimenez/org-tree-slide-pauses") (org-treescope :source "MELPA" :recipe (:package "org-treescope" :fetcher gitlab :repo "mtekman/org-treescope.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Time scoping sparse trees within org" :date (24237 57168) :url "https://gitlab.com/mtekman/org-treescope.el") (org-treeusage :source "MELPA" :recipe (:package "org-treeusage" :fetcher gitlab :repo "mtekman/org-treeusage.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Examine the usage of org headings in a tree-like manner" :date (25412 34768) :url "https://gitlab.com/mtekman/org-treeusage.el") (org-trello :source "MELPA" :recipe (:package "org-trello" :fetcher github :repo "org-trello/org-trello" :files ("org-trello*.el" (:exclude "org-trello-tools*.el"))) :description "Minor mode to synchronize org-mode buffer and trello board" :date (24653 10192) :url "https://github.com/org-trello/org-trello") (org-unique-id :source "MELPA" :recipe (:package "org-unique-id" :repo "Phundrak/org-unique-id" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create unique IDs for org headers" :date (25367 46288) :url "https://github.com/Phundrak/org-unique-id") (org-upcoming-modeline :source "MELPA" :recipe (:package "org-upcoming-modeline" :fetcher github :repo "unhammer/org-upcoming-modeline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show next org event in mode line" :date (26398 43472) :url "https://github.com/unhammer/org-upcoming-modeline") (org-variable-pitch :source "MELPA" :recipe (:package "org-variable-pitch" :fetcher codeberg :repo "kutuptiyini/elisp" :files ("org-variable-pitch.el")) :description "Minor mode for variable pitch text in org mode" :date (25105 23120) :url "https://codeberg.org/kutuptiyini/elisp") (org-vcard :source "MELPA" :recipe (:package "org-vcard" :fetcher github :repo "pinoaffe/org-vcard" :files ("org-vcard.el" "styles")) :description "Org-mode support for vCard export and import" :date (26091 31824) :url "https://github.com/pinoaffe/org-vcard") (org-view-mode :source "MELPA" :recipe (:package "org-view-mode" :repo "amno1/org-view-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read-only viewer with less markup clutter in org mode files" :date (26065 7760) :url "https://github.com/amno1/org-view-mode") (org-visibility :source "MELPA" :recipe (:package "org-visibility" :repo "nullman/emacs-org-visibility" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent org tree visibility" :date (25396 46544) :url "https://github.com/nullman/emacs-org-visibility") (org-wc :source "MELPA" :recipe (:package "org-wc" :fetcher github :repo "tesujimath/org-wc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Count words in org mode trees" :date (24355 13520) :url "https://github.com/tesujimath/org-wc") (org-web-tools :source "MELPA" :recipe (:package "org-web-tools" :fetcher github :repo "alphapapa/org-web-tools" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display and capture web content with Org-mode" :date (25986 1104) :url "https://github.com/alphapapa/org-web-tools") (org-web-track :source "MELPA" :recipe (:package "org-web-track" :fetcher github :repo "p-snow/org-web-track" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Web data tracking framework in Org Mode" :date (26384 10576) :url "https://github.com/p-snow/org-web-track") (org-wild-notifier :source "MELPA" :recipe (:package "org-wild-notifier" :fetcher github :repo "akhramov/org-wild-notifier.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Customizable org-agenda notifications" :date (26112 37968) :url "https://github.com/akhramov/org-wild-notifier.el") (org-working-set :source "MELPA" :recipe (:package "org-working-set" :fetcher github :repo "marcIhm/org-working-set" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage and visit a small and changing set of org-nodes that you work on" :date (25802 50128) :url "https://github.com/marcIhm/org-working-set") (org-wunderlist :source "MELPA" :recipe (:package "org-wunderlist" :fetcher github :repo "emacsattic/org-wunderlist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org sync with Wunderlist" :date (23975 34000) :url "https://github.com/emacsattic/org-wunderlist") (org-xlatex :source "MELPA" :recipe (:package "org-xlatex" :fetcher github :repo "ksqsf/org-xlatex" :files (:defaults "org-xlatex.html")) :description "Instant LaTeX preview in an xwidget" :date (26249 45136) :url "https://github.com/ksqsf/org-xlatex") (org-zettelkasten :source "MELPA" :recipe (:package "org-zettelkasten" :fetcher sourcehut :repo "ymherklotz/org-zettelkasten" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Zettelkasten mode leveraging Org" :date (26261 36304) :url "https://git.sr.ht/~ymherklotz/org-zettelkasten") (org2blog :source "MELPA" :recipe (:package "org2blog" :fetcher github :repo "org2blog/org2blog" :files (:defaults "README.org" (:exclude "metaweblog.el"))) :description "Blog from Org mode to WordPress" :date (25678 54992) :url "https://github.com/org2blog/org2blog") (org2ctex :source "MELPA" :recipe (:package "org2ctex" :fetcher github :repo "tumashu/org2ctex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export org to ctex (a latex macro for Chinese)" :date (24194 24016) :url "https://github.com/tumashu/org2ctex") (org2elcomment :source "MELPA" :recipe (:package "org2elcomment" :repo "cute-jumper/org2elcomment" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert Org file to Elisp comments" :date (22740 14160) :url "https://github.com/cute-jumper/org2elcomment") (org2issue :source "MELPA" :recipe (:package "org2issue" :fetcher github :repo "lujun9972/org2issue" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export org to github issue" :date (23792 17488) :url "https://github.com/lujun9972/org2issue") (org2jekyll :source "MELPA" :recipe (:package "org2jekyll" :fetcher github :repo "ardumont/org2jekyll" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to publish org-mode post to jekyll without specific yaml" :date (24874 41936) :url "https://github.com/ardumont/org2jekyll") (org2web :source "MELPA" :recipe (:package "org2web" :repo "tumashu/org2web" :fetcher github :files ("org2web*.el" "documents" "themes" "uploaders")) :description "A static site generator based on org mode" :date (24601 48464) :url "https://github.com/tumashu/org2web") (organic-green-theme :source "MELPA" :recipe (:package "organic-green-theme" :repo "kostafey/organic-green-theme" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low-contrast green color theme" :date (26281 21584) :url "https://gitlab.com/kostafey/organic-green-theme") (organize-imports-java :source "MELPA" :recipe (:package "organize-imports-java" :repo "jcs-elpa/organize-imports-java" :fetcher github :files (:defaults "sdk" "default")) :description "Automatically organize imports in Java code" :date (26001 54864) :url "https://github.com/jcs-elpa/organize-imports-java") (orgbox :source "MELPA" :recipe (:package "orgbox" :fetcher github :repo "yasuhito/orgbox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mailbox-like task scheduling Org" :date (23427 5328) :url "https://github.com/yasuhito/orgbox") (orgit :source "MELPA" :recipe (:package "orgit" :fetcher github :repo "magit/orgit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for Org links to Magit buffers" :date (26291 57424) :url "https://github.com/magit/orgit") (orgit-forge :source "MELPA" :recipe (:package "orgit-forge" :fetcher github :repo "magit/orgit-forge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org links to Forge issue buffers" :date (26291 57424) :url "https://github.com/magit/orgit-forge") (orglink :source "MELPA" :recipe (:package "orglink" :repo "tarsius/orglink" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use Org Mode links in other modes" :date (26287 60368) :url "https://github.com/tarsius/orglink") (orglue :source "MELPA" :recipe (:package "orglue" :fetcher github :repo "yoshinari-nomura/orglue" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "More functionality to org-mode" :date (24208 56912) :url "https://github.com/yoshinari-nomura/orglue") (orgmdb :source "MELPA" :recipe (:package "orgmdb" :fetcher github :repo "isamert/orgmdb.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An OMDb API client with some convenience functions" :date (25883 12112) :url "https://github.com/isamert/orgmdb.el") (orgnav :source "MELPA" :recipe (:package "orgnav" :repo "facetframer/orgnav" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org tree navigation using helm" :date (22840 26960) :url "https://github.com/facetframer/orgnav") (orgnote :source "MELPA" :recipe (:package "orgnote" :repo "Artawower/orgnote.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sync org-roam notes with OrgNote app" :date (26299 51536) :url "https://github.com/Artawower/orgnote.el") (orgstrap :source "MELPA" :recipe (:package "orgstrap" :repo "tgbugs/orgstrap" :fetcher github :files ("orgstrap.el")) :description "Bootstrap an Org file using file local variables" :date (25648 33872) :url "https://github.com/tgbugs/orgstrap") (orgtbl-aggregate :source "MELPA" :recipe (:package "orgtbl-aggregate" :fetcher github :repo "tbanel/orgaggregate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create an aggregated Org table from another one" :date (26364 25296) :url "https://github.com/tbanel/orgaggregate") (orgtbl-ascii-plot :source "MELPA" :recipe (:package "orgtbl-ascii-plot" :fetcher github :repo "tbanel/orgtblasciiplot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ascii-art bar plots in org-mode tables" :date (25548 21072) :url "https://github.com/tbanel/orgtblasciiplot") (orgtbl-fit :source "MELPA" :recipe (:package "orgtbl-fit" :fetcher github :repo "tbanel/orgtblfit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Regression-fit a column in an Org Mode table" :date (26078 19792) :url "https://github.com/tbanel/orgtblfit") (orgtbl-join :source "MELPA" :recipe (:package "orgtbl-join" :fetcher github :repo "tbanel/orgtbljoin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Join columns from another Org Mode table" :date (26364 25296) :url "https://github.com/tbanel/orgtbljoin") (orgtbl-show-header :source "MELPA" :recipe (:package "orgtbl-show-header" :fetcher github :repo "DamienCassou/orgtbl-show-header" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show the header of the current column in the minibuffer" :date (25843 41552) :url "https://github.com/DamienCassou/orgtbl-show-header") (origami :source "MELPA" :recipe (:package "origami" :fetcher github :repo "gregsexton/origami.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Flexible text folding" :date (24194 24016) :url "https://github.com/gregsexton/origami.el") (origami-predef :source "MELPA" :recipe (:package "origami-predef" :repo "alvarogonzalezsotillo/origami-predef" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply folding when finding (opening) files" :date (24294 36816) :url "https://github.com/alvarogonzalezsotillo/origami-predef") (ormolu :source "MELPA" :recipe (:package "ormolu" :repo "vyorkin/ormolu.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format Haskell source code using the \"ormolu\" program" :date (25235 57040) :url "https://github.com/vyorkin/ormolu.el") (orthodox-christian-new-calendar-holidays :source "MELPA" :recipe (:package "orthodox-christian-new-calendar-holidays" :fetcher github :repo "cmchittom/orthodox-christian-new-calendar-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Feasts (NS)" :date (24875 62800) :url "https://github.com/cmchittom/orthodox-christian-new-calendar-holidays") (osa :source "MELPA" :recipe (:package "osa" :fetcher github :repo "atomontage/osa" :files (:defaults ("scripts" "scripts/*.js" "scripts/*.applescript"))) :description "OSA (JavaScript / AppleScript) bridge" :date (24262 60368) :url "https://github.com/atomontage/osa") (osa-chrome :source "MELPA" :recipe (:package "osa-chrome" :fetcher github :repo "atomontage/osa-chrome" :files (:defaults ("scripts" "scripts/*.js"))) :description "Google Chrome remote tab control" :date (25697 19408) :url "https://github.com/atomontage/osa-chrome") (osm :source "MELPA" :recipe (:package "osm" :repo "minad/osm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OpenStreetMap viewer" :date (26369 43216) :url "https://github.com/minad/osm") (osx-browse :source "MELPA" :recipe (:package "osx-browse" :repo "rolandwalker/osx-browse" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Web browsing helpers for OS X" :date (21354 37056) :url "https://github.com/rolandwalker/osx-browse") (osx-clipboard :source "MELPA" :recipe (:package "osx-clipboard" :fetcher github :repo "joddie/osx-clipboard-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use the OS X clipboard from terminal Emacs" :date (21561 35904) :url "https://github.com/joddie/osx-clipboard-mode") (osx-dictionary :source "MELPA" :recipe (:package "osx-dictionary" :repo "xuchunyang/osx-dictionary.el" :fetcher github :files ("osx-dictionary.el" "osx-dictionary.m")) :description "Interface for OSX Dictionary.app" :date (26119 11216) :url "https://github.com/xuchunyang/osx-dictionary.el") (osx-lib :source "MELPA" :recipe (:package "osx-lib" :repo "raghavgautam/osx-lib" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Basic functions for Apple/OSX" :date (25005 10320) :url "https://github.com/raghavgautam/osx-lib") (osx-location :source "MELPA" :recipe (:package "osx-location" :fetcher github :repo "purcell/osx-location" :files ("*.el" "EmacsLocationHelper")) :description "Watch and respond to changes in geographical location on OS X" :date (24158 50512) :url "https://github.com/purcell/osx-location") (osx-org-clock-menubar :source "MELPA" :recipe (:package "osx-org-clock-menubar" :fetcher github :repo "jordonbiondo/osx-org-clock-menubar" :files (:defaults "*.rb")) :description "Simple menubar integration for org-clock" :date (21714 34896) :url "https://github.com/jordonbiondo/osx-org-clock-menubar") (osx-plist :source "MELPA" :recipe (:package "osx-plist" :fetcher github :repo "gonewest818/osx-plist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apple plist file parser" :date (24131 5584) :url "https://github.com/gonewest818/osx-plist") (osx-pseudo-daemon :source "MELPA" :recipe (:package "osx-pseudo-daemon" :repo "DarwinAwardWinner/mac-pseudo-daemon" :fetcher github :files ("osx-pseudo-daemon.el")) :description "Daemon mode that plays nice with OSX" :date (26351 13264) :url "https://github.com/DarwinAwardWinner/mac-pseudo-daemon") (osx-trash :source "MELPA" :recipe (:package "osx-trash" :fetcher github :repo "emacsorphanage/osx-trash" :files (:defaults "*.AppleScript")) :description "System trash for OS X" :date (25375 40400) :url "https://github.com/emacsorphanage/osx-trash") (otama :source "MELPA" :recipe (:package "otama" :fetcher github :repo "yoshinari-nomura/otama" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-table Manipulator" :date (22273 33872) :url "https://github.com/yoshinari-nomura/otama") (other-emacs-eval :source "MELPA" :recipe (:package "other-emacs-eval" :fetcher github :repo "xuchunyang/other-emacs-eval" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluate the Emacs Lisp expression in other Emacs" :date (23241 12624) :url "https://github.com/xuchunyang/other-emacs-eval") (otpp :source "MELPA" :recipe (:package "otpp" :fetcher github :repo "abougouffa/one-tab-per-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "One tab per project, with unique names" :date (26312 63568) :url "https://github.com/abougouffa/one-tab-per-project") (ouroboros :source "MELPA" :recipe (:package "ouroboros" :fetcher github :repo "Titan-C/cardano.el" :files ("ouroboros.el")) :description "Ouroboros network mini-protocol" :date (25726 19664) :url "https://github.com/Titan-C/cardano.el") (outline-indent :source "MELPA" :recipe (:package "outline-indent" :fetcher github :repo "jamescherti/outline-indent.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fold text using indentation" :date (26385 31440) :url "https://github.com/jamescherti/outline-indent.el") (outline-magic :source "MELPA" :recipe (:package "outline-magic" :repo "tj64/outline-magic" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Outline mode extensions for Emacs" :date (23336 7504) :url "https://github.com/tj64/outline-magic") (outline-minor-faces :source "MELPA" :recipe (:package "outline-minor-faces" :fetcher github :repo "tarsius/outline-minor-faces" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight only section headings" :date (26322 13008) :url "https://github.com/tarsius/outline-minor-faces") (outline-toc :source "MELPA" :recipe (:package "outline-toc" :fetcher github :repo "abingham/outline-toc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sidebar showing a \"table of contents\"" :date (24195 44880) :url "https://github.com/abingham/outline-toc.el") (outlook :source "MELPA" :recipe (:package "outlook" :fetcher github :repo "asavonic/outlook.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send emails in MS Outlook style" :date (23267 36688) :url "https://github.com/asavonic/outlook.el") (outorg :source "MELPA" :recipe (:package "outorg" :fetcher github :repo "alphapapa/outorg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-style comment editing" :date (23858 12112) :url "https://github.com/alphapapa/outorg") (outrespace :source "MELPA" :recipe (:package "outrespace" :repo "articuluxe/outrespace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some c++ namespace utility functions" :date (25102 46928) :url "https://github.com/articuluxe/outrespace") (outshine :source "MELPA" :recipe (:package "outshine" :fetcher github :repo "alphapapa/outshine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Outline with outshine outshines outline" :date (25150 11600) :url "https://github.com/alphapapa/outshine") (ov :source "MELPA" :recipe (:package "ov" :fetcher github :repo "emacsorphanage/ov" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Overlay library for Emacs Lisp" :date (25706 34384) :url "https://github.com/emacsorphanage/ov") (overcast-theme :source "MELPA" :recipe (:package "overcast-theme" :fetcher github :repo "myTerminal/overcast-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark but vibrant color theme for Emacs" :date (24227 21328) :url "https://github.com/myTerminal/overcast-theme") (overseer :source "MELPA" :recipe (:package "overseer" :fetcher github :repo "tonini/overseer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ert-runner Integration Into Emacs" :date (26012 25168) :url "https://github.com/tonini/overseer.el") (ovpn-mode :source "MELPA" :recipe (:package "ovpn-mode" :repo "anticomputer/ovpn-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An openvpn management mode" :date (24679 34256) :url "https://github.com/anticomputer/ovpn-mode") (owcmd :source "MELPA" :recipe (:package "owcmd" :fetcher github :repo "fishyfriend/owcmd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a single command in the other window" :date (24256 21584) :url "https://github.com/fishyfriend/owcmd") (owdriver :source "MELPA" :recipe (:package "owdriver" :repo "aki2o/owdriver" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly perform various actions on other windows" :date (26055 58320) :url "https://github.com/aki2o/owdriver") (ox-750words :source "MELPA" :recipe (:package "ox-750words" :fetcher github :repo "zzamboni/750words-client" :files ("ox-750words.el")) :description "Org mode exporter for 750words.com" :date (25270 9680) :url "https://github.com/zzamboni/750words-client") (ox-asciidoc :source "MELPA" :recipe (:package "ox-asciidoc" :fetcher github :repo "yashi/org-asciidoc" :files ("ox-asciidoc.el")) :description "AsciiDoc Back-End for Org Export Engine" :date (26309 976) :url "https://github.com/yashi/org-asciidoc") (ox-bb :source "MELPA" :recipe (:package "ox-bb" :fetcher github :repo "mmitch/ox-bb" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "BBCode Back-End for Org Export Engine" :date (24626 51664) :url "https://github.com/mmitch/ox-bb") (ox-bibtex-chinese :source "MELPA" :recipe (:package "ox-bibtex-chinese" :fetcher github :repo "tumashu/ox-bibtex-chinese" :files ("*.el" "bibtex-styles")) :description "Let ox-bibtex work well for Chinese users" :date (22899 48336) :url "https://github.com/tumashu/ox-bibtex-chinese") (ox-clip :source "MELPA" :recipe (:package "ox-clip" :fetcher github :repo "jkitchin/ox-clip" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cross-platform formatted copying for org-mode" :date (26092 52688) :url "https://github.com/jkitchin/ox-clip") (ox-epub :source "MELPA" :recipe (:package "ox-epub" :repo "ofosos/ox-epub" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export org mode projects to EPUB" :date (23514 6096) :url "https://github.com/ofosos/ox-epub") (ox-gemini :source "MELPA" :recipe (:package "ox-gemini" :fetcher sourcehut :repo "abrahms/ox-gemini" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Output gemini formatted documents from org-mode" :date (26069 4816) :url "https://git.sr.ht/~abrahms/ox-gemini") (ox-gfm :source "MELPA" :recipe (:package "ox-gfm" :fetcher github :repo "larstvei/ox-gfm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Github Flavored Markdown Back-End for Org Export Engine" :date (25979 27856) :url "https://github.com/larstvei/ox-gfm") (ox-gist :source "MELPA" :recipe (:package "ox-gist" :repo "punchagan/ox-gist" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export Org mode buffers and subtrees to GitHub gists" :date (25169 62416) :url "https://github.com/punchagan/ox-gist") (ox-haunt :source "MELPA" :recipe (:package "ox-haunt" :fetcher sourcehut :repo "jakob/ox-haunt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Haunt-flavored HTML backend for the Org export engine" :date (25790 58960) :url "https://git.sr.ht/~jakob/ox-haunt") (ox-html5slide :source "MELPA" :recipe (:package "ox-html5slide" :fetcher github :repo "coldnew/org-html5slide" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export org-mode to HTML5 slide" :date (25430 64720) :url "https://github.com/coldnew/org-html5slide") (ox-hugo :source "MELPA" :recipe (:package "ox-hugo" :fetcher github :repo "kaushalmodi/ox-hugo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hugo Markdown Back-End for Org Export Engine" :date (26086 13904) :url "https://github.com/kaushalmodi/ox-hugo") (ox-ioslide :source "MELPA" :recipe (:package "ox-ioslide" :fetcher github :repo "coldnew/org-ioslide" :files (:defaults "js" "theme" "images")) :description "Export org-mode to Google I/O HTML5 slide" :date (22529 18256) :url "https://github.com/coldnew/org-ioslide") (ox-jekyll-md :source "MELPA" :recipe (:package "ox-jekyll-md" :repo "gonsie/ox-jekyll-md" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export Jekyll on Markdown articles using org-mode" :date (25026 16464) :url "https://github.com/gonsie/ox-jekyll-md") (ox-jira :source "MELPA" :recipe (:package "ox-jira" :repo "stig/ox-jira.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JIRA Backend for Org Export Engine" :date (26380 13520) :url "https://github.com/stig/ox-jira.el") (ox-json :source "MELPA" :recipe (:package "ox-json" :fetcher github :repo "jlumpe/ox-json" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "JSON export backend for Org mode" :date (26008 28112) :url "https://github.com/jlumpe/ox-json") (ox-latex-subfigure :source "MELPA" :recipe (:package "ox-latex-subfigure" :repo "linktohack/ox-latex-subfigure" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Subfigure for latex export" :date (24187 50768) :url "https://github.com/linktohack/ox-latex-subfigure") (ox-leanpub :source "MELPA" :recipe (:package "ox-leanpub" :fetcher gitlab :repo "zzamboni/ox-leanpub" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export Org documents to Leanpub book format" :date (25657 48848) :url "https://gitlab.com/zzamboni/ox-leanpub") (ox-linuxmag-fr :source "MELPA" :recipe (:package "ox-linuxmag-fr" :fetcher github :repo "DamienCassou/ox-linuxmag-fr" :files (:defaults "resources")) :description "Org-mode exporter for the French GNU/Linux Magazine" :date (26232 36048) :url "https://github.com/DamienCassou/ox-linuxmag-fr") (ox-mdx-deck :source "MELPA" :recipe (:package "ox-mdx-deck" :fetcher github :repo "WolfeCub/ox-mdx-deck" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode to mdx-deck exporter" :date (23532 36048) :url "https://github.com/WolfeCub/ox-mdx-deck") (ox-mediawiki :source "MELPA" :recipe (:package "ox-mediawiki" :fetcher github :repo "tomalexander/orgmode-mediawiki" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mediawiki Back-End for Org Export Engine" :date (25670 60880) :url "https://github.com/tomalexander/orgmode-mediawiki") (ox-minutes :source "MELPA" :recipe (:package "ox-minutes" :fetcher github :repo "kaushalmodi/ox-minutes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plain text backend for Org for Meeting Minutes" :date (23155 32720) :url "https://github.com/kaushalmodi/ox-minutes") (ox-nikola :source "MELPA" :recipe (:package "ox-nikola" :fetcher github :repo "msnoigrs/ox-nikola" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export Nikola articles using org-mode" :date (22086 20304) :url "https://github.com/msnoigrs/ox-nikola") (ox-pandoc :source "MELPA" :recipe (:package "ox-pandoc" :repo "emacsorphanage/ox-pandoc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Org-mode exporter using pandoc" :date (26253 42192) :url "https://github.com/emacsorphanage/ox-pandoc") (ox-qmd :source "MELPA" :recipe (:package "ox-qmd" :fetcher github :repo "0x60df/ox-qmd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Qiita Markdown Back-End for Org Export Engine" :date (25630 3920) :url "https://github.com/0x60df/ox-qmd") (ox-report :source "MELPA" :recipe (:package "ox-report" :repo "DarkBuffalo/ox-report" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export your org file to minutes report PDF file" :date (25986 1104) :url "https://github.com/DarkBuffalo/ox-report") (ox-reveal :source "MELPA" :recipe (:package "ox-reveal" :repo "yjwen/org-reveal" :fetcher github :old-names (org-reveal) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reveal.js Presentation Back-End for Org Export Engine" :date (25474 32336) :url "https://github.com/yjwen/org-reveal") (ox-review :source "MELPA" :recipe (:package "ox-review" :fetcher github :repo "masfj/ox-review" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Re:VIEW Back-End for Org Export Engine" :date (25262 15568) :url "https://github.com/masfj/ox-review") (ox-rfc :source "MELPA" :recipe (:package "ox-rfc" :fetcher github :repo "choppsv1/org-rfc-export" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RFC Back-End for Org Export Engine" :date (26323 33872) :url "https://github.com/choppsv1/org-rfc-export") (ox-rss :source "MELPA" :recipe (:package "ox-rss" :fetcher github :repo "BenedictHW/ox-rss" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RSS 2.0 Back-End for Org Export Engine" :date (25648 33872) :url "https://github.com/BenedictHW/ox-rss") (ox-rst :source "MELPA" :recipe (:package "ox-rst" :fetcher github :repo "msnoigrs/ox-rst" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Export reStructuredText using org-mode" :date (24374 64336) :url "https://github.com/msnoigrs/ox-rst") (ox-slack :source "MELPA" :recipe (:package "ox-slack" :fetcher github :repo "titaniumbones/ox-slack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Slack Exporter for org-mode" :date (24084 61776) :url "https://github.com/titaniumbones/ox-slack") (ox-spectacle :source "MELPA" :recipe (:package "ox-spectacle" :fetcher github :repo "lorniu/ox-spectacle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spectacle.js Presentation Back-End for Org Export Engine" :date (25606 21584) :url "https://github.com/lorniu/ox-spectacle") (ox-ssh :source "MELPA" :recipe (:package "ox-ssh" :fetcher github :repo "dantecatalfamo/ox-ssh" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SSH Config Backend for Org Export Engine" :date (24899 45136) :url "https://github.com/dantecatalfamo/ox-ssh") (ox-textile :source "MELPA" :recipe (:package "ox-textile" :fetcher github :repo "yashi/org-textile" :files ("ox-textile.el")) :description "Textile Back-End for Org Export Engine" :date (24902 21328) :url "https://github.com/yashi/org-textile") (ox-tiddly :source "MELPA" :recipe (:package "ox-tiddly" :fetcher github :repo "dfeich/org8-wikiexporters" :files ("ox-tiddly.el")) :description "Org TiddlyWiki exporter" :date (24431 43984) :url "https://github.com/dfeich/org8-wikiexporters") (ox-timeline :source "MELPA" :recipe (:package "ox-timeline" :repo "jjuliano/org-simple-timeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "HTML Timeline Back-End for Org Export Engine" :date (25143 38352) :url "https://github.com/jjuliano/org-simple-timeline") (ox-trac :source "MELPA" :recipe (:package "ox-trac" :fetcher github :repo "JalapenoGremlin/ox-trac" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org Export Backend to Trac WikiFormat" :date (23024 64336) :url "https://github.com/JalapenoGremlin/ox-trac") (ox-tufte :source "MELPA" :recipe (:package "ox-tufte" :fetcher github :repo "ox-tufte/ox-tufte" :files (:defaults "src")) :description "Tufte HTML org-mode export backend" :date (26347 16208) :url "https://github.com/ox-tufte/ox-tufte") (ox-twbs :source "MELPA" :recipe (:package "ox-twbs" :repo "marsmining/ox-twbs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bootstrap compatible HTML Back-End for Org" :date (24311 45904) :url "https://github.com/marsmining/ox-twbs") (ox-twiki :source "MELPA" :recipe (:package "ox-twiki" :fetcher github :repo "dfeich/org8-wikiexporters" :files ("ox-twiki.el")) :description "Org Twiki and Foswiki export" :date (24431 43984) :url "https://github.com/dfeich/org8-wikiexporters") (ox-wk :source "MELPA" :recipe (:package "ox-wk" :fetcher github :repo "w-vi/ox-wk.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wiki Back-End for Org Export Engine" :date (24074 25936) :url "https://github.com/w-vi/ox-wk.el") (ox-yaow :source "MELPA" :recipe (:package "ox-yaow" :repo "LaurenceWarne/ox-yaow.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate html pages from org files" :date (25275 27600) :url "https://github.com/LaurenceWarne/ox-yaow.el") (ox-zenn :source "MELPA" :recipe (:package "ox-zenn" :fetcher github :repo "conao3/ox-zenn.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zenn flavored markdown backend for org export engine" :date (24427 46928) :url "https://github.com/conao3/ox-zenn.el") (p4 :source "MELPA" :recipe (:package "p4" :fetcher github :repo "gareth-rees/p4.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple Perforce-Emacs Integration" :date (21933 24912) :url "https://github.com/gareth-rees/p4.el") (pabbrev :source "MELPA" :recipe (:package "pabbrev" :fetcher github :repo "phillord/pabbrev" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Predictive abbreviation expansion" :date (26223 21072) :url "https://github.com/phillord/pabbrev") (pacdiff :source "MELPA" :recipe (:package "pacdiff" :fetcher github :repo "fbrosda/pacdiff.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage pacdiff files" :date (26066 28624) :url "https://github.com/fbrosda/pacdiff.el") (pacfiles-mode :source "MELPA" :recipe (:package "pacfiles-mode" :repo "UndeadKernel/pacfiles-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The pacnew and pacsave merging tool" :date (25681 31184) :url "https://github.com/UndeadKernel/pacfiles-mode") (pack :source "MELPA" :recipe (:package "pack" :repo "10sr/pack-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pack and unpack archive files" :date (23975 34000) :url "https://github.com/10sr/pack-el") (package+ :source "MELPA" :recipe (:package "package+" :repo "zenspider/package" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for the package library" :date (25805 26320) :url "https://github.com/zenspider/package") (package-build :source "MELPA" :recipe (:package "package-build" :repo "melpa/package-build" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tools for assembling a package archive" :date (26361 49104) :url "https://github.com/melpa/package-build") (package-filter :source "MELPA" :recipe (:package "package-filter" :fetcher github :repo "milkypostman/package-filter" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package archive whitelist and blacklist" :date (22579 24656) :url "https://github.com/milkypostman/package-filter") (package-lint :source "MELPA" :recipe (:package "package-lint" :fetcher github :repo "purcell/package-lint" :files (:defaults "data" (:exclude "*flymake.el"))) :description "A linting library for elisp package authors" :date (26352 34128) :url "https://github.com/purcell/package-lint") (package-lint-flymake :source "MELPA" :recipe (:package "package-lint-flymake" :fetcher github :repo "purcell/package-lint" :files ("package-lint-flymake.el")) :description "A package-lint Flymake backend" :date (26352 34128) :url "https://github.com/purcell/package-lint") (package-loading-notifier :source "MELPA" :recipe (:package "package-loading-notifier" :fetcher github :repo "tttuuu888/package-loading-notifier" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Notify a package is being loaded" :date (25810 44240) :url "https://github.com/tttuuu888/package-loading-notifier") (package-utils :source "MELPA" :recipe (:package "package-utils" :fetcher github :repo "Silex/package-utils" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for package.el" :date (25276 48464) :url "https://github.com/Silex/package-utils") (pacmacs :source "MELPA" :recipe (:package "pacmacs" :fetcher github :repo "codingteam/pacmacs.el" :files (:defaults "maps" "signs" ("sprites" "sprites/*.json") ("sprites" "sprites/*.xpm"))) :description "Pacman for Emacs" :date (25046 1744) :url "https://github.com/codingteam/pacmacs.el") (pact-mode :source "MELPA" :recipe (:package "pact-mode" :fetcher github :repo "kadena-io/pact-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for Pact, a LISPlike smart contract language" :date (24541 6224) :url "https://github.com/kadena-io/pact-mode") (paganini-theme :source "MELPA" :recipe (:package "paganini-theme" :repo "onurtemizkan/paganini" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A colorful, dark and warm theme" :date (23411 17104) :url "https://github.com/onurtemizkan/paganini") (page-break-lines :source "MELPA" :recipe (:package "page-break-lines" :fetcher github :repo "purcell/page-break-lines" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display ^L page breaks as tidy horizontal lines" :date (26336 45904) :url "https://github.com/purcell/page-break-lines") (pager :source "MELPA" :recipe (:package "pager" :fetcher github :repo "emacsorphanage/pager" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Windows-scroll commands" :date (22110 2640) :url "https://github.com/emacsorphanage/pager") (pager-default-keybindings :source "MELPA" :recipe (:package "pager-default-keybindings" :fetcher github :repo "nflath/pager-default-keybindings" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add the default keybindings suggested for pager.el" :date (20968 18752) :url "https://github.com/nflath/pager-default-keybindings") (paimon :source "MELPA" :recipe (:package "paimon" :fetcher github :repo "r0man/paimon.el" :files (:defaults "src/*.el")) :description "A major mode for Splunk" :date (26327 30928) :url "https://github.com/r0man/paimon.el") (pair-tree :source "MELPA" :recipe (:package "pair-tree" :repo "zainab-ali/pair-tree.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visualize a list" :date (25022 19408) :url "https://github.com/zainab-ali/pair-tree.el") (palimpsest :source "MELPA" :recipe (:package "palimpsest" :fetcher github :repo "danielsz/Palimpsest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Various deletion strategies when editing" :date (24361 52304) :url "https://github.com/danielsz/Palimpsest") (pamparam :source "MELPA" :recipe (:package "pamparam" :repo "abo-abo/pamparam" :fetcher github :files ("pamparam.el" "doc")) :description "Simple and fast flashcards" :date (24563 33232) :url "https://github.com/abo-abo/pamparam") (panda :source "MELPA" :recipe (:package "panda" :repo "sebasmonia/panda" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for Bamboo's REST API" :date (26003 10192) :url "https://github.com/sebasmonia/panda") (panda-theme :source "MELPA" :recipe (:package "panda-theme" :repo "jamiecollinson/emacs-panda-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Panda Theme" :date (23549 45136) :url "https://github.com/jamiecollinson/emacs-panda-theme") (pandoc :source "MELPA" :recipe (:package "pandoc" :repo "zonuexe/pandoc.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pandoc interface" :date (22587 18768) :url "https://github.com/zonuexe/pandoc.el") (pandoc-mode :source "MELPA" :recipe (:package "pandoc-mode" :fetcher github :repo "joostkremers/pandoc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for interacting with Pandoc" :date (26348 37072) :url "https://github.com/joostkremers/pandoc-mode") (pangu-spacing :source "MELPA" :recipe (:package "pangu-spacing" :fetcher github :repo "coldnew/pangu-spacing" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor-mode to add space between Chinese and English characters" :date (25430 64720) :url "https://github.com/coldnew/pangu-spacing") (paper-theme :source "MELPA" :recipe (:package "paper-theme" :fetcher codeberg :repo "kutuptiyini/elisp" :files ("paper-theme.el")) :description "A minimal Emacs colour theme" :date (25620 54480) :url "https://codeberg.org/kutuptiyini/elisp") (paperless :source "MELPA" :recipe (:package "paperless" :fetcher github :repo "atgreen/paperless" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for sorting and filing PDF documents" :date (26040 4560) :url "https://github.com/atgreen/paperless") (paradox :source "MELPA" :recipe (:package "paradox" :repo "Malabarba/paradox" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A modern Packages Menu. Colored, with package ratings, and customizable" :date (23967 39888) :url "https://github.com/Malabarba/paradox") (parchment-theme :source "MELPA" :recipe (:package "parchment-theme" :fetcher gitlab :repo "ajgrf/parchment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Light theme inspired by Acme and Leuven" :date (25486 23504) :url "https://gitlab.com/ajgrf/parchment") (paredit :source "MELPA" :recipe (:package "paredit" :fetcher git :url "https://mumble.net/~campbell/git/paredit.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing parentheses" :date (26406 37584) :url "https://mumble.net/~campbell/git/paredit.git") (paredit-everywhere :source "MELPA" :recipe (:package "paredit-everywhere" :fetcher github :repo "purcell/paredit-everywhere" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable some paredit features in non-lisp buffers" :date (24728 19792) :url "https://github.com/purcell/paredit-everywhere") (paredit-menu :source "MELPA" :recipe (:package "paredit-menu" :fetcher github :repo "phillord/paredit-menu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds a menu to paredit.el as memory aid" :date (22185 12240) :url "https://github.com/phillord/paredit-menu") (paren-completer :source "MELPA" :recipe (:package "paren-completer" :repo "MatthewBregg/paren-completer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically, language agnostically, fill in delimiters" :date (22309 7376) :url "https://github.com/MatthewBregg/paren-completer") (paren-face :source "MELPA" :recipe (:package "paren-face" :repo "tarsius/paren-face" :fetcher github :old-names (parenface) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A face for parentheses in lisp modes" :date (26287 60368) :url "https://github.com/tarsius/paren-face") (parent-mode :source "MELPA" :recipe (:package "parent-mode" :fetcher github :repo "Fanael/parent-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get major mode's parent modes" :date (26054 37456) :url "https://github.com/Fanael/parent-mode") (parinfer-rust-mode :source "MELPA" :recipe (:package "parinfer-rust-mode" :repo "justinbarclay/parinfer-rust-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An interface for the parinfer-rust library" :date (26409 13776) :url "https://github.com/justinbarclay/parinfer-rust-mode") (parrot :source "MELPA" :recipe (:package "parrot" :fetcher github :repo "dp12/parrot" :files (:defaults "img")) :description "Party Parrot rotates gracefully in mode-line" :date (25039 28496) :url "https://github.com/dp12/parrot") (parse-csv :source "MELPA" :recipe (:package "parse-csv" :fetcher github :repo "mrc/el-csv" :files ("parse-csv.el")) :description "Parse strings with CSV fields into s-expressions" :date (22323 40272) :url "https://github.com/mrc/el-csv") (parse-it :source "MELPA" :recipe (:package "parse-it" :repo "jcs-elpa/parse-it" :fetcher github :files (:defaults "langs/*.el")) :description "Basic Parser in Emacs Lisp" :date (26001 54864) :url "https://github.com/jcs-elpa/parse-it") (parsebib :source "MELPA" :recipe (:package "parsebib" :fetcher github :repo "joostkremers/parsebib" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library for parsing bib files" :date (26399 64336) :url "https://github.com/joostkremers/parsebib") (parsec :source "MELPA" :recipe (:package "parsec" :repo "cute-jumper/parsec.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parser combinator library" :date (23390 10960) :url "https://github.com/cute-jumper/parsec.el") (parseclj :source "MELPA" :recipe (:package "parseclj" :repo "clojure-emacs/parseclj" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clojure/EDN parser" :date (25963 39632) :url "https://github.com/clojure-emacs/parseclj") (parseedn :source "MELPA" :recipe (:package "parseedn" :repo "clojure-emacs/parseedn" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clojure/EDN parser" :date (25963 39632) :url "https://github.com/clojure-emacs/parseedn") (pasp-mode :source "MELPA" :recipe (:package "pasp-mode" :fetcher github :repo "santifa/pasp-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "- A major mode for editing Answer Set Programs" :date (23235 60240) :url "https://github.com/santifa/pasp-mode") (pass :source "MELPA" :recipe (:package "pass" :fetcher github :repo "NicolasPetton/pass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for password-store.el" :date (26359 7376) :url "https://github.com/NicolasPetton/pass") (password-generator :source "MELPA" :recipe (:package "password-generator" :fetcher github :repo "vandrlexay/emacs-password-genarator" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Password generator for humans. Good, Bad, Phonetic passwords included" :date (24708 34512) :url "https://github.com/vandrlexay/emacs-password-genarator") (password-menu :source "MELPA" :recipe (:package "password-menu" :repo "rnadler/password-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Password Menu for auth-source secrets" :date (26129 47056) :url "https://github.com/rnadler/password-menu") (password-mode :source "MELPA" :recipe (:package "password-mode" :fetcher github :repo "juergenhoetzel/password-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hide password text using overlays" :date (25284 42576) :url "https://github.com/juergenhoetzel/password-mode") (password-store :source "MELPA" :recipe (:package "password-store" :fetcher github :repo "zx2c4/password-store" :files ("contrib/emacs/*.el")) :description "Password store (pass) support" :date (25960 63440) :url "https://github.com/zx2c4/password-store") (password-store-menu :source "MELPA" :recipe (:package "password-store-menu" :fetcher github :repo "rjekker/password-store-menu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A better, more complete UI for password-store" :date (26307 45648) :url "https://github.com/rjekker/password-store-menu") (password-store-otp :source "MELPA" :recipe (:package "password-store-otp" :repo "volrath/password-store-otp.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Password store (pass) OTP extension support" :date (25075 2000) :url "https://github.com/volrath/password-store-otp.el") (password-vault :source "MELPA" :recipe (:package "password-vault" :fetcher github :repo "PuercoPop/password-vault" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Password manager for Emacs" :date (25143 38352) :url "https://github.com/PuercoPop/password-vault") (paste-of-code :source "MELPA" :recipe (:package "paste-of-code" :fetcher github :repo "spebern/paste-of-code.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste code on https://paste.ofcode.org" :date (22881 18384) :url "https://github.com/spebern/paste-of-code.el") (pastebin :source "MELPA" :recipe (:package "pastebin" :fetcher github :repo "nicferrier/elpastebin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple interface to the www.pastebin.com webservice" :date (19693 31952) :url "https://github.com/nicferrier/elpastebin") (pastehub :source "MELPA" :recipe (:package "pastehub" :repo "kiyoka/pastehub" :fetcher github :files ("client/emacs/pastehub.el")) :description "A client for the PasteHub cloud service" :date (21420 31680) :url "https://github.com/kiyoka/pastehub") (pastelmac-theme :source "MELPA" :recipe (:package "pastelmac-theme" :repo "bmastenbrook/pastelmac-theme-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A soothing theme with a pastel color palette" :date (22067 55888) :url "https://github.com/bmastenbrook/pastelmac-theme-el") (pastery :source "MELPA" :recipe (:package "pastery" :repo "diasbruno/pastery.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste snippets to pastery.net" :date (23050 2000) :url "https://github.com/diasbruno/pastery.el") (path-headerline-mode :source "MELPA" :recipe (:package "path-headerline-mode" :fetcher github :repo "7696122/path-headerline-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displaying file path on headerline" :date (21334 51776) :url "https://github.com/7696122/path-headerline-mode") (path-helper :source "MELPA" :recipe (:package "path-helper" :fetcher github :repo "arouanet/path-helper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set PATH environment variables from config files" :date (23562 57168) :url "https://github.com/arouanet/path-helper") (pathify :source "MELPA" :recipe (:package "pathify" :repo "alezost/pathify.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Symlink your scripts into a PATH directory" :date (22298 37072) :url "https://github.com/alezost/pathify.el") (paxedit :source "MELPA" :recipe (:package "paxedit" :fetcher github :repo "promethial/paxedit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Structured, Context Driven LISP Editing and Refactoring" :date (22427 50128) :url "https://github.com/promethial/paxedit") (pbcopy :source "MELPA" :recipe (:package "pbcopy" :fetcher github :repo "emacsfodder/pbcopy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Interface to pbcopy" :date (21740 58960) :url "https://github.com/emacsfodder/pbcopy.el") (pc-bufsw :source "MELPA" :recipe (:package "pc-bufsw" :fetcher github :repo "ibukanov/pc-bufsw" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "PC style quick buffer switcher" :date (24450 8400) :url "https://github.com/ibukanov/pc-bufsw") (pcache :source "MELPA" :recipe (:package "pcache" :repo "sigma/pcache" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent caching for Emacs" :date (25308 24912) :url "https://github.com/sigma/pcache") (pcap-mode :source "MELPA" :recipe (:package "pcap-mode" :repo "apconole/pcap-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for working with PCAP files" :date (22542 30288) :url "https://github.com/apconole/pcap-mode") (pcmpl-args :source "MELPA" :recipe (:package "pcmpl-args" :fetcher github :repo "JonWaltman/pcmpl-args.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced shell command completion" :date (25209 32976) :url "https://github.com/JonWaltman/pcmpl-args.el") (pcmpl-homebrew :source "MELPA" :recipe (:package "pcmpl-homebrew" :fetcher github :repo "zwild/pcmpl-homebrew" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pcomplete for homebrew" :date (24410 37840) :url "https://github.com/zwild/pcmpl-homebrew") (pcmpl-pip :source "MELPA" :recipe (:package "pcmpl-pip" :fetcher github :repo "zwild/pcmpl-pip" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pcomplete for pip" :date (23590 36560) :url "https://github.com/zwild/pcmpl-pip") (pcomplete-extension :source "MELPA" :recipe (:package "pcomplete-extension" :fetcher github :repo "thierryvolpiatto/pcomplete-extension" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Additional completion for pcomplete" :date (23950 30800) :url "https://github.com/thierryvolpiatto/pcomplete-extension") (pcre2el :source "MELPA" :recipe (:package "pcre2el" :fetcher github :repo "joddie/pcre2el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Regexp syntax converter" :date (26239 9296) :url "https://github.com/joddie/pcre2el") (pcsv :source "MELPA" :recipe (:package "pcsv" :fetcher github :repo "mhayashi1120/Emacs-pcsv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parser of csv" :date (26016 22224) :url "https://github.com/mhayashi1120/Emacs-pcsv") (pd-remote :source "MELPA" :recipe (:package "pd-remote" :repo "agraef/pd-remote" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pd remote control helper" :date (25615 36560) :url "https://github.com/agraef/pd-remote") (pdb-capf :source "MELPA" :recipe (:package "pdb-capf" :fetcher github :repo "muffinmad/emacs-pdb-capf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion-at-point function for python debugger" :date (24219 27216) :url "https://github.com/muffinmad/emacs-pdb-capf") (pdb-mode :source "MELPA" :recipe (:package "pdb-mode" :fetcher github :repo "sixpi/pdb-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Protein Data Bank files" :date (21703 64592) :url "https://github.com/sixpi/pdb-mode") (pdf-tools :source "MELPA" :recipe (:package "pdf-tools" :fetcher github :repo "vedang/pdf-tools" :files (:defaults "README" ("build" "Makefile") ("build" "server"))) :description "Support library for PDF documents" :date (26158 47312) :url "https://github.com/vedang/pdf-tools") (pdf-view-pagemark :source "MELPA" :recipe (:package "pdf-view-pagemark" :repo "kimim/pdf-view-pagemark" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add indicator in pdfview mode to show the page remaining" :date (26183 50512) :url "https://github.com/kimim/pdf-view-pagemark") (pdf-view-restore :source "MELPA" :recipe (:package "pdf-view-restore" :repo "007kevin/pdf-view-restore" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for opening last known pdf position in pdfview mode" :date (23918 54352) :url "https://github.com/007kevin/pdf-view-restore") (pdfgrep :source "MELPA" :recipe (:package "pdfgrep" :repo "jeremy-compostella/pdfgrep" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run `pdfgrep' and display the results" :date (24601 48464) :url "https://github.com/jeremy-compostella/pdfgrep") (peacock-theme :source "MELPA" :recipe (:package "peacock-theme" :fetcher github :repo "emacsfodder/emacs-peacock-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Peacock (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-peacock-theme") (pebble-mode :source "MELPA" :recipe (:package "pebble-mode" :fetcher github :repo "ArneBab/pebble-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for pebble" :date (25549 41936) :url "https://github.com/ArneBab/pebble-mode") (peek-mode :source "MELPA" :recipe (:package "peek-mode" :fetcher github :repo "erikriverson/peek-mode" :files ("index.html" "peek-mode.el")) :description "Serve buffers live over HTTP with elnode backend" :date (20930 3520) :url "https://github.com/erikriverson/peek-mode") (peep-dired :source "MELPA" :recipe (:package "peep-dired" :repo "asok/peep-dired" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Peep at files in another window from dired buffers" :date (22255 3920) :url "https://github.com/asok/peep-dired") (peertube :source "MELPA" :recipe (:package "peertube" :fetcher sourcehut :repo "yoctocell/peertube" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query and download PeerTube videos" :date (24558 15312) :url "https://git.sr.ht/~yoctocell/peertube") (pelican-mode :source "MELPA" :recipe (:package "pelican-mode" :fetcher git :url "https://git.korewanetadesu.com/pelican-mode.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing Pelican sites" :date (23624 54736) :url "https://git.korewanetadesu.com/pelican-mode.git") (pepita :source "MELPA" :recipe (:package "pepita" :repo "sebasmonia/pepita" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run Splunk search commands, export results to CSV/HTML/JSON" :date (26003 10192) :url "https://github.com/sebasmonia/pepita") (perfect-margin :source "MELPA" :recipe (:package "perfect-margin" :repo "mpwang/perfect-margin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto center windows, works with line numbers" :date (26377 37328) :url "https://github.com/mpwang/perfect-margin") (perject :source "MELPA" :recipe (:package "perject" :repo "overideal/perject" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Session-persistent project management" :date (25724 64336) :url "https://github.com/overideal/perject") (perlbrew :source "MELPA" :recipe (:package "perlbrew" :fetcher github :repo "kentaro/perlbrew.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A perlbrew wrapper for Emacs" :date (25829 8656) :url "https://github.com/kentaro/perlbrew.el") (persist-state :source "MELPA" :recipe (:package "persist-state" :fetcher codeberg :repo "bram85/emacs-persist-state" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Regularly persist bookmarks, history, recent files and more" :date (26327 30928) :url "https://codeberg.org/bram85/emacs-persist-state") (persistent-overlays :source "MELPA" :recipe (:package "persistent-overlays" :fetcher github :repo "mneilly/Emacs-Persistent-Overlays" :files ("persistent-overlays.el" "README.md" "LICENSE")) :description "Minor mode to store selected overlays to be loaded later" :date (22587 18768) :url "https://github.com/mneilly/Emacs-Persistent-Overlays") (persistent-scratch :source "MELPA" :recipe (:package "persistent-scratch" :fetcher github :repo "Fanael/persistent-scratch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preserve the scratch buffer across Emacs sessions" :date (25593 9552) :url "https://github.com/Fanael/persistent-scratch") (persistent-soft :source "MELPA" :recipe (:package "persistent-soft" :repo "rolandwalker/persistent-soft" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent storage, returning nil on failure" :date (21738 17232) :url "https://github.com/rolandwalker/persistent-soft") (persp-fr :source "MELPA" :recipe (:package "persp-fr" :fetcher github :repo "rocher/persp-fr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "In persp-mode, show perspective list in the GUI window title" :date (24004 34256) :url "https://github.com/rocher/persp-fr") (persp-mode :source "MELPA" :recipe (:package "persp-mode" :repo "Bad-ptr/persp-mode.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Windows/buffers sets shared among frames + save/load" :date (26280 720) :url "https://github.com/Bad-ptr/persp-mode.el") (persp-mode-project-bridge :source "MELPA" :recipe (:package "persp-mode-project-bridge" :repo "CIAvash/persp-mode-project-bridge" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration of persp-mode + project.el" :date (25057 58448) :url "https://github.com/CIAvash/persp-mode-project-bridge") (persp-mode-projectile-bridge :source "MELPA" :recipe (:package "persp-mode-projectile-bridge" :repo "Bad-ptr/persp-mode-projectile-bridge.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persp-mode + projectile integration" :date (22728 22992) :url "https://github.com/Bad-ptr/persp-mode-projectile-bridge.el") (persp-projectile :source "MELPA" :recipe (:package "persp-projectile" :repo "bbatsov/persp-projectile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perspective integration with Projectile" :date (24779 47056) :url "https://github.com/bbatsov/persp-projectile") (perspective :source "MELPA" :recipe (:package "perspective" :fetcher github :repo "nex3/perspective-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch between named \"perspectives\" of the editor" :date (26401 19664) :url "https://github.com/nex3/perspective-el") (perspective-exwm :source "MELPA" :recipe (:package "perspective-exwm" :repo "SqrtMinusOne/perspective-exwm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Better integration for perspective.el and EXWM" :date (25992 39888) :url "https://github.com/SqrtMinusOne/perspective-exwm.el") (perspective-project-bridge :source "MELPA" :recipe (:package "perspective-project-bridge" :repo "arunkmv/perspective-project-bridge" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration of perspective.el + project.el" :date (25910 57040) :url "https://github.com/arunkmv/perspective-project-bridge") (perspeen :source "MELPA" :recipe (:package "perspeen" :fetcher github :repo "seudut/perspeen" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An package for multi-workspace" :date (23075 5200) :url "https://github.com/seudut/perspeen") (pest-mode :source "MELPA" :recipe (:package "pest-mode" :repo "ksqsf/pest-mode" :fetcher github :files ("pest-mode.el")) :description "Major mode for editing Pest files" :date (25519 20816) :url "https://github.com/ksqsf/pest-mode") (pet :source "MELPA" :recipe (:package "pet" :fetcher github :repo "wyuenho/emacs-pet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Executable and virtualenv tracker for python-mode" :date (26361 49104) :url "https://github.com/wyuenho/emacs-pet") (pfuture :source "MELPA" :recipe (:package "pfuture" :repo "Alexander-Miller/pfuture" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple wrapper around asynchronous processes" :date (25375 40400) :url "https://github.com/Alexander-Miller/pfuture") (pg :source "MELPA" :recipe (:package "pg" :repo "emarsden/pg-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Lisp socket-level interface to the PostgreSQL RDBMS" :date (26397 22608) :url "https://github.com/emarsden/pg-el") (pgdevenv :source "MELPA" :recipe (:package "pgdevenv" :repo "dimitri/pgdevenv-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage your PostgreSQL development envs" :date (21673 43472) :url "https://github.com/dimitri/pgdevenv-el") (ph :source "MELPA" :recipe (:package "ph" :fetcher github :repo "gromnitsky/ph" :files ("*.el" "meta.json" "README" ("bin" "bin/ph-project-new"))) :description "A global minor mode for managing multiple projects" :date (22547 48208) :url "https://github.com/gromnitsky/ph") (phabricator :source "MELPA" :recipe (:package "phabricator" :fetcher github :repo "ajtulloch/phabricator.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Phabricator/Arcanist helpers for Emacs" :date (22320 64080) :url "https://github.com/ajtulloch/phabricator.el") (phan :source "MELPA" :recipe (:package "phan" :fetcher github :repo "emacs-php/phan.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility functions for Phan (PHP static analizer)" :date (24361 52304) :url "https://github.com/emacs-php/phan.el") (phi-autopair :source "MELPA" :recipe (:package "phi-autopair" :fetcher github :repo "zk-phi/phi-autopair" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Another simple-minded autopair implementation" :date (24642 39888) :url "https://github.com/zk-phi/phi-autopair") (phi-grep :source "MELPA" :recipe (:package "phi-grep" :fetcher github :repo "zk-phi/phi-grep" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively-editable recursive grep implementation in elisp" :date (25403 19792) :url "https://github.com/zk-phi/phi-grep") (phi-rectangle :source "MELPA" :recipe (:package "phi-rectangle" :fetcher github :repo "zk-phi/phi-rectangle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Another rectangle-mark command (rewrite of rect-mark)" :date (24410 37840) :url "https://github.com/zk-phi/phi-rectangle") (phi-search :source "MELPA" :recipe (:package "phi-search" :fetcher github :repo "zk-phi/phi-search" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Another incremental search & replace, compatible with \"multiple-cursors\"" :date (24247 6608) :url "https://github.com/zk-phi/phi-search") (phi-search-dired :source "MELPA" :recipe (:package "phi-search-dired" :fetcher github :repo "zk-phi/phi-search-dired" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive filtering for dired powered by phi-search" :date (24376 19664) :url "https://github.com/zk-phi/phi-search-dired") (phi-search-mc :source "MELPA" :recipe (:package "phi-search-mc" :repo "knu/phi-search-mc.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple-cursors extension for phi-search" :date (25976 51664) :url "https://github.com/knu/phi-search-mc.el") (phi-search-migemo :source "MELPA" :recipe (:package "phi-search-migemo" :fetcher github :repo "zk-phi/phi-search-migemo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Migemo extension for phi-search" :date (22853 38992) :url "https://github.com/zk-phi/phi-search-migemo") (phoenix-dark-mono-theme :source "MELPA" :recipe (:package "phoenix-dark-mono-theme" :repo "j0ni/phoenix-dark-mono" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Monochromatic version of the Phoenix theme" :date (22907 42448) :url "https://github.com/j0ni/phoenix-dark-mono") (phoenix-dark-pink-theme :source "MELPA" :recipe (:package "phoenix-dark-pink-theme" :repo "j0ni/phoenix-dark-pink" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Originally a port of the Sublime Text 2 theme" :date (23900 24400) :url "https://github.com/j0ni/phoenix-dark-pink") (php-boris :source "MELPA" :recipe (:package "php-boris" :repo "tomterl/php-boris" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run boris php REPL" :date (20898 27072) :url "https://github.com/tomterl/php-boris") (php-boris-minor-mode :source "MELPA" :recipe (:package "php-boris-minor-mode" :url "https://framagit.org/steckerhalter/php-boris-minor-mode.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to evaluate PHP code in the Boris repl" :date (21238 36032) :url "https://framagit.org/steckerhalter/php-boris-minor-mode.git") (php-cs-fixer :source "MELPA" :recipe (:package "php-cs-fixer" :repo "pivaldi/php-cs-fixer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The php-cs-fixer wrapper" :date (26406 37584) :url "https://github.com/pivaldi/php-cs-fixer") (php-eldoc :source "MELPA" :recipe (:package "php-eldoc" :fetcher github :repo "sabof/php-eldoc" :files ("*.el" "*.php")) :description "Eldoc backend for php" :date (21229 21056) :url "https://github.com/sabof/php-eldoc") (php-mode :source "MELPA" :recipe (:package "php-mode" :repo "emacs-php/php-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing PHP code" :date (26393 25552) :url "https://github.com/emacs-php/php-mode") (php-quickhelp :source "MELPA" :recipe (:package "php-quickhelp" :fetcher github :repo "vpxyz/php-quickhelp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickhelp at point for php" :date (24861 29904) :url "https://github.com/vpxyz/php-quickhelp") (php-refactor-mode :source "MELPA" :recipe (:package "php-refactor-mode" :fetcher github :repo "keelerm84/php-refactor-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to quickly and safely perform common refactorings" :date (23063 14032) :url "https://github.com/keelerm84/php-refactor-mode.el") (php-runtime :source "MELPA" :recipe (:package "php-runtime" :fetcher github :repo "emacs-php/php-runtime.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Language binding bridge to PHP" :date (26393 25552) :url "https://github.com/emacs-php/php-runtime.el") (php-scratch :source "MELPA" :recipe (:package "php-scratch" :fetcher github :repo "mallt/php-scratch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A scratch buffer to interactively evaluate php code" :date (24803 29392) :url "https://github.com/mallt/php-scratch") (phpactor :source "MELPA" :recipe (:package "phpactor" :fetcher github :repo "emacs-php/phpactor.el" :files ("phpactor.el" "composer.json" "composer.lock")) :description "Interface to Phpactor" :date (26381 34384) :url "https://github.com/emacs-php/phpactor.el") (phpstan :source "MELPA" :recipe (:package "phpstan" :fetcher github :repo "emacs-php/phpstan.el" :files ("phpstan.el")) :description "Interface to PHPStan" :date (26399 64336) :url "https://github.com/emacs-php/phpstan.el") (phpt-mode :source "MELPA" :recipe (:package "phpt-mode" :fetcher github :repo "emacs-php/phpt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing PHPT test code" :date (23767 14288) :url "https://github.com/emacs-php/phpt-mode") (phpunit :source "MELPA" :recipe (:package "phpunit" :fetcher github :repo "nlamirault/phpunit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch PHP unit tests using phpunit" :date (25800 8400) :url "https://github.com/nlamirault/phpunit.el") (pianobar :source "MELPA" :recipe (:package "pianobar" :fetcher github :repo "agrif/pianobar.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Thin wrapper for Pianobar, a Pandora Radio client" :date (24438 17232) :url "https://github.com/agrif/pianobar.el") (pickle :source "MELPA" :recipe (:package "pickle" :repo "ahungry/pickle-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing cucumber gherkin files" :date (23943 57552) :url "https://github.com/ahungry/pickle-mode") (picpocket :source "MELPA" :recipe (:package "picpocket" :fetcher github :repo "johanclaesson/picpocket" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Image viewer" :date (25440 14160) :url "https://github.com/johanclaesson/picpocket") (pig-mode :source "MELPA" :recipe (:package "pig-mode" :repo "motus/pig-mode" :fetcher github :files ("pig-mode.el")) :description "Major mode for Pig files" :date (23296 36944) :url "https://github.com/motus/pig-mode") (pig-snippets :source "MELPA" :recipe (:package "pig-snippets" :fetcher github :repo "motus/pig-mode" :files ("pig-snippets*.el" "snippets")) :description "Snippets for pig-mode" :date (21042 7488) :url "https://github.com/motus/pig-mode") (pikchr-mode :source "MELPA" :recipe (:package "pikchr-mode" :fetcher github :repo "kljohann/pikchr-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the pikchr diagram markup language" :date (24666 22224) :url "https://github.com/kljohann/pikchr-mode") (pillar :source "MELPA" :recipe (:package "pillar" :fetcher github :repo "pillar-markup/pillar-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Pillar files" :date (21602 30928) :url "https://github.com/pillar-markup/pillar-mode") (pinboard :source "MELPA" :recipe (:package "pinboard" :fetcher github :repo "davep/pinboard.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A pinboard.in client" :date (25520 41680) :url "https://github.com/davep/pinboard.el") (pinboard-api :source "MELPA" :recipe (:package "pinboard-api" :fetcher github :repo "danieroux/pinboard-api-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rudimentary http://pinboard.in integration" :date (21295 15680) :url "https://github.com/danieroux/pinboard-api-el") (pinboard-popular :source "MELPA" :recipe (:package "pinboard-popular" :fetcher github :repo "asimpson/pinboard-popular" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displays links from the pinboard.in popular page" :date (23284 45776) :url "https://github.com/asimpson/pinboard-popular") (pine-script-mode :source "MELPA" :recipe (:package "pine-script-mode" :fetcher github :repo "EricCrosson/pine-script-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Trading View Pine Script major mode" :date (24794 14416) :url "https://github.com/EricCrosson/pine-script-mode") (pinot :source "MELPA" :recipe (:package "pinot" :fetcher github :repo "tkf/emacs-pinot-search" :files ("*.el" "*.py")) :description "Emacs interface to pinot-search" :date (21241 12224) :url "https://github.com/tkf/emacs-pinot-search") (pinyin :source "MELPA" :recipe (:package "pinyin" :fetcher github :repo "xuchunyang/pinyin.el" :files (:defaults ("pinyin-data" "pinyin-data/pinyin.txt"))) :description "Convert Hanzi to Pinyin (汉字转拼音)" :date (25337 25168) :url "https://github.com/xuchunyang/pinyin.el") (pinyin-isearch :source "MELPA" :recipe (:package "pinyin-isearch" :fetcher github :repo "Anoncheg1/pinyin-isearch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pinyin mode for isearch" :date (26116 35024) :url "https://github.com/Anoncheg1/pinyin-isearch") (pinyin-search :source "MELPA" :recipe (:package "pinyin-search" :repo "xuchunyang/pinyin-search.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search Chinese by Pinyin" :date (25864 47696) :url "https://github.com/xuchunyang/pinyin-search.el") (pinyinlib :source "MELPA" :recipe (:package "pinyinlib" :repo "cute-jumper/pinyinlib.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert first letter of Pinyin to Simplified/Traditional Chinese characters" :date (24410 37840) :url "https://github.com/cute-jumper/pinyinlib.el") (pip-frame :source "MELPA" :recipe (:package "pip-frame" :fetcher git :url "https://git.zamazal.org/pdm/pip-frame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display and manage a PIP frame" :date (25320 16080) :url "https://git.zamazal.org/pdm/pip-frame") (pip-requirements :source "MELPA" :recipe (:package "pip-requirements" :repo "Wilfred/pip-requirements.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing pip requirements files" :date (26228 38992) :url "https://github.com/Wilfred/pip-requirements.el") (pipenv :source "MELPA" :recipe (:package "pipenv" :repo "pwalsh/pipenv.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Pipenv porcelain" :date (25214 50896) :url "https://github.com/pwalsh/pipenv.el") (pipewire :source "MELPA" :recipe (:package "pipewire" :fetcher git :url "https://git.zamazal.org/pdm/pipewire-0" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "PipeWire user interface" :date (25309 45776) :url "https://git.zamazal.org/pdm/pipewire-0") (pippel :source "MELPA" :recipe (:package "pippel" :fetcher github :repo "arifer612/pippel" :files (:defaults "pippel.py")) :description "Frontend to python package manager pip" :date (25177 56528) :url "https://github.com/arifer612/pippel") (pixelblaze :source "MELPA" :recipe (:package "pixelblaze" :repo "mgsb/emacs-pixelblaze" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with a Pixelblaze via Websocket" :date (25382 13648) :url "https://github.com/mgsb/emacs-pixelblaze") (pixie-mode :source "MELPA" :recipe (:package "pixie-mode" :repo "johnwalker/pixie-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Pixie-lang" :date (23345 22480) :url "https://github.com/johnwalker/pixie-mode") (pixiv-novel-mode :source "MELPA" :recipe (:package "pixiv-novel-mode" :fetcher github :repo "zonuexe/pixiv-novel-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for pixiv novel" :date (22215 33360) :url "https://github.com/zonuexe/pixiv-novel-mode.el") (pkg-info :source "MELPA" :recipe (:package "pkg-info" :repo "emacsorphanage/pkg-info" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Information about packages" :date (21847 45008) :url "https://github.com/emacsorphanage/pkg-info") (pkg-overview :source "MELPA" :recipe (:package "pkg-overview" :fetcher github :repo "Boruch-Baum/emacs-pkg-overview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make org documentation from elisp source file" :date (24839 2896) :url "https://github.com/Boruch-Baum/emacs-pkg-overview") (pkgbuild-mode :source "MELPA" :recipe (:package "pkgbuild-mode" :fetcher github :repo "juergenhoetzel/pkgbuild-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to the Arch Linux package manager" :date (26352 34128) :url "https://github.com/juergenhoetzel/pkgbuild-mode") (pkl-mode :source "MELPA" :recipe (:package "pkl-mode" :fetcher github :repo "sin-ack/pkl-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Pkl files" :date (26149 32336) :url "https://github.com/sin-ack/pkl-mode") (plain-org-wiki :source "MELPA" :recipe (:package "plain-org-wiki" :fetcher github :repo "abo-abo/plain-org-wiki" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple jump-to-org-files in a directory package" :date (24538 30032) :url "https://github.com/abo-abo/plain-org-wiki") (plain-theme :source "MELPA" :recipe (:package "plain-theme" :fetcher github :repo "yanateras/plain-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plain theme without syntax highlighting" :date (23063 14032) :url "https://github.com/yanateras/plain-theme") (plan9-theme :source "MELPA" :recipe (:package "plan9-theme" :fetcher github :repo "john2x/plan9-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme for Emacs based on Plan9" :date (23396 49744) :url "https://github.com/john2x/plan9-theme.el") (planemo-mode :source "MELPA" :recipe (:package "planemo-mode" :fetcher gitlab :repo "mtekman/planemo-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for editing Galaxy XML files" :date (25595 51280) :url "https://gitlab.com/mtekman/planemo-mode.el") (planet-theme :source "MELPA" :recipe (:package "planet-theme" :fetcher github :repo "cmack/emacs-planet-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme inspired by Gmail's 'Planets' theme of yore" :date (22550 24400) :url "https://github.com/cmack/emacs-planet-theme") (plantuml-mode :source "MELPA" :recipe (:package "plantuml-mode" :fetcher github :repo "skuro/plantuml-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for PlantUML" :date (23996 40144) :url "https://github.com/skuro/plantuml-mode") (plaster :source "MELPA" :recipe (:package "plaster" :repo "Shirakumo/plaster" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pasting to a plaster host with buffers" :date (23147 38608) :url "https://github.com/Shirakumo/plaster") (platformio-mode :source "MELPA" :recipe (:package "platformio-mode" :repo "ZachMassia/PlatformIO-Mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "PlatformIO integration" :date (24729 40656) :url "https://github.com/ZachMassia/PlatformIO-Mode") (play-crystal :source "MELPA" :recipe (:package "play-crystal" :repo "veelenga/play-crystal.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Https://play.crystal-lang.org integration" :date (23130 29520) :url "https://github.com/veelenga/play-crystal.el") (play-routes-mode :source "MELPA" :recipe (:package "play-routes-mode" :fetcher github :repo "brocode/play-routes-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play Framework Routes File Support" :date (22783 47312) :url "https://github.com/brocode/play-routes-mode") (playerctl :source "MELPA" :recipe (:package "playerctl" :repo "thomas-louvigne/playerctl.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control your music player (e.g. Spotify) with playerctl" :date (25295 12880) :url "https://github.com/thomas-louvigne/playerctl.el") (playground :source "MELPA" :recipe (:package "playground" :fetcher github :repo "akirak/emacs-playground" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage sandboxes for alternative configurations" :date (24371 1744) :url "https://github.com/akirak/emacs-playground") (playonline :source "MELPA" :recipe (:package "playonline" :fetcher github :repo "twlz0ne/playonline.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play code with online playgrounds" :date (24177 14928) :url "https://github.com/twlz0ne/playonline.el") (plenv :source "MELPA" :recipe (:package "plenv" :fetcher github :repo "karupanerura/plenv.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A plenv wrapper for Emacs" :date (20952 30528) :url "https://github.com/karupanerura/plenv.el") (plim-mode :source "MELPA" :recipe (:package "plim-mode" :repo "dongweiming/plim-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Plim files" :date (21482 29248) :url "https://github.com/dongweiming/plim-mode") (plisp-mode :source "MELPA" :recipe (:package "plisp-mode" :fetcher github :repo "flexibeast/plisp-mode" :files ("plisp-mode.el" "inferior-plisp.el")) :description "Major mode for PicoLisp programming" :date (25478 29392) :url "https://github.com/flexibeast/plisp-mode") (plsense :source "MELPA" :recipe (:package "plsense" :repo "aki2o/emacs-plsense" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide interface for PlSense that is a development tool for Perl" :date (22073 8272) :url "https://github.com/aki2o/emacs-plsense") (plsense-direx :source "MELPA" :recipe (:package "plsense-direx" :repo "aki2o/plsense-direx" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perl Package Explorer" :date (21370 25280) :url "https://github.com/aki2o/plsense-direx") (plur :source "MELPA" :recipe (:package "plur" :fetcher github :repo "xuchunyang/plur" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily search and replace multiple variants of a word" :date (22313 4432) :url "https://github.com/xuchunyang/plur") (pnpm-mode :source "MELPA" :recipe (:package "pnpm-mode" :fetcher github :repo "rajasegar/pnpm-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for working with pnpm projects" :date (24269 33616) :url "https://github.com/rajasegar/pnpm-mode") (po-mode :source "MELPA" :recipe (:package "po-mode" :fetcher github :repo "emacsmirror/po-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for GNU gettext PO files" :date (25887 9168) :url "https://github.com/emacsmirror/po-mode") (pocket-api :source "MELPA" :recipe (:package "pocket-api" :fetcher github :repo "lujun9972/pocket-api.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Another pocket api" :date (23234 39376) :url "https://github.com/lujun9972/pocket-api.el") (pocket-lib :source "MELPA" :recipe (:package "pocket-lib" :fetcher github :repo "alphapapa/pocket-lib.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Library for accessing getpocket.com API" :date (26257 39248) :url "https://github.com/alphapapa/pocket-lib.el") (pocket-mode :source "MELPA" :recipe (:package "pocket-mode" :fetcher github :repo "lujun9972/pocket-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage your pocket" :date (23072 29008) :url "https://github.com/lujun9972/pocket-mode") (pocket-reader :source "MELPA" :recipe (:package "pocket-reader" :fetcher github :repo "alphapapa/pocket-reader.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for Pocket reading list" :date (26353 54992) :url "https://github.com/alphapapa/pocket-reader.el") (podcaster :source "MELPA" :recipe (:package "podcaster" :fetcher github :repo "lujun9972/podcaster" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Podcast client" :date (24284 976) :url "https://github.com/lujun9972/podcaster") (poe-lootfilter-mode :source "MELPA" :recipe (:package "poe-lootfilter-mode" :fetcher github :repo "jdodds/poe-lootfilter-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Path of Exile lootfilters" :date (23710 34640) :url "https://github.com/jdodds/poe-lootfilter-mode") (poet-theme :source "MELPA" :recipe (:package "poet-theme" :fetcher github :repo "kunalb/poet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme for prose" :date (24282 45648) :url "https://github.com/kunalb/poet") (poetry :source "MELPA" :recipe (:package "poetry" :fetcher github :repo "cybniv/poetry.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to Poetry" :date (26117 55888) :url "https://github.com/cybniv/poetry.el") (point-pos :source "MELPA" :recipe (:package "point-pos" :repo "alezost/point-pos.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save and restore point positions" :date (22777 8528) :url "https://github.com/alezost/point-pos.el") (point-stack :source "MELPA" :recipe (:package "point-stack" :fetcher github :repo "dgutov/point-stack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Back and forward navigation through buffer locations" :date (24229 63056) :url "https://github.com/dgutov/point-stack") (poke-line :source "MELPA" :recipe (:package "poke-line" :fetcher github :repo "RyanMillerC/poke-line" :files (:defaults "img")) :description "Minor mode to show position in a buffer using a Pokemon" :date (24465 62160) :url "https://github.com/RyanMillerC/poke-line") (pollen-mode :source "MELPA" :recipe (:package "pollen-mode" :fetcher github :repo "lijunsong/pollen-mode" :files ("pollen-mode.el")) :description "Major mode for editing pollen files" :date (25363 49232) :url "https://github.com/lijunsong/pollen-mode") (poly-R :source "MELPA" :recipe (:package "poly-R" :fetcher github :repo "polymode/poly-R" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Various polymodes for R language" :date (25659 4176) :url "https://github.com/polymode/poly-R") (poly-ansible :source "MELPA" :recipe (:package "poly-ansible" :fetcher gitlab :repo "mavit/poly-ansible" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for Ansible: Jinja2 in YAML" :date (26285 18640) :url "https://gitlab.com/mavit/poly-ansible") (poly-erb :source "MELPA" :recipe (:package "poly-erb" :fetcher github :repo "polymode/poly-erb" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for erb" :date (24174 38736) :url "https://github.com/polymode/poly-erb") (poly-gams :source "MELPA" :recipe (:package "poly-gams" :repo "ShiroTakeda/poly-gams" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for GAMS" :date (26297 9808) :url "https://github.com/ShiroTakeda/poly-gams") (poly-markdown :source "MELPA" :recipe (:package "poly-markdown" :fetcher github :repo "polymode/poly-markdown" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for markdown-mode" :date (25562 53968) :url "https://github.com/polymode/poly-markdown") (poly-noweb :source "MELPA" :recipe (:package "poly-noweb" :fetcher github :repo "polymode/poly-noweb" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for noweb" :date (24174 38736) :url "https://github.com/polymode/poly-noweb") (poly-org :source "MELPA" :recipe (:package "poly-org" :fetcher github :repo "polymode/poly-org" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for org-mode" :date (25619 33616) :url "https://github.com/polymode/poly-org") (poly-rst :source "MELPA" :recipe (:package "poly-rst" :fetcher github :repo "polymode/poly-rst" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Poly-rst-mode polymode" :date (24699 19536) :url "https://github.com/polymode/poly-rst") (poly-ruby :source "MELPA" :recipe (:package "poly-ruby" :fetcher github :repo "knu/poly-ruby.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides poly-ruby-mode" :date (23438 62032) :url "https://github.com/knu/poly-ruby.el") (poly-slim :source "MELPA" :recipe (:package "poly-slim" :fetcher github :repo "polymode/poly-slim" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymodes for slim" :date (24174 38736) :url "https://github.com/polymode/poly-slim") (poly-wdl :source "MELPA" :recipe (:package "poly-wdl" :fetcher github :repo "jmonlong/poly-wdl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polymode for WDL" :date (23847 41808) :url "https://github.com/jmonlong/poly-wdl") (polybar-sesman :source "MELPA" :recipe (:package "polybar-sesman" :fetcher github :repo "markgdawson/polybar-sesman.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display active sesman connections in polybar" :date (24878 38992) :url "https://github.com/markgdawson/polybar-sesman.el") (polymode :source "MELPA" :recipe (:package "polymode" :fetcher github :repo "polymode/polymode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensible framework for multiple major modes" :date (25619 33616) :url "https://github.com/polymode/polymode") (pomidor :source "MELPA" :recipe (:package "pomidor" :fetcher github :repo "TatriX/pomidor" :files (:defaults "tick.wav" "tack.wav" "overwork.wav")) :description "Simple and cool pomodoro timer" :date (26202 14928) :url "https://github.com/TatriX/pomidor") (pomm :source "MELPA" :recipe (:package "pomm" :repo "SqrtMinusOne/pomm.el" :fetcher github :files (:defaults "resources")) :description "Pomodoro and Third Time timers" :date (26252 21328) :url "https://github.com/SqrtMinusOne/pomm.el") (pomodoro :source "MELPA" :recipe (:package "pomodoro" :fetcher github :repo "baudtack/pomodoro.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A timer for the Pomodoro Technique" :date (24630 48720) :url "https://github.com/baudtack/pomodoro.el") (pony-mode :source "MELPA" :recipe (:package "pony-mode" :fetcher github :repo "davidmiller/pony-mode" :files ("src/*.el" "src/snippets")) :description "Minor mode for working with Django Projects" :date (22919 33616) :url "https://github.com/davidmiller/pony-mode") (pony-snippets :source "MELPA" :recipe (:package "pony-snippets" :repo "ponylang/pony-snippets" :fetcher github :files (:defaults "snippets")) :description "Yasnippets for Pony" :date (24218 6352) :url "https://github.com/ponylang/pony-snippets") (ponylang-mode :source "MELPA" :recipe (:package "ponylang-mode" :fetcher github :repo "ponylang/ponylang-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Pony programming language" :date (24936 39504) :url "https://github.com/ponylang/ponylang-mode") (pophint :source "MELPA" :recipe (:package "pophint" :repo "aki2o/emacs-pophint" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide navigation using pop-up tips, like Firefox's Vimperator Hint Mode" :date (26009 48976) :url "https://github.com/aki2o/emacs-pophint") (poporg :source "MELPA" :recipe (:package "poporg" :repo "QBobWatson/poporg" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pop a comment or string to an empty buffer for text editing" :date (22753 26192) :url "https://github.com/QBobWatson/poporg") (popper :source "MELPA" :recipe (:package "popper" :fetcher github :repo "karthink/popper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Summon and dismiss buffers as popups" :date (26112 37968) :url "https://github.com/karthink/popper") (popup :source "MELPA" :recipe (:package "popup" :fetcher github :repo "auto-complete/popup-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual Popup User Interface" :date (26001 54864) :url "https://github.com/auto-complete/popup-el") (popup-complete :source "MELPA" :recipe (:package "popup-complete" :fetcher github :repo "emacsorphanage/popup-complete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion with popup" :date (21598 33872) :url "https://github.com/emacsorphanage/popup-complete") (popup-edit-menu :source "MELPA" :recipe (:package "popup-edit-menu" :repo "debugfan/popup-edit-menu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A popup context edit menu package" :date (22754 47056) :url "https://github.com/debugfan/popup-edit-menu") (popup-imenu :source "MELPA" :recipe (:package "popup-imenu" :repo "ancane/popup-imenu" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imenu index popup" :date (24680 55120) :url "https://github.com/ancane/popup-imenu") (popup-kill-ring :source "MELPA" :recipe (:package "popup-kill-ring" :repo "waymondo/popup-kill-ring" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively insert item from kill-ring" :date (21090 58560) :url "https://github.com/waymondo/popup-kill-ring") (popup-switcher :source "MELPA" :recipe (:package "popup-switcher" :repo "kostafey/popup-switcher" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch to other buffers and files via popup" :date (24537 9168) :url "https://gitlab.com/kostafey/popup-switcher") (popwin :source "MELPA" :recipe (:package "popwin" :fetcher github :repo "emacsorphanage/popwin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Popup Window Manager" :date (26355 10320) :url "https://github.com/emacsorphanage/popwin") (portage-navi :source "MELPA" :recipe (:package "portage-navi" :fetcher github :repo "kiwanami/emacs-portage-navi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Portage viewer" :date (21636 49104) :url "https://github.com/kiwanami/emacs-portage-navi") (porthole :source "MELPA" :recipe (:package "porthole" :fetcher github :repo "jcaw/porthole" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RPC Servers in Emacs" :date (24199 41936) :url "https://github.com/jcaw/porthole") (pos-tip :source "MELPA" :recipe (:package "pos-tip" :repo "pitkali/pos-tip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show tooltip at point" :date (26053 16592) :url "https://github.com/pitkali/pos-tip") (posframe :source "MELPA" :recipe (:package "posframe" :fetcher github :repo "tumashu/posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pop a posframe (just a frame) at point" :date (26392 4688) :url "https://github.com/tumashu/posframe") (posix-manual :source "MELPA" :recipe (:package "posix-manual" :fetcher github :repo "lassik/emacs-posix-manual" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "POSIX manual page lookup" :date (25979 27856) :url "https://github.com/lassik/emacs-posix-manual") (postcss-sorting :source "MELPA" :recipe (:package "postcss-sorting" :repo "P233/postcss-sorting.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Postcss-sorting interface" :date (23167 23888) :url "https://github.com/P233/postcss-sorting.el") (pov-mode :source "MELPA" :recipe (:package "pov-mode" :fetcher github :repo "melmothx/pov-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing POV-Ray scene files" :date (22570 9680) :url "https://github.com/melmothx/pov-mode") (power-mode :source "MELPA" :recipe (:package "power-mode" :fetcher github :repo "elizagamedev/power-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Imbue Emacs with power!" :date (25340 1360) :url "https://github.com/elizagamedev/power-mode.el") (powerline :source "MELPA" :recipe (:package "powerline" :fetcher github :repo "milkypostman/powerline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rewrite of Powerline" :date (25452 5328) :url "https://github.com/milkypostman/powerline") (powerline-evil :source "MELPA" :recipe (:package "powerline-evil" :fetcher github :repo "johnson-christopher/powerline-evil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for better Evil support for Powerline" :date (23796 14544) :url "https://github.com/johnson-christopher/powerline-evil") (powershell :source "MELPA" :recipe (:package "powershell" :repo "jschaf/powershell.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for editing PowerShell scripts" :date (26314 18896) :url "https://github.com/jschaf/powershell.el") (powerthesaurus :source "MELPA" :recipe (:package "powerthesaurus" :repo "SavchenkoValeriy/emacs-powerthesaurus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Powerthesaurus integration" :date (25672 16208) :url "https://github.com/SavchenkoValeriy/emacs-powerthesaurus") (ppcompile :source "MELPA" :recipe (:package "ppcompile" :fetcher github :repo "whatacold/ppcompile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ping-pong compile projects on remote machines" :date (25262 15568) :url "https://github.com/whatacold/ppcompile") (ppd-sr-speedbar :source "MELPA" :recipe (:package "ppd-sr-speedbar" :fetcher github :repo "rdallasgray/ppd-sr-speedbar" :files ("lib/*")) :description "Sr Speedbar adaptor for project-persist-drawer" :date (22078 26192) :url "https://github.com/rdallasgray/ppd-sr-speedbar") (ppp :source "MELPA" :recipe (:package "ppp" :fetcher github :repo "conao3/ppp.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extended pretty printer for Emacs Lisp" :date (25093 31952) :url "https://github.com/conao3/ppp.el") (pr-review :source "MELPA" :recipe (:package "pr-review" :fetcher github :repo "blahgeek/emacs-pr-review" :files (:defaults "graphql")) :description "Review github PR" :date (26380 13520) :url "https://github.com/blahgeek/emacs-pr-review") (prassee-theme :source "MELPA" :recipe (:package "prassee-theme" :repo "prassee/prassee-emacs-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A high contrast color theme for Emacs" :date (23362 31568) :url "https://github.com/prassee/prassee-emacs-theme") (prefab :source "MELPA" :recipe (:package "prefab" :repo "LaurenceWarne/prefab.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration for project generation tools like cookiecutter" :date (26266 54224) :url "https://github.com/LaurenceWarne/prefab.el") (preproc-font-lock :source "MELPA" :recipe (:package "preproc-font-lock" :repo "Lindydancer/preproc-font-lock" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight C-style preprocessor directives" :date (22077 5328) :url "https://github.com/Lindydancer/preproc-font-lock") (prescient :source "MELPA" :recipe (:package "prescient" :fetcher github :repo "radian-software/prescient.el" :files ("prescient.el")) :description "Better sorting and filtering" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (preseed-generic-mode :source "MELPA" :recipe (:package "preseed-generic-mode" :fetcher github :repo "suntong/preseed-generic-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Debian preseed file major mode" :date (23166 3024) :url "https://github.com/suntong/preseed-generic-mode") (presentation :source "MELPA" :recipe (:package "presentation" :fetcher github :repo "zonuexe/emacs-presentation-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display large character for presentation" :date (23266 15824) :url "https://github.com/zonuexe/emacs-presentation-mode") (prettier :source "MELPA" :recipe (:package "prettier" :fetcher github :repo "jscheid/prettier.el" :branch "release" :files (:defaults "*.js" "*.base64")) :description "Code formatting with Prettier" :date (26324 54736) :url "https://github.com/jscheid/prettier.el") (prettier-js :source "MELPA" :recipe (:package "prettier-js" :repo "prettier/prettier-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to format JS code on file save" :date (23123 56272) :url "https://github.com/prettier/prettier-emacs") (prettier-rc :source "MELPA" :recipe (:package "prettier-rc" :repo "jjuliano/prettier-rc-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use local rc rules with prettier" :date (25155 29520) :url "https://github.com/jjuliano/prettier-rc-emacs") (prettify-greek :source "MELPA" :recipe (:package "prettify-greek" :fetcher gitlab :repo "fommil/emacs-prettify-greek" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Greek letters for prettify-symbols" :date (22352 40528) :url "https://gitlab.com/fommil/emacs-prettify-greek") (prettify-math :source "MELPA" :recipe (:package "prettify-math" :fetcher github :repo "shaqtsui/prettify-math" :files (:defaults "mathjax-jsonrpc.js")) :description "Prettify math formula" :date (25979 27856) :url "https://github.com/shaqtsui/prettify-math") (pretty-hydra :source "MELPA" :recipe (:package "pretty-hydra" :repo "jerrypnz/major-mode-hydra.el" :fetcher github :files ("pretty-hydra.el")) :description "A macro for creating nice-looking hydras" :date (25883 12112) :url "https://github.com/jerrypnz/major-mode-hydra.el") (pretty-mode :source "MELPA" :recipe (:package "pretty-mode" :fetcher github :repo "pretty-mode/pretty-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Redisplay parts of the buffer as pretty Unicode symbols" :date (23812 2768) :url "https://github.com/pretty-mode/pretty-mode") (pretty-sha-path :source "MELPA" :recipe (:package "pretty-sha-path" :fetcher github :repo "alezost/pretty-sha-path.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Prettify Guix/Nix store paths" :date (21593 15952) :url "https://github.com/alezost/pretty-sha-path.el") (pretty-speedbar :source "MELPA" :recipe (:package "pretty-speedbar" :fetcher github :repo "kcyarn/pretty-speedbar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make speedbar pretty" :date (25119 56016) :url "https://github.com/kcyarn/pretty-speedbar") (pretty-symbols :source "MELPA" :recipe (:package "pretty-symbols" :repo "drothlis/pretty-symbols" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Draw tokens as Unicode glyphs" :date (21483 50112) :url "https://github.com/drothlis/pretty-symbols") (preview-dvisvgm :source "MELPA" :recipe (:package "preview-dvisvgm" :repo "TobiasZawada/preview-dvisvgm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SVG output for LaTeX preview" :date (25030 13520) :url "https://github.com/TobiasZawada/preview-dvisvgm") (prism :source "MELPA" :recipe (:package "prism" :fetcher github :repo "alphapapa/prism.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Customizable, depth-based syntax coloring" :date (26393 25552) :url "https://github.com/alphapapa/prism.el") (prisma-ts-mode :source "MELPA" :recipe (:package "prisma-ts-mode" :repo "nverno/prisma-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for prisma using tree-sitter" :date (25908 15312) :url "https://github.com/nverno/prisma-ts-mode") (private :source "MELPA" :recipe (:package "private" :repo "victorteokw/private" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Take care of your private configuration files" :date (21696 4944) :url "https://github.com/victorteokw/private") (private-comments-mode :source "MELPA" :recipe (:package "private-comments-mode" :fetcher github :repo "masukomi/private-comments-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for masukomi/private_comments" :date (26356 31184) :url "https://github.com/masukomi/private-comments-mode") (private-diary :source "MELPA" :recipe (:package "private-diary" :fetcher github :repo "cacology/private-diary" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Maintain a private diary in Emacs" :date (22128 32592) :url "https://github.com/cacology/private-diary") (proc-net :source "MELPA" :recipe (:package "proc-net" :fetcher github :repo "nicferrier/emacs-proc-net" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Network process tools" :date (20811 26304) :url "https://github.com/nicferrier/emacs-proc-net") (proced-narrow :source "MELPA" :recipe (:package "proced-narrow" :repo "travisjeffery/proced-narrow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live-narrowing of search results for proced" :date (23928 3792) :url "https://github.com/travisjeffery/proced-narrow") (processing-mode :source "MELPA" :recipe (:package "processing-mode" :repo "ptrv/processing2-emacs" :fetcher github :files ("processing-mode.el")) :description "Major mode for Processing 2.0" :date (23019 46416) :url "https://github.com/ptrv/processing2-emacs") (processing-snippets :source "MELPA" :recipe (:package "processing-snippets" :fetcher github :repo "ptrv/processing2-emacs" :version-regexp "missing-from-latest" :files ("processing-snippets.el" "snippets")) :description "Snippets for processing-mode" :date (21338 48832) :url "https://github.com/ptrv/processing2-emacs") (prodigy :source "MELPA" :recipe (:package "prodigy" :fetcher github :repo "rejeep/prodigy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage external services" :date (26360 28240) :url "https://github.com/rejeep/prodigy.el") (professional-theme :source "MELPA" :recipe (:package "professional-theme" :repo "juanjux/emacs-professional-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs port of Vim's professional theme" :date (21764 41296) :url "https://github.com/juanjux/emacs-professional-theme") (prog-face-refine :source "MELPA" :recipe (:package "prog-face-refine" :fetcher codeberg :repo "ideasman42/emacs-prog-face-refine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Refine faces for programming modes" :date (25771 8144) :url "https://codeberg.org/ideasman42/emacs-prog-face-refine") (prog-fill :source "MELPA" :recipe (:package "prog-fill" :repo "ahungry/prog-fill" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smartly format lines to use vertical space" :date (23320 19280) :url "https://github.com/ahungry/prog-fill") (prognth :source "MELPA" :recipe (:package "prognth" :fetcher github :repo "Fuco1/prognth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extend prog1 to arbitrary index" :date (21051 22464) :url "https://github.com/Fuco1/prognth") (programmer-dvorak :source "MELPA" :recipe (:package "programmer-dvorak" :fetcher github :repo "yangchenyun/programmer-dvorak" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Input method for Programmer Dvorak" :date (21821 20944) :url "https://github.com/yangchenyun/programmer-dvorak") (project-abbrev :source "MELPA" :recipe (:package "project-abbrev" :repo "jcs-elpa/project-abbrev" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Customize abbreviation expansion in the project" :date (26001 54864) :url "https://github.com/jcs-elpa/project-abbrev") (project-butler :source "MELPA" :recipe (:package "project-butler" :fetcher codeberg :repo "jabbo/project-butler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lay out a project's buffers" :date (26264 12496) :url "https://codeberg.org/jabbo/project-butler") (project-explorer :source "MELPA" :recipe (:package "project-explorer" :fetcher github :repo "sabof/project-explorer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A project explorer sidebar" :date (21830 35920) :url "https://github.com/sabof/project-explorer") (project-mode-line-tag :source "MELPA" :recipe (:package "project-mode-line-tag" :fetcher github :repo "fritzgrabo/project-mode-line-tag" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display a buffer's project in its mode line" :date (25979 27856) :url "https://github.com/fritzgrabo/project-mode-line-tag") (project-persist :source "MELPA" :recipe (:package "project-persist" :fetcher github :repo "rdallasgray/project-persist" :files ("lib/*")) :description "A minor mode to allow loading and saving of project settings" :date (23440 17360) :url "https://github.com/rdallasgray/project-persist") (project-persist-drawer :source "MELPA" :recipe (:package "project-persist-drawer" :fetcher github :repo "rdallasgray/project-persist-drawer" :files ("lib/*")) :description "Use a project drawer with project-persist" :date (22078 26192) :url "https://github.com/rdallasgray/project-persist-drawer") (project-rootfile :source "MELPA" :recipe (:package "project-rootfile" :repo "buzztaiki/project-rootfile.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension of project.el to detect project with root file" :date (25287 18768) :url "https://github.com/buzztaiki/project-rootfile.el") (project-shells :source "MELPA" :recipe (:package "project-shells" :repo "hying-caritas/project-shells" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage the shell buffers of each project" :date (25885 53840) :url "https://github.com/hying-caritas/project-shells") (project-tab-groups :source "MELPA" :recipe (:package "project-tab-groups" :fetcher github :repo "fritzgrabo/project-tab-groups" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support a \"one tab group per project\" workflow" :date (25979 27856) :url "https://github.com/fritzgrabo/project-tab-groups") (project-tasks :source "MELPA" :recipe (:package "project-tasks" :repo "TxGVNN/project-tasks" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Efficient task management for your project" :date (26396 1744) :url "https://github.com/TxGVNN/project-tasks") (project-treemacs :source "MELPA" :recipe (:package "project-treemacs" :repo "cmccloud/project-treemacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple treemacs backend for project.el" :date (25715 49360) :url "https://github.com/cmccloud/project-treemacs") (projectile :source "MELPA" :recipe (:package "projectile" :fetcher github :repo "bbatsov/projectile" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage and navigate projects in Emacs easily" :date (26405 16720) :url "https://github.com/bbatsov/projectile") (projectile-codesearch :source "MELPA" :recipe (:package "projectile-codesearch" :fetcher github :repo "abingham/emacs-codesearch" :files ("projectile-codesearch.el")) :description "Integration of codesearch into projectile" :date (23280 48720) :url "https://github.com/abingham/emacs-codesearch") (projectile-git-autofetch :source "MELPA" :recipe (:package "projectile-git-autofetch" :repo "andrmuel/projectile-git-autofetch" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically fetch git repositories" :date (24381 37584) :url "https://github.com/andrmuel/projectile-git-autofetch") (projectile-rails :source "MELPA" :recipe (:package "projectile-rails" :repo "asok/projectile-rails" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Rails projects based on projectile-mode" :date (25519 20816) :url "https://github.com/asok/projectile-rails") (projectile-ripgrep :source "MELPA" :recipe (:package "projectile-ripgrep" :repo "nlamirault/ripgrep.el" :fetcher github :files ("projectile-ripgrep.el")) :description "Run ripgrep with Projectile" :date (25415 10960) :url "https://github.com/nlamirault/ripgrep.el") (projectile-sift :source "MELPA" :recipe (:package "projectile-sift" :repo "nlamirault/sift.el" :fetcher github :files ("projectile-sift.el")) :description "Run a sift with Projectile" :date (22157 32848) :url "https://github.com/nlamirault/sift.el") (projectile-speedbar :source "MELPA" :recipe (:package "projectile-speedbar" :fetcher github :repo "anshulverma/projectile-speedbar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Projectile integration for speedbar" :date (23881 59984) :url "https://github.com/anshulverma/projectile-speedbar") (projectile-trailblazer :source "MELPA" :recipe (:package "projectile-trailblazer" :repo "micdahl/projectile-trailblazer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Rails projects using trailblazer" :date (22988 4432) :url "https://github.com/micdahl/projectile-trailblazer") (projectile-variable :source "MELPA" :recipe (:package "projectile-variable" :fetcher github :repo "emacs-php/projectile-variable" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Store project local variables" :date (25860 50640) :url "https://github.com/emacs-php/projectile-variable") (projection :source "MELPA" :recipe (:package "projection" :fetcher github :repo "mohkale/projection" :files (:defaults "src/*.el")) :description "Project type support for `project'" :date (26378 58192) :url "https://github.com/mohkale/projection") (projection-dape :source "MELPA" :recipe (:package "projection-dape" :fetcher github :repo "mohkale/projection" :files ("src/projection-dape/projection-dape*.el")) :description "Projection integration for `dape'" :date (26112 37968) :url "https://github.com/mohkale/projection") (projection-multi :source "MELPA" :recipe (:package "projection-multi" :fetcher github :repo "mohkale/projection" :files ("src/projection-multi/*.el")) :description "Projection integration for `compile-multi'" :date (26347 16208) :url "https://github.com/mohkale/projection") (projection-multi-embark :source "MELPA" :recipe (:package "projection-multi-embark" :fetcher github :repo "mohkale/projection" :files ("src/projection-multi-embark/projection-multi-embark*.el")) :description "Integration for `projection-multi' and `embark'" :date (26285 18640) :url "https://github.com/mohkale/projection") (projector :source "MELPA" :recipe (:package "projector" :repo "waymondo/projector.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight library for managing project-aware shell and command buffers" :date (24973 33872) :url "https://github.com/waymondo/projector.el") (projekt :source "MELPA" :recipe (:package "projekt" :fetcher github :repo "tekai/projekt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some kind of staging for CVS" :date (21776 32464) :url "https://github.com/tekai/projekt") (projmake-mode :source "MELPA" :recipe (:package "projmake-mode" :fetcher github :repo "ericbmerritt/projmake-mode" :version-regexp "none-since-rename" :files ("src/*.el")) :description "Project oriented automatic builder and error highlighter, flymake for projects" :date (22550 24400) :url "https://github.com/ericbmerritt/projmake-mode") (prometheus-mode :source "MELPA" :recipe (:package "prometheus-mode" :repo "peterhoeg/prometheus-mode" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major modes for Prometheus files" :date (25706 34384) :url "https://gitlab.com/peterhoeg/prometheus-mode") (promise :source "MELPA" :recipe (:package "promise" :repo "chuntaro/emacs-promise" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Promises/A+" :date (24643 60752) :url "https://github.com/chuntaro/emacs-promise") (prompt-text :source "MELPA" :recipe (:package "prompt-text" :repo "10sr/prompt-text-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configure your minibuffer prompt" :date (23722 25808) :url "https://github.com/10sr/prompt-text-el") (prompts :source "MELPA" :recipe (:package "prompts" :fetcher github :repo "GuiltyDolphin/prompts.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for working with text prompts" :date (22491 3024) :url "https://github.com/GuiltyDolphin/prompts.el") (pronto :source "MELPA" :recipe (:package "pronto" :repo "julianrubisch/pronto.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compilation mode for pronto stylechecks" :date (24138 65232) :url "https://github.com/julianrubisch/pronto.el") (proof-general :source "MELPA" :recipe (:package "proof-general" :fetcher github :repo "ProofGeneral/PG" :files (:defaults "CHANGES" "AUTHORS" "COPYING" "generic" "images" "lib" ("coq" "coq/*.el") "easycrypt" "phox" "qrhl" "pghaskell" "pgocaml" "pgshell")) :description "A generic Emacs interface for proof assistants" :date (26338 1232) :url "https://github.com/ProofGeneral/PG") (prop-menu :source "MELPA" :recipe (:package "prop-menu" :fetcher github :repo "david-christiansen/prop-menu-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create and display a context menu based on text and overlay properties" :date (21942 39888) :url "https://github.com/david-christiansen/prop-menu-el") (propfont-mixed :source "MELPA" :recipe (:package "propfont-mixed" :fetcher github :repo "ikirill/propfont-mixed" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use proportional fonts with space-based indentation" :date (21684 13776) :url "https://github.com/ikirill/propfont-mixed") (proportional :source "MELPA" :recipe (:package "proportional" :repo "ksjogo/proportional" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use a proportional font everywhere" :date (25485 2640) :url "https://github.com/ksjogo/proportional") (prosjekt :source "MELPA" :recipe (:package "prosjekt" :fetcher github :repo "abingham/prosjekt" :files ("prosjekt/*.el" "prosjekt/ext/*.el")) :description "A software project tool for emacs" :date (22103 29392) :url "https://github.com/abingham/prosjekt") (protobuf-mode :source "MELPA" :recipe (:package "protobuf-mode" :fetcher github :repo "protocolbuffers/protobuf" :files ("editors/protobuf-mode.el")) :description "Major mode for editing protocol buffers" :date (26311 42704) :url "https://github.com/protocolbuffers/protobuf") (protobuf-ts-mode :source "MELPA" :recipe (:package "protobuf-ts-mode" :fetcher github :repo "emacsattic/protobuf-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree sitter support for Protocol Buffers (proto3 only)" :date (25794 56016) :url "https://github.com/emacsattic/protobuf-ts-mode") (protocols :source "MELPA" :recipe (:package "protocols" :fetcher github :repo "davep/protocols.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Protocol database access functions" :date (22912 60368) :url "https://github.com/davep/protocols.el") (proxy-mode :source "MELPA" :recipe (:package "proxy-mode" :fetcher git :url "https://repo.or.cz/proxy-mode.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to toggle proxy" :date (25601 3664) :url "https://repo.or.cz/proxy-mode.git") (psalm :source "MELPA" :recipe (:package "psalm" :fetcher github :repo "emacs-php/psalm.el" :files ("psalm.el")) :description "Interface to Psalm" :date (25858 8912) :url "https://github.com/emacs-php/psalm.el") (psc-ide :source "MELPA" :recipe (:package "psc-ide" :fetcher github :repo "purescript-emacs/psc-ide-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for PureScript's IDE server" :date (26017 43088) :url "https://github.com/purescript-emacs/psc-ide-emacs") (psci :source "MELPA" :recipe (:package "psci" :fetcher github :repo "purescript-emacs/emacs-psci" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for purescript repl psci" :date (25984 45776) :url "https://github.com/purescript-emacs/emacs-psci") (psession :source "MELPA" :recipe (:package "psession" :fetcher github :repo "thierryvolpiatto/psession" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent save of elisp objects" :date (26307 45648) :url "https://github.com/thierryvolpiatto/psession") (psysh :source "MELPA" :recipe (:package "psysh" :fetcher github :repo "emacs-php/psysh.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "PsySH, PHP interactive shell (REPL)" :date (25818 38352) :url "https://github.com/emacs-php/psysh.el") (pt :source "MELPA" :recipe (:package "pt" :repo "bling/pt.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A front-end for pt, The Platinum Searcher" :date (22624 13136) :url "https://github.com/bling/pt.el") (ptemplate :source "MELPA" :recipe (:package "ptemplate" :fetcher github :repo "nbfalcon/ptemplate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Project templates" :date (24666 22224) :url "https://github.com/nbfalcon/ptemplate") (ptemplate-templates :source "MELPA" :recipe (:package "ptemplate-templates" :fetcher github :repo "nbfalcon/ptemplate-templates" :files ("*.el" "rsc")) :description "Official templates" :date (24666 22224) :url "https://github.com/nbfalcon/ptemplate-templates") (ptree :source "MELPA" :recipe (:package "ptree" :fetcher github :repo "alpha-catharsis/ptree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Property tree data structure" :date (25446 52944) :url "https://github.com/alpha-catharsis/ptree") (pubmed :source "MELPA" :recipe (:package "pubmed" :fetcher gitlab :repo "fvdbeek/emacs-pubmed" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to PubMed" :date (25428 22992) :url "https://gitlab.com/fvdbeek/emacs-pubmed") (pueue :source "MELPA" :recipe (:package "pueue" :fetcher github :repo "xFA25E/pueue" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for pueue" :date (25585 15440) :url "https://github.com/xFA25E/pueue") (pug-mode :source "MELPA" :recipe (:package "pug-mode" :repo "hlissner/emacs-pug-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for jade/pug template files" :date (24976 10064) :url "https://github.com/hlissner/emacs-pug-mode") (pulseaudio-control :source "MELPA" :recipe (:package "pulseaudio-control" :repo "flexibeast/pulseaudio-control" :fetcher sourcehut :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use `pactl' to manage PulseAudio volumes" :date (25618 12752) :url "https://git.sr.ht/~flexibeast/pulseaudio-control") (pumpkin-spice-theme :source "MELPA" :recipe (:package "pumpkin-spice-theme" :fetcher git :url "https://cicadas.surf/cgit/pumpkin-spice-theme.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spice up your day with a delightful pumpkin colored theme" :date (25893 47952) :url "https://cicadas.surf/cgit/pumpkin-spice-theme.git") (punctuality-logger :source "MELPA" :recipe (:package "punctuality-logger" :repo "elzair/punctuality-logger" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Punctuality logger for Emacs" :date (21613 1232) :url "https://gitlab.com/elzair/punctuality-logger") (pungi :source "MELPA" :recipe (:package "pungi" :fetcher github :repo "mgrbyte/pungi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrates jedi with virtualenv and buildout python environments" :date (21736 61904) :url "https://github.com/mgrbyte/pungi") (puni :source "MELPA" :recipe (:package "puni" :repo "AmaiKinono/puni" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parentheses Universalistic" :date (26370 64080) :url "https://github.com/AmaiKinono/puni") (punpun-themes :source "MELPA" :recipe (:package "punpun-themes" :fetcher git :url "https://depp.brause.cc/punpun-themes.git" :old-names (punpun-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A set of bleak themes" :date (26360 28240) :url "https://depp.brause.cc/punpun-themes.git") (puppet-mode :source "MELPA" :recipe (:package "puppet-mode" :fetcher github :repo "voxpupuli/puppet-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Puppet manifests" :date (24641 19024) :url "https://github.com/voxpupuli/puppet-mode") (puppet-ts-mode :source "MELPA" :recipe (:package "puppet-ts-mode" :fetcher github :repo "smoeding/puppet-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Puppet using Tree-sitter" :date (26235 12240) :url "https://github.com/smoeding/puppet-ts-mode") (purescript-mode :source "MELPA" :recipe (:package "purescript-mode" :repo "purescript-emacs/purescript-mode" :fetcher github :files (:defaults "NEWS" "snippets")) :description "A PureScript editing mode" :date (26361 49104) :url "https://github.com/purescript-emacs/purescript-mode") (purp-theme :source "MELPA" :recipe (:package "purp-theme" :fetcher github :repo "gnuvince/purp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark color theme with few colors" :date (24893 6352) :url "https://github.com/gnuvince/purp") (purple-haze-theme :source "MELPA" :recipe (:package "purple-haze-theme" :repo "emacsfodder/emacs-purple-haze-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An overtly purple color theme for Emacs24" :date (21565 32960) :url "https://github.com/emacsfodder/emacs-purple-haze-theme") (purty-mode :source "MELPA" :recipe (:package "purty-mode" :fetcher github :repo "jcatw/purty-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Safely pretty-print greek letters, mathematical symbols, or anything else" :date (21069 52416) :url "https://github.com/jcatw/purty-mode") (pushbullet :source "MELPA" :recipe (:package "pushbullet" :fetcher github :repo "theanalyst/revolver" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client for the PushBullet Android app" :date (21477 11328) :url "https://github.com/theanalyst/revolver") (pushover :source "MELPA" :recipe (:package "pushover" :url "https://git.flintfam.org/swf-projects/emacs-pushover.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pushover API Access" :date (22934 976) :url "https://git.flintfam.org/swf-projects/emacs-pushover.git") (px :source "MELPA" :recipe (:package "px" :fetcher github :repo "aaptel/preview-latex" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview inline latex in any mode" :date (22730 64720) :url "https://github.com/aaptel/preview-latex") (py-autopep8 :source "MELPA" :recipe (:package "py-autopep8" :fetcher codeberg :repo "ideasman42/emacs-py-autopep8" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use autopep8 to beautify a Python buffer" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-py-autopep8") (py-gnitset :source "MELPA" :recipe (:package "py-gnitset" :fetcher github :repo "quodlibetor/py-gnitset" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run your Python tests any way you'd like" :date (22937 63568) :url "https://github.com/quodlibetor/py-gnitset") (py-import-check :source "MELPA" :recipe (:package "py-import-check" :fetcher github :repo "psibi/emacs-py-import-check" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Finds the unused python imports using importchecker" :date (20986 48704) :url "https://github.com/psibi/emacs-py-import-check") (py-isort :source "MELPA" :recipe (:package "py-isort" :repo "paetzke/py-isort.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use isort to sort the imports in a Python buffer" :date (22502 59728) :url "https://github.com/paetzke/py-isort.el") (py-smart-operator :source "MELPA" :recipe (:package "py-smart-operator" :repo "rmuslimov/py-smart-operator" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart-operator for python-mode" :date (22829 56656) :url "https://github.com/rmuslimov/py-smart-operator") (py-snippets :source "MELPA" :recipe (:package "py-snippets" :repo "Xaldew/py-snippets" :fetcher github :files (:defaults "snippets")) :description "Collection of advanced Python yasnippet snippets" :date (25382 13648) :url "https://github.com/Xaldew/py-snippets") (py-test :source "MELPA" :recipe (:package "py-test" :repo "Bogdanp/py-test.el" :fetcher github :files ("py-test.el")) :description "A test runner for Python code" :date (25776 26064) :url "https://github.com/Bogdanp/py-test.el") (py-vterm-interaction :source "MELPA" :recipe (:package "py-vterm-interaction" :repo "vale981/py-vterm-interaction.el" :fetcher github :files ("py-vterm-interaction*.el" ("scripts/" "scripts/*.py"))) :description "A mode for Python REPL using vterm" :date (26341 63824) :url "https://github.com/vale981/py-vterm-interaction.el") (py-yapf :source "MELPA" :recipe (:package "py-yapf" :repo "paetzke/py-yapf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use yapf to beautify a Python buffer" :date (22502 59728) :url "https://github.com/paetzke/py-yapf.el") (pycarddavel :source "MELPA" :recipe (:package "pycarddavel" :fetcher github :repo "DamienCassou/pycarddavel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate pycarddav" :date (21987 28368) :url "https://github.com/DamienCassou/pycarddavel") (pyconf :source "MELPA" :recipe (:package "pyconf" :fetcher github :repo "andcarnivorous/pyconf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set up python execution configurations like dap-mode ones" :date (26050 40400) :url "https://github.com/andcarnivorous/pyconf") (pycoverage :source "MELPA" :recipe (:package "pycoverage" :fetcher github :repo "mattharrison/pycoverage.el" :files ("pycoverage.el" "cov2emacs/bin/cov2emacs" "cov2emacs/cov2emacslib/__init__.py" "cov2emacs/cov2emacslib/meta.py")) :description "Support for coverage stats on Python 2.X and 3" :date (24251 3664) :url "https://github.com/mattharrison/pycoverage.el") (pydoc :source "MELPA" :recipe (:package "pydoc" :fetcher github :repo "statmobile/pydoc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functional, syntax highlighted pydoc navigation" :date (25507 29648) :url "https://github.com/statmobile/pydoc") (pyenv-mode :source "MELPA" :recipe (:package "pyenv-mode" :fetcher github :repo "pythonic-emacs/pyenv-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate pyenv with python-mode" :date (25826 32464) :url "https://github.com/pythonic-emacs/pyenv-mode") (pygen :source "MELPA" :recipe (:package "pygen" :repo "JackCrawley/pygen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python code generation using Elpy and Python-mode" :date (22578 3792) :url "https://github.com/JackCrawley/pygen") (pygn-mode :source "MELPA" :recipe (:package "pygn-mode" :fetcher github :repo "dwcoates/pygn-mode" :files (:defaults "pygn_server.py" "lib")) :description "Major-mode for chess PGN files, powered by Python" :date (25726 19664) :url "https://github.com/dwcoates/pygn-mode") (pyim :source "MELPA" :recipe (:package "pyim" :fetcher github :repo "tumashu/pyim" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Chinese input method support quanpin, shuangpin, wubi, cangjie and rime" :date (26170 38480) :url "https://github.com/tumashu/pyim") (pyim-basedict :source "MELPA" :recipe (:package "pyim-basedict" :fetcher github :repo "tumashu/pyim-basedict" :files (:defaults "*.pyim" "*.pyim.gz") :old-names (chinese-pyim-basedict)) :description "The default pinyin dict of pyim" :date (26352 34128) :url "https://github.com/tumashu/pyim-basedict") (pyim-cangjiedict :source "MELPA" :recipe (:package "pyim-cangjiedict" :fetcher github :repo "con5tella/pyim-cangjiedict" :files (:defaults "*.pyim")) :description "Some cangjie dicts for pyim" :date (24778 26192) :url "https://github.com/con5tella/pyim-cangjiedict") (pyim-smzmdict :source "MELPA" :recipe (:package "pyim-smzmdict" :fetcher github :repo "con5tella/pyim-smzmdict" :files (:defaults "*.pyim")) :description "Sanma(triple) Zhengma dict for pyim" :date (24721 46544) :url "https://github.com/con5tella/pyim-smzmdict") (pyim-wbdict :source "MELPA" :recipe (:package "pyim-wbdict" :fetcher github :repo "tumashu/pyim-wbdict" :files (:defaults "*.pyim" "*.pyim.gz") :old-names (chinese-pyim-wbdict)) :description "Some wubi dicts for pyim" :date (25242 30288) :url "https://github.com/tumashu/pyim-wbdict") (pyimport :source "MELPA" :recipe (:package "pyimport" :repo "Wilfred/pyimport" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Python imports!" :date (26050 40400) :url "https://github.com/Wilfred/pyimport") (pyimpsort :source "MELPA" :recipe (:package "pyimpsort" :fetcher github :repo "emacsorphanage/pyimpsort" :files ("pyimpsort.el" "pyimpsort.py")) :description "Sort python imports" :date (22187 53968) :url "https://github.com/emacsorphanage/pyimpsort") (pyinspect :source "MELPA" :recipe (:package "pyinspect" :fetcher github :repo "it-is-wednesday/pyinspect.el" :files (:defaults "pyinspect.py")) :description "Python object inspector" :date (25581 18384) :url "https://github.com/it-is-wednesday/pyinspect.el") (pylint :source "MELPA" :recipe (:package "pylint" :fetcher github :repo "emacsorphanage/pylint" :files (:defaults "epylint.py")) :description "Minor mode for running `pylint'" :date (25461 20304) :url "https://github.com/emacsorphanage/pylint") (pynt :source "MELPA" :recipe (:package "pynt" :fetcher github :repo "ebanner/pynt" :files ("pynt/*")) :description "Generate and scroll EIN buffers from python code" :date (23363 52432) :url "https://github.com/ebanner/pynt") (pyramid :source "MELPA" :recipe (:package "pyramid" :repo "dakra/pyramid.el" :fetcher github :files (:defaults "snippets")) :description "Minor mode for working with pyramid projects" :date (25537 50768) :url "https://github.com/dakra/pyramid.el") (pytest :source "MELPA" :recipe (:package "pytest" :fetcher github :repo "ionrock/pytest-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy Python test running in Emacs" :date (25811 65104) :url "https://github.com/ionrock/pytest-el") (pytest-pdb-break :source "MELPA" :recipe (:package "pytest-pdb-break" :fetcher github :repo "poppyschmo/pytest-pdb-break" :files ("emacs/*.el" ("lib" "*.py" "helpers") ("lib/emacs" "emacs/*.py") (:exclude "emacs/*-test.el"))) :description "A pytest PDB launcher" :date (24360 31440) :url "https://github.com/poppyschmo/pytest-pdb-break") (python-black :source "MELPA" :recipe (:package "python-black" :fetcher github :repo "wbolster/emacs-python-black" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat Python using python-black" :date (26186 26704) :url "https://github.com/wbolster/emacs-python-black") (python-cell :source "MELPA" :recipe (:package "python-cell" :fetcher github :repo "twmr/python-cell.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for MATLAB-like cells in python mode" :date (26034 52176) :url "https://github.com/twmr/python-cell.el") (python-coverage :source "MELPA" :recipe (:package "python-coverage" :fetcher github :repo "wbolster/emacs-python-coverage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show Python coverage via overlays or Flycheck" :date (26244 27216) :url "https://github.com/wbolster/emacs-python-coverage") (python-django :source "MELPA" :recipe (:package "python-django" :fetcher github :repo "fgallina/python-django.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Jazzy package for managing Django projects" :date (21975 37200) :url "https://github.com/fgallina/python-django.el") (python-docstring :source "MELPA" :recipe (:package "python-docstring" :fetcher github :repo "glyph/python-docstring-mode" :files ("docstring_wrap.py" "python-docstring.el")) :description "Smart Python docstring formatting" :date (25963 39632) :url "https://github.com/glyph/python-docstring-mode") (python-environment :source "MELPA" :recipe (:package "python-environment" :repo "tkf/emacs-python-environment" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Virtualenv API for Emacs Lisp" :date (21758 2512) :url "https://github.com/tkf/emacs-python-environment") (python-insert-docstring :source "MELPA" :recipe (:package "python-insert-docstring" :fetcher github :repo "macurovc/insert-docstring" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python Google docstring inserter" :date (24993 19152) :url "https://github.com/macurovc/insert-docstring") (python-isort :source "MELPA" :recipe (:package "python-isort" :fetcher github :repo "wyuenho/emacs-python-isort" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat python-mode buffer with isort" :date (24759 61776) :url "https://github.com/wyuenho/emacs-python-isort") (python-mls :source "MELPA" :recipe (:package "python-mls" :repo "jdtsmith/python-mls" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multi-line shell for (i)Python" :date (26228 38992) :url "https://github.com/jdtsmith/python-mls") (python-mode :source "MELPA" :recipe (:package "python-mode" :fetcher gitlab :repo "python-mode-devs/python-mode" :files ("python-mode.el" ("completion" "completion/pycomplete.*"))) :description "Python major mode" :date (26336 45904) :url "https://gitlab.com/python-mode-devs/python-mode") (python-pytest :source "MELPA" :recipe (:package "python-pytest" :fetcher github :repo "wbolster/emacs-python-pytest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helpers to run pytest" :date (26315 39760) :url "https://github.com/wbolster/emacs-python-pytest") (python-switch-quotes :source "MELPA" :recipe (:package "python-switch-quotes" :fetcher github :repo "vladimirlagunov/python-switch-quotes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cycle between ' and \" quotes in python strings" :date (22626 54864) :url "https://github.com/vladimirlagunov/python-switch-quotes") (python-test :source "MELPA" :recipe (:package "python-test" :fetcher github :repo "emacs-pe/python-test.el" :files ("python-test.el")) :description "Python testing integration" :date (23495 41680) :url "https://github.com/emacs-pe/python-test.el") (python-view-data :source "MELPA" :recipe (:package "python-view-data" :repo "ShuguangSun/python-view-data" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View data in python" :date (25688 4432) :url "https://github.com/ShuguangSun/python-view-data") (python-x :source "MELPA" :recipe (:package "python-x" :repo "wavexx/python-x.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python.el extras for interactive evaluation" :date (25541 47824) :url "https://gitlab.com/wavexx/python-x.el") (pythonic :source "MELPA" :recipe (:package "pythonic" :fetcher github :repo "pythonic-emacs/pythonic" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility functions for writing pythonic emacs package" :date (25826 32464) :url "https://github.com/pythonic-emacs/pythonic") (pythontest :source "MELPA" :recipe (:package "pythontest" :fetcher github :repo "erickgnavar/pythontest.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Testing executor for python" :date (26298 30672) :url "https://github.com/erickgnavar/pythontest.el") (pyvenv :source "MELPA" :recipe (:package "pyvenv" :fetcher github :repo "jorgenschaefer/pyvenv" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Python virtual environment interface" :date (24935 18640) :url "https://github.com/jorgenschaefer/pyvenv") (pyvenv-auto :source "MELPA" :recipe (:package "pyvenv-auto" :repo "ryotaro612/pyvenv-auto" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically switch Python venvs" :date (25527 14928) :url "https://github.com/ryotaro612/pyvenv-auto") (q-mode :source "MELPA" :recipe (:package "q-mode" :fetcher github :repo "psaris/q-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A q editing mode" :date (25653 51792) :url "https://github.com/psaris/q-mode") (qml-mode :source "MELPA" :recipe (:package "qml-mode" :repo "coldnew/qml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing QT Declarative (QML) code" :date (22530 39120) :url "https://github.com/coldnew/qml-mode") (qrencode :source "MELPA" :recipe (:package "qrencode" :fetcher github :repo "ruediger/qrencode-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "QRCode encoder" :date (26351 13264) :url "https://github.com/ruediger/qrencode-el") (qt-pro-mode :source "MELPA" :recipe (:package "qt-pro-mode" :fetcher github :repo "emacsorphanage/qt-pro-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Qt Pro/Pri major mode" :date (22835 9040) :url "https://github.com/emacsorphanage/qt-pro-mode") (qtcreator-theme :source "MELPA" :recipe (:package "qtcreator-theme" :fetcher github :repo "LesleyLai/emacs-qtcreator-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme that mimics Qt Creator IDE" :date (24535 53840) :url "https://github.com/LesleyLai/emacs-qtcreator-theme") (quack :source "MELPA" :recipe (:package "quack" :fetcher github :repo "emacsmirror/quack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhanced support for editing and running Scheme code" :date (23520 44880) :url "https://github.com/emacsmirror/quack") (quakec-mode :source "MELPA" :recipe (:package "quakec-mode" :fetcher github :repo "vkazanov/quakec-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for QuakeC" :date (25743 28752) :url "https://github.com/vkazanov/quakec-mode") (quarto-mode :source "MELPA" :recipe (:package "quarto-mode" :fetcher github :repo "quarto-dev/quarto-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A (poly)mode for https://quarto.org" :date (25404 40656) :url "https://github.com/quarto-dev/quarto-emacs") (quasi-monochrome-theme :source "MELPA" :recipe (:package "quasi-monochrome-theme" :fetcher github :repo "lbolla/emacs-quasi-monochrome" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quasi Monochrome theme" :date (24214 9296) :url "https://github.com/lbolla/emacs-quasi-monochrome") (quelpa :source "MELPA" :recipe (:package "quelpa" :fetcher github :repo "quelpa/quelpa" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Lisp packages built directly from source" :date (25744 49616) :url "https://github.com/quelpa/quelpa") (quelpa-leaf :source "MELPA" :recipe (:package "quelpa-leaf" :repo "quelpa/quelpa-leaf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quelpa handler for leaf" :date (26001 54864) :url "https://github.com/quelpa/quelpa-leaf") (quelpa-use-package :source "MELPA" :recipe (:package "quelpa-use-package" :fetcher github :repo "quelpa/quelpa-use-package" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quelpa handler for use-package" :date (24464 41296) :url "https://github.com/quelpa/quelpa-use-package") (quick-buffer-switch :source "MELPA" :recipe (:package "quick-buffer-switch" :fetcher github :repo "renard/quick-buffer-switch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick switch to file or dir buffers" :date (25504 53456) :url "https://github.com/renard/quick-buffer-switch") (quick-peek :source "MELPA" :recipe (:package "quick-peek" :fetcher github :repo "cpitclaudel/quick-peek" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inline quick-peek windows" :date (24113 62032) :url "https://github.com/cpitclaudel/quick-peek") (quick-preview :source "MELPA" :recipe (:package "quick-preview" :fetcher github :repo "emacsattic/quick-preview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick preview using GNOME sushi, gloobus or quick look" :date (23975 34000) :url "https://github.com/emacsattic/quick-preview") (quick-shell-keybind :source "MELPA" :recipe (:package "quick-shell-keybind" :fetcher github :repo "eyeinsky/quick-shell-keybind" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactively bind a key to shell commands" :date (25875 18000) :url "https://github.com/eyeinsky/quick-shell-keybind") (quickref :source "MELPA" :recipe (:package "quickref" :fetcher github :repo "pd/quickref.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display relevant notes-to-self in the echo area" :date (22932 45648) :url "https://github.com/pd/quickref.el") (quickrun :source "MELPA" :recipe (:package "quickrun" :repo "emacsorphanage/quickrun" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run commands quickly" :date (26353 54992) :url "https://github.com/emacsorphanage/quickrun") (quiet :source "MELPA" :recipe (:package "quiet" :repo "zzkt/quiet" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Disconnect from the online world for a while" :date (25717 4688) :url "https://github.com/zzkt/quiet") (quilt :source "MELPA" :recipe (:package "quilt" :fetcher github :repo "jstranik/emacs-quilt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for working with files in quilt" :date (23909 39376) :url "https://github.com/jstranik/emacs-quilt") (quiz :source "MELPA" :recipe (:package "quiz" :fetcher github :repo "davep/quiz.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple choice quiz game" :date (23784 23376) :url "https://github.com/davep/quiz.el") (qwen-chat-shell :source "MELPA" :recipe (:package "qwen-chat-shell" :repo "Pavinberg/qwen-chat-shell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Qwen-chat shell + buffer insert commands" :date (26216 47824) :url "https://github.com/Pavinberg/qwen-chat-shell") (r-autoyas :source "MELPA" :recipe (:package "r-autoyas" :fetcher github :repo "mattfidler/r-autoyas.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides automatically created yasnippets for R function argument lists" :date (21187 8768) :url "https://github.com/mattfidler/r-autoyas.el") (racer :source "MELPA" :recipe (:package "racer" :repo "racer-rust/emacs-racer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Code completion, goto-definition and docs browsing for Rust via racer" :date (24643 60752) :url "https://github.com/racer-rust/emacs-racer") (racket-mode :source "MELPA" :recipe (:package "racket-mode" :fetcher github :repo "greghendershott/racket-mode" :files (:defaults "*.rkt" ("racket" "racket/*") (:exclude "racket/example/*" "racket/test/*"))) :description "Racket editing, REPL, and more" :date (26407 58448) :url "https://github.com/greghendershott/racket-mode") (rails-i18n :source "MELPA" :recipe (:package "rails-i18n" :repo "otavioschwanck/rails-i18n.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Seach and insert i18n on ruby code" :date (25072 25808) :url "https://github.com/otavioschwanck/rails-i18n.el") (rails-log-mode :source "MELPA" :recipe (:package "rails-log-mode" :fetcher github :repo "ananthakumaran/rails-log-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for viewing Rails log files" :date (21315 960) :url "https://github.com/ananthakumaran/rails-log-mode") (rails-routes :source "MELPA" :recipe (:package "rails-routes" :repo "otavioschwanck/rails-routes.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search for and insert rails routes" :date (25072 25808) :url "https://github.com/otavioschwanck/rails-routes.el") (railscasts-reloaded-theme :source "MELPA" :recipe (:package "railscasts-reloaded-theme" :repo "thegeorgeous/railscasts-reloaded-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Railscasts Reloaded color theme" :date (24516 3024) :url "https://github.com/thegeorgeous/railscasts-reloaded-theme") (railscasts-theme :source "MELPA" :recipe (:package "railscasts-theme" :repo "mikenichols/railscasts-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Railscasts color theme for GNU Emacs" :date (21732 64848) :url "https://github.com/mikenichols/railscasts-theme") (rainbow-blocks :source "MELPA" :recipe (:package "rainbow-blocks" :fetcher github :repo "istib/rainbow-blocks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Block syntax highlighting for lisp code" :date (24815 20560) :url "https://github.com/istib/rainbow-blocks") (rainbow-delimiters :source "MELPA" :recipe (:package "rainbow-delimiters" :fetcher github :repo "Fanael/rainbow-delimiters" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight brackets according to their depth" :date (24734 58576) :url "https://github.com/Fanael/rainbow-delimiters") (rainbow-fart :source "MELPA" :recipe (:package "rainbow-fart" :fetcher git :url "https://repo.or.cz/emacs-rainbow-fart.git" :files (:defaults "voices")) :description "Checks the keywords of code to play suitable sounds" :date (25743 28752) :url "https://repo.or.cz/emacs-rainbow-fart.git") (rainbow-identifiers :source "MELPA" :recipe (:package "rainbow-identifiers" :fetcher github :repo "Fanael/rainbow-identifiers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight identifiers according to their names" :date (21589 18896) :url "https://github.com/Fanael/rainbow-identifiers") (rake :source "MELPA" :recipe (:package "rake" :repo "asok/rake" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run rake commands" :date (25093 31952) :url "https://github.com/asok/rake") (raku-mode :source "MELPA" :recipe (:package "raku-mode" :fetcher github :repo "Raku/raku-mode" :files (:defaults (:exclude "nqp-mode.el")) :old-names (perl6-mode)) :description "Major mode for editing Raku code" :date (26158 47312) :url "https://github.com/Raku/raku-mode") (rally-mode :source "MELPA" :recipe (:package "rally-mode" :repo "seanleblanc/rally-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode to interact with the Rally Software web site" :date (22568 54352) :url "https://github.com/seanleblanc/rally-mode") (rand-theme :source "MELPA" :recipe (:package "rand-theme" :fetcher github :repo "gopar/rand-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Random Emacs theme at start-up!" :date (22132 29648) :url "https://github.com/gopar/rand-theme") (random-splash-image :source "MELPA" :recipe (:package "random-splash-image" :fetcher github :repo "kakakaya/random-splash-image" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Randomly sets splash image to *GNU Emacs* buffer on startup" :date (26161 23504) :url "https://github.com/kakakaya/random-splash-image") (ranger :source "MELPA" :recipe (:package "ranger" :fetcher github :repo "punassuming/ranger.el" :old-names (evil-ranger) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make dired more like ranger" :date (24589 57296) :url "https://github.com/punassuming/ranger.el") (rase :source "MELPA" :recipe (:package "rase" :repo "m00natic/rase" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run At Sun Event daemon" :date (20580 45120) :url "https://github.com/m00natic/rase") (rats :source "MELPA" :recipe (:package "rats" :fetcher github :repo "ane/rats.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rapid testing suite for Go" :date (22934 976) :url "https://github.com/ane/rats.el") (raycast-mode :source "MELPA" :recipe (:package "raycast-mode" :fetcher github :repo "nhojb/raycast-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Develop Raycast Extensions" :date (25727 40528) :url "https://github.com/nhojb/raycast-mode") (rbenv :source "MELPA" :recipe (:package "rbenv" :repo "senny/rbenv.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for rbenv" :date (26026 58064) :url "https://github.com/senny/rbenv.el") (rbs-mode :source "MELPA" :recipe (:package "rbs-mode" :fetcher github :repo "ybiquitous/rbs-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for RBS" :date (26289 15696) :url "https://github.com/ybiquitous/rbs-mode") (rbt :source "MELPA" :recipe (:package "rbt" :fetcher github :repo "joeheyming/rbt.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integrate reviewboard with emacs" :date (22674 19536) :url "https://github.com/joeheyming/rbt.el") (rbtagger :source "MELPA" :recipe (:package "rbtagger" :fetcher github :repo "thiagoa/rbtagger" :files (:defaults "bin")) :description "Ruby tagging tools" :date (24951 6864) :url "https://github.com/thiagoa/rbtagger") (rc-mode :source "MELPA" :recipe (:package "rc-mode" :repo "mrhmouse/rc-mode.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Plan9 rc shell" :date (22487 5968) :url "https://github.com/mrhmouse/rc-mode.el") (rcirc-alert :source "MELPA" :recipe (:package "rcirc-alert" :fetcher github :repo "csantosb/rcirc-alert" :files ("*.el" "*.sh")) :description "Configurable alert messages on top of RCIRC" :date (21622 16208) :url "https://github.com/csantosb/rcirc-alert") (rcirc-alertify :source "MELPA" :recipe (:package "rcirc-alertify" :fetcher github :repo "fgallina/rcirc-alertify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cross platform notifications for rcirc" :date (21313 45632) :url "https://github.com/fgallina/rcirc-alertify") (rcirc-groups :source "MELPA" :recipe (:package "rcirc-groups" :repo "dimitri/rcirc-groups" :fetcher github :files ("rcirc-groups.el")) :description "An emacs buffer in rcirc-groups major mode" :date (22910 18640) :url "https://github.com/dimitri/rcirc-groups") (rcirc-notify :source "MELPA" :recipe (:package "rcirc-notify" :fetcher github :repo "nicferrier/rcirc-notify" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Libnotify popups" :date (21732 64848) :url "https://github.com/nicferrier/rcirc-notify") (rcirc-styles :source "MELPA" :recipe (:package "rcirc-styles" :fetcher github :repo "aaron-em/rcirc-styles.el" :old-names (rcirc-controls) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support mIRC-style color and attribute codes" :date (24694 1616) :url "https://github.com/aaron-em/rcirc-styles.el") (rdf-prefix :source "MELPA" :recipe (:package "rdf-prefix" :fetcher github :repo "simenheg/rdf-prefix" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Prefix lookup for RDF" :date (26124 29136) :url "https://github.com/simenheg/rdf-prefix") (rdxmk :source "MELPA" :recipe (:package "rdxmk" :fetcher github :repo "jsalzbergedu/rdxmk" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A small set of tools for redox developments" :date (22869 27216) :url "https://github.com/jsalzbergedu/rdxmk") (react-snippets :source "MELPA" :recipe (:package "react-snippets" :fetcher github :repo "johnmastro/react-snippets.el" :files ("*.el" "snippets")) :description "Yasnippets for React" :date (24715 7760) :url "https://github.com/johnmastro/react-snippets.el") (read-aloud :source "MELPA" :recipe (:package "read-aloud" :repo "gromnitsky/read-aloud.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple interface to TTS engines" :date (22500 18000) :url "https://github.com/gromnitsky/read-aloud.el") (read-only-cfg :source "MELPA" :recipe (:package "read-only-cfg" :fetcher github :repo "pfchen/read-only-cfg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make files read-only based on user config" :date (24817 62288) :url "https://github.com/pfchen/read-only-cfg") (readable-numbers :source "MELPA" :recipe (:package "readable-numbers" :fetcher github :repo "Titan-C/cardano.el" :files ("readable-numbers.el")) :description "Visually separate long integers" :date (25291 15824) :url "https://github.com/Titan-C/cardano.el") (readline-complete :source "MELPA" :recipe (:package "readline-complete" :fetcher github :repo "monsanto/readline-complete.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Offers completions in shell mode" :date (21916 15824) :url "https://github.com/monsanto/readline-complete.el") (ready-player :source "MELPA" :recipe (:package "ready-player" :fetcher github :repo "xenodium/ready-player" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open media files in ready-player major mode" :date (26367 1488) :url "https://github.com/xenodium/ready-player") (real-auto-save :source "MELPA" :recipe (:package "real-auto-save" :fetcher github :repo "ChillarAnand/real-auto-save" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically save your buffers/files at regular intervals" :date (24240 33360) :url "https://github.com/ChillarAnand/real-auto-save") (realgud :source "MELPA" :recipe (:package "realgud" :fetcher github :repo "realgud/realgud" :files ("realgud.el" "realgud/.nosearch" "realgud-recursive-autoloads.el" ("realgud/common" "realgud/common/*.el") ("realgud/common/buffer" "realgud/common/buffer/*.el") ("realgud/debugger/bashdb" "realgud/debugger/bashdb/*.el") ("realgud/debugger/gdb" "realgud/debugger/gdb/*.el") ("realgud/debugger/gub" "realgud/debugger/gub/*.el") ("realgud/debugger/ipdb" "realgud/debugger/ipdb/*.el") ("realgud/debugger/jdb" "realgud/debugger/jdb/*.el") ("realgud/debugger/kshdb" "realgud/debugger/kshdb/*.el") ("realgud/debugger/nodejs" "realgud/debugger/nodejs/*.el") ("realgud/debugger/pdb" "realgud/debugger/pdb/*.el") ("realgud/debugger/perldb" "realgud/debugger/perldb/*.el") ("realgud/debugger/rdebug" "realgud/debugger/rdebug/*.el") ("realgud/debugger/remake" "realgud/debugger/remake/*.el") ("realgud/debugger/trepan" "realgud/debugger/trepan/*.el") ("realgud/debugger/trepan.pl" "realgud/debugger/trepan.pl/*.el") ("realgud/debugger/trepan2" "realgud/debugger/trepan2/*.el") ("realgud/debugger/trepan3k" "realgud/debugger/trepan3k/*.el") ("realgud/debugger/trepanjs" "realgud/debugger/trepanjs/*.el") ("realgud/debugger/zshdb" "realgud/debugger/zshdb/*.el") ("realgud/lang" "realgud/lang/*.el"))) :description "A modular front-end for interacting with external debuggers" :date (25937 15568) :url "https://github.com/realgud/realgud") (realgud-byebug :source "MELPA" :recipe (:package "realgud-byebug" :fetcher github :repo "realgud/realgud-byebug" :files ("realgud-byebug.el" ("byebug" "byebug/*.el"))) :description "Realgud front-end to the Ruby byebug debugger" :date (23777 50128) :url "https://github.com/realgud/realgud-byebug") (realgud-ipdb :source "MELPA" :recipe (:package "realgud-ipdb" :fetcher github :repo "realgud/realgud-ipdb" :files (:defaults ("ipdb" "ipdb/*.el"))) :description "Realgud front-end to ipdb" :date (24343 22352) :url "https://github.com/realgud/realgud-ipdb") (realgud-jdb :source "MELPA" :recipe (:package "realgud-jdb" :fetcher github :repo "realgud/realgud-jdb" :files (:defaults ("realgud-jdb" "realgud-jdb/*.el"))) :description "Realgud front-end to Java's jdb debugger\"" :date (24343 22352) :url "https://github.com/realgud/realgud-jdb") (realgud-lldb :source "MELPA" :recipe (:package "realgud-lldb" :fetcher github :repo "realgud/realgud-lldb" :files (:defaults ("lldb" "lldb/*.el"))) :description "Realgud front-end to lldb" :date (25561 33104) :url "https://github.com/realgud/realgud-lldb") (realgud-node-debug :source "MELPA" :recipe (:package "realgud-node-debug" :fetcher github :repo "realgud/realgud-node-debug" :files (:defaults ("realgud-node-debug" "realgud-node-debug/*.el"))) :description "Realgud front-end to older \"node debug\"" :date (23784 23376) :url "https://github.com/realgud/realgud-node-debug") (realgud-node-inspect :source "MELPA" :recipe (:package "realgud-node-inspect" :fetcher github :repo "realgud/realgud-node-inspect" :files (:defaults ("realgud-node-inspect" "realgud-node-inspect/*.el"))) :description "Realgud front-end to newer \"node inspect\"" :date (23781 47184) :url "https://github.com/realgud/realgud-node-inspect") (realgud-old-debuggers :source "MELPA" :recipe (:package "realgud-old-debuggers" :fetcher github :repo "realgud/realgud-old-debuggers" :files ("realgud-old-debuggers.el" ("pydb" "pydb/*.el") ("pydbgr" "pydbgr/*.el") ("trepan8" "trepan8/*.el") ("trepanx" "trepanx/*.el"))) :description "Realgud front-end to older lesser-used debuggers" :date (23777 50128) :url "https://github.com/realgud/realgud-old-debuggers") (realgud-pry :source "MELPA" :recipe (:package "realgud-pry" :fetcher github :repo "realgud/realgud-pry" :files ("realgud-pry.el" ("pry" "pry/*.el"))) :description "Realgud front-end to the Ruby pry debugger" :date (24450 8400) :url "https://github.com/realgud/realgud-pry") (realgud-rdb2 :source "MELPA" :recipe (:package "realgud-rdb2" :fetcher github :repo "realgud/realgud-ruby-debugger2" :files ("realgud-rdb2.el" ("rdb2" "rdb2/*.el"))) :description "Realgud front-end for interacting with Ruby debugger2" :date (23777 50128) :url "https://github.com/realgud/realgud-ruby-debugger2") (realgud-trepan-ni :source "MELPA" :recipe (:package "realgud-trepan-ni" :fetcher github :repo "realgud/realgud-trepan-ni" :files (:defaults ("trepan-ni" "trepan-ni/*.el"))) :description "Realgud front-end to trepan-ni" :date (24732 16848) :url "https://github.com/realgud/realgud-trepan-ni") (reaper :source "MELPA" :recipe (:package "reaper" :fetcher github :repo "xendk/reaper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with Harvest time tracking app" :date (25925 24400) :url "https://github.com/xendk/reaper") (reason-mode :source "MELPA" :recipe (:package "reason-mode" :fetcher github :repo "reasonml-editor/reason-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing ReasonML" :date (25644 36816) :url "https://github.com/reasonml-editor/reason-mode") (reazon :source "MELPA" :recipe (:package "reazon" :repo "nickdrozd/reazon" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MiniKanren for Emacs" :date (25035 31440) :url "https://github.com/nickdrozd/reazon") (rebecca-theme :source "MELPA" :recipe (:package "rebecca-theme" :fetcher github :repo "vic/rebecca-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rebecca Purple Theme" :date (23221 27344) :url "https://github.com/vic/rebecca-theme") (rebox2 :source "MELPA" :recipe (:package "rebox2" :fetcher github :repo "lewang/rebox2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Handling of comment boxes in various styles" :date (20641 21824) :url "https://github.com/lewang/rebox2") (recentf-ext :source "MELPA" :recipe (:package "recentf-ext" :fetcher github :repo "rubikitch/recentf-ext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Recentf extensions" :date (22985 28240) :url "https://github.com/rubikitch/recentf-ext") (recentf-remove-sudo-tramp-prefix :source "MELPA" :recipe (:package "recentf-remove-sudo-tramp-prefix" :fetcher github :repo "ncaq/recentf-remove-sudo-tramp-prefix" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Normalise recentf history" :date (25264 57296) :url "https://github.com/ncaq/recentf-remove-sudo-tramp-prefix") (recently :source "MELPA" :recipe (:package "recently" :repo "10sr/recently-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track recently opened files to visit them again" :date (24916 54224) :url "https://github.com/10sr/recently-el") (recompile-on-save :source "MELPA" :recipe (:package "recompile-on-save" :fetcher github :repo "maio/recompile-on-save.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Trigger recompilation on file save" :date (22102 8528) :url "https://github.com/maio/recompile-on-save.el") (recomplete :source "MELPA" :recipe (:package "recomplete" :fetcher codeberg :repo "ideasman42/emacs-recomplete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Immediately (re)complete actions" :date (26222 208) :url "https://codeberg.org/ideasman42/emacs-recomplete") (recover-buffers :source "MELPA" :recipe (:package "recover-buffers" :fetcher github :repo "tripleee/recover-buffers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Revisit all buffers from an auto-save file" :date (23002 37328) :url "https://github.com/tripleee/recover-buffers") (rect+ :source "MELPA" :recipe (:package "rect+" :repo "mhayashi1120/Emacs-rectplus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions to rect.el" :date (21893 54352) :url "https://github.com/mhayashi1120/Emacs-rectplus") (rectangle-utils :source "MELPA" :recipe (:package "rectangle-utils" :fetcher github :repo "thierryvolpiatto/rectangle-utils" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some useful rectangle functions" :date (26320 57680) :url "https://github.com/thierryvolpiatto/rectangle-utils") (recur :source "MELPA" :recipe (:package "recur" :fetcher github :repo "ROCKTAKEY/recur" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tail call optimization" :date (25547 208) :url "https://github.com/ROCKTAKEY/recur") (recursion-indicator :source "MELPA" :recipe (:package "recursion-indicator" :repo "minad/recursion-indicator" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Recursion indicator" :date (26356 31184) :url "https://github.com/minad/recursion-indicator") (recursive-narrow :source "MELPA" :recipe (:package "recursive-narrow" :fetcher github :repo "nflath/recursive-narrow" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Narrow-to-region that operates recursively" :date (23678 58192) :url "https://github.com/nflath/recursive-narrow") (redacted :source "MELPA" :recipe (:package "redacted" :fetcher github :repo "bkaestner/redacted.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Obscure text in buffer" :date (25048 43472) :url "https://github.com/bkaestner/redacted.el") (reddigg :source "MELPA" :recipe (:package "reddigg" :fetcher github :repo "thanhvg/emacs-reddigg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A reader for redditt" :date (26280 720) :url "https://github.com/thanhvg/emacs-reddigg") (redis :source "MELPA" :recipe (:package "redis" :fetcher github :repo "emacs-pe/redis.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Redis integration" :date (25934 39376) :url "https://github.com/emacs-pe/redis.el") (redpen-paragraph :source "MELPA" :recipe (:package "redpen-paragraph" :repo "karronoli/redpen-paragraph.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RedPen interface" :date (22381 40784) :url "https://github.com/karronoli/redpen-paragraph.el") (redprl :source "MELPA" :recipe (:package "redprl" :fetcher github :repo "RedPRL/sml-redprl" :files ("emacs/*.el")) :description "Major mode for editing RedPRL proofs and interacting with RedPRL" :date (23254 24656) :url "https://github.com/RedPRL/sml-redprl") (redshank :source "MELPA" :recipe (:package "redshank" :repo "emacsattic/redshank" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Common Lisp Editing Extensions" :date (23390 10960) :url "https://github.com/emacsattic/redshank") (redtick :source "MELPA" :recipe (:package "redtick" :fetcher github :repo "ferfebles/redtick" :files (:defaults "resources")) :description "Smallest pomodoro timer (1 char)" :date (23262 18768) :url "https://github.com/ferfebles/redtick") (redtt :source "MELPA" :recipe (:package "redtt" :fetcher github :repo "RedPRL/redtt" :files ("emacs/*.el")) :description "Major mode for editing redtt proofs" :date (23540 30160) :url "https://github.com/RedPRL/redtt") (refine :source "MELPA" :recipe (:package "refine" :repo "Wilfred/refine" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive value editing" :date (26340 42960) :url "https://github.com/Wilfred/refine") (reformatter :source "MELPA" :recipe (:package "reformatter" :repo "purcell/emacs-reformatter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define commands which run reformatters on the current buffer" :date (26330 7120) :url "https://github.com/purcell/emacs-reformatter") (regex-dsl :source "MELPA" :recipe (:package "regex-dsl" :fetcher github :repo "alk/elisp-regex-dsl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lisp syntax for regexps" :date (25071 4944) :url "https://github.com/alk/elisp-regex-dsl") (regex-tool :source "MELPA" :recipe (:package "regex-tool" :fetcher github :repo "jwiegley/regex-tool" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A regular expression evaluation tool for programmers" :date (22636 4304) :url "https://github.com/jwiegley/regex-tool") (region-bindings-mode :source "MELPA" :recipe (:package "region-bindings-mode" :fetcher github :repo "fgallina/region-bindings-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable custom bindings when mark is active" :date (21313 45632) :url "https://github.com/fgallina/region-bindings-mode") (region-convert :source "MELPA" :recipe (:package "region-convert" :fetcher github :repo "zonuexe/region-convert.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert string in region by Lisp function" :date (24740 10960) :url "https://github.com/zonuexe/region-convert.el") (region-occurrences-highlighter :source "MELPA" :recipe (:package "region-occurrences-highlighter" :repo "alvarogonzalezsotillo/region-occurrences-highlighter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mark occurrences of current region (selection)" :date (26235 12240) :url "https://github.com/alvarogonzalezsotillo/region-occurrences-highlighter") (region-state :source "MELPA" :recipe (:package "region-state" :fetcher github :repo "xuchunyang/region-state.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show the number of chars/lines or rows/columns in the region" :date (23558 60112) :url "https://github.com/xuchunyang/region-state.el") (register-channel :source "MELPA" :recipe (:package "register-channel" :fetcher github :repo "YangZhao11/register-channel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump around fast using registers" :date (24583 18512) :url "https://github.com/YangZhao11/register-channel") (register-quicknav :source "MELPA" :recipe (:package "register-quicknav" :fetcher git :url "https://schlomp.space/tastytea/register-quicknav.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly jump to next/previous register" :date (24265 36560) :url "https://schlomp.space/tastytea/register-quicknav.git") (rego-mode :source "MELPA" :recipe (:package "rego-mode" :repo "psibi/rego-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for rego language" :date (24479 8656) :url "https://github.com/psibi/rego-mode") (regswap :source "MELPA" :recipe (:package "regswap" :fetcher github :repo "skitov/regswap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functionality for swapping two regions" :date (26203 35792) :url "https://github.com/skitov/regswap") (related :source "MELPA" :recipe (:package "related" :fetcher github :repo "julien-montmartin/related" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch back and forth between similarly named buffers" :date (23706 37584) :url "https://github.com/julien-montmartin/related") (related-files :source "MELPA" :recipe (:package "related-files" :fetcher github :repo "DamienCassou/related-files" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily find files related to the current one" :date (25843 41552) :url "https://github.com/DamienCassou/related-files") (remark-mode :source "MELPA" :recipe (:package "remark-mode" :fetcher github :repo "torgeir/remark-mode.el" :files (:defaults "remark.html" "server.js")) :description "Major mode for the remark slideshow tool" :date (25469 14416) :url "https://github.com/torgeir/remark-mode.el") (remember-last-theme :source "MELPA" :recipe (:package "remember-last-theme" :repo "anler/remember-last-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Remember the last used theme between sessions" :date (22854 59856) :url "https://github.com/anler/remember-last-theme") (remind-bindings :source "MELPA" :recipe (:package "remind-bindings" :fetcher gitlab :repo "mtekman/remind-bindings.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reminders for your init bindings" :date (24381 37584) :url "https://gitlab.com/mtekman/remind-bindings.el") (renpy :source "MELPA" :recipe (:package "renpy" :fetcher github :repo "Reagankm/renpy-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Silly walks for Renpy" :date (24284 976) :url "https://github.com/Reagankm/renpy-mode") (repeat-help :source "MELPA" :recipe (:package "repeat-help" :fetcher github :repo "karthink/repeat-help" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display keybindings for repeat-mode" :date (25543 3152) :url "https://github.com/karthink/repeat-help") (repeatable-motion :source "MELPA" :recipe (:package "repeatable-motion" :repo "willghatch/emacs-repeatable-motion" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make repeatable versions of motions" :date (22856 15184) :url "https://github.com/willghatch/emacs-repeatable-motion") (repeater :source "MELPA" :recipe (:package "repeater" :fetcher github :repo "xuchunyang/repeater" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Repeat recent repeated commands" :date (23254 24656) :url "https://github.com/xuchunyang/repeater") (repl-driven-development :source "MELPA" :recipe (:package "repl-driven-development" :fetcher github :repo "alhassy/repl-driven-development" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send arbitrary code to a REPL in the background" :date (25950 27600) :url "https://github.com/alhassy/repl-driven-development") (repl-toggle :source "MELPA" :recipe (:package "repl-toggle" :fetcher sourcehut :repo "tomterl/repl-toggle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Switch to/from repl buffer for current major-mode" :date (25384 55376) :url "https://git.sr.ht/~tomterl/repl-toggle") (replace-from-region :source "MELPA" :recipe (:package "replace-from-region" :repo "rubikitch/replace-from-region" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace commands whose query is from region" :date (26073 1872) :url "https://github.com/rubikitch/replace-from-region") (replace-pairs :source "MELPA" :recipe (:package "replace-pairs" :repo "davidshepherd7/replace-pairs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query-replace pairs of things" :date (22198 24272) :url "https://github.com/davidshepherd7/replace-pairs") (replace-symbol :source "MELPA" :recipe (:package "replace-symbol" :repo "bmastenbrook/replace-symbol-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rename symbols in expressions or buffers" :date (22331 34384) :url "https://github.com/bmastenbrook/replace-symbol-el") (replace-with-inflections :source "MELPA" :recipe (:package "replace-with-inflections" :repo "knu/replace-with-inflections.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Inflection aware `query-replace'" :date (26029 34256) :url "https://github.com/knu/replace-with-inflections.el") (repo :source "MELPA" :recipe (:package "repo" :fetcher github :repo "snogge/repo-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running repo from Emacs" :date (26153 29392) :url "https://github.com/snogge/repo-el") (req-package :source "MELPA" :recipe (:package "req-package" :fetcher github :repo "emacsorphanage/req-package" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A use-package wrapper for package runtime dependencies management" :date (23317 43088) :url "https://github.com/emacsorphanage/req-package") (request :source "MELPA" :recipe (:package "request" :repo "tkf/emacs-request" :fetcher github :files ("request.el")) :description "Compatible layer for URL request" :date (25554 59856) :url "https://github.com/tkf/emacs-request") (request-deferred :source "MELPA" :recipe (:package "request-deferred" :repo "tkf/emacs-request" :fetcher github :files ("request-deferred.el")) :description "Wrap request.el by deferred" :date (25255 42320) :url "https://github.com/tkf/emacs-request") (requirejs :source "MELPA" :recipe (:package "requirejs" :fetcher github :repo "joeheyming/requirejs-emacs" :files (:defaults "snippets")) :description "Requirejs import manipulation and source traversal" :date (22112 44368) :url "https://github.com/joeheyming/requirejs-emacs") (requirejs-mode :source "MELPA" :recipe (:package "requirejs-mode" :fetcher github :repo "moricard/requirejs-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved AMD module management" :date (20765 16960) :url "https://github.com/moricard/requirejs-mode") (rescript-mode :source "MELPA" :recipe (:package "rescript-mode" :fetcher github :repo "jjlee/rescript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing ReScript" :date (26095 28880) :url "https://github.com/jjlee/rescript-mode") (resize-window :source "MELPA" :recipe (:package "resize-window" :fetcher github :repo "dpsutton/resize-window" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily resize windows" :date (23456 5584) :url "https://github.com/dpsutton/resize-window") (restart-emacs :source "MELPA" :recipe (:package "restart-emacs" :fetcher github :repo "iqbalansari/restart-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Restart emacs from within emacs" :date (24512 5968) :url "https://github.com/iqbalansari/restart-emacs") (restclient :source "MELPA" :recipe (:package "restclient" :repo "pashky/restclient.el" :fetcher github :files ("restclient.el")) :description "An interactive HTTP client for Emacs" :date (25892 27088) :url "https://github.com/pashky/restclient.el") (restclient-helm :source "MELPA" :recipe (:package "restclient-helm" :repo "pashky/restclient.el" :fetcher github :files ("restclient-helm.el")) :description "Helm interface for restclient.el" :date (22727 2128) :url "https://github.com/pashky/restclient.el") (restclient-jq :source "MELPA" :recipe (:package "restclient-jq" :repo "pashky/restclient.el" :fetcher github :files ("restclient-jq.el")) :description "Support for setting restclient vars from jq expressions" :date (25191 3024) :url "https://github.com/pashky/restclient.el") (restclient-test :source "MELPA" :recipe (:package "restclient-test" :fetcher github :repo "simenheg/restclient-test.el" :files ("restclient-test.el")) :description "Run tests with restclient.el" :date (26050 40400) :url "https://github.com/simenheg/restclient-test.el") (retraction-viewer :source "MELPA" :recipe (:package "retraction-viewer" :fetcher sourcehut :repo "swflint/retraction-viewer" :files ("retraction-viewer.el")) :description "View retraction information for current citation" :date (26171 59344) :url "https://git.sr.ht/~swflint/retraction-viewer") (retraction-viewer-section :source "MELPA" :recipe (:package "retraction-viewer-section" :fetcher sourcehut :repo "swflint/retraction-viewer" :files ("retraction-viewer-section.el")) :description "Show retraction information in the universal-sidecar" :date (26171 59344) :url "https://git.sr.ht/~swflint/retraction-viewer") (retrie :source "MELPA" :recipe (:package "retrie" :fetcher github :repo "Ailrun/emacs-retrie" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Refactoring Haskell code with retrie" :date (24258 63312) :url "https://github.com/Ailrun/emacs-retrie") (revbufs :source "MELPA" :recipe (:package "revbufs" :repo "tychoish/revbufs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reverts all out-of-date buffers safely" :date (24405 19920) :url "https://github.com/tychoish/revbufs") (reveal-in-folder :source "MELPA" :recipe (:package "reveal-in-folder" :repo "jcs-elpa/reveal-in-folder" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reveal current file/directory in folder" :date (26075 43600) :url "https://github.com/jcs-elpa/reveal-in-folder") (reveal-in-osx-finder :source "MELPA" :recipe (:package "reveal-in-osx-finder" :repo "kaz-yos/reveal-in-osx-finder" :fetcher github :old-names (reveal-in-finder) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reveal file associated with buffer in OS X Finder" :date (21949 13136) :url "https://github.com/kaz-yos/reveal-in-osx-finder") (reverse-im :source "MELPA" :recipe (:package "reverse-im" :repo "a13/reverse-im.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reverse mapping for non-default system layouts" :date (26301 6864) :url "https://github.com/a13/reverse-im.el") (reverse-theme :source "MELPA" :recipe (:package "reverse-theme" :fetcher github :repo "emacsorphanage/reverse-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reverse theme for Emacs" :date (21632 52048) :url "https://github.com/emacsorphanage/reverse-theme") (reverso :source "MELPA" :recipe (:package "reverso" :repo "SqrtMinusOne/reverso.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Translation, grammar checking, context search" :date (26017 43088) :url "https://github.com/SqrtMinusOne/reverso.el") (revert-buffer-all :source "MELPA" :recipe (:package "revert-buffer-all" :fetcher codeberg :repo "ideasman42/emacs-revert-buffer-all" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Revert all open buffers" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-revert-buffer-all") (review-mode :source "MELPA" :recipe (:package "review-mode" :fetcher github :repo "kmuto/review-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for ReVIEW" :date (25340 1360) :url "https://github.com/kmuto/review-el") (rewriting-pcase :source "MELPA" :recipe (:package "rewriting-pcase" :repo "owinebar/emacs-rewriting-pcase" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for rewriting sexps in source code" :date (25663 1232) :url "https://github.com/owinebar/emacs-rewriting-pcase") (reykjavik-theme :source "MELPA" :recipe (:package "reykjavik-theme" :repo "mswift42/reykjavik-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme with a dark background" :date (24541 6224) :url "https://github.com/mswift42/reykjavik-theme") (rfc-mode :source "MELPA" :recipe (:package "rfc-mode" :fetcher github :repo "galdor/rfc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RFC document browser and viewer" :date (25896 24144) :url "https://github.com/galdor/rfc-mode") (rg :source "MELPA" :recipe (:package "rg" :fetcher github :repo "dajva/rg.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A search tool based on ripgrep" :date (26364 25296) :url "https://github.com/dajva/rg.el") (rgb :source "MELPA" :recipe (:package "rgb" :fetcher gitlab :repo "cwpitts/rgb.el" :files (:defaults (:exclude "el-mock.el" "ert-expectations.el"))) :description "RGB control via OpenRGB" :date (25299 9936) :url "https://gitlab.com/cwpitts/rgb.el") (rhq :source "MELPA" :recipe (:package "rhq" :fetcher github :repo "ROCKTAKEY/rhq" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for rhq" :date (25798 53072) :url "https://github.com/ROCKTAKEY/rhq") (rhtml-mode :source "MELPA" :recipe (:package "rhtml-mode" :repo "eschulte/rhtml" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing RHTML files" :date (20852 17728) :url "https://github.com/eschulte/rhtml") (rib-mode :source "MELPA" :recipe (:package "rib-mode" :fetcher github :repo "blezek/rib-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RenderMan® Interface Bytestream (RIB) Major Mode" :date (22903 45392) :url "https://github.com/blezek/rib-mode") (rich-minority :source "MELPA" :recipe (:package "rich-minority" :repo "Malabarba/rich-minority" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Clean-up and Beautify the list of minor-modes" :date (26353 54992) :url "https://github.com/Malabarba/rich-minority") (ride-mode :source "MELPA" :recipe (:package "ride-mode" :fetcher codeberg :repo "deadblackclover/ride-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing RIDE language" :date (26276 3664) :url "https://codeberg.org/deadblackclover/ride-mode") (right-click-context :source "MELPA" :recipe (:package "right-click-context" :fetcher github :repo "zonuexe/right-click-context" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Right Click Context menu" :date (24740 10960) :url "https://github.com/zonuexe/right-click-context") (rigid-tabs :source "MELPA" :recipe (:package "rigid-tabs" :repo "wavexx/rigid-tabs.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fix TAB alignment in diff buffers" :date (25846 17744) :url "https://gitlab.com/wavexx/rigid-tabs.el") (rii :source "MELPA" :recipe (:package "rii" :repo "ROCKTAKEY/rii" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reversible input interface for multiple input" :date (24657 7248) :url "https://github.com/ROCKTAKEY/rii") (rime :source "MELPA" :recipe (:package "rime" :repo "DogLooksGood/emacs-rime" :files (:defaults "lib.c" "Makefile") :fetcher github) :description "Rime input method" :date (26405 16720) :url "https://github.com/DogLooksGood/emacs-rime") (rimero-theme :source "MELPA" :recipe (:package "rimero-theme" :repo "yveszoundi/emacs-rimero-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme with a dark background suitable for UI and terminal usage" :date (23433 44112) :url "https://github.com/yveszoundi/emacs-rimero-theme") (rinari :source "MELPA" :recipe (:package "rinari" :repo "eschulte/rinari" :fetcher github :files ("rinari.el")) :description "Rinari Is Not A Rails IDE" :date (21917 36688) :url "https://github.com/eschulte/rinari") (ring-mode :source "MELPA" :recipe (:package "ring-mode" :repo "thechampagne/ring-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Ring programming language" :date (25512 47568) :url "https://github.com/thechampagne/ring-mode") (rings :source "MELPA" :recipe (:package "rings" :fetcher github :repo "konr/rings" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Buffer rings. Like tabs, but better" :date (22348 43472) :url "https://github.com/konr/rings") (ripgrep :source "MELPA" :recipe (:package "ripgrep" :repo "nlamirault/ripgrep.el" :fetcher github :files ("ripgrep.el")) :description "Front-end for ripgrep, a command line search tool" :date (25222 45008) :url "https://github.com/nlamirault/ripgrep.el") (riscv-mode :source "MELPA" :recipe (:package "riscv-mode" :fetcher github :repo "AdamNiederer/riscv-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for RISC V assembly" :date (25379 37456) :url "https://github.com/AdamNiederer/riscv-mode") (rivet-mode :source "MELPA" :recipe (:package "rivet-mode" :fetcher gitlab :repo "thornjad/rivet-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for editing Apache Rivet files" :date (24452 50128) :url "https://gitlab.com/thornjad/rivet-mode") (rjsx-mode :source "MELPA" :recipe (:package "rjsx-mode" :fetcher github :repo "felipeochoa/rjsx-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Real support for JSX" :date (24146 59344) :url "https://github.com/felipeochoa/rjsx-mode") (rmsbolt :source "MELPA" :recipe (:package "rmsbolt" :files (:defaults "starters") :fetcher gitlab :repo "jgkamat/rmsbolt") :description "A compiler output viewer" :date (26401 19664) :url "https://gitlab.com/jgkamat/rmsbolt") (robe :source "MELPA" :recipe (:package "robe" :repo "dgutov/robe" :fetcher github :files ("*robe.el" "lib")) :description "Code navigation, documentation lookup and completion for Ruby" :date (26171 59344) :url "https://github.com/dgutov/robe") (robot-log :source "MELPA" :recipe (:package "robot-log" :fetcher sourcehut :repo "apteryx/emacs-robot-log" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for viewing RobotFramework debug log files" :date (25301 51664) :url "https://git.sr.ht/~apteryx/emacs-robot-log") (robot-mode :source "MELPA" :recipe (:package "robot-mode" :fetcher github :repo "kopoli/robot-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for Robot Framework files" :date (26268 9552) :url "https://github.com/kopoli/robot-mode") (robots-txt-mode :source "MELPA" :recipe (:package "robots-txt-mode" :fetcher github :repo "emacs-php/robots-txt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing robots.txt" :date (23888 33232) :url "https://github.com/emacs-php/robots-txt-mode") (roc-ts-mode :source "MELPA" :recipe (:package "roc-ts-mode" :fetcher gitlab :repo "tad-lispy/roc-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Roc programming language mode" :date (26307 45648) :url "https://gitlab.com/tad-lispy/roc-ts-mode") (roguel-ike :source "MELPA" :recipe (:package "roguel-ike" :fetcher github :repo "stevenremot/roguel-ike" :files ("*.el" "roguel-ike" "roguel-ike-lib")) :description "A coffee-break roguelike" :date (26353 54992) :url "https://github.com/stevenremot/roguel-ike") (rom-party :source "MELPA" :recipe (:package "rom-party" :repo "LaurenceWarne/rom-party.el" :fetcher github :files (:defaults "index.extmap.gz")) :description "Rendition of jklm.fun's \"Bomb Party\" game" :date (26320 57680) :url "https://github.com/LaurenceWarne/rom-party.el") (ron-mode :source "MELPA" :recipe (:package "ron-mode" :fetcher codeberg :repo "Hutzdog/ron-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rusty Object Notation mode" :date (24394 49616) :url "https://codeberg.org/Hutzdog/ron-mode") (rope-read-mode :source "MELPA" :recipe (:package "rope-read-mode" :fetcher gitlab :repo "marcowahl/rope-read-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rearrange lines to read text smoothly" :date (25034 10576) :url "https://gitlab.com/marcowahl/rope-read-mode") (ropgadget :source "MELPA" :recipe (:package "ropgadget" :fetcher github :repo "Dragoncraft89/ropgadget-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display and filter ROP gadgets of a binary" :date (25528 35792) :url "https://github.com/Dragoncraft89/ropgadget-el") (ros :source "MELPA" :recipe (:package "ros" :repo "mbeutelspacher/ros.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Package to write code for ROS systems" :date (26322 13008) :url "https://github.com/mbeutelspacher/ros.el") (rotate :source "MELPA" :recipe (:package "rotate" :fetcher github :repo "daichirata/emacs-rotate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rotate the layout of emacs" :date (24591 12624) :url "https://github.com/daichirata/emacs-rotate") (roy-mode :source "MELPA" :recipe (:package "roy-mode" :repo "folone/roy-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Roy major mode" :date (20674 19136) :url "https://github.com/folone/roy-mode") (rpm-spec-mode :source "MELPA" :recipe (:package "rpm-spec-mode" :fetcher github :repo "stigbjorlykke/rpm-spec-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "RPM spec file editing commands for Emacs/XEmacs" :date (22401 26064) :url "https://github.com/stigbjorlykke/rpm-spec-mode") (rpn-calc :source "MELPA" :recipe (:package "rpn-calc" :fetcher github :repo "zk-phi/rpn-calc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick RPN calculator for hackers" :date (24642 39888) :url "https://github.com/zk-phi/rpn-calc") (rspec-mode :source "MELPA" :recipe (:package "rspec-mode" :repo "pezra/rspec-mode" :fetcher github :files ("rspec-mode.el" "snippets")) :description "Enhance ruby-mode for RSpec" :date (25823 56272) :url "https://github.com/pezra/rspec-mode") (rsync-mode :source "MELPA" :recipe (:package "rsync-mode" :repo "r-zip/rsync-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rsync projects to remote machines" :date (24891 51024) :url "https://github.com/r-zip/rsync-mode") (rtags :source "MELPA" :recipe (:package "rtags" :repo "Andersbakken/rtags" :fetcher github :files ("src/rtags.el")) :description "A front-end for rtags" :date (25341 22224) :url "https://github.com/Andersbakken/rtags") (rtags-xref :source "MELPA" :recipe (:package "rtags-xref" :fetcher github :repo "Andersbakken/rtags" :version-regexp "use-header-instead" :files ("src/rtags-xref.el")) :description "RTags backend for xref.el" :date (24823 14672) :url "https://github.com/Andersbakken/rtags") (rtm :source "MELPA" :recipe (:package "rtm" :repo "pmiddend/emacs-rtm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elisp implementation of the Remember The Milk API" :date (23228 592) :url "https://github.com/pmiddend/emacs-rtm") (rubik :source "MELPA" :recipe (:package "rubik" :fetcher github :repo "Kurvivor19/rubik-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rubik's Cube" :date (23181 56784) :url "https://github.com/Kurvivor19/rubik-mode") (rubocop :source "MELPA" :recipe (:package "rubocop" :repo "rubocop/rubocop-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs interface for RuboCop" :date (24646 36944) :url "https://github.com/rubocop/rubocop-emacs") (rubocopfmt :source "MELPA" :recipe (:package "rubocopfmt" :fetcher github :repo "jimeh/rubocopfmt.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor-mode to format Ruby code with RuboCop on save" :date (25565 30160) :url "https://github.com/jimeh/rubocopfmt.el") (ruby-compilation :source "MELPA" :recipe (:package "ruby-compilation" :repo "eschulte/rinari" :fetcher github :files ("util/ruby-compilation.el")) :description "Run a ruby process in a compilation buffer" :date (21917 36688) :url "https://github.com/eschulte/rinari") (ruby-electric :source "MELPA" :recipe (:package "ruby-electric" :fetcher github :repo "ruby/elisp-ruby-electric" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for electrically editing ruby code" :date (24190 26960) :url "https://github.com/ruby/elisp-ruby-electric") (ruby-end :source "MELPA" :recipe (:package "ruby-end" :repo "rejeep/ruby-end.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic insertion of end blocks for Ruby" :date (25566 51024) :url "https://github.com/rejeep/ruby-end.el") (ruby-extra-highlight :source "MELPA" :recipe (:package "ruby-extra-highlight" :repo "Lindydancer/ruby-extra-highlight" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight Ruby parameters" :date (23039 31696) :url "https://github.com/Lindydancer/ruby-extra-highlight") (ruby-factory :source "MELPA" :recipe (:package "ruby-factory" :fetcher github :repo "sshaw/ruby-factory-mode" :files (:defaults "snippets")) :description "Minor mode for Ruby test object generation libraries" :date (22150 59600) :url "https://github.com/sshaw/ruby-factory-mode") (ruby-hash-syntax :source "MELPA" :recipe (:package "ruby-hash-syntax" :fetcher github :repo "purcell/ruby-hash-syntax" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggle ruby hash syntax between => and 1.9+ styles" :date (24564 54096) :url "https://github.com/purcell/ruby-hash-syntax") (ruby-interpolation :source "MELPA" :recipe (:package "ruby-interpolation" :repo "leoc/ruby-interpolation.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ruby string interpolation helpers" :date (21121 14144) :url "https://github.com/leoc/ruby-interpolation.el") (ruby-json-to-hash :source "MELPA" :recipe (:package "ruby-json-to-hash" :repo "otavioschwanck/ruby-json-to-hash.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert JSON to Hash and play with the keys" :date (24968 15952) :url "https://github.com/otavioschwanck/ruby-json-to-hash.el") (ruby-refactor :source "MELPA" :recipe (:package "ruby-refactor" :fetcher github :repo "ajvargo/ruby-refactor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode which presents various Ruby refactoring helpers" :date (22207 39248) :url "https://github.com/ajvargo/ruby-refactor") (ruby-test-mode :source "MELPA" :recipe (:package "ruby-test-mode" :fetcher github :repo "ruby-test-mode/ruby-test-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Behaviour and Test Driven" :date (24604 24656) :url "https://github.com/ruby-test-mode/ruby-test-mode") (ruby-tools :source "MELPA" :recipe (:package "ruby-tools" :repo "rejeep/ruby-tools.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Collection of handy functions for ruby-mode" :date (22119 17616) :url "https://github.com/rejeep/ruby-tools.el") (ruff-format :source "MELPA" :recipe (:package "ruff-format" :fetcher github :repo "scop/emacs-ruff-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ruff format Python source" :date (25942 33488) :url "https://github.com/scop/emacs-ruff-format") (rufo :source "MELPA" :recipe (:package "rufo" :repo "danielma/rufo.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use rufo to automatically format ruby files" :date (22893 9552) :url "https://github.com/danielma/rufo.el") (ruled-switch-buffer :source "MELPA" :recipe (:package "ruled-switch-buffer" :repo "kzkn/ruled-switch-buffer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rule based buffer switching" :date (25003 54992) :url "https://github.com/kzkn/ruled-switch-buffer") (rum-mode :source "MELPA" :recipe (:package "rum-mode" :repo "rumlang/rum-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Rum programming language" :date (23147 38608) :url "https://github.com/rumlang/rum-mode") (run-command :source "MELPA" :recipe (:package "run-command" :fetcher github :repo "bard/emacs-run-command" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run an external command from a context-dependent list" :date (25619 33616) :url "https://github.com/bard/emacs-run-command") (run-command-recipes :source "MELPA" :recipe (:package "run-command-recipes" :repo "semenInRussia/emacs-run-command-recipes" :fetcher github :files (:defaults "run-command-recipes-template.txt")) :description "Start pack of recipes to `run-command'" :date (26251 464) :url "https://github.com/semenInRussia/emacs-run-command-recipes") (run-stuff :source "MELPA" :recipe (:package "run-stuff" :fetcher codeberg :repo "ideasman42/emacs-run-stuff" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Context based command execution" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-run-stuff") (runner :source "MELPA" :recipe (:package "runner" :fetcher github :repo "thamer/runner" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved \"open with\" suggestions for dired" :date (22339 28496) :url "https://github.com/thamer/runner") (runtests :source "MELPA" :recipe (:package "runtests" :fetcher github :repo "sunesimonsen/emacs-runtests" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run unit tests from Emacs" :date (21955 51920) :url "https://github.com/sunesimonsen/emacs-runtests") (russian-holidays :source "MELPA" :recipe (:package "russian-holidays" :repo "grafov/russian-holidays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Russian holidays for the calendar" :date (22642 43088) :url "https://github.com/grafov/russian-holidays") (russian-techwriter :source "MELPA" :recipe (:package "russian-techwriter" :repo "dunmaksim/emacs-russian-techwriter-input-method" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Input methods for Russian technical writers" :date (25516 44624) :url "https://github.com/dunmaksim/emacs-russian-techwriter-input-method") (rust-auto-use :source "MELPA" :recipe (:package "rust-auto-use" :repo "vmalloc/rust-auto-use.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility to automatically insert Rust use statements" :date (24285 21840) :url "https://github.com/vmalloc/rust-auto-use.el") (rust-mode :source "MELPA" :recipe (:package "rust-mode" :repo "rust-lang/rust-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major-mode for editing Rust source code" :date (26326 10064) :url "https://github.com/rust-lang/rust-mode") (rust-playground :source "MELPA" :recipe (:package "rust-playground" :repo "grafov/rust-playground" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Local Rust playground for short code snippets" :date (24095 32080) :url "https://github.com/grafov/rust-playground") (rustic :source "MELPA" :recipe (:package "rustic" :repo "emacs-rustic/rustic" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rust development environment" :date (26394 46416) :url "https://github.com/emacs-rustic/rustic") (rutils :source "MELPA" :recipe (:package "rutils" :repo "ShuguangSun/rutils.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "R utilities with transient" :date (26397 22608) :url "https://github.com/ShuguangSun/rutils.el") (rvm :source "MELPA" :recipe (:package "rvm" :repo "senny/rvm.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs integration for rvm" :date (25371 43344) :url "https://github.com/senny/rvm.el") (ryo-modal :source "MELPA" :recipe (:package "ryo-modal" :repo "Kungsgeten/ryo-modal" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Roll your own modal mode" :date (26307 45648) :url "https://github.com/Kungsgeten/ryo-modal") (s :source "MELPA" :recipe (:package "s" :fetcher github :repo "magnars/s.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The long lost Emacs string manipulation library" :date (25361 7504) :url "https://github.com/magnars/s.el") (s-buffer :source "MELPA" :recipe (:package "s-buffer" :fetcher github :repo "nicferrier/emacs-s-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "S operations for buffers" :date (20910 18240) :url "https://github.com/nicferrier/emacs-s-buffer") (s12cpuv2-mode :source "MELPA" :recipe (:package "s12cpuv2-mode" :fetcher github :repo "AdamNiederer/s12cpuv2-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for S12CPUV2 assembly" :date (23007 55248) :url "https://github.com/AdamNiederer/s12cpuv2-mode") (s3ed :source "MELPA" :recipe (:package "s3ed" :fetcher github :repo "mattusifer/s3ed" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tramp-like access to s3" :date (24434 20176) :url "https://github.com/mattusifer/s3ed") (sackspace :source "MELPA" :recipe (:package "sackspace" :repo "cofi/sackspace.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A better backspace" :date (20968 18752) :url "https://github.com/cofi/sackspace.el") (sage-shell-mode :source "MELPA" :recipe (:package "sage-shell-mode" :fetcher github :repo "sagemath/sage-shell-mode" :files (:defaults "*.py" (:exclude "*test.py"))) :description "A front-end for Sage Math" :date (26165 20560) :url "https://github.com/sagemath/sage-shell-mode") (sailfish-scratchbox :source "MELPA" :recipe (:package "sailfish-scratchbox" :repo "iddm/sailfish-scratchbox.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sailfish OS scratchbox inside the emacs" :date (23073 49872) :url "https://github.com/iddm/sailfish-scratchbox.el") (sakura-theme :source "MELPA" :recipe (:package "sakura-theme" :fetcher github :repo "emacsfodder/emacs-theme-sakura" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Filled with cherry blossoms" :date (26349 57936) :url "https://github.com/emacsfodder/emacs-theme-sakura") (salesforce-utils :source "MELPA" :recipe (:package "salesforce-utils" :fetcher github :repo "grimnebulin/emacs-salesforce" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple utilities for Salesforce" :date (22447 35408) :url "https://github.com/grimnebulin/emacs-salesforce") (salt-mode :source "MELPA" :recipe (:package "salt-mode" :repo "glynnforrest/salt-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Salt States" :date (24128 29392) :url "https://github.com/glynnforrest/salt-mode") (samskritam :source "MELPA" :recipe (:package "samskritam" :fetcher github :repo "thapakrish/samskritam.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show samskrit word definitions and translations" :date (26270 51280) :url "https://github.com/thapakrish/samskritam.el") (sas-py :source "MELPA" :recipe (:package "sas-py" :repo "ShuguangSun/sas-py" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SAS with SASPy" :date (25560 12240) :url "https://github.com/ShuguangSun/sas-py") (sass-mode :source "MELPA" :recipe (:package "sass-mode" :repo "nex3/sass-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Sass files" :date (23754 2256) :url "https://github.com/nex3/sass-mode") (satysfi-ts-mode :source "MELPA" :recipe (:package "satysfi-ts-mode" :repo "Kyure-A/satysfi-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A tree-sitter based major-mode for SATySFi" :date (26104 43856) :url "https://github.com/Kyure-A/satysfi-ts-mode") (sauron :source "MELPA" :recipe (:package "sauron" :repo "djcb/sauron" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track (erc/org/dbus/...) events and react to them" :date (24455 26320) :url "https://github.com/djcb/sauron") (save-load-path :source "MELPA" :recipe (:package "save-load-path" :repo "rubikitch/save-load-path" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save load-path and reuse it to test" :date (21234 38976) :url "https://github.com/rubikitch/save-load-path") (save-visited-files :source "MELPA" :recipe (:package "save-visited-files" :fetcher github :repo "nflath/save-visited-files" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save opened files across sessions" :date (24131 5584) :url "https://github.com/nflath/save-visited-files") (savekill :source "MELPA" :recipe (:package "savekill" :repo "rubikitch/savekill" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save kill ring to disk" :date (21328 12992) :url "https://github.com/rubikitch/savekill") (saveplace-pdf-view :source "MELPA" :recipe (:package "saveplace-pdf-view" :fetcher github :repo "nicolaisingh/saveplace-pdf-view" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Save place in pdf-view buffers" :date (26302 27728) :url "https://github.com/nicolaisingh/saveplace-pdf-view") (say-what-im-doing :source "MELPA" :recipe (:package "say-what-im-doing" :repo "Benaiah/say-what-im-doing" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dictate what you're doing with text to speech" :date (22396 8144) :url "https://github.com/Benaiah/say-what-im-doing") (sayid :source "MELPA" :recipe (:package "sayid" :fetcher github :repo "clojure-emacs/sayid" :files ("src/el/*.el")) :description "Sayid nREPL middleware client" :date (25039 28496) :url "https://github.com/clojure-emacs/sayid") (sbt-mode :source "MELPA" :recipe (:package "sbt-mode" :fetcher github :repo "hvesalai/emacs-sbt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive support for sbt projects" :date (26125 50000) :url "https://github.com/hvesalai/emacs-sbt-mode") (scad-mode :source "MELPA" :recipe (:package "scad-mode" :repo "openscad/emacs-scad-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing OpenSCAD code" :date (26356 31184) :url "https://github.com/openscad/emacs-scad-mode") (scad-preview :source "MELPA" :recipe (:package "scad-preview" :fetcher github :repo "zk-phi/scad-preview" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview SCAD models in real-time within Emacs" :date (25013 4432) :url "https://github.com/zk-phi/scad-preview") (scala-mode :source "MELPA" :recipe (:package "scala-mode" :fetcher github :repo "hvesalai/emacs-scala-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Scala" :date (26278 45392) :url "https://github.com/hvesalai/emacs-scala-mode") (scala-repl :source "MELPA" :recipe (:package "scala-repl" :fetcher github :repo "sheepduke/scala-repl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scala REPL Mode" :date (26156 5584) :url "https://github.com/sheepduke/scala-repl.el") (scala-ts-mode :source "MELPA" :recipe (:package "scala-ts-mode" :fetcher github :repo "KaranAhlawat/scala-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An tree-sitter based major-mode for Scala" :date (26397 22608) :url "https://github.com/KaranAhlawat/scala-ts-mode") (scf-mode :source "MELPA" :recipe (:package "scf-mode" :repo "lewang/scf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shorten file-names in compilation type buffers" :date (22096 56144) :url "https://github.com/lewang/scf-mode") (scheme-complete :source "MELPA" :recipe (:package "scheme-complete" :fetcher github :repo "ashinn/scheme-complete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart auto completion for Scheme in Emacs" :date (24492 20688) :url "https://github.com/ashinn/scheme-complete") (scholar-import :source "MELPA" :recipe (:package "scholar-import" :fetcher github :repo "teeann/scholar-import" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import Bibtex & PDF from Google Scholar" :date (25653 51792) :url "https://github.com/teeann/scholar-import") (schrute :source "MELPA" :recipe (:package "schrute" :fetcher git :url "https://bitbucket.org/shackra/dwight-k.-schrute" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Help you remember there is a better way to do something" :date (22816 44624) :url "https://bitbucket.org/shackra/dwight-k.-schrute") (scihub :source "MELPA" :recipe (:package "scihub" :fetcher github :repo "emacs-pe/scihub.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sci-Hub integration" :date (25375 40400) :url "https://github.com/emacs-pe/scihub.el") (sclang-extensions :source "MELPA" :recipe (:package "sclang-extensions" :fetcher github :repo "chrisbarrett/sclang-extensions" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for the SuperCollider Emacs mode" :date (22319 43216) :url "https://github.com/chrisbarrett/sclang-extensions") (sclang-snippets :source "MELPA" :recipe (:package "sclang-snippets" :fetcher github :repo "ptrv/sclang-snippets" :files ("*.el" "snippets")) :description "Snippets for the SuperCollider Emacs mode" :date (20879 62656) :url "https://github.com/ptrv/sclang-snippets") (scopeline :source "MELPA" :recipe (:package "scopeline" :fetcher github :repo "meain/scopeline.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show scope info of blocks in buffer at end of scope" :date (26359 7376) :url "https://github.com/meain/scopeline.el") (scpaste :source "MELPA" :recipe (:package "scpaste" :fetcher sourcehut :repo "technomancy/scpaste" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste to the web via scp" :date (25753 64592) :url "https://git.sr.ht/~technomancy/scpaste") (scratch :source "MELPA" :recipe (:package "scratch" :fetcher codeberg :repo "emacs-weirdware/scratch" :files ("scratch.el")) :description "Mode-specific scratch buffers" :date (25140 62160) :url "https://codeberg.org/emacs-weirdware/scratch") (scratch-comment :source "MELPA" :recipe (:package "scratch-comment" :fetcher github :repo "conao3/scratch-comment.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert Elisp result as comment in scratch buffer" :date (24371 1744) :url "https://github.com/conao3/scratch-comment.el") (scratch-ext :source "MELPA" :recipe (:package "scratch-ext" :fetcher github :repo "kyanagi/scratch-ext-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for *scratch*" :date (25259 39376) :url "https://github.com/kyanagi/scratch-ext-el") (scratch-log :source "MELPA" :recipe (:package "scratch-log" :fetcher github :repo "mori-dev/scratch-log" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utility for *scratch* buffer" :date (21606 27984) :url "https://github.com/mori-dev/scratch-log") (scratch-message :source "MELPA" :recipe (:package "scratch-message" :fetcher github :repo "thisirs/scratch-message" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Changing message in your scratch buffer" :date (25090 55760) :url "https://github.com/thisirs/scratch-message") (scratch-palette :source "MELPA" :recipe (:package "scratch-palette" :fetcher github :repo "zk-phi/scratch-palette" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make scratch buffer for each files" :date (26181 8784) :url "https://github.com/zk-phi/scratch-palette") (scratch-pop :source "MELPA" :recipe (:package "scratch-pop" :fetcher github :repo "zk-phi/scratch-pop" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generate, popup (& optionally backup) scratch buffer(s)" :date (24409 16976) :url "https://github.com/zk-phi/scratch-pop") (scratches :source "MELPA" :recipe (:package "scratches" :repo "victorteokw/scratches" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multiple scratches in any language" :date (22034 58576) :url "https://github.com/victorteokw/scratches") (scribble-mode :source "MELPA" :recipe (:package "scribble-mode" :repo "emacs-pe/scribble-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Scribble documents" :date (23929 24656) :url "https://github.com/emacs-pe/scribble-mode") (scroll-on-drag :source "MELPA" :recipe (:package "scroll-on-drag" :fetcher codeberg :repo "ideasman42/emacs-scroll-on-drag" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive scrolling" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-scroll-on-drag") (scroll-on-jump :source "MELPA" :recipe (:package "scroll-on-jump" :fetcher codeberg :repo "ideasman42/emacs-scroll-on-jump" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scroll when jumping to a new point" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-scroll-on-jump") (scrollable-quick-peek :source "MELPA" :recipe (:package "scrollable-quick-peek" :repo "jpablobr/scrollable-quick-peek" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display scrollable overlays" :date (24547 45008) :url "https://github.com/jpablobr/scrollable-quick-peek") (scrollkeeper :source "MELPA" :recipe (:package "scrollkeeper" :fetcher github :repo "alphapapa/scrollkeeper.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom scrolling commands with visual guidelines" :date (23605 3920) :url "https://github.com/alphapapa/scrollkeeper.el") (scrooge :source "MELPA" :recipe (:package "scrooge" :fetcher github :repo "cosmicexplorer/emacs-scrooge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Twitter Scrooge files" :date (23350 40400) :url "https://github.com/cosmicexplorer/emacs-scrooge") (scss-mode :source "MELPA" :recipe (:package "scss-mode" :repo "antonj/scss-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing SCSS files" :date (23142 20688) :url "https://github.com/antonj/scss-mode") (sculpture-themes :source "MELPA" :recipe (:package "sculpture-themes" :fetcher github :repo "precompute/sculpture-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Themes with vivid colors" :date (26152 8528) :url "https://github.com/precompute/sculpture-themes") (sdcv :source "MELPA" :recipe (:package "sdcv" :fetcher git :url "https://repo.or.cz/sdcv.el.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for sdcv (StartDict console version)" :date (25092 11088) :url "https://repo.or.cz/sdcv.el.git") (sdlang-mode :source "MELPA" :recipe (:package "sdlang-mode" :fetcher github :repo "CyberShadow/sdlang-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Simple Declarative Language files" :date (22591 15824) :url "https://github.com/CyberShadow/sdlang-mode") (sdml-mode :source "MELPA" :recipe (:package "sdml-mode" :repo "sdm-lang/emacs-sdml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for SDML" :date (26407 58448) :url "https://github.com/sdm-lang/emacs-sdml-mode") (search-web :source "MELPA" :recipe (:package "search-web" :repo "tomoya/search-web.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Post web search queries using `browse-url'" :date (21760 44240) :url "https://github.com/tomoya/search-web.el") (searcher :source "MELPA" :recipe (:package "searcher" :repo "jcs-elpa/searcher" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Searcher in pure elisp" :date (26001 54864) :url "https://github.com/jcs-elpa/searcher") (searchq :source "MELPA" :recipe (:package "searchq" :fetcher github :repo "tcw165/searchq" :files (:defaults ("images" "images/*.xpm" "images/*.png"))) :description "Framework of queued search tasks using GREP, ACK, AG and more" :date (21984 52176) :url "https://github.com/tcw165/searchq") (secretaria :source "MELPA" :recipe (:package "secretaria" :fetcher gitlab :repo "shackra/secretaria" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A personal assistant based on org-mode" :date (24030 58320) :url "https://gitlab.com/shackra/secretaria") (see-mode :source "MELPA" :recipe (:package "see-mode" :repo "marcelino-m/see-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit string  in a separate buffer" :date (23284 45776) :url "https://github.com/marcelino-m/see-mode") (seeing-is-believing :source "MELPA" :recipe (:package "seeing-is-believing" :repo "jcinnamond/seeing-is-believing" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for running the seeing-is-believing ruby gem" :date (22690 7760) :url "https://github.com/jcinnamond/seeing-is-believing") (seethru :source "MELPA" :recipe (:package "seethru" :fetcher github :repo "Benaiah/seethru" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily change Emacs' transparency" :date (21731 43984) :url "https://github.com/Benaiah/seethru") (sekka :source "MELPA" :recipe (:package "sekka" :repo "kiyoka/sekka" :fetcher github :files ("emacs/sekka.el")) :description "A client for Sekka IME server" :date (22914 15696) :url "https://github.com/kiyoka/sekka") (selcand :source "MELPA" :recipe (:package "selcand" :fetcher github :repo "erjoalgo/selcand" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select a candidate from a tree of hint characters" :date (26160 2640) :url "https://github.com/erjoalgo/selcand") (select-themes :source "MELPA" :recipe (:package "select-themes" :fetcher github :repo "jasonm23/emacs-select-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme selection with completing-read" :date (22216 54224) :url "https://github.com/jasonm23/emacs-select-themes") (selected :source "MELPA" :recipe (:package "selected" :repo "Kungsgeten/selected.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keymap for when region is active" :date (25585 15440) :url "https://github.com/Kungsgeten/selected.el") (selected-window-accent-mode :source "MELPA" :recipe (:package "selected-window-accent-mode" :fetcher github :repo "captainflasmr/selected-window-accent-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Accent Selected Window" :date (26386 52304) :url "https://github.com/captainflasmr/selected-window-accent-mode") (selectric-mode :source "MELPA" :recipe (:package "selectric-mode" :fetcher github :repo "rbanffy/selectric-mode" :files (:defaults "*.wav")) :description "IBM Selectric mode for Emacs" :date (24127 8528) :url "https://github.com/rbanffy/selectric-mode") (selectrum :source "MELPA" :recipe (:package "selectrum" :fetcher github :repo "radian-software/selectrum" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily select item from list" :date (25213 30032) :url "https://github.com/radian-software/selectrum") (selectrum-prescient :source "MELPA" :recipe (:package "selectrum-prescient" :fetcher github :repo "radian-software/prescient.el" :files ("selectrum-prescient.el")) :description "Prescient.el + Selectrum" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (semantic-thrift :source "MELPA" :recipe (:package "semantic-thrift" :fetcher github :repo "jerryxgh/semantic-thrift" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Thrift LALR parser" :date (26140 17360) :url "https://github.com/jerryxgh/semantic-thrift") (semaphore :source "MELPA" :recipe (:package "semaphore" :repo "webnf/semaphore.el" :fetcher github :files ("semaphore.el")) :description "Semaphore based on condition variables" :date (23801 32464) :url "https://github.com/webnf/semaphore.el") (semaphore-promise :source "MELPA" :recipe (:package "semaphore-promise" :repo "webnf/semaphore.el" :fetcher github :files ("semaphore-promise.el")) :description "Semaphore integration with promise" :date (23801 32464) :url "https://github.com/webnf/semaphore.el") (semi :source "MELPA" :recipe (:package "semi" :repo "wanderlust/semi" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A library to provide MIME features" :date (26208 53712) :url "https://github.com/wanderlust/semi") (seml-mode :source "MELPA" :recipe (:package "seml-mode" :fetcher github :repo "conao3/seml-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for SEML, S-Expression Markup Language, file" :date (25760 37840) :url "https://github.com/conao3/seml-mode.el") (sendto :source "MELPA" :recipe (:package "sendto" :fetcher github :repo "lujun9972/sendto.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send the region content to a function" :date (22301 13264) :url "https://github.com/lujun9972/sendto.el") (sensei :source "MELPA" :recipe (:package "sensei" :fetcher github :repo "abailly/sensei" :files ("elisp/sensei.el")) :description "A client for sensei" :date (25235 57040) :url "https://github.com/abailly/sensei") (sensitive :source "MELPA" :recipe (:package "sensitive" :repo "timvisher/sensitive.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dead simple way to load sensitive information" :date (22934 976) :url "https://github.com/timvisher/sensitive.el") (sentence-navigation :source "MELPA" :recipe (:package "sentence-navigation" :fetcher github :repo "noctuid/emacs-sentence-navigation" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Commands to navigate one-spaced sentences" :date (25225 21200) :url "https://github.com/noctuid/emacs-sentence-navigation") (sentex :source "MELPA" :recipe (:package "sentex" :fetcher codeberg :repo "martianh/sentex" :files (:defaults "*.eld")) :description "Regex-based sentence navigation rules" :date (25652 30928) :url "https://codeberg.org/martianh/sentex") (seoul256-theme :source "MELPA" :recipe (:package "seoul256-theme" :fetcher github :repo "anandpiyer/seoul256-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low-contrast color scheme based on Seoul Colors" :date (23276 51664) :url "https://github.com/anandpiyer/seoul256-emacs") (separedit :source "MELPA" :recipe (:package "separedit" :fetcher github :repo "twlz0ne/separedit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit comment/string/docstring/code block in separate buffer" :date (26377 37328) :url "https://github.com/twlz0ne/separedit.el") (sequed :source "MELPA" :recipe (:package "sequed" :fetcher github :repo "brannala/sequed" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for FASTA format DNA alignments" :date (25057 58448) :url "https://github.com/brannala/sequed") (sequences :source "MELPA" :recipe (:package "sequences" :repo "timvisher/sequences.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ports of some Clojure sequence functions" :date (22934 976) :url "https://github.com/timvisher/sequences.el") (sequential-command :source "MELPA" :recipe (:package "sequential-command" :fetcher github :repo "rubikitch/sequential-command" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Many commands into one command" :date (22985 28240) :url "https://github.com/rubikitch/sequential-command") (sequential-yank :source "MELPA" :recipe (:package "sequential-yank" :fetcher github :repo "knu/sequential-yank.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to copy and paste strings sequentially" :date (25954 24656) :url "https://github.com/knu/sequential-yank.el") (seriestracker :source "MELPA" :recipe (:package "seriestracker" :fetcher github :repo "MaximeWack/seriestracker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Series tracker" :date (25826 32464) :url "https://github.com/MaximeWack/seriestracker") (servant :source "MELPA" :recipe (:package "servant" :fetcher github :repo "cask/servant" :files ("*.el" "bin")) :description "ELPA server written in Emacs Lisp" :date (21247 51008) :url "https://github.com/cask/servant") (services :source "MELPA" :recipe (:package "services" :fetcher github :repo "davep/services.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Services database access functions" :date (22912 60368) :url "https://github.com/davep/services.el") (sesman :source "MELPA" :recipe (:package "sesman" :repo "vspinu/sesman" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generic Session Manager" :date (26142 59088) :url "https://github.com/vspinu/sesman") (session :source "MELPA" :recipe (:package "session" :fetcher github :repo "emacsattic/session" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use variables, registers and buffer places across sessions" :date (24704 37456) :url "https://github.com/emacsattic/session") (session-async :source "MELPA" :recipe (:package "session-async" :fetcher codeberg :repo "FelipeLema/session-async.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Asynchronous processing in a forked process session" :date (25953 3792) :url "https://codeberg.org/FelipeLema/session-async.el") (seti-theme :source "MELPA" :recipe (:package "seti-theme" :fetcher github :repo "caisah/seti-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark colored theme, inspired by Seti Atom Theme" :date (23635 25040) :url "https://github.com/caisah/seti-theme") (sexp-diff :source "MELPA" :recipe (:package "sexp-diff" :fetcher github :repo "xuchunyang/sexp-diff.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Diff sexps based on Levenshtein-like edit distance" :date (24171 62544) :url "https://github.com/xuchunyang/sexp-diff.el") (sexp-move :source "MELPA" :recipe (:package "sexp-move" :repo "elzair/sexp-move" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Improved S-Expression Movement" :date (22007 13648) :url "https://gitlab.com/elzair/sexp-move") (sexy-monochrome-theme :source "MELPA" :recipe (:package "sexy-monochrome-theme" :fetcher github :repo "voloyev/sexy-monochrome-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A sexy dark Emacs >= 24 theme for your sexy code" :date (24094 11216) :url "https://github.com/voloyev/sexy-monochrome-theme") (sfz-mode :source "MELPA" :recipe (:package "sfz-mode" :fetcher github :repo "sfztools/emacs-sfz-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for SFZ files" :date (24335 28240) :url "https://github.com/sfztools/emacs-sfz-mode") (shackle :source "MELPA" :recipe (:package "shackle" :fetcher git :url "https://depp.brause.cc/shackle.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enforce rules for popups" :date (26123 8272) :url "https://depp.brause.cc/shackle.git") (shadchen :source "MELPA" :recipe (:package "shadchen" :fetcher github :repo "VincentToups/shadchen-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pattern matching for elisp" :date (21589 18896) :url "https://github.com/VincentToups/shadchen-el") (shader-mode :source "MELPA" :recipe (:package "shader-mode" :fetcher github :repo "midnightSuyama/shader-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for shader" :date (25398 1872) :url "https://github.com/midnightSuyama/shader-mode") (shades-of-purple-theme :source "MELPA" :recipe (:package "shades-of-purple-theme" :fetcher github :repo "arturovm/shades-of-purple-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme with bold shades of purple" :date (25665 42960) :url "https://github.com/arturovm/shades-of-purple-emacs") (shadowenv :source "MELPA" :recipe (:package "shadowenv" :repo "Shopify/shadowenv.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shadowenv integration" :date (24730 61520) :url "https://github.com/Shopify/shadowenv.el") (shakespeare-mode :source "MELPA" :recipe (:package "shakespeare-mode" :fetcher github :repo "CodyReichert/shakespeare-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing Shakespearean templates" :date (23355 58320) :url "https://github.com/CodyReichert/shakespeare-mode") (shampoo :source "MELPA" :recipe (:package "shampoo" :fetcher github :repo "dmatveev/shampoo-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A remote Smalltalk development mode" :date (25706 34384) :url "https://github.com/dmatveev/shampoo-emacs") (shanty-themes :source "MELPA" :recipe (:package "shanty-themes" :fetcher github :repo "qhga/shanty-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The themes for digital workers" :date (25549 41936) :url "https://github.com/qhga/shanty-themes") (share2computer :source "MELPA" :recipe (:package "share2computer" :repo "tumashu/share2computer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp helper of android ShareToComputer" :date (24174 38736) :url "https://github.com/tumashu/share2computer") (sharper :source "MELPA" :recipe (:package "sharper" :repo "sebasmonia/sharper" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dotnet CLI wrapper, using Transient" :date (25557 36048) :url "https://github.com/sebasmonia/sharper") (shell-command-x :source "MELPA" :recipe (:package "shell-command-x" :fetcher github :repo "elizagamedev/shell-command-x.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for shell commands" :date (25978 6992) :url "https://github.com/elizagamedev/shell-command-x.el") (shell-current-directory :source "MELPA" :recipe (:package "shell-current-directory" :fetcher github :repo "metaperl/shell-current-directory" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create new shell based on buffer directory" :date (21187 8768) :url "https://github.com/metaperl/shell-current-directory") (shell-here :source "MELPA" :recipe (:package "shell-here" :fetcher codeberg :repo "emacs-weirdware/shell-here" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open a shell relative to the working directory" :date (25040 49360) :url "https://codeberg.org/emacs-weirdware/shell-here") (shell-history :source "MELPA" :recipe (:package "shell-history" :fetcher github :repo "emacsorphanage/shell-history" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration with shell history" :date (19424 31936) :url "https://github.com/emacsorphanage/shell-history") (shell-maker :source "MELPA" :recipe (:package "shell-maker" :fetcher github :repo "xenodium/chatgpt-shell" :files ("shell-maker.el")) :description "Interaction mode for making comint shells" :date (26407 58448) :url "https://github.com/xenodium/chatgpt-shell") (shell-pop :source "MELPA" :recipe (:package "shell-pop" :repo "kyagi/shell-pop-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helps you to use shell easily on Emacs. Only one key action to work" :date (25996 36944) :url "https://github.com/kyagi/shell-pop-el") (shell-split-string :source "MELPA" :recipe (:package "shell-split-string" :repo "10sr/shell-split-string-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Split strings using shell-like syntax" :date (22139 2896) :url "https://github.com/10sr/shell-split-string-el") (shell-switcher :source "MELPA" :recipe (:package "shell-switcher" :fetcher github :repo "DamienCassou/shell-switcher" :files ("rswitcher.el" "shell-switcher.el")) :description "Provide fast switching between shell buffers" :date (24726 64464) :url "https://github.com/DamienCassou/shell-switcher") (shell-toggle :source "MELPA" :recipe (:package "shell-toggle" :repo "knu/shell-toggle.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggle to and from the shell buffer" :date (21742 14288) :url "https://github.com/knu/shell-toggle.el") (shellcop :source "MELPA" :recipe (:package "shellcop" :fetcher github :repo "redguardtoo/shellcop" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Analyze info&error in shell-mode" :date (25275 27600) :url "https://github.com/redguardtoo/shellcop") (shelldoc :source "MELPA" :recipe (:package "shelldoc" :fetcher github :repo "mhayashi1120/Emacs-shelldoc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shell command editing support with man page" :date (25569 27216) :url "https://github.com/mhayashi1120/Emacs-shelldoc") (shelldon :source "MELPA" :recipe (:package "shelldon" :fetcher github :repo "Overdr0ne/shelldon" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An enhanced shell interface" :date (25148 56272) :url "https://github.com/Overdr0ne/shelldon") (shelltest-mode :source "MELPA" :recipe (:package "shelltest-mode" :fetcher github :repo "rtrn/shelltest-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for shelltestrunner" :date (23271 33744) :url "https://github.com/rtrn/shelltest-mode") (shen-elisp :source "MELPA" :recipe (:package "shen-elisp" :repo "deech/shen-elisp" :fetcher github :files ("shen*.el")) :description "Shen implementation in Elisp" :date (25492 62288) :url "https://github.com/deech/shen-elisp") (shenshou :source "MELPA" :recipe (:package "shenshou" :fetcher github :repo "redguardtoo/shenshou" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Download&Extract subtitles from opensubtitles" :date (26381 34384) :url "https://github.com/redguardtoo/shenshou") (shfmt :source "MELPA" :recipe (:package "shfmt" :fetcher github :repo "purcell/emacs-shfmt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat shell scripts using shfmt" :date (26005 51920) :url "https://github.com/purcell/emacs-shfmt") (shift-number :source "MELPA" :recipe (:package "shift-number" :repo "alezost/shift-number.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Increase/decrease the number at point" :date (22709 58576) :url "https://github.com/alezost/shift-number.el") (shift-text :source "MELPA" :recipe (:package "shift-text" :repo "sabof/shift-text" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Move the region in 4 directions, in a way similar to Eclipse's" :date (21024 63936) :url "https://github.com/sabof/shift-text") (shimbun :source "MELPA" :recipe (:package "shimbun" :fetcher github :repo "emacs-w3m/emacs-w3m" :files ("shimbun/*.el")) :description "Interfacing with web newspapers" :date (26316 60624) :url "https://github.com/emacs-w3m/emacs-w3m") (shm :source "MELPA" :recipe (:package "shm" :fetcher github :repo "projectional-haskell/structured-haskell-mode" :files ("elisp/*.el" (:exclude "shm-test.el" "shm-tests.el"))) :description "Structured Haskell Mode" :date (23225 24400) :url "https://github.com/projectional-haskell/structured-haskell-mode") (shortcuts-mode :source "MELPA" :recipe (:package "shortcuts-mode" :fetcher github :repo "tetron/shortcuts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode providing a buffer shortcut bar" :date (26249 45136) :url "https://github.com/tetron/shortcuts-mode") (shoulda :source "MELPA" :recipe (:package "shoulda" :repo "marcwebbie/shoulda.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shoulda test support for ruby" :date (21405 64320) :url "https://github.com/marcwebbie/shoulda.el") (show-css :source "MELPA" :recipe (:package "show-css" :repo "8cylinder/showcss-mode" :fetcher github :old-names (showcss-mode) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show the css of the html attribute the cursor is on" :date (22202 21328) :url "https://github.com/8cylinder/showcss-mode") (show-eol :source "MELPA" :recipe (:package "show-eol" :repo "jcs-elpa/show-eol" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show end of line symbol in buffer" :date (26001 54864) :url "https://github.com/jcs-elpa/show-eol") (show-font-mode :source "MELPA" :recipe (:package "show-font-mode" :fetcher github :repo "melissaboiko/show-font-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show font at point on mode line" :date (24549 336) :url "https://github.com/melissaboiko/show-font-mode") (showtip :source "MELPA" :recipe (:package "showtip" :fetcher github :repo "emacsorphanage/showtip" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show tip at cursor" :date (19097 35008) :url "https://github.com/emacsorphanage/showtip") (shpec-mode :source "MELPA" :recipe (:package "shpec-mode" :fetcher github :repo "shpec/shpec-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for shpec specification" :date (21864 54096) :url "https://github.com/shpec/shpec-mode") (shr-tag-pre-highlight :source "MELPA" :recipe (:package "shr-tag-pre-highlight" :fetcher github :repo "xuchunyang/shr-tag-pre-highlight.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighting code block in HTML" :date (26179 53456) :url "https://github.com/xuchunyang/shr-tag-pre-highlight.el") (shrface :source "MELPA" :recipe (:package "shrface" :fetcher github :repo "chenyanming/shrface" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extend shr/eww with org features and analysis capability" :date (26343 19152) :url "https://github.com/chenyanming/shrface") (shrink-path :source "MELPA" :recipe (:package "shrink-path" :fetcher gitlab :repo "bennya/shrink-path.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fish-style path" :date (23644 40016) :url "https://gitlab.com/bennya/shrink-path.el") (shrink-whitespace :source "MELPA" :recipe (:package "shrink-whitespace" :repo "jcpetkovich/shrink-whitespace.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Whitespace removal DWIM key" :date (23475 56400) :url "https://gitlab.com/jcpetkovich/shrink-whitespace.el") (shroud :source "MELPA" :recipe (:package "shroud" :fetcher git :url "https://git.savannah.nongnu.org/git/emacs-shroud.git" :files ("src/shroud" "src/shroud*.el" "README" "NEWS" "AUTHORS" "COPYING" (:exclude "make.el"))) :description "Shroud secrets" :date (24624 9936) :url "https://git.savannah.nongnu.org/git/emacs-shroud.git") (shut-up :source "MELPA" :recipe (:package "shut-up" :fetcher github :repo "cask/shut-up" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shut up would you!" :date (26158 47312) :url "https://github.com/cask/shut-up") (shx :source "MELPA" :recipe (:package "shx" :repo "riscy/shx-for-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extras for the comint-mode shell" :date (26175 56400) :url "https://github.com/riscy/shx-for-emacs") (sibilant-mode :source "MELPA" :recipe (:package "sibilant-mode" :repo "jbr/sibilant-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for the Sibilant programming language" :date (22092 59088) :url "https://github.com/jbr/sibilant-mode") (sicp :source "MELPA" :recipe (:package "sicp" :fetcher github :repo "webframp/sicp-info" :files (:defaults (:exclude "sicp.texi"))) :description "Structure and Interpretation of Computer Programs in info format" :date (26315 39760) :url "https://github.com/webframp/sicp-info") (side-hustle :source "MELPA" :recipe (:package "side-hustle" :fetcher github :repo "rnkn/side-hustle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hustle through Imenu in a side window" :date (26233 56912) :url "https://github.com/rnkn/side-hustle") (side-notes :source "MELPA" :recipe (:package "side-notes" :fetcher github :repo "rnkn/side-notes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easy access to a directory notes file" :date (26239 9296) :url "https://github.com/rnkn/side-notes") (sidecar-locals :source "MELPA" :recipe (:package "sidecar-locals" :fetcher codeberg :repo "ideasman42/emacs-sidecar-locals" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A flexible alternative to built-in dir-locals" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-sidecar-locals") (sideline :source "MELPA" :recipe (:package "sideline" :repo "emacs-sideline/sideline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show information on the side" :date (26407 58448) :url "https://github.com/emacs-sideline/sideline") (sideline-blame :source "MELPA" :recipe (:package "sideline-blame" :repo "emacs-sideline/sideline-blame" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show blame messages with sideline" :date (26330 7120) :url "https://github.com/emacs-sideline/sideline-blame") (sideline-flycheck :source "MELPA" :recipe (:package "sideline-flycheck" :repo "emacs-sideline/sideline-flycheck" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flycheck errors with sideline" :date (26239 9296) :url "https://github.com/emacs-sideline/sideline-flycheck") (sideline-flymake :source "MELPA" :recipe (:package "sideline-flymake" :repo "emacs-sideline/sideline-flymake" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show flymake errors with sideline" :date (26171 59344) :url "https://github.com/emacs-sideline/sideline-flymake") (sideline-lsp :source "MELPA" :recipe (:package "sideline-lsp" :repo "emacs-sideline/sideline-lsp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show lsp information with sideline" :date (26124 29136) :url "https://github.com/emacs-sideline/sideline-lsp") (sift :source "MELPA" :recipe (:package "sift" :repo "nlamirault/sift.el" :fetcher github :files ("sift.el")) :description "Front-end for sift, a fast and powerful grep alternative" :date (24222 3408) :url "https://github.com/nlamirault/sift.el") (signal :source "MELPA" :recipe (:package "signal" :repo "mola-T/signal" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Advanced hook" :date (22450 11600) :url "https://github.com/mola-T/signal") (silkworm-theme :source "MELPA" :recipe (:package "silkworm-theme" :repo "mswift42/silkworm-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Light theme with pleasant, low contrast colors" :date (24617 36688) :url "https://github.com/mswift42/silkworm-theme") (simp :source "MELPA" :recipe (:package "simp" :repo "re5et/simp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple project definition, chiefly for file finding, and grepping" :date (23320 19280) :url "https://github.com/re5et/simp") (simple-bookmarks :source "MELPA" :recipe (:package "simple-bookmarks" :fetcher github :repo "jtkDvlp/simple-bookmarks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bookmark / functioncall manager" :date (23639 22096) :url "https://github.com/jtkDvlp/simple-bookmarks") (simple-call-tree :source "MELPA" :recipe (:package "simple-call-tree" :fetcher github :repo "vapniks/simple-call-tree" :old-names (simple-call-tree+) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Analyze source code based on font-lock text-properties" :date (26257 39248) :url "https://github.com/vapniks/simple-call-tree") (simple-httpd :source "MELPA" :recipe (:package "simple-httpd" :repo "skeeto/emacs-web-server" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pure elisp HTTP server" :date (25826 32464) :url "https://github.com/skeeto/emacs-web-server") (simple-indentation :source "MELPA" :recipe (:package "simple-indentation" :repo "semenInRussia/simple-indentation.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplify writing indentation functions, alternative to SMIE" :date (25751 22864) :url "https://github.com/semenInRussia/simple-indentation.el") (simple-modeline :source "MELPA" :recipe (:package "simple-modeline" :repo "gexplorer/simple-modeline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple mode-line configuration for Emacs" :date (24650 34000) :url "https://github.com/gexplorer/simple-modeline") (simple-mpc :source "MELPA" :recipe (:package "simple-mpc" :fetcher github :repo "jorenvo/simple-mpc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides a simple interface to mpc" :date (25100 5200) :url "https://github.com/jorenvo/simple-mpc") (simple-paren :source "MELPA" :recipe (:package "simple-paren" :fetcher github :repo "andreas-roehler/simple-paren" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Non-electrical insert paired delimiter, wrap" :date (25811 65104) :url "https://github.com/andreas-roehler/simple-paren") (simple-rtm :source "MELPA" :recipe (:package "simple-rtm" :fetcher gitlab :repo "mbunkus/simple-rtm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interactive Emacs mode for Remember The Milk" :date (22218 9552) :url "https://gitlab.com/mbunkus/simple-rtm") (simple-screen :source "MELPA" :recipe (:package "simple-screen" :repo "wachikun/simple-screen" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple screen configuration manager" :date (26036 7504) :url "https://github.com/wachikun/simple-screen") (simpleclip :source "MELPA" :recipe (:package "simpleclip" :repo "rolandwalker/simpleclip" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simplified access to the system clipboard" :date (25220 3280) :url "https://github.com/rolandwalker/simpleclip") (simplecov :source "MELPA" :recipe (:package "simplecov" :repo "zenspider/simplecov.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Colorize untested ruby code" :date (25486 23504) :url "https://github.com/zenspider/simplecov.el") (simplenote :source "MELPA" :recipe (:package "simplenote" :fetcher github :repo "dotemacs/simplenote.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with simple-note.appspot.com" :date (21610 25040) :url "https://github.com/dotemacs/simplenote.el") (simplenote2 :source "MELPA" :recipe (:package "simplenote2" :fetcher github :repo "alpha22jp/simplenote2.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with app.simplenote.com" :date (23698 43472) :url "https://github.com/alpha22jp/simplenote2.el") (simplezen :source "MELPA" :recipe (:package "simplezen" :fetcher github :repo "magnars/simplezen.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple subset of zencoding-mode for Emacs" :date (20850 62400) :url "https://github.com/magnars/simplezen.el") (simplicity-theme :source "MELPA" :recipe (:package "simplicity-theme" :fetcher github :repo "smallwat3r/emacs-simplicity-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minimalist dark theme" :date (25419 8016) :url "https://github.com/smallwat3r/emacs-simplicity-theme") (sink :source "MELPA" :recipe (:package "sink" :fetcher github :repo "alcah/sink.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Receive messages from the plan9 plumber" :date (26190 23760) :url "https://github.com/alcah/sink.el") (siri-shortcuts :source "MELPA" :recipe (:package "siri-shortcuts" :fetcher github :repo "DaniruKun/siri-shortcuts.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with Siri Shortcuts" :date (25035 31440) :url "https://github.com/DaniruKun/siri-shortcuts.el") (sis :source "MELPA" :recipe (:package "sis" :fetcher github :repo "laishulu/emacs-smart-input-source" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Less manual switch for native or OS input source (input method)" :date (25974 9936) :url "https://github.com/laishulu/emacs-smart-input-source") (sisyphus :source "MELPA" :recipe (:package "sisyphus" :fetcher github :repo "magit/sisyphus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create releases of Emacs packages" :date (26381 34384) :url "https://github.com/magit/sisyphus") (sixcolors-mode :source "MELPA" :recipe (:package "sixcolors-mode" :repo "mastro35/sixcolors-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A customizable horizontal scrollbar" :date (25645 57680) :url "https://github.com/mastro35/sixcolors-mode") (skeletor :source "MELPA" :recipe (:package "skeletor" :fetcher github :repo "chrisbarrett/skeletor.el" :files ("*.el" "doc/*.texi" "licenses" "project-skeletons")) :description "Provides project skeletons for Emacs" :date (24595 9680) :url "https://github.com/chrisbarrett/skeletor.el") (skerrick :source "MELPA" :recipe (:package "skerrick" :repo "anonimitoraf/skerrick" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "REPL-driven development for NodeJS" :date (25123 53072) :url "https://github.com/anonimitoraf/skerrick") (sketch-themes :source "MELPA" :recipe (:package "sketch-themes" :repo "dawranliou/sketch-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sketch color themes" :date (25573 24272) :url "https://github.com/dawranliou/sketch-themes") (skewer-less :source "MELPA" :recipe (:package "skewer-less" :fetcher github :repo "purcell/skewer-less" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Skewer support for live LESS stylesheet updates" :date (24728 19792) :url "https://github.com/purcell/skewer-less") (skewer-mode :source "MELPA" :recipe (:package "skewer-mode" :fetcher github :repo "skeeto/skewer-mode" :files ("*.html" "*.js" "*.el")) :description "Live browser JavaScript, CSS, and HTML interaction" :date (24158 50512) :url "https://github.com/skeeto/skewer-mode") (skewer-reload-stylesheets :source "MELPA" :recipe (:package "skewer-reload-stylesheets" :fetcher github :repo "NateEag/skewer-reload-stylesheets" :files (:defaults "*.js")) :description "Live-edit CSS, SCSS, Less, and friends" :date (22421 11344) :url "https://github.com/NateEag/skewer-reload-stylesheets") (skype :source "MELPA" :recipe (:package "skype" :fetcher github :repo "kiwanami/emacs-skype" :files ("*.el" "*.py")) :description "Skype UI for emacs users." :date (22402 46928) :url "https://github.com/kiwanami/emacs-skype") (sl :source "MELPA" :recipe (:package "sl" :fetcher github :repo "xuchunyang/sl.el" :files (:defaults "*.txt")) :description "An Emacs clone of sl(1)" :date (22612 21968) :url "https://github.com/xuchunyang/sl.el") (slack :source "MELPA" :recipe (:package "slack" :fetcher github :repo "yuya373/emacs-slack" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Slack client for Emacs" :date (24995 60880) :url "https://github.com/yuya373/emacs-slack") (slideview :source "MELPA" :recipe (:package "slideview" :repo "mhayashi1120/Emacs-slideview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "File slideshow" :date (21776 32464) :url "https://github.com/mhayashi1120/Emacs-slideview") (slim-mode :source "MELPA" :recipe (:package "slim-mode" :repo "slim-template/emacs-slim" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Slim files" :date (26177 11728) :url "https://github.com/slim-template/emacs-slim") (slime :source "MELPA" :recipe (:package "slime" :fetcher github :repo "slime/slime" :files ("*.el" ("lib" "lib/hyperspec.el") "swank" "*.lisp" "*.asd" "doc/slime.texi" "doc/slime.info" "doc/dir" "ChangeLog" ("contrib" "contrib/*") (:exclude "contrib/test" "contrib/Makefile"))) :description "Superior Lisp Interaction Mode for Emacs" :date (26397 22608) :url "https://github.com/slime/slime") (slime-company :source "MELPA" :recipe (:package "slime-company" :fetcher github :repo "anwyn/slime-company" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Slime completion backend for company mode" :date (24588 36432) :url "https://github.com/anwyn/slime-company") (slime-docker :source "MELPA" :recipe (:package "slime-docker" :repo "cl-docker-images/slime-docker" :fetcher github :files (:defaults "bin" "resources")) :description "Integration of SLIME with Docker containers" :date (24709 55376) :url "https://github.com/cl-docker-images/slime-docker") (slime-repl-ansi-color :source "MELPA" :recipe (:package "slime-repl-ansi-color" :fetcher gitlab :repo "augfab/slime-repl-ansi-color" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Turn on ANSI colors in REPL output;" :date (25578 42192) :url "https://gitlab.com/augfab/slime-repl-ansi-color") (slime-theme :source "MELPA" :recipe (:package "slime-theme" :fetcher github :repo "emacsfodder/emacs-slime-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs 24 theme based on Slime (tmTheme)" :date (22920 54480) :url "https://github.com/emacsfodder/emacs-slime-theme") (slime-volleyball :source "MELPA" :recipe (:package "slime-volleyball" :fetcher github :repo "fitzsim/slime-volleyball" :files ("*.el" "*.gz" "*.svg" "*.b64")) :description "An SVG Slime Volleyball Game" :date (23833 8912) :url "https://github.com/fitzsim/slime-volleyball") (slint-mode :source "MELPA" :recipe (:package "slint-mode" :fetcher github :repo "nilclass/slint-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for the Slint UI language" :date (26158 47312) :url "https://github.com/nilclass/slint-mode") (slirm :source "MELPA" :recipe (:package "slirm" :fetcher github :repo "fbie/slirm" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Systematic Literature Review Mode for Emacs" :date (22190 30160) :url "https://github.com/fbie/slirm") (slovak-holidays :source "MELPA" :recipe (:package "slovak-holidays" :fetcher github :repo "Fuco1/slovak-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds a list of slovak holidays to Emacs calendar" :date (24940 36560) :url "https://github.com/Fuco1/slovak-holidays") (slow-keys :source "MELPA" :recipe (:package "slow-keys" :fetcher sourcehut :repo "gitmux/slow-keys" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Slow keys mode to avoid RSI" :date (25326 54864) :url "https://git.sr.ht/~gitmux/slow-keys") (slstats :source "MELPA" :recipe (:package "slstats" :fetcher github :repo "davep/slstats.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Acquire and display stats about Second Life" :date (22940 39760) :url "https://github.com/davep/slstats.el") (slurm-mode :source "MELPA" :recipe (:package "slurm-mode" :fetcher github :repo "ffevotte/slurm.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interaction with the SLURM job scheduling system" :date (24740 10960) :url "https://github.com/ffevotte/slurm.el") (slurpbarf :source "MELPA" :recipe (:package "slurpbarf" :fetcher codeberg :repo "vilij/slurpbarf-elcute" :files ("slurpbarf.el")) :description "Commands for slurping and barfing" :date (26351 13264) :url "https://codeberg.org/vilij/slurpbarf-elcute") (sly :source "MELPA" :recipe (:package "sly" :repo "joaotavora/sly" :fetcher github :files (:defaults "lib" "slynk" "contrib" "doc/images" (:exclude "sly-autoloads.el")) :version-regexp "%v") :description "Sylvester the Cat's Common Lisp IDE" :date (26293 12752) :url "https://github.com/joaotavora/sly") (sly-asdf :source "MELPA" :recipe (:package "sly-asdf" :fetcher github :repo "mmgeorge/sly-asdf" :files (:defaults "*.lisp" "*.asd")) :description "ASDF system support for SLY" :date (25463 62032) :url "https://github.com/mmgeorge/sly-asdf") (sly-hello-world :source "MELPA" :recipe (:package "sly-hello-world" :fetcher github :repo "joaotavora/sly-hello-world" :files (:defaults "*.lisp" "*.asd")) :description "A template SLY contrib" :date (24148 14672) :url "https://github.com/joaotavora/sly-hello-world") (sly-macrostep :source "MELPA" :recipe (:package "sly-macrostep" :fetcher github :repo "joaotavora/sly-macrostep" :files (:defaults "*.lisp" "*.asd")) :description "Fancy macro-expansion via macrostep.el" :date (24048 1872) :url "https://github.com/joaotavora/sly-macrostep") (sly-named-readtables :source "MELPA" :recipe (:package "sly-named-readtables" :fetcher github :repo "joaotavora/sly-named-readtables" :files (:defaults "*.lisp" "*.asd")) :description "Support named readtables in Common Lisp files" :date (23970 16080) :url "https://github.com/joaotavora/sly-named-readtables") (sly-overlay :source "MELPA" :recipe (:package "sly-overlay" :fetcher github :repo "fosskers/sly-overlay" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Overlay Common Lisp evaluation results" :date (26318 15952) :url "https://github.com/fosskers/sly-overlay") (sly-quicklisp :source "MELPA" :recipe (:package "sly-quicklisp" :fetcher github :repo "joaotavora/sly-quicklisp" :files (:defaults "*.lisp" "*.asd")) :description "Quicklisp support for SLY" :date (25005 10320) :url "https://github.com/joaotavora/sly-quicklisp") (sly-repl-ansi-color :source "MELPA" :recipe (:package "sly-repl-ansi-color" :fetcher github :repo "PuercoPop/sly-repl-ansi-color" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add ANSI colors support to the sly mrepl" :date (23017 4688) :url "https://github.com/PuercoPop/sly-repl-ansi-color") (smart-backspace :source "MELPA" :recipe (:package "smart-backspace" :repo "itome/smart-backspace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intellj like backspace" :date (23009 10576) :url "https://github.com/itome/smart-backspace") (smart-comment :source "MELPA" :recipe (:package "smart-comment" :repo "paldepind/smart-comment" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smarter commenting" :date (22256 24784) :url "https://github.com/paldepind/smart-comment") (smart-compile :source "MELPA" :recipe (:package "smart-compile" :fetcher github :repo "zenitani/elisp" :files ("smart-compile.el")) :description "An interface to `compile'" :date (26003 10192) :url "https://github.com/zenitani/elisp") (smart-cursor-color :source "MELPA" :recipe (:package "smart-cursor-color" :fetcher github :repo "7696122/smart-cursor-color" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Change cursor color dynamically" :date (24525 18000) :url "https://github.com/7696122/smart-cursor-color") (smart-dash :source "MELPA" :recipe (:package "smart-dash" :fetcher github :repo "malsyned/smart-dash" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart-Dash minor mode" :date (26038 49232) :url "https://github.com/malsyned/smart-dash") (smart-delete :source "MELPA" :recipe (:package "smart-delete" :repo "leodag/smart-delete" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "IntelliJ-like backspace/delete" :date (25801 29264) :url "https://github.com/leodag/smart-delete") (smart-forward :source "MELPA" :recipe (:package "smart-forward" :repo "magnars/smart-forward.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Semantic navigation" :date (21344 1216) :url "https://github.com/magnars/smart-forward.el") (smart-hungry-delete :source "MELPA" :recipe (:package "smart-hungry-delete" :repo "hrehfeld/emacs-smart-hungry-delete" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart hungry deletion of whitespace" :date (25217 27088) :url "https://github.com/hrehfeld/emacs-smart-hungry-delete") (smart-indent-rigidly :source "MELPA" :recipe (:package "smart-indent-rigidly" :fetcher github :repo "re5et/smart-indent-rigidly" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart rigid indenting" :date (21634 7376) :url "https://github.com/re5et/smart-indent-rigidly") (smart-jump :source "MELPA" :recipe (:package "smart-jump" :fetcher github :repo "jojojames/smart-jump" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart go to definition" :date (24639 63696) :url "https://github.com/jojojames/smart-jump") (smart-mark :source "MELPA" :recipe (:package "smart-mark" :repo "victorteokw/smart-mark" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Restore point after C-g when mark" :date (26407 58448) :url "https://github.com/victorteokw/smart-mark") (smart-mode-line :source "MELPA" :recipe (:package "smart-mode-line" :repo "Malabarba/smart-mode-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color coded smart mode-line" :date (26353 54992) :url "https://github.com/Malabarba/smart-mode-line") (smart-mode-line-atom-one-dark-theme :source "MELPA" :recipe (:package "smart-mode-line-atom-one-dark-theme" :repo "daviderestivo/smart-mode-line-atom-one-dark-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Atom-one-dark theme for smart-mode-line" :date (26004 31056) :url "https://github.com/daviderestivo/smart-mode-line-atom-one-dark-theme") (smart-mode-line-powerline-theme :source "MELPA" :recipe (:package "smart-mode-line-powerline-theme" :repo "Malabarba/smart-mode-line" :fetcher github :files ("themes/*.el")) :description "Smart-mode-line theme that mimics the powerline appearance" :date (24923 27472) :url "https://github.com/Malabarba/smart-mode-line") (smart-newline :source "MELPA" :recipe (:package "smart-newline" :repo "ainame/smart-newline.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide smart newline for one keybind" :date (21155 32320) :url "https://github.com/ainame/smart-newline.el") (smart-region :source "MELPA" :recipe (:package "smart-region" :repo "uk-ar/smart-region" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smartly select region, rectangle, multi cursors" :date (21991 25424) :url "https://github.com/uk-ar/smart-region") (smart-semicolon :source "MELPA" :recipe (:package "smart-semicolon" :repo "iquiw/smart-semicolon" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert semicolon smartly" :date (24407 61648) :url "https://github.com/iquiw/smart-semicolon") (smart-shift :source "MELPA" :recipe (:package "smart-shift" :fetcher github :repo "hbin/smart-shift" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart shift text left/right" :date (21711 58704) :url "https://github.com/hbin/smart-shift") (smart-tab :source "MELPA" :recipe (:package "smart-tab" :fetcher git :url "https://git.genehack.net/genehack/smart-tab.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intelligent tab completion and indentation" :date (24754 43856) :url "https://git.genehack.net/genehack/smart-tab.git") (smart-tabs-mode :source "MELPA" :recipe (:package "smart-tabs-mode" :fetcher github :repo "jcsalomon/smarttabs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intelligently indent with tabs, align with spaces!" :date (24405 19920) :url "https://github.com/jcsalomon/smarttabs") (smart-window :source "MELPA" :recipe (:package "smart-window" :fetcher github :repo "dryman/smart-window.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim-like window controlling plugin" :date (22410 41040) :url "https://github.com/dryman/smart-window.el") (smartparens :source "MELPA" :recipe (:package "smartparens" :fetcher github :repo "Fuco1/smartparens" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic insertion, wrapping and paredit-like navigation with user defined pairs" :date (26257 39248) :url "https://github.com/Fuco1/smartparens") (smartrep :source "MELPA" :recipe (:package "smartrep" :repo "myuhe/smartrep.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support sequential operation which omitted prefix keys" :date (26141 38224) :url "https://github.com/myuhe/smartrep.el") (smartscan :source "MELPA" :recipe (:package "smartscan" :fetcher github :repo "mickeynp/smart-scan" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jumps between other symbols found at point" :date (22686 10704) :url "https://github.com/mickeynp/smart-scan") (smarty-mode :source "MELPA" :recipe (:package "smarty-mode" :fetcher github :repo "emacsorphanage/smarty-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing smarty templates" :date (19502 17728) :url "https://github.com/emacsorphanage/smarty-mode") (smbc :source "MELPA" :recipe (:package "smbc" :repo "sakshamsharma/emacs-smbc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View SMBC from Emacs" :date (23109 23376) :url "https://github.com/sakshamsharma/emacs-smbc") (smblog :source "MELPA" :recipe (:package "smblog" :repo "aaptel/smblog-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Samba log viewer" :date (24226 464) :url "https://github.com/aaptel/smblog-mode") (smeargle :source "MELPA" :recipe (:package "smeargle" :repo "emacsorphanage/smeargle" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlighting region by last updated time" :date (24183 53712) :url "https://github.com/emacsorphanage/smeargle") (smex :source "MELPA" :recipe (:package "smex" :repo "nonsequitur/smex" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "M-x interface with Ido-style fuzzy matching" :date (22123 14672) :url "https://github.com/nonsequitur/smex") (smilefjes :source "MELPA" :recipe (:package "smilefjes" :fetcher github :repo "themkat/smilefjes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View Norwegian Food Safety Authority restaurant ratings" :date (26315 39760) :url "https://github.com/themkat/smilefjes.el") (smiles-mode :source "MELPA" :recipe (:package "smiles-mode" :fetcher git :url "https://repo.or.cz/smiles-mode.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for SMILES" :date (25092 11088) :url "https://repo.or.cz/smiles-mode.git") (smithers :source "MELPA" :recipe (:package "smithers" :fetcher gitlab :repo "mtekman/smithers.el" :files (:defaults "source.org")) :description "A startup message featuring Mr C.M. Burns" :date (24755 64720) :url "https://gitlab.com/mtekman/smithers.el") (smithy-mode :source "MELPA" :recipe (:package "smithy-mode" :repo "mnemitz/smithy-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Smithy IDL files" :date (25262 15568) :url "https://github.com/mnemitz/smithy-mode") (sml-basis :source "MELPA" :recipe (:package "sml-basis" :fetcher github :repo "lassik/emacs-sml-basis" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Standard ML Basis Library lookup" :date (24738 55632) :url "https://github.com/lassik/emacs-sml-basis") (sml-modeline :source "MELPA" :recipe (:package "sml-modeline" :fetcher github :repo "emacsattic/sml-modeline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show position in a scrollbar like way in mode-line" :date (22848 21072) :url "https://github.com/emacsattic/sml-modeline") (sml-ts-mode :source "MELPA" :recipe (:package "sml-ts-mode" :fetcher github :repo "nverno/sml-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SML major-mode using tree-sitter" :date (26381 34384) :url "https://github.com/nverno/sml-ts-mode") (smlfmt :source "MELPA" :recipe (:package "smlfmt" :repo "diku-dk/smlfmt.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format SML source code using the \"smlfmt\" program" :date (25922 48208) :url "https://github.com/diku-dk/smlfmt.el") (smmry :source "MELPA" :recipe (:package "smmry" :fetcher github :repo "microamp/smmry.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SMMRY client" :date (26264 12496) :url "https://github.com/microamp/smmry.el") (smog :source "MELPA" :recipe (:package "smog" :repo "zzkt/smog" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Analyse the writing style, word use and readability of prose" :date (25717 4688) :url "https://github.com/zzkt/smog") (smooth-scroll :source "MELPA" :recipe (:package "smooth-scroll" :fetcher github :repo "k-talo/smooth-scroll.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for smooth scrolling and in-place scrolling" :date (26340 42960) :url "https://github.com/k-talo/smooth-scroll.el") (smooth-scrolling :source "MELPA" :recipe (:package "smooth-scrolling" :repo "aspiers/smooth-scrolling" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make emacs scroll smoothly" :date (22512 9168) :url "https://github.com/aspiers/smooth-scrolling") (smotitah :source "MELPA" :recipe (:package "smotitah" :fetcher github :repo "laynor/smotitah" :files ("*.el" "templates")) :description "Modular emacs configuration framework" :date (21731 43984) :url "https://github.com/laynor/smotitah") (smtpmail-multi :source "MELPA" :recipe (:package "smtpmail-multi" :fetcher github :repo "vapniks/smtpmail-multi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use different smtp servers for sending mail" :date (22212 57168) :url "https://github.com/vapniks/smtpmail-multi") (smudge :source "MELPA" :recipe (:package "smudge" :fetcher github :repo "danielfm/smudge" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control the Spotify app" :date (26137 41168) :url "https://github.com/danielfm/smudge") (smyx-theme :source "MELPA" :recipe (:package "smyx-theme" :fetcher github :repo "tacit7/smyx" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smyx Color Theme" :date (26340 42960) :url "https://github.com/tacit7/smyx") (snakemake-mode :source "MELPA" :recipe (:package "snakemake-mode" :fetcher github :repo "kyleam/snakemake-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Snakemake files" :date (25972 54608) :url "https://github.com/kyleam/snakemake-mode") (snap-indent :source "MELPA" :recipe (:package "snap-indent" :fetcher github :repo "jeffvalk/snap-indent" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple automatic indentation" :date (25763 14032) :url "https://github.com/jeffvalk/snap-indent") (snapshot-timemachine :source "MELPA" :recipe (:package "snapshot-timemachine" :fetcher github :repo "mrBliss/snapshot-timemachine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Step through (Btrfs, ZFS, ...) snapshots of files" :date (22617 39888) :url "https://github.com/mrBliss/snapshot-timemachine") (snapshot-timemachine-rsnapshot :source "MELPA" :recipe (:package "snapshot-timemachine-rsnapshot" :fetcher github :repo "NicolasPetton/snapshot-timemachine-rsnapshot" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rsnapshot backend for snapshot-timemachine" :date (22740 14160) :url "https://github.com/NicolasPetton/snapshot-timemachine-rsnapshot") (snazzy-theme :source "MELPA" :recipe (:package "snazzy-theme" :repo "weijiangan/emacs-snazzy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elegant syntax theme with bright colors" :date (22947 13008) :url "https://github.com/weijiangan/emacs-snazzy") (sniem :source "MELPA" :recipe (:package "sniem" :repo "SpringHan/sniem" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hands-eased united editing method" :date (26299 51536) :url "https://github.com/SpringHan/sniem") (snitch :source "MELPA" :recipe (:package "snitch" :fetcher github :repo "mrmekon/snitch-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs firewall" :date (24600 27600) :url "https://github.com/mrmekon/snitch-el") (snoopy :source "MELPA" :recipe (:package "snoopy" :fetcher github :repo "anmonteiro/snoopy-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for number row unshifted character insertion" :date (23001 16464) :url "https://github.com/anmonteiro/snoopy-mode") (snow :source "MELPA" :recipe (:package "snow" :fetcher github :repo "alphapapa/snow.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Let it snow in Emacs!" :date (25512 47568) :url "https://github.com/alphapapa/snow.el") (soar-mode :source "MELPA" :recipe (:package "soar-mode" :repo "adeschamps/soar-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Soar language" :date (23755 23120) :url "https://github.com/adeschamps/soar-mode") (soccer :source "MELPA" :recipe (:package "soccer" :repo "md-arif-shaikh/soccer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fixtures, results, table etc for soccer" :date (25930 42320) :url "https://github.com/md-arif-shaikh/soccer") (socyl :source "MELPA" :recipe (:package "socyl" :fetcher github :repo "nlamirault/socyl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Frontend for several search tools" :date (22687 31568) :url "https://github.com/nlamirault/socyl") (soft-charcoal-theme :source "MELPA" :recipe (:package "soft-charcoal-theme" :repo "mswift42/soft-charcoal-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark charcoal theme with soft colors" :date (21330 54720) :url "https://github.com/mswift42/soft-charcoal-theme") (soft-morning-theme :source "MELPA" :recipe (:package "soft-morning-theme" :repo "mswift42/soft-morning-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs24 theme with a light background" :date (22011 10704) :url "https://github.com/mswift42/soft-morning-theme") (soft-stone-theme :source "MELPA" :recipe (:package "soft-stone-theme" :repo "mswift42/soft-stone-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme with a light background" :date (21403 22592) :url "https://github.com/mswift42/soft-stone-theme") (solaire-mode :source "MELPA" :recipe (:package "solaire-mode" :repo "hlissner/emacs-solaire-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make certain buffers grossly incandescent" :date (26261 36304) :url "https://github.com/hlissner/emacs-solaire-mode") (solarized-theme :source "MELPA" :recipe (:package "solarized-theme" :repo "bbatsov/solarized-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Solarized color theme" :date (26273 27472) :url "https://github.com/bbatsov/solarized-emacs") (solidity-flycheck :source "MELPA" :recipe (:package "solidity-flycheck" :fetcher github :repo "ethereum/emacs-solidity" :files ("solidity-flycheck.el")) :description "Flycheck integration for solidity emacs mode" :date (25429 43856) :url "https://github.com/ethereum/emacs-solidity") (solidity-mode :source "MELPA" :recipe (:package "solidity-mode" :fetcher github :repo "ethereum/emacs-solidity" :files (:defaults (:exclude "company-solidity.el" "solidity-flycheck.el"))) :description "Major mode for ethereum's solidity language" :date (25755 19920) :url "https://github.com/ethereum/emacs-solidity") (solo-jazz-theme :source "MELPA" :recipe (:package "solo-jazz-theme" :fetcher github :repo "cstby/solo-jazz-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Solo-Jazz color theme" :date (25060 34640) :url "https://github.com/cstby/solo-jazz-emacs-theme") (somafm :source "MELPA" :recipe (:package "somafm" :fetcher github :repo "artenator/somafm.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple soma.fm interface" :date (25159 26576) :url "https://github.com/artenator/somafm.el") (sonic-pi :source "MELPA" :recipe (:package "sonic-pi" :repo "repl-electric/sonic-pi.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Emacs client for SonicPi" :date (25015 46160) :url "https://github.com/repl-electric/sonic-pi.el") (soong-mode :source "MELPA" :recipe (:package "soong-mode" :repo "bobrofon/soong-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Soong build files" :date (25500 56400) :url "https://github.com/bobrofon/soong-mode") (soothe-theme :source "MELPA" :recipe (:package "soothe-theme" :fetcher github :repo "emacsfodder/emacs-soothe-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark colorful theme" :date (26140 17360) :url "https://github.com/emacsfodder/emacs-soothe-theme") (sops :source "MELPA" :recipe (:package "sops" :fetcher github :repo "djgoku/sops" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SOPS encrypt and decrypt without leaving the editor" :date (26331 27984) :url "https://github.com/djgoku/sops") (sorcery-theme :source "MELPA" :recipe (:package "sorcery-theme" :fetcher github :repo "mtreca/emacs-theme-sorcery" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A D&D (Dark and Dusty) Theme" :date (24558 15312) :url "https://github.com/mtreca/emacs-theme-sorcery") (soria-theme :source "MELPA" :recipe (:package "soria-theme" :repo "mssola/soria" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A xoria256 theme with some colors from openSUSE" :date (26204 56656) :url "https://github.com/mssola/soria") (sort-words :source "MELPA" :recipe (:package "sort-words" :fetcher github :repo "dotemacs/sort-words.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sort words in a selected region" :date (22508 12112) :url "https://github.com/dotemacs/sort-words.el") (sotclojure :source "MELPA" :recipe (:package "sotclojure" :repo "Malabarba/speed-of-thought-clojure" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write clojure at the speed of thought" :date (22980 10320) :url "https://github.com/Malabarba/speed-of-thought-clojure") (sotlisp :source "MELPA" :recipe (:package "sotlisp" :repo "Malabarba/speed-of-thought-lisp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write lisp at the speed of thought" :date (25370 22480) :url "https://github.com/Malabarba/speed-of-thought-lisp") (sound-wav :source "MELPA" :recipe (:package "sound-wav" :repo "emacsorphanage/sound-wav" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play wav file" :date (26355 10320) :url "https://github.com/emacsorphanage/sound-wav") (soundcloud :source "MELPA" :recipe (:package "soundcloud" :fetcher github :repo "thieman/soundcloud.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A SoundCloud client for Emacs" :date (21827 59728) :url "https://github.com/thieman/soundcloud.el") (soundklaus :source "MELPA" :recipe (:package "soundklaus" :fetcher github :repo "r0man/soundklaus.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Play music on SoundCloud with Emacs via EMMS" :date (24059 58576) :url "https://github.com/r0man/soundklaus.el") (sourcekit :source "MELPA" :recipe (:package "sourcekit" :repo "nathankot/company-sourcekit" :fetcher github :files ("sourcekit.el")) :description "Library to interact with sourcekittendaemon" :date (24715 7760) :url "https://github.com/nathankot/company-sourcekit") (sourcemap :source "MELPA" :recipe (:package "sourcemap" :fetcher github :repo "emacsorphanage/sourcemap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sourcemap parser" :date (24173 17872) :url "https://github.com/emacsorphanage/sourcemap") (sourcepawn-mode :source "MELPA" :recipe (:package "sourcepawn-mode" :fetcher github :repo "agrif/sourcepawn-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SourcePawn major mode" :date (25755 19920) :url "https://github.com/agrif/sourcepawn-mode") (sourcerer-theme :source "MELPA" :recipe (:package "sourcerer-theme" :fetcher github :repo "gilbertw1/sourcerer-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A version of sourcerer by xero" :date (22527 62928) :url "https://github.com/gilbertw1/sourcerer-emacs") (sozluk :source "MELPA" :recipe (:package "sozluk" :fetcher github :repo "isamert/sozluk.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An online Turkish dictionary" :date (25797 32208) :url "https://github.com/isamert/sozluk.el") (space-theming :source "MELPA" :recipe (:package "space-theming" :repo "p3r7/space-theming" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easilly override theme faces" :date (24236 36304) :url "https://github.com/p3r7/space-theming") (spacebar :source "MELPA" :recipe (:package "spacebar" :repo "matthias-margush/spacebar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Workspaces Bar" :date (23856 56784) :url "https://github.com/matthias-margush/spacebar") (spacegray-theme :source "MELPA" :recipe (:package "spacegray-theme" :fetcher github :repo "bruce/emacs-spacegray-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Hyperminimal UI Theme" :date (21930 48720) :url "https://github.com/bruce/emacs-spacegray-theme") (spaceline :source "MELPA" :recipe (:package "spaceline" :fetcher github :repo "TheBB/spaceline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modeline configuration library for powerline" :date (25868 44752) :url "https://github.com/TheBB/spaceline") (spaceline-all-the-icons :source "MELPA" :recipe (:package "spaceline-all-the-icons" :fetcher github :repo "domtronn/spaceline-all-the-icons.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Spaceline theme using All The Icons" :date (23703 61392) :url "https://github.com/domtronn/spaceline-all-the-icons.el") (spacemacs-theme :source "MELPA" :recipe (:package "spacemacs-theme" :fetcher github :repo "nashamri/spacemacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme with a dark and light versions" :date (26403 61392) :url "https://github.com/nashamri/spacemacs-theme") (spaces :source "MELPA" :recipe (:package "spaces" :repo "chumpage/chumpy-windows" :fetcher github :files ("spaces.el")) :description "Create and switch between named window configurations" :date (22922 9808) :url "https://github.com/chumpage/chumpy-windows") (spanish-holidays :source "MELPA" :recipe (:package "spanish-holidays" :fetcher gitlab :repo "gnuhack/spanish-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Spain holidays for calendar" :date (26082 16848) :url "https://gitlab.com/gnuhack/spanish-holidays") (spark :source "MELPA" :recipe (:package "spark" :fetcher github :repo "alvinfrancis/spark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sparkline generation" :date (25645 57680) :url "https://github.com/alvinfrancis/spark") (sparkline :source "MELPA" :recipe (:package "sparkline" :fetcher github :repo "woudshoo/sparkline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make sparkline images from a list of numbers" :date (21668 25552) :url "https://github.com/woudshoo/sparkline") (sparql-mode :source "MELPA" :recipe (:package "sparql-mode" :fetcher github :repo "ljos/sparql-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit and interactively evaluate SPARQL queries" :date (25524 38736) :url "https://github.com/ljos/sparql-mode") (spatial-navigate :source "MELPA" :recipe (:package "spatial-navigate" :fetcher codeberg :repo "ideasman42/emacs-spatial-navigate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Directional navigation between white-space blocks" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-spatial-navigate") (spdx :source "MELPA" :recipe (:package "spdx" :repo "condy0919/spdx.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert SPDX license and copyright headers" :date (26409 13776) :url "https://github.com/condy0919/spdx.el") (speech-tagger :source "MELPA" :recipe (:package "speech-tagger" :fetcher github :repo "cosmicexplorer/speech-tagger" :files ("emacs/speech-tagger.el" "emacs/penn_treebank_tags.json")) :description "Tag parts of speech using coreNLP" :date (22906 21584) :url "https://github.com/cosmicexplorer/speech-tagger") (speechd-el :source "MELPA" :recipe (:package "speechd-el" :fetcher github :repo "brailcom/speechd-el" :files (:defaults (:exclude "*.texi"))) :description "Client to speech synthesizers and Braille displays" :date (26177 11728) :url "https://github.com/brailcom/speechd-el") (speed-type :source "MELPA" :recipe (:package "speed-type" :fetcher github :repo "dakra/speed-type" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Practice touch and speed typing" :date (25873 62672) :url "https://github.com/dakra/speed-type") (speedbar-git-respect :source "MELPA" :recipe (:package "speedbar-git-respect" :repo "ukari/speedbar-git-respect" :fetcher github :files ("speedbar-git-respect.el")) :description "Particular respect git repo in speedbar" :date (24397 25808) :url "https://github.com/ukari/speedbar-git-respect") (speeddating :source "MELPA" :recipe (:package "speeddating" :fetcher github :repo "xuchunyang/emacs-speeddating" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Increase date and time at point" :date (23214 54096) :url "https://github.com/xuchunyang/emacs-speeddating") (spell-fu :source "MELPA" :recipe (:package "spell-fu" :fetcher codeberg :repo "ideasman42/emacs-spell-fu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast & light spelling highlighter" :date (26376 16464) :url "https://codeberg.org/ideasman42/emacs-spell-fu") (sphinx-doc :source "MELPA" :recipe (:package "sphinx-doc" :fetcher github :repo "naiquevin/sphinx-doc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sphinx friendly docstrings for Python functions" :date (24614 60496) :url "https://github.com/naiquevin/sphinx-doc.el") (sphinx-frontend :source "MELPA" :recipe (:package "sphinx-frontend" :repo "kostafey/sphinx-frontend" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch build process for rst documents via sphinx" :date (22542 30288) :url "https://gitlab.com/kostafey/sphinx-frontend") (sphinx-mode :source "MELPA" :recipe (:package "sphinx-mode" :fetcher github :repo "Fuco1/sphinx-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode providing sphinx support" :date (25179 11856) :url "https://github.com/Fuco1/sphinx-mode") (spice-mode :source "MELPA" :recipe (:package "spice-mode" :fetcher git :url "https://repo.or.cz/spice-mode.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for SPICE" :date (25092 11088) :url "https://repo.or.cz/spice-mode.git") (splitjoin :source "MELPA" :recipe (:package "splitjoin" :fetcher github :repo "emacsorphanage/splitjoin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transition between multiline and single-line code" :date (21831 56784) :url "https://github.com/emacsorphanage/splitjoin") (splitter :source "MELPA" :recipe (:package "splitter" :repo "chumpage/chumpy-windows" :fetcher github :files ("splitter.el")) :description "Manage window splits" :date (22922 9808) :url "https://github.com/chumpage/chumpy-windows") (splunk-mode :source "MELPA" :recipe (:package "splunk-mode" :fetcher github :repo "jakewilliami/splunk-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major Mode for editing Splunk SPL source code" :date (26364 25296) :url "https://github.com/jakewilliami/splunk-mode") (spotify :source "MELPA" :recipe (:package "spotify" :fetcher github :repo "remvee/spotify-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control the spotify application from emacs" :date (24294 36816) :url "https://github.com/remvee/spotify-el") (spotlight :source "MELPA" :recipe (:package "spotlight" :repo "benmaughan/spotlight.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search files with Mac OS X spotlight" :date (24086 17104) :url "https://github.com/benmaughan/spotlight.el") (spray :source "MELPA" :recipe (:package "spray" :fetcher sourcehut :repo "iank/spray" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A speed reading mode" :date (22232 42448) :url "https://git.sr.ht/~iank/spray") (springboard :source "MELPA" :recipe (:package "springboard" :fetcher github :repo "jwiegley/springboard" :files ("springboard.el")) :description "Temporarily change default-directory for one command" :date (22638 46032) :url "https://github.com/jwiegley/springboard") (sprintly-mode :source "MELPA" :recipe (:package "sprintly-mode" :fetcher github :repo "sprintly/sprintly-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for dealing with sprint.ly" :date (20591 15424) :url "https://github.com/sprintly/sprintly-mode") (sproto-mode :source "MELPA" :recipe (:package "sproto-mode" :repo "m2q1n9/sproto-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing sproto" :date (22087 41168) :url "https://github.com/m2q1n9/sproto-mode") (sprunge :source "MELPA" :recipe (:package "sprunge" :fetcher github :repo "tomjakubowski/sprunge.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Upload pastes to sprunge.us" :date (22228 45392) :url "https://github.com/tomjakubowski/sprunge.el") (spu :source "MELPA" :recipe (:package "spu" :fetcher github :repo "mola-T/SPU" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Silently upgrade package in the background" :date (22608 24912) :url "https://github.com/mola-T/SPU") (sq :source "MELPA" :recipe (:package "sq" :repo "sequoia-pgp/sqel" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bindings for Sequoia PGP's cli" :date (26268 9552) :url "https://gitlab.com/sequoia-pgp/sqel") (sql-clickhouse :source "MELPA" :recipe (:package "sql-clickhouse" :fetcher github :repo "rschwarz/sql-clickhouse" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support ClickHouse as SQL interpreter" :date (24045 25680) :url "https://github.com/rschwarz/sql-clickhouse") (sql-impala :source "MELPA" :recipe (:package "sql-impala" :fetcher github :repo "jterk/sql-impala" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Comint support for Cloudera Impala" :date (23576 3664) :url "https://github.com/jterk/sql-impala") (sql-presto :source "MELPA" :recipe (:package "sql-presto" :fetcher github :repo "kat-co/sql-prestodb" :files ("artifacts/*.el")) :description "[No description available]" :date (23610 21840) :url "https://github.com/kat-co/sql-prestodb") (sql-sqlline :source "MELPA" :recipe (:package "sql-sqlline" :fetcher gitlab :repo "matteoredaelli/sql-sqlline" :files ("artifacts/*.el")) :description "Adds SQLLine support to SQLi mode" :date (25931 63184) :url "https://gitlab.com/matteoredaelli/sql-sqlline") (sql-trino :source "MELPA" :recipe (:package "sql-trino" :fetcher github :repo "regadas/sql-trino" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds Trino support to SQLi mode" :date (25351 58064) :url "https://github.com/regadas/sql-trino") (sqlformat :source "MELPA" :recipe (:package "sqlformat" :fetcher github :repo "purcell/sqlformat" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat SQL using sqlformat or pgformatter" :date (26112 37968) :url "https://github.com/purcell/sqlformat") (sqlite-mode-extras :source "MELPA" :recipe (:package "sqlite-mode-extras" :fetcher github :repo "xenodium/sqlite-mode-extras" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extensions for sqlite-mode" :date (26384 10576) :url "https://github.com/xenodium/sqlite-mode-extras") (sqlite3 :source "MELPA" :recipe (:package "sqlite3" :fetcher github :repo "pekingduck/emacs-sqlite3-api" :files (:defaults "Makefile" "consts.c" "emacs-module.h" "sqlite3-api.c")) :description "Direct access to the core SQLite3 API" :date (25951 48464) :url "https://github.com/pekingduck/emacs-sqlite3-api") (sqlup-mode :source "MELPA" :recipe (:package "sqlup-mode" :fetcher github :repo "Trevoke/sqlup-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Upcase SQL words for you" :date (22843 3152) :url "https://github.com/Trevoke/sqlup-mode.el") (squirrel-mode :source "MELPA" :recipe (:package "squirrel-mode" :repo "thechampagne/squirrel-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Squirrel programming language" :date (25514 2896) :url "https://github.com/thechampagne/squirrel-mode") (sr-speedbar :source "MELPA" :recipe (:package "sr-speedbar" :fetcher github :repo "emacsorphanage/sr-speedbar" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Same frame speedbar" :date (25283 21712) :url "https://github.com/emacsorphanage/sr-speedbar") (srcery-theme :source "MELPA" :recipe (:package "srcery-theme" :fetcher github :repo "srcery-colors/srcery-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Dark color theme" :date (26067 49488) :url "https://github.com/srcery-colors/srcery-emacs") (srefactor :source "MELPA" :recipe (:package "srefactor" :fetcher github :repo "tuhdo/semantic-refactor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A refactoring tool based on Semantic parser framework" :date (25682 52048) :url "https://github.com/tuhdo/semantic-refactor") (srfi :source "MELPA" :recipe (:package "srfi" :fetcher github :repo "srfi-explorations/emacs-srfi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scheme Requests for Implementation browser" :date (26353 54992) :url "https://github.com/srfi-explorations/emacs-srfi") (srv :source "MELPA" :recipe (:package "srv" :fetcher github :repo "legoscia/srv.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Perform SRV DNS requests" :date (23370 25680) :url "https://github.com/legoscia/srv.el") (ssass-mode :source "MELPA" :recipe (:package "ssass-mode" :fetcher github :repo "AdamNiederer/ssass-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit Sass without a Turing Machine" :date (24129 50256) :url "https://github.com/AdamNiederer/ssass-mode") (ssh :source "MELPA" :recipe (:package "ssh" :fetcher codeberg :repo "emacs-weirdware-abandoned/ssh" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for remote logins using ssh" :date (20549 3136) :url "https://codeberg.org/emacs-weirdware-abandoned/ssh") (ssh-agency :source "MELPA" :recipe (:package "ssh-agency" :fetcher github :repo "magit/ssh-agency" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage ssh-agent from Emacs" :date (24191 47824) :url "https://github.com/magit/ssh-agency") (ssh-config-mode :source "MELPA" :recipe (:package "ssh-config-mode" :fetcher github :repo "peterhoeg/ssh-config-mode-el" :files (:defaults "*.txt")) :description "Mode for fontification of ~/.ssh/config" :date (26323 33872) :url "https://github.com/peterhoeg/ssh-config-mode-el") (ssh-deploy :source "MELPA" :recipe (:package "ssh-deploy" :repo "cjohansson/emacs-ssh-deploy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Deployment via Tramp, global or per directory" :date (25760 37840) :url "https://github.com/cjohansson/emacs-ssh-deploy") (ssh-tunnels :source "MELPA" :recipe (:package "ssh-tunnels" :fetcher github :repo "death/ssh-tunnels" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage SSH tunnels" :date (25304 27856) :url "https://github.com/death/ssh-tunnels") (stan-mode :source "MELPA" :recipe (:package "stan-mode" :fetcher github :repo "stan-dev/stan-mode" :files ("stan-mode/*.el" (:exclude "stan-mode/test-*.el"))) :description "Major mode for editing Stan files" :date (24995 60880) :url "https://github.com/stan-dev/stan-mode") (stan-snippets :source "MELPA" :recipe (:package "stan-snippets" :fetcher github :repo "stan-dev/stan-mode" :files ("stan-snippets/stan-snippets.el" ("snippets/stan-mode" "stan-snippets/snippets/stan-mode/*") (:exclude "stan-snippets/test-*.el"))) :description "Yasnippets for Stan" :date (24995 60880) :url "https://github.com/stan-dev/stan-mode") (standard-dirs :source "MELPA" :recipe (:package "standard-dirs" :fetcher github :repo "lafrenierejm/standard-dirs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Platform-specific paths for config, cache, and other data" :date (24302 30928) :url "https://github.com/lafrenierejm/standard-dirs.el") (standoff-mode :source "MELPA" :recipe (:package "standoff-mode" :fetcher github :repo "lueck/standoff-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create stand-off markup, also called external markup" :date (24849 38736) :url "https://github.com/lueck/standoff-mode") (starhugger :source "MELPA" :recipe (:package "starhugger" :fetcher gitlab :repo "daanturo/starhugger.el" :files (:defaults "*.py")) :description "Hugging Face/AI-powered text & code completion client" :date (26281 21584) :url "https://gitlab.com/daanturo/starhugger.el") (starlit-theme :source "MELPA" :recipe (:package "starlit-theme" :repo "SFTtech/starlit-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Deep blue dark theme with bright colors from the starlit sky" :date (26071 46544) :url "https://github.com/SFTtech/starlit-emacs") (start-menu :source "MELPA" :recipe (:package "start-menu" :fetcher github :repo "lujun9972/el-start-menu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Start-menu for executing external program like in windows" :date (22302 34128) :url "https://github.com/lujun9972/el-start-menu") (stash :source "MELPA" :recipe (:package "stash" :repo "vermiculus/stash.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lightweight persistent caching" :date (22090 17360) :url "https://github.com/vermiculus/stash.el") (state :source "MELPA" :recipe (:package "state" :fetcher github :repo "thisirs/state" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick navigation between workspaces" :date (24349 61136) :url "https://github.com/thisirs/state") (status :source "MELPA" :recipe (:package "status" :fetcher github :repo "tromey/emacs-status" :files (:defaults "*.py" "*.png")) :description "This package adds support for status icons to Emacs" :date (22146 62544) :url "https://github.com/tromey/emacs-status") (steam :source "MELPA" :recipe (:package "steam" :repo "Kungsgeten/steam.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Organize and launch Steam games" :date (25102 46928) :url "https://github.com/Kungsgeten/steam.el") (stem :source "MELPA" :recipe (:package "stem" :repo "yuutayamada/stem" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Routines for stemming" :date (21108 2112) :url "https://github.com/yuutayamada/stem") (stem-english :source "MELPA" :recipe (:package "stem-english" :fetcher github :repo "kawabata/stem-english" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "- routines for stemming English word" :date (23123 56272) :url "https://github.com/kawabata/stem-english") (stem-reading-mode :source "MELPA" :recipe (:package "stem-reading-mode" :repo "wavexx/stem-reading-mode.el" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight word stems for speed-reading" :date (25225 21200) :url "https://gitlab.com/wavexx/stem-reading-mode.el") (stgit :source "MELPA" :recipe (:package "stgit" :fetcher github :repo "stacked-git/stgit" :files ("contrib/stgit.el")) :description "Major mode for StGit interaction" :date (26334 4176) :url "https://github.com/stacked-git/stgit") (sticky :source "MELPA" :recipe (:package "sticky" :fetcher github :repo "rubikitch/sticky" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sticky key for capital letters" :date (22985 28240) :url "https://github.com/rubikitch/sticky") (sticky-shell :source "MELPA" :recipe (:package "sticky-shell" :repo "andrewdea/sticky-shell" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to keep track of previous prompt in your shell" :date (26359 7376) :url "https://github.com/andrewdea/sticky-shell") (stickyfunc-enhance :source "MELPA" :recipe (:package "stickyfunc-enhance" :fetcher github :repo "tuhdo/semantic-stickyfunc-enhance" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An enhancement to stock `semantic-stickyfunc-mode'" :date (21823 62672) :url "https://github.com/tuhdo/semantic-stickyfunc-enhance") (stimmung-themes :source "MELPA" :recipe (:package "stimmung-themes" :fetcher github :repo "motform/stimmung-themes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Themes tuned to inner harmonies" :date (26401 19664) :url "https://github.com/motform/stimmung-themes") (stock-ticker :source "MELPA" :recipe (:package "stock-ticker" :fetcher github :repo "hagleitn/stock-ticker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show stock prices in mode line" :date (21713 14032) :url "https://github.com/hagleitn/stock-ticker") (stock-tracker :source "MELPA" :recipe (:package "stock-tracker" :repo "beacoder/stock-tracker" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track stock price" :date (26160 2640) :url "https://github.com/beacoder/stock-tracker") (strace-mode :source "MELPA" :recipe (:package "strace-mode" :repo "pkmoore/strace-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Strace output syntax highlighting" :date (23052 43728) :url "https://github.com/pkmoore/strace-mode") (streak :source "MELPA" :recipe (:package "streak" :fetcher github :repo "fosskers/streak" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track a daily streak in your Mode Line" :date (26008 28112) :url "https://github.com/fosskers/streak") (streamlink :source "MELPA" :recipe (:package "streamlink" :repo "BenediktBroich/streamlink" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for streamlink output" :date (24850 59600) :url "https://github.com/BenediktBroich/streamlink") (strie :source "MELPA" :recipe (:package "strie" :fetcher github :repo "jcatw/strie.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple trie data structure implementation" :date (22203 42192) :url "https://github.com/jcatw/strie.el") (string-edit-at-point :source "MELPA" :recipe (:package "string-edit-at-point" :fetcher github :repo "magnars/string-edit.el" :old-names (string-edit) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Avoid escape nightmares by editing string in separate buffer" :date (25543 3152) :url "https://github.com/magnars/string-edit.el") (string-inflection :source "MELPA" :recipe (:package "string-inflection" :fetcher github :repo "akicho8/string-inflection" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" :date (26302 27728) :url "https://github.com/akicho8/string-inflection") (string-utils :source "MELPA" :recipe (:package "string-utils" :repo "rolandwalker/string-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "String-manipulation utilities" :date (21354 37056) :url "https://github.com/rolandwalker/string-utils") (stripe-buffer :source "MELPA" :recipe (:package "stripe-buffer" :fetcher github :repo "sabof/stripe-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use a different background for even and odd lines" :date (21636 49104) :url "https://github.com/sabof/stripe-buffer") (stripes :source "MELPA" :recipe (:package "stripes" :fetcher git :url "https://git.smrk.net/stripes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight alternating lines differently" :date (25640 39760) :url "https://git.smrk.net/stripes.el") (stumpwm-mode :source "MELPA" :recipe (:package "stumpwm-mode" :fetcher github :repo "stumpwm/stumpwm-contrib" :files ("util/swm-emacs/*.el")) :description "Special lisp mode for evaluating code into running stumpwm" :date (23026 19664) :url "https://github.com/stumpwm/stumpwm-contrib") (stupid-indent-mode :source "MELPA" :recipe (:package "stupid-indent-mode" :fetcher git :url "https://gist.github.com/5487564.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plain stupid indentation minor mode" :date (22821 62544) :url "https://gist.github.com/5487564.git") (stylefmt :source "MELPA" :recipe (:package "stylefmt" :repo "KeenS/stylefmt.el" :fetcher github :old-names (cssfmt) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Stylefmt interface" :date (22542 30288) :url "https://github.com/KeenS/stylefmt.el") (stylus-mode :source "MELPA" :recipe (:package "stylus-mode" :fetcher github :repo "brianc/jade-mode" :files ("stylus-mode.el")) :description "Major mode for editing .styl files" :date (24941 57424) :url "https://github.com/brianc/jade-mode") (su :source "MELPA" :recipe (:package "su" :repo "PythonNut/su.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically read and write files using su or sudo" :date (26105 64720) :url "https://github.com/PythonNut/su.el") (subatomic-theme :source "MELPA" :recipe (:package "subatomic-theme" :repo "cryon/subatomic-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Low contrast bluish color theme" :date (25075 2000) :url "https://github.com/cryon/subatomic-theme") (subatomic256-theme :source "MELPA" :recipe (:package "subatomic256-theme" :repo "d11wtq/subatomic256" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fork of subatomic-theme for terminals" :date (20931 24384) :url "https://github.com/d11wtq/subatomic256") (subemacs :source "MELPA" :recipe (:package "subemacs" :fetcher github :repo "kbauer/subemacs" :files (:defaults (:exclude "*experimental*"))) :description "Evaluating expressions in a fresh Emacs subprocess" :date (22750 50000) :url "https://github.com/kbauer/subemacs") (sublime-themes :source "MELPA" :recipe (:package "sublime-themes" :fetcher github :repo "owainlewis/emacs-color-themes" :files ("themes/*.el")) :description "A collection of themes based on Sublime Text" :date (22837 50768) :url "https://github.com/owainlewis/emacs-color-themes") (sublimity :source "MELPA" :recipe (:package "sublimity" :fetcher github :repo "zk-phi/sublimity" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smooth-scrolling, minimap and distraction-free mode" :date (24402 43728) :url "https://github.com/zk-phi/sublimity") (subsonic :source "MELPA" :recipe (:package "subsonic" :fetcher sourcehut :repo "amk/subsonic.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Browse and play music from subsonic servers with mpv" :date (25351 58064) :url "https://git.sr.ht/~amk/subsonic.el") (sudo-edit :source "MELPA" :recipe (:package "sudo-edit" :repo "nflath/sudo-edit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open files as another user" :date (25318 60752) :url "https://github.com/nflath/sudo-edit") (sudo-ext :source "MELPA" :recipe (:package "sudo-ext" :repo "rubikitch/sudo-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sudo support" :date (22665 4560) :url "https://github.com/rubikitch/sudo-ext") (sudo-utils :source "MELPA" :recipe (:package "sudo-utils" :fetcher github :repo "alpha-catharsis/sudo-utils" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sudo utilities" :date (24581 63184) :url "https://github.com/alpha-catharsis/sudo-utils") (sudoku :source "MELPA" :recipe (:package "sudoku" :fetcher github :repo "zevlg/sudoku.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple sudoku game, can download puzzles" :date (23972 57808) :url "https://github.com/zevlg/sudoku.el") (suggest :source "MELPA" :recipe (:package "suggest" :repo "Wilfred/suggest.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Suggest elisp functions that give the output requested" :date (25883 12112) :url "https://github.com/Wilfred/suggest.el") (suggestion-box :source "MELPA" :recipe (:package "suggestion-box" :repo "yuutayamada/suggestion-box-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show tooltip on the cursor" :date (22949 54736) :url "https://github.com/yuutayamada/suggestion-box-el") (sumibi :source "MELPA" :recipe (:package "sumibi" :fetcher github :repo "kiyoka/Sumibi" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Japanese input method powered by ChatGPT API" :date (25904 18256) :url "https://github.com/kiyoka/Sumibi") (sunburn-theme :source "MELPA" :recipe (:package "sunburn-theme" :repo "mvarela/Sunburn-Theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A low contrast color theme" :date (24537 9168) :url "https://github.com/mvarela/Sunburn-Theme") (sunny-day-theme :source "MELPA" :recipe (:package "sunny-day-theme" :repo "mswift42/sunny-day-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs24 theme with a light background" :date (21321 39744) :url "https://github.com/mswift42/sunny-day-theme") (sunshine :source "MELPA" :recipe (:package "sunshine" :fetcher github :repo "aaronbieber/sunshine.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide weather and forecast information" :date (24161 26704) :url "https://github.com/aaronbieber/sunshine.el") (suomalainen-kalenteri :source "MELPA" :recipe (:package "suomalainen-kalenteri" :fetcher github :repo "tlikonen/suomalainen-kalenteri" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Finnish national and Christian holidays for calendar" :date (25521 62544) :url "https://github.com/tlikonen/suomalainen-kalenteri") (super-save :source "MELPA" :recipe (:package "super-save" :fetcher github :repo "bbatsov/super-save" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-save buffers, based on your activity" :date (25971 33744) :url "https://github.com/bbatsov/super-save") (supergenpass :source "MELPA" :recipe (:package "supergenpass" :fetcher github :repo "ober/sgpass" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SuperGenPass for Emacs" :date (20820 41280) :url "https://github.com/ober/sgpass") (surround :source "MELPA" :recipe (:package "surround" :fetcher github :repo "mkleehammer/surround" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Easily add/delete/change parens, quotes, and more" :date (25974 9936) :url "https://github.com/mkleehammer/surround") (suscolors-theme :source "MELPA" :recipe (:package "suscolors-theme" :fetcher github :repo "TheSuspiciousWombat/SusColors-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Colorful theme, inspired by Gruvbox" :date (23848 62672) :url "https://github.com/TheSuspiciousWombat/SusColors-emacs") (sv-kalender-namnsdagar :source "MELPA" :recipe (:package "sv-kalender-namnsdagar" :repo "matsl/sv-kalender-namnsdagar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Swedish name day calendar" :date (26227 18128) :url "https://github.com/matsl/sv-kalender-namnsdagar") (svelte-mode :source "MELPA" :recipe (:package "svelte-mode" :fetcher github :repo "leafOfTree/svelte-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs major mode for Svelte" :date (26348 37072) :url "https://github.com/leafOfTree/svelte-mode") (svg-mode-line-themes :source "MELPA" :recipe (:package "svg-mode-line-themes" :repo "sabof/svg-mode-line-themes" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SVG-based themes for mode-line" :date (21818 44752) :url "https://github.com/sabof/svg-mode-line-themes") (svg-tag-mode :source "MELPA" :recipe (:package "svg-tag-mode" :repo "rougier/svg-tag-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Replace keywords with SVG tags" :date (26389 28496) :url "https://github.com/rougier/svg-tag-mode") (svgo :source "MELPA" :recipe (:package "svgo" :repo "hupf/svgo.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "SVG optimization with SVGO" :date (25229 18256) :url "https://github.com/hupf/svgo.el") (svnwrapper :source "MELPA" :recipe (:package "svnwrapper" :repo "Lindydancer/svnwrapper" :fetcher github :files (:defaults "bin")) :description "Highlighting and paging for shell command `svn'" :date (23249 6736) :url "https://github.com/Lindydancer/svnwrapper") (swagg :source "MELPA" :recipe (:package "swagg" :fetcher github :repo "isamert/swagg.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Swagger UI" :date (26113 58832) :url "https://github.com/isamert/swagg.el") (swagger-to-org :source "MELPA" :recipe (:package "swagger-to-org" :repo "ahungry/swagger-to-org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert a swagger.json file into an org-mode file" :date (22363 10832) :url "https://github.com/ahungry/swagger-to-org") (swap-buffers :source "MELPA" :recipe (:package "swap-buffers" :fetcher github :repo "ekazakov/swap-buffers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The quickest way to swap buffers between windows. Based on switch-window package" :date (21833 12112) :url "https://github.com/ekazakov/swap-buffers") (swap-regions :source "MELPA" :recipe (:package "swap-regions" :fetcher github :repo "xuchunyang/swap-regions.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Swap text in two regions" :date (23452 8528) :url "https://github.com/xuchunyang/swap-regions.el") (sway :source "MELPA" :recipe (:package "sway" :repo "thblt/sway.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Communication with the Sway window manager" :date (25984 45776) :url "https://github.com/thblt/sway.el") (sway-lang-mode :source "MELPA" :recipe (:package "sway-lang-mode" :repo "hhamud/sway-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for sway" :date (25623 30672) :url "https://github.com/hhamud/sway-mode") (sweet-theme :source "MELPA" :recipe (:package "sweet-theme" :fetcher github :repo "konkrotte/sweet-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sweet-looking theme" :date (24324 57936) :url "https://github.com/konkrotte/sweet-theme") (sweetgreen :source "MELPA" :recipe (:package "sweetgreen" :repo "CestDiego/sweetgreen.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Order Salads from sweetgreen.com" :date (23317 43088) :url "https://github.com/CestDiego/sweetgreen.el") (swift-helpful :source "MELPA" :recipe (:package "swift-helpful" :repo "danielmartin/swift-helpful" :fetcher github :files ("*.el" "swift-info/*.info" ("images" "swift-info/images/*.png"))) :description "Show documentation for Swift programs" :date (25285 63440) :url "https://github.com/danielmartin/swift-helpful") (swift-mode :source "MELPA" :recipe (:package "swift-mode" :repo "swift-emacs/swift-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for Apple's Swift programming language" :date (26349 57936) :url "https://github.com/swift-emacs/swift-mode") (swift-ts-mode :source "MELPA" :recipe (:package "swift-ts-mode" :fetcher github :repo "rechsteiner/swift-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Swift based on tree-sitter" :date (26295 54480) :url "https://github.com/rechsteiner/swift-ts-mode") (swift3-mode :source "MELPA" :recipe (:package "swift3-mode" :fetcher github :repo "taku0/swift3-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for Apple's Swift programming language" :date (22493 44752) :url "https://github.com/taku0/swift3-mode") (swiper :source "MELPA" :recipe (:package "swiper" :repo "abo-abo/swiper" :fetcher github :files ("swiper.el")) :description "Isearch with an overview.  Oh, man!" :date (26319 36816) :url "https://github.com/abo-abo/swiper") (swiper-helm :source "MELPA" :recipe (:package "swiper-helm" :repo "abo-abo/swiper-helm" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helm version of Swiper" :date (23152 56528) :url "https://github.com/abo-abo/swiper-helm") (swiss-holidays :source "MELPA" :recipe (:package "swiss-holidays" :fetcher github :repo "egli/swiss-holidays" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Swiss holidays for the calendar" :date (24268 12752) :url "https://github.com/egli/swiss-holidays") (switch-buffer-functions :source "MELPA" :recipe (:package "switch-buffer-functions" :fetcher github :repo "10sr/switch-buffer-functions-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hook run when current buffer changed" :date (24109 64976) :url "https://github.com/10sr/switch-buffer-functions-el") (switch-window :source "MELPA" :recipe (:package "switch-window" :repo "dimitri/switch-window" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A *visual* way to switch window" :date (26398 43472) :url "https://github.com/dimitri/switch-window") (swoop :source "MELPA" :recipe (:package "swoop" :fetcher github :repo "emacsorphanage/swoop" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Peculiar buffer navigation" :date (24298 33872) :url "https://github.com/emacsorphanage/swoop") (sws-mode :source "MELPA" :recipe (:package "sws-mode" :fetcher github :repo "brianc/jade-mode" :files ("sws-mode.el")) :description "(S)ignificant (W)hite(S)pace mode" :date (24887 53968) :url "https://github.com/brianc/jade-mode") (sx :source "MELPA" :recipe (:package "sx" :repo "vermiculus/sx.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "StackExchange client. Ask and answer questions on Stack Overflow, Super User, and the likes" :date (26034 52176) :url "https://github.com/vermiculus/sx.el") (sxiv :source "MELPA" :recipe (:package "sxiv" :fetcher codeberg :repo "contrapunctus/sxiv.el" :branch "dev" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run the Simple X Image Viewer, with Dired integration" :date (25235 57040) :url "https://codeberg.org/contrapunctus/sxiv.el") (symbol-navigation-hydra :source "MELPA" :recipe (:package "symbol-navigation-hydra" :fetcher github :repo "bgwines/symbol-navigation-hydra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A symbol-aware, range-aware hydra" :date (24930 720) :url "https://github.com/bgwines/symbol-navigation-hydra") (symbol-overlay :source "MELPA" :recipe (:package "symbol-overlay" :fetcher github :repo "wolray/symbol-overlay" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight symbols with keymap-enabled overlays" :date (26339 22096) :url "https://github.com/wolray/symbol-overlay") (symbolist :source "MELPA" :recipe (:package "symbolist" :fetcher github :repo "lassik/emacs-symbolist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "List and interactively unbind Emacs Lisp symbols" :date (24966 60624) :url "https://github.com/lassik/emacs-symbolist") (symbols-outline :source "MELPA" :recipe (:package "symbols-outline" :repo "liushihao456/symbols-outline.el" :fetcher github :files (:defaults "icons")) :description "Display symbols (functions, variables, etc) in outline view" :date (26241 51024) :url "https://github.com/liushihao456/symbols-outline.el") (symbolword-mode :source "MELPA" :recipe (:package "symbolword-mode" :repo "ncaq/symbolword-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Modify word split" :date (23231 63184) :url "https://github.com/ncaq/symbolword-mode") (symex :source "MELPA" :recipe (:package "symex" :repo "drym-org/symex.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An evil way to edit Lisp symbolic expressions as trees" :date (26392 4688) :url "https://github.com/drym-org/symex.el") (symon :source "MELPA" :recipe (:package "symon" :fetcher github :repo "zk-phi/symon" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tiny graphical system monitor" :date (22703 19792) :url "https://github.com/zk-phi/symon") (symon-lingr :source "MELPA" :recipe (:package "symon-lingr" :fetcher github :repo "zk-phi/symon-lingr" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A notification-based Lingr client powered by symon.el" :date (21930 48720) :url "https://github.com/zk-phi/symon-lingr") (sync-recentf :source "MELPA" :recipe (:package "sync-recentf" :fetcher github :repo "ffevotte/sync-recentf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Synchronize the recent files list between Emacs instances" :date (22261 42704) :url "https://github.com/ffevotte/sync-recentf") (syncthing :source "MELPA" :recipe (:package "syncthing" :fetcher github :repo "KeyWeeUsr/emacs-syncthing" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Client for Syncthing" :date (26001 54864) :url "https://github.com/KeyWeeUsr/emacs-syncthing") (synonymous :source "MELPA" :recipe (:package "synonymous" :fetcher github :repo "toroidal-code/synonymous.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A thesaurus at your fingertips" :date (23222 48208) :url "https://github.com/toroidal-code/synonymous.el") (synosaurus :source "MELPA" :recipe (:package "synosaurus" :repo "hpdeifel/synosaurus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An extensible thesaurus supporting lookup and substitution" :date (24026 61264) :url "https://github.com/hpdeifel/synosaurus") (synquid :source "MELPA" :recipe (:package "synquid" :repo "cpitclaudel/synquid-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Synquid files" :date (22509 32976) :url "https://github.com/cpitclaudel/synquid-emacs") (syntactic-close :source "MELPA" :recipe (:package "syntactic-close" :fetcher github :repo "emacs-berlin/syntactic-close" :old-names (general-close) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert closing delimiter" :date (26116 35024) :url "https://github.com/emacs-berlin/syntactic-close") (syntactic-sugar :source "MELPA" :recipe (:package "syntactic-sugar" :repo "rolandwalker/syntactic-sugar" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Effect-free forms such as if/then/else" :date (21354 37056) :url "https://github.com/rolandwalker/syntactic-sugar") (syntax-subword :source "MELPA" :recipe (:package "syntax-subword" :fetcher github :repo "jpkotta/syntax-subword" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make operations on words more fine-grained" :date (22195 48080) :url "https://github.com/jpkotta/syntax-subword") (syntree :source "MELPA" :recipe (:package "syntree" :repo "enricoflor/syntree" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Draw plain text constituency trees" :date (25746 4944) :url "https://github.com/enricoflor/syntree") (sysctl :source "MELPA" :recipe (:package "sysctl" :repo "dantecatalfamo/sysctl.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage sysctl though org-mode" :date (24294 36816) :url "https://github.com/dantecatalfamo/sysctl.el") (syslog-mode :source "MELPA" :recipe (:package "syslog-mode" :fetcher github :repo "vapniks/syslog-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for viewing log files & strace output" :date (26305 3920) :url "https://github.com/vapniks/syslog-mode") (system-packages :source "MELPA" :recipe (:package "system-packages" :fetcher gitlab :repo "jabranham/system-packages" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Functions to manage system packages" :date (25168 41552) :url "https://gitlab.com/jabranham/system-packages") (system-specific-settings :source "MELPA" :recipe (:package "system-specific-settings" :repo "DarwinAwardWinner/emacs-system-specific-settings" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply settings only on certain systems" :date (21489 2496) :url "https://github.com/DarwinAwardWinner/emacs-system-specific-settings") (systemd :source "MELPA" :recipe (:package "systemd" :fetcher github :repo "holomorph/systemd-mode" :files (:defaults "*.txt")) :description "Major mode for editing systemd units" :date (25561 33104) :url "https://github.com/holomorph/systemd-mode") (systemtap-mode :source "MELPA" :recipe (:package "systemtap-mode" :fetcher github :repo "ruediger/systemtap-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode for SystemTap" :date (22096 56144) :url "https://github.com/ruediger/systemtap-mode") (ta :source "MELPA" :recipe (:package "ta" :repo "kuanyui/ta.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A tool to deal with Chinese homophonic characters" :date (22373 46672) :url "https://github.com/kuanyui/ta.el") (tab-bar-buffers :source "MELPA" :recipe (:package "tab-bar-buffers" :fetcher github :repo "ajrosen/tab-bar-buffers" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use tab-bar-mode as a buffer manager" :date (26076 64464) :url "https://github.com/ajrosen/tab-bar-buffers") (tab-bar-echo-area :source "MELPA" :recipe (:package "tab-bar-echo-area" :fetcher github :repo "fritzgrabo/tab-bar-echo-area" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display tab names of the tab bar in the echo area" :date (26293 12752) :url "https://github.com/fritzgrabo/tab-bar-echo-area") (tab-bar-groups :source "MELPA" :recipe (:package "tab-bar-groups" :fetcher github :repo "fritzgrabo/tab-bar-groups" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tab groups for the tab bar" :date (24933 63312) :url "https://github.com/fritzgrabo/tab-bar-groups") (tab-bar-lost-commands :source "MELPA" :recipe (:package "tab-bar-lost-commands" :fetcher github :repo "fritzgrabo/tab-bar-lost-commands" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The \"lost commands\" of the tab bar" :date (24933 63312) :url "https://github.com/fritzgrabo/tab-bar-lost-commands") (tab-bar-notch :source "MELPA" :recipe (:package "tab-bar-notch" :fetcher github :repo "jimeh/tab-bar-notch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adjust tab-bar height for MacBook Pro notch" :date (25946 30544) :url "https://github.com/jimeh/tab-bar-notch") (tab-group :source "MELPA" :recipe (:package "tab-group" :repo "tarao/tab-group-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Grouped tabs and their tabbar" :date (21271 33344) :url "https://github.com/tarao/tab-group-el") (tab-jump-out :source "MELPA" :recipe (:package "tab-jump-out" :fetcher github :repo "mkleehammer/tab-jump-out" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use tab to jump out of delimiter pairs" :date (26054 37456) :url "https://github.com/mkleehammer/tab-jump-out") (tabbar :source "MELPA" :recipe (:package "tabbar" :fetcher github :repo "dholm/tabbar" :files ("tabbar.el" "*.png")) :description "Display a tab bar in the header line" :date (23384 58576) :url "https://github.com/dholm/tabbar") (tabbar-ruler :source "MELPA" :recipe (:package "tabbar-ruler" :fetcher github :repo "mattfidler/tabbar-ruler.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Pretty tabbar, autohide, use both tabbar/ruler" :date (22431 47184) :url "https://github.com/mattfidler/tabbar-ruler.el") (tabby-mode :source "MELPA" :recipe (:package "tabby-mode" :fetcher github :repo "ragnard/tabby-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for the Tabby AI coding assistant" :date (26009 48976) :url "https://github.com/ragnard/tabby-mode") (tabgo :source "MELPA" :recipe (:package "tabgo" :fetcher github :repo "isamert/tabgo.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to tabs, avy style" :date (26046 43344) :url "https://github.com/isamert/tabgo.el") (tablist :source "MELPA" :recipe (:package "tablist" :fetcher github :repo "emacsorphanage/tablist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extended tabulated-list-mode" :date (25904 18256) :url "https://github.com/emacsorphanage/tablist") (tabnine :source "MELPA" :recipe (:package "tabnine" :fetcher github :repo "shuxiao9058/tabnine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An unofficial TabNine package with TabNine Chat supported" :date (26239 9296) :url "https://github.com/shuxiao9058/tabnine") (tabspaces :source "MELPA" :recipe (:package "tabspaces" :repo "mclear-tools/tabspaces" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Leverage tab-bar and project for buffer-isolated workspaces" :date (26353 54992) :url "https://github.com/mclear-tools/tabspaces") (tabula-rasa :source "MELPA" :recipe (:package "tabula-rasa" :fetcher github :repo "dppdppd/Tabula-Rasa" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Distraction free writing mode" :date (21647 19408) :url "https://github.com/dppdppd/Tabula-Rasa") (tagedit :source "MELPA" :recipe (:package "tagedit" :fetcher github :repo "magnars/tagedit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Some paredit-like features for html-mode" :date (22578 3792) :url "https://github.com/magnars/tagedit") (take-off :source "MELPA" :recipe (:package "take-off" :fetcher github :repo "tburette/take-off" :files ("*.el" "front")) :description "Emacs remote web access" :date (21384 58176) :url "https://github.com/tburette/take-off") (talonscript-mode :source "MELPA" :recipe (:package "talonscript-mode" :repo "jcaw/talonscript-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Talon Voice's .talon files" :date (25899 336) :url "https://github.com/jcaw/talonscript-mode") (tango-2-theme :source "MELPA" :recipe (:package "tango-2-theme" :url "https://gist.github.com/2024464.git" :fetcher git :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tango 2 color theme for GNU Emacs 24" :date (20317 1088) :url "https://gist.github.com/2024464.git") (tango-plus-theme :source "MELPA" :recipe (:package "tango-plus-theme" :repo "tmalsburg/tango-plus-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A color theme based on the tango palette" :date (26244 27216) :url "https://github.com/tmalsburg/tango-plus-theme") (tangonov-theme :source "MELPA" :recipe (:package "tangonov-theme" :fetcher sourcehut :repo "trevdev/tangonov-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A 256 color dark theme featuring bright pastels" :date (25670 60880) :url "https://git.sr.ht/~trevdev/tangonov-theme") (tangotango-theme :source "MELPA" :recipe (:package "tangotango-theme" :repo "juba/color-theme-tangotango" :files ("tangotango-theme.el") :fetcher github) :description "Tango Palette color theme for Emacs 24" :date (25295 12880) :url "https://github.com/juba/color-theme-tangotango") (tao-theme :source "MELPA" :recipe (:package "tao-theme" :repo "11111000000/tao-theme-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "This package provides two parametrized uncoloured color themes for Emacs: tao-yin and tao-yang" :date (26220 44880) :url "https://github.com/11111000000/tao-theme-emacs") (tardis-theme :source "MELPA" :recipe (:package "tardis-theme" :fetcher github :repo "antonhibl/tardis-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quantum Country Theme" :date (25576 464) :url "https://github.com/antonhibl/tardis-theme") (taskpaper-mode :source "MELPA" :recipe (:package "taskpaper-mode" :repo "saf-dmitry/taskpaper-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for working with TaskPaper files" :date (26370 64080) :url "https://github.com/saf-dmitry/taskpaper-mode") (taskrunner :source "MELPA" :recipe (:package "taskrunner" :fetcher github :repo "emacs-taskrunner/emacs-taskrunner" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Retrieve build system/taskrunner tasks" :date (23934 42576) :url "https://github.com/emacs-taskrunner/emacs-taskrunner") (tawny-mode :source "MELPA" :recipe (:package "tawny-mode" :fetcher github :repo "phillord/tawny-owl" :files ("emacs/tawny-mode.el")) :description "Ontology Editing with Tawny-OWL" :date (26407 58448) :url "https://github.com/phillord/tawny-owl") (tblui :source "MELPA" :recipe (:package "tblui" :fetcher github :repo "Yuki-Inoue/tblui.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Define tabulated list UI easily" :date (25960 63440) :url "https://github.com/Yuki-Inoue/tblui.el") (tbx2org :source "MELPA" :recipe (:package "tbx2org" :repo "emacsattic/tbx2org" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tinderbox to org-mode conversion" :date (21258 21312) :url "https://github.com/emacsattic/tbx2org") (tc :source "MELPA" :recipe (:package "tc" :fetcher github :repo "kanchoku/tc" :version-regexp "ignore-all-tags" :files ("*.el" "tcode")) :description "A Japanese input method with T-Code on Emacs" :date (25950 27600) :url "https://github.com/kanchoku/tc") (tco :source "MELPA" :recipe (:package "tco" :repo "Wilfred/tco.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tail-call optimisation for Emacs lisp" :date (24032 13648) :url "https://github.com/Wilfred/tco.el") (tea-time :source "MELPA" :recipe (:package "tea-time" :fetcher github :repo "konzeptual/tea-time" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple timer package, useful to make perfect tea" :date (20342 4288) :url "https://github.com/konzeptual/tea-time") (teacode-expand :source "MELPA" :recipe (:package "teacode-expand" :fetcher github :repo "raguay/TeaCode-Expand" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Expansion of text by TeaCode program" :date (23593 12752) :url "https://github.com/raguay/TeaCode-Expand") (teco :source "MELPA" :recipe (:package "teco" :fetcher github :repo "mtk/teco" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Teco interpreter" :date (24323 37072) :url "https://github.com/mtk/teco") (telega :source "MELPA" :recipe (:package "telega" :fetcher github :repo "zevlg/telega.el" :files (:defaults "etc" "server" "contrib" "Makefile")) :description "Telegram client (unofficial)" :date (26336 45904) :url "https://github.com/zevlg/telega.el") (telepathy :source "MELPA" :recipe (:package "telepathy" :fetcher github :repo "NicolasPetton/telepathy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Access Telepathy from Emacs" :date (21156 53184) :url "https://github.com/NicolasPetton/telepathy.el") (telephone-line :source "MELPA" :recipe (:package "telephone-line" :repo "dbordak/telephone-line" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Rewrite of Powerline" :date (26012 25168) :url "https://github.com/dbordak/telephone-line") (teleport :source "MELPA" :recipe (:package "teleport" :repo "caramelhooves/teleport.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Integration for tsh (goteleport.com)" :date (26264 12496) :url "https://github.com/caramelhooves/teleport.el") (teletext :source "MELPA" :recipe (:package "teletext" :fetcher github :repo "lassik/emacs-teletext" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Teletext broadcast viewer" :date (25979 27856) :url "https://github.com/lassik/emacs-teletext") (teletext-yle :source "MELPA" :recipe (:package "teletext-yle" :fetcher github :repo "lassik/emacs-teletext-yle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Teletext provider for Finnish national network YLE" :date (25979 27856) :url "https://github.com/lassik/emacs-teletext-yle") (tempel :source "MELPA" :recipe (:package "tempel" :repo "minad/tempel" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tempo templates/snippets with in-buffer field editing" :date (26356 31184) :url "https://github.com/minad/tempel") (tempel-collection :source "MELPA" :recipe (:package "tempel-collection" :repo "Crandel/tempel-collection" :fetcher github :files (:defaults "templates")) :description "Collection of templates for Tempel" :date (26326 10064) :url "https://github.com/Crandel/tempel-collection") (templ-ts-mode :source "MELPA" :recipe (:package "templ-ts-mode" :fetcher github :repo "danderson/templ-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Templ files" :date (26024 16336) :url "https://github.com/danderson/templ-ts-mode") (template-dumper :source "MELPA" :recipe (:package "template-dumper" :fetcher github :repo "natelastname/template-dumper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Create files from yasnippet templates" :date (26240 30160) :url "https://github.com/natelastname/template-dumper") (template-overlays :source "MELPA" :recipe (:package "template-overlays" :repo "mmontone/template-overlays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display template regions using overlays" :date (23358 34512) :url "https://github.com/mmontone/template-overlays") (templatel :source "MELPA" :recipe (:package "templatel" :fetcher github :repo "emacs-love/templatel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Templating language;" :date (24879 59856) :url "https://github.com/emacs-love/templatel") (temporary-persistent :source "MELPA" :recipe (:package "temporary-persistent" :repo "kostafey/temporary-persistent" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep temp notes buffers persistent" :date (25539 6096) :url "https://gitlab.com/kostafey/temporary-persistent") (ten-hundred-mode :source "MELPA" :recipe (:package "ten-hundred-mode" :fetcher github :repo "aaron-em/ten-hundred-mode.el" :files (:defaults "lib")) :description "Use only the ten hundred most usual words" :date (22546 27344) :url "https://github.com/aaron-em/ten-hundred-mode.el") (term+ :source "MELPA" :recipe (:package "term+" :repo "tarao/term-plus-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Term-mode enhancement" :date (22800 56400) :url "https://github.com/tarao/term-plus-el") (term+key-intercept :source "MELPA" :recipe (:package "term+key-intercept" :repo "tarao/term-plus-ki-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Term+ intercept key mapping" :date (21241 12224) :url "https://github.com/tarao/term-plus-ki-el") (term+mux :source "MELPA" :recipe (:package "term+mux" :repo "tarao/term-plus-mux-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Term+ terminal multiplexer and session management" :date (21241 12224) :url "https://github.com/tarao/term-plus-mux-el") (term-alert :source "MELPA" :recipe (:package "term-alert" :fetcher github :repo "calliecameron/term-alert" :files (:defaults "setup")) :description "Notifications when commands complete in term.el" :date (25647 13008) :url "https://github.com/calliecameron/term-alert") (term-cmd :source "MELPA" :recipe (:package "term-cmd" :fetcher github :repo "calliecameron/term-cmd" :files (:defaults "bin")) :description "Send commands from programs running in term.el" :date (25647 13008) :url "https://github.com/calliecameron/term-cmd") (term-manager :source "MELPA" :recipe (:package "term-manager" :fetcher github :repo "colonelpanic8/term-manager" :files ("term-manager*.el")) :description "Contextual terminal management" :date (26295 54480) :url "https://github.com/colonelpanic8/term-manager") (term-project :source "MELPA" :recipe (:package "term-project" :fetcher github :repo "colonelpanic8/term-manager" :files ("term-project.el")) :description "Terminal management for project.el" :date (26203 35792) :url "https://github.com/colonelpanic8/term-manager") (term-projectile :source "MELPA" :recipe (:package "term-projectile" :fetcher github :repo "colonelpanic8/term-manager" :files ("term-projectile.el")) :description "Projectile terminal management" :date (26203 35792) :url "https://github.com/colonelpanic8/term-manager") (term-run :source "MELPA" :recipe (:package "term-run" :repo "10sr/term-run-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run arbitrary command in terminal buffer" :date (24111 20304) :url "https://github.com/10sr/term-run-el") (termbright-theme :source "MELPA" :recipe (:package "termbright-theme" :repo "bmastenbrook/termbright-theme-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A more usable theme for white-on-black terminals" :date (22067 55888) :url "https://github.com/bmastenbrook/termbright-theme-el") (terminal-here :source "MELPA" :recipe (:package "terminal-here" :repo "davidshepherd7/terminal-here" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run an external terminal in current directory" :date (26076 64464) :url "https://github.com/davidshepherd7/terminal-here") (terminal-toggle :source "MELPA" :recipe (:package "terminal-toggle" :fetcher gitlab :repo "mtekman/terminal-toggle.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple pop-up terminal" :date (23668 22352) :url "https://gitlab.com/mtekman/terminal-toggle.el") (tern :source "MELPA" :recipe (:package "tern" :fetcher github :repo "ternjs/tern" :files ("emacs/tern.el")) :description "Tern-powered JavaScript integration" :date (24069 8016) :url "https://github.com/ternjs/tern") (tern-auto-complete :source "MELPA" :recipe (:package "tern-auto-complete" :fetcher github :repo "ternjs/tern" :files ("emacs/tern-auto-complete.el")) :description "Tern Completion by auto-complete.el" :date (24069 8016) :url "https://github.com/ternjs/tern") (tern-context-coloring :source "MELPA" :recipe (:package "tern-context-coloring" :fetcher github :repo "jacksonrayhamilton/tern-context-coloring" :files ("emacs/tern-context-coloring.el")) :description "Use Tern for context coloring" :date (22633 28112) :url "https://github.com/jacksonrayhamilton/tern-context-coloring") (terraform-doc :source "MELPA" :recipe (:package "terraform-doc" :repo "TxGVNN/terraform-doc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Look up terraform documentation on the fly" :date (26258 60112) :url "https://github.com/TxGVNN/terraform-doc") (terraform-mode :source "MELPA" :recipe (:package "terraform-mode" :repo "hcl-emacs/terraform-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for terraform configuration file" :date (26282 42448) :url "https://github.com/hcl-emacs/terraform-mode") (tesouro :source "MELPA" :recipe (:package "tesouro" :repo "rberaldo/tesouro.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Brazilian Portuguese synonym search in dicio.com.br" :date (25401 64464) :url "https://github.com/rberaldo/tesouro.el") (test-c :source "MELPA" :recipe (:package "test-c" :repo "aaptel/test-c" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly test c code" :date (23260 63440) :url "https://github.com/aaptel/test-c") (test-case-mode :source "MELPA" :recipe (:package "test-case-mode" :fetcher codeberg :repo "emacs-weirdware-abandoned/test-case-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unit test front-end" :date (20895 50880) :url "https://codeberg.org/emacs-weirdware-abandoned/test-case-mode") (test-cockpit :source "MELPA" :recipe (:package "test-cockpit" :repo "johannes-mueller/test-cockpit.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A command center to run tests of a software project" :date (26206 11984) :url "https://github.com/johannes-mueller/test-cockpit.el") (test-simple :source "MELPA" :recipe (:package "test-simple" :fetcher github :repo "rocky/emacs-test-simple" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple Unit Test Framework for Emacs Lisp" :date (25860 50640) :url "https://github.com/rocky/emacs-test-simple") (tex-smart-umlauts :source "MELPA" :recipe (:package "tex-smart-umlauts" :fetcher github :repo "emacsmirror/tex-smart-umlauts" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Smart umlaut conversion for TeX" :date (25659 4176) :url "https://github.com/emacsmirror/tex-smart-umlauts") (texfrag :source "MELPA" :recipe (:package "texfrag" :repo "TobiasZawada/texfrag" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Preview LaTeX fragments in alien major modes" :date (26140 17360) :url "https://github.com/TobiasZawada/texfrag") (text-categories :source "MELPA" :recipe (:package "text-categories" :repo "Dspil/text-categories" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Assign text categories to a buffer for mass deletion" :date (26349 57936) :url "https://github.com/Dspil/text-categories") (textile-mode :source "MELPA" :recipe (:package "textile-mode" :repo "juba/textile-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Textile markup editing major mode" :date (26057 13648) :url "https://github.com/juba/textile-mode") (textmate :source "MELPA" :recipe (:package "textmate" :repo "defunkt/textmate.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TextMate minor mode for Emacs" :date (20041 31424) :url "https://github.com/defunkt/textmate.el") (textmate-to-yas :source "MELPA" :recipe (:package "textmate-to-yas" :fetcher github :repo "mattfidler/textmate-to-yas.el" :files (:defaults "*.pl" (:exclude "*.texi"))) :description "Import Textmate macros into yasnippet syntax" :date (22280 7120) :url "https://github.com/mattfidler/textmate-to-yas.el") (textsize :source "MELPA" :recipe (:package "textsize" :repo "WJCFerguson/textsize" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configure frame text size automatically" :date (25885 53840) :url "https://github.com/WJCFerguson/textsize") (textx-mode :source "MELPA" :recipe (:package "textx-mode" :fetcher github :repo "textX/textx-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing TextX files" :date (25628 48592) :url "https://github.com/textX/textx-mode") (tf2-conf-mode :source "MELPA" :recipe (:package "tf2-conf-mode" :fetcher github :repo "wynro/emacs-tf2-conf-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TF2 Configuration files syntax highlighting" :date (22601 51664) :url "https://github.com/wynro/emacs-tf2-conf-mode") (tfsmacs :source "MELPA" :recipe (:package "tfsmacs" :repo "sebasmonia/tfsmacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MS TFS source control interaction" :date (23446 56144) :url "https://github.com/sebasmonia/tfsmacs") (the-matrix-theme :source "MELPA" :recipe (:package "the-matrix-theme" :fetcher github :repo "monkeyjunglejuice/matrix-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Green-on-black dark theme inspired by \"The Matrix\" movie" :date (26158 47312) :url "https://github.com/monkeyjunglejuice/matrix-emacs-theme") (theme-anchor :source "MELPA" :recipe (:package "theme-anchor" :fetcher github :repo "GongYiLiao/theme-anchor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Apply theme in current buffer only" :date (25871 20944) :url "https://github.com/GongYiLiao/theme-anchor") (theme-changer :source "MELPA" :recipe (:package "theme-changer" :fetcher github :repo "hadronzoo/theme-changer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sunrise/Sunset Theme Changer for Emacs" :date (25844 62416) :url "https://github.com/hadronzoo/theme-changer") (theme-looper :source "MELPA" :recipe (:package "theme-looper" :repo "myTerminal/theme-looper" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for switching themes in Emacs interactively" :date (24872 208) :url "https://github.com/myTerminal/theme-looper") (theme-magic :source "MELPA" :recipe (:package "theme-magic" :fetcher github :repo "jcaw/theme-magic" :files (:defaults "python")) :description "Apply your Emacs theme to the rest of Linux" :date (23846 20944) :url "https://github.com/jcaw/theme-magic") (therapy :source "MELPA" :recipe (:package "therapy" :fetcher github :repo "abingham/therapy" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Hooks for managing multiple Python major versions" :date (22084 64976) :url "https://github.com/abingham/therapy") (thingopt :source "MELPA" :recipe (:package "thingopt" :fetcher github :repo "emacsorphanage/thingopt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Thing at Point optional utilities" :date (22334 10576) :url "https://github.com/emacsorphanage/thingopt") (thinks :source "MELPA" :recipe (:package "thinks" :fetcher github :repo "davep/thinks.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert text in a think bubble" :date (22912 60368) :url "https://github.com/davep/thinks.el") (third-time :source "MELPA" :recipe (:package "third-time" :repo "swflint/third-time" :fetcher sourcehut :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Third Time: A Better Way to Work" :date (26050 40400) :url "https://git.sr.ht/~swflint/third-time") (thread-dump :source "MELPA" :recipe (:package "thread-dump" :fetcher github :repo "nd/thread-dump.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Java thread dump viewer" :date (22931 24784) :url "https://github.com/nd/thread-dump.el") (threes :source "MELPA" :recipe (:package "threes" :fetcher github :repo "xuchunyang/threes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A clone of Threes (a tiny puzzle game)" :date (22455 29520) :url "https://github.com/xuchunyang/threes.el") (thrift :source "MELPA" :recipe (:package "thrift" :fetcher github :repo "facebook/fbthrift" :files ("thrift/contrib/thrift.el")) :description "Major mode for fbthrift and Apache Thrift files" :date (26406 37584) :url "https://github.com/facebook/fbthrift") (thumb-through :source "MELPA" :recipe (:package "thumb-through" :fetcher github :repo "apg/thumb-through" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Plain text reader of HTML documents" :date (20247 9408) :url "https://github.com/apg/thumb-through") (tickscript-mode :source "MELPA" :recipe (:package "tickscript-mode" :fetcher github :repo "msherry/tickscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for Tickscript files" :date (23096 11344) :url "https://github.com/msherry/tickscript-mode") (tidal :source "MELPA" :recipe (:package "tidal" :fetcher github :repo "tidalcycles/Tidal" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interact with TidalCycles for live coding patterns" :date (26129 47056) :url "https://github.com/tidalcycles/Tidal") (tide :source "MELPA" :recipe (:package "tide" :fetcher github :repo "ananthakumaran/tide" :files (:defaults "tsserver")) :description "Typescript Interactive Development Environment" :date (26386 52304) :url "https://github.com/ananthakumaran/tide") (tiktoken :source "MELPA" :recipe (:package "tiktoken" :fetcher github :repo "zkry/tiktoken.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Count BPE Tokens" :date (26004 31056) :url "https://github.com/zkry/tiktoken.el") (tikz :source "MELPA" :recipe (:package "tikz" :repo "emiliotorres/tikz" :fetcher github :files (:defaults "templates")) :description "A minor mode to edit TikZ pictures" :date (25230 39120) :url "https://github.com/emiliotorres/tikz") (tile :source "MELPA" :recipe (:package "tile" :repo "colonelpanic8/tile" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tile windows with layouts" :date (22622 57808) :url "https://github.com/colonelpanic8/tile") (time-block :source "MELPA" :recipe (:package "time-block" :fetcher sourcehut :repo "swflint/time-block-command" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Block running commands using time" :date (25692 1488) :url "https://git.sr.ht/~swflint/time-block-command") (time-ext :source "MELPA" :recipe (:package "time-ext" :repo "rubikitch/time-ext" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "More function for time/date" :date (22665 4560) :url "https://github.com/rubikitch/time-ext") (time-uuid-mode :source "MELPA" :recipe (:package "time-uuid-mode" :fetcher github :repo "RobertPlant/time-uuid-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for previewing time uuids as an overlay" :date (26016 22224) :url "https://github.com/RobertPlant/time-uuid-mode") (timecop :source "MELPA" :recipe (:package "timecop" :repo "emacs-php/emacs-datetime" :fetcher github :files ("timecop.el")) :description "Freeze Time for testing" :date (26007 7248) :url "https://github.com/emacs-php/emacs-datetime") (timeout :source "MELPA" :recipe (:package "timeout" :fetcher github :repo "karthink/timeout" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Throttle or debounce elisp functions" :date (26231 15184) :url "https://github.com/karthink/timeout") (timer-revert :source "MELPA" :recipe (:package "timer-revert" :repo "yyr/timer-revert" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to revert buffer for a given time interval" :date (21696 4944) :url "https://github.com/yyr/timer-revert") (timesheet :source "MELPA" :recipe (:package "timesheet" :fetcher github :repo "tmarble/timesheet.el" :files ("*.el" "bin" "share")) :description "Timesheet management add-on for org-mode" :date (25403 19792) :url "https://github.com/tmarble/timesheet.el") (timonier :source "MELPA" :recipe (:package "timonier" :fetcher github :repo "nlamirault/timonier" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Kubernetes Applications" :date (22763 62032) :url "https://github.com/nlamirault/timonier") (timp :source "MELPA" :recipe (:package "timp" :repo "mola-T/timp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Multithreading library" :date (22372 25808) :url "https://github.com/mola-T/timp") (timu-caribbean-theme :source "MELPA" :recipe (:package "timu-caribbean-theme" :repo "aimebertrand/timu-caribbean-theme" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme with cyan as a dominant color" :date (26076 64464) :url "https://gitlab.com/aimebertrand/timu-caribbean-theme") (timu-line :source "MELPA" :recipe (:package "timu-line" :repo "aimebertrand/timu-line" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Custom and simple mode line" :date (26127 5328) :url "https://gitlab.com/aimebertrand/timu-line") (timu-macos-theme :source "MELPA" :recipe (:package "timu-macos-theme" :repo "aimebertrand/timu-macos-theme" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme inspired by the macOS UI" :date (26125 50000) :url "https://gitlab.com/aimebertrand/timu-macos-theme") (timu-rouge-theme :source "MELPA" :recipe (:package "timu-rouge-theme" :repo "aimebertrand/timu-rouge-theme" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme inspired by the Rouge Theme for VSCode" :date (26364 25296) :url "https://gitlab.com/aimebertrand/timu-rouge-theme") (timu-spacegrey-theme :source "MELPA" :recipe (:package "timu-spacegrey-theme" :fetcher gitlab :repo "aimebertrand/timu-spacegrey-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Color theme inspired by the Spacegray theme in Sublime Text" :date (26364 25296) :url "https://gitlab.com/aimebertrand/timu-spacegrey-theme") (tinkerer :source "MELPA" :recipe (:package "tinkerer" :repo "yyr/tinkerer.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Elisp wrapper for Tinkerer Blogging Engine" :date (24414 34896) :url "https://github.com/yyr/tinkerer.el") (tiny :source "MELPA" :recipe (:package "tiny" :fetcher github :repo "abo-abo/tiny" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly generate linear ranges in Emacs" :date (25371 43344) :url "https://github.com/abo-abo/tiny") (tiny-menu :source "MELPA" :recipe (:package "tiny-menu" :fetcher github :repo "aaronbieber/tiny-menu.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display tiny menus" :date (25309 45776) :url "https://github.com/aaronbieber/tiny-menu.el") (tinypng :source "MELPA" :recipe (:package "tinypng" :fetcher github :repo "xuchunyang/tinypng.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compress PNG and JPEG with TinyPNG.com API" :date (24161 26704) :url "https://github.com/xuchunyang/tinypng.el") (tinysegmenter :source "MELPA" :recipe (:package "tinysegmenter" :repo "myuhe/tinysegmenter.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Super compact Japanese tokenizer in Javascript ported to emacs lisp" :date (21618 19152) :url "https://github.com/myuhe/tinysegmenter.el") (titlecase :source "MELPA" :recipe (:package "titlecase" :fetcher codeberg :repo "acdw/titlecase.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Title-case phrases" :date (25776 26064) :url "https://codeberg.org/acdw/titlecase.el") (tj3-mode :source "MELPA" :recipe (:package "tj3-mode" :fetcher github :repo "csrhodes/tj3-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing TaskJuggler 3 files" :date (23295 16080) :url "https://github.com/csrhodes/tj3-mode") (tldr :source "MELPA" :recipe (:package "tldr" :fetcher github :repo "kuanyui/tldr.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tldr client for Emacs" :date (25598 27472) :url "https://github.com/kuanyui/tldr.el") (tmmofl :source "MELPA" :recipe (:package "tmmofl" :fetcher github :repo "phillord/tmmofl" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calls functions dependant on font lock highlighting at point" :date (20616 18624) :url "https://github.com/phillord/tmmofl") (tmsu :source "MELPA" :recipe (:package "tmsu" :repo "vifon/tmsu.el" :fetcher github :files (:defaults (:exclude "ol-tmsu.el"))) :description "A basic TMSU interface" :date (26148 11472) :url "https://github.com/vifon/tmsu.el") (tmux-mode :source "MELPA" :recipe (:package "tmux-mode" :repo "nverno/tmux-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for tmux configuration" :date (25959 42576) :url "https://github.com/nverno/tmux-mode") (tmux-pane :source "MELPA" :recipe (:package "tmux-pane" :fetcher github :repo "laishulu/emacs-tmux-pane" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide integration between emacs window and tmux pane" :date (26008 28112) :url "https://github.com/laishulu/emacs-tmux-pane") (toc-mode :source "MELPA" :recipe (:package "toc-mode" :fetcher github :repo "dalanicolai/toc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage outlines/table of contents of pdf and djvu documents" :date (25392 49488) :url "https://github.com/dalanicolai/toc-mode") (toc-org :source "MELPA" :recipe (:package "toc-org" :fetcher github :repo "snosov1/toc-org" :old-names (org-toc) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Add table of contents to org-mode files (formerly, org-toc)" :date (25051 19664) :url "https://github.com/snosov1/toc-org") (todoist :source "MELPA" :recipe (:package "todoist" :repo "abrochard/emacs-todoist" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extension for interacting and managing todoist tasks" :date (26232 36048) :url "https://github.com/abrochard/emacs-todoist") (todotxt :source "MELPA" :recipe (:package "todotxt" :fetcher github :repo "rpdillon/todotxt.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing todo.txt files" :date (25084 16976) :url "https://github.com/rpdillon/todotxt.el") (todotxt-mode :source "MELPA" :recipe (:package "todotxt-mode" :fetcher github :repo "avillafiorita/todotxt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing todo.txt files" :date (26283 63312) :url "https://github.com/avillafiorita/todotxt-mode") (togetherly :source "MELPA" :recipe (:package "togetherly" :fetcher github :repo "zk-phi/togetherly" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Allow multiple clients to edit a single buffer online" :date (22783 47312) :url "https://github.com/zk-phi/togetherly") (toggle-quotes :source "MELPA" :recipe (:package "toggle-quotes" :repo "toctan/toggle-quotes.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggle between single and double quoted string" :date (21437 40768) :url "https://github.com/toctan/toggle-quotes.el") (toggle-term :source "MELPA" :recipe (:package "toggle-term" :repo "justinlime/toggle-term.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quickly toggle persistent term and shell buffers" :date (26286 39504) :url "https://github.com/justinlime/toggle-term.el") (toggle-test :source "MELPA" :recipe (:package "toggle-test" :fetcher github :repo "rags/toggle-test" :files ("toggle-test.el")) :description "Toggle between source and test files in various programming languages" :date (21454 49856) :url "https://github.com/rags/toggle-test") (toggle-window :source "MELPA" :recipe (:package "toggle-window" :fetcher github :repo "deadghost/toggle-window" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggle current window size between half and full" :date (21635 28240) :url "https://github.com/deadghost/toggle-window") (tok-theme :source "MELPA" :recipe (:package "tok-theme" :fetcher github :repo "topikettunen/tok-theme" :old-names (brutal-theme) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimal monochromatic theme for Emacs in the spirit of Zmacs and Smalltalk-80" :date (26401 19664) :url "https://github.com/topikettunen/tok-theme") (tokei :source "MELPA" :recipe (:package "tokei" :repo "nagy/tokei.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display codebase statistics" :date (25347 61008) :url "https://github.com/nagy/tokei.el") (tomatinho :source "MELPA" :recipe (:package "tomatinho" :fetcher github :repo "konr/tomatinho" :files ("tomatinho.el" "tick.wav" "tack.wav")) :description "Simple and beautiful pomodoro timer" :date (23338 49232) :url "https://github.com/konr/tomatinho") (toml :source "MELPA" :recipe (:package "toml" :fetcher github :repo "gongo/emacs-toml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TOML (Tom's Obvious, Minimal Language) parser" :date (25652 30928) :url "https://github.com/gongo/emacs-toml") (toml-mode :source "MELPA" :recipe (:package "toml-mode" :fetcher github :repo "dryman/toml-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing TOML files" :date (22559 39376) :url "https://github.com/dryman/toml-mode.el") (tommyh-theme :source "MELPA" :recipe (:package "tommyh-theme" :repo "wglass/tommyh-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A bright, bold-colored theme for emacs" :date (21069 52416) :url "https://github.com/wglass/tommyh-theme") (tomorrow-night-deepblue-theme :source "MELPA" :recipe (:package "tomorrow-night-deepblue-theme" :fetcher github :repo "jamescherti/tomorrow-night-deepblue-theme.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Tomorrow Night Deepblue color theme" :date (26381 34384) :url "https://github.com/jamescherti/tomorrow-night-deepblue-theme.el") (tongbu :source "MELPA" :recipe (:package "tongbu" :fetcher github :repo "xuchunyang/tongbu.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A web server to share text or files between two devices" :date (24212 53968) :url "https://github.com/xuchunyang/tongbu.el") (topspace :source "MELPA" :recipe (:package "topspace" :fetcher github :repo "trevorpogue/topspace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Recenter line 1 with scrollable upper margin/padding" :date (25349 16336) :url "https://github.com/trevorpogue/topspace") (topsy :source "MELPA" :recipe (:package "topsy" :fetcher github :repo "alphapapa/topsy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple sticky header" :date (25978 6992) :url "https://github.com/alphapapa/topsy.el") (tornado-template-mode :source "MELPA" :recipe (:package "tornado-template-mode" :fetcher github :repo "paradoxxxzero/tornado-template-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for editing tornado templates" :date (21623 37072) :url "https://github.com/paradoxxxzero/tornado-template-mode") (torrent-mode :source "MELPA" :recipe (:package "torrent-mode" :fetcher github :repo "sarg/torrent-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display torrent files in a tabulated view" :date (26352 34128) :url "https://github.com/sarg/torrent-mode.el") (torus :source "MELPA" :recipe (:package "torus" :repo "chimay/torus" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A buffer groups manager" :date (23703 61392) :url "https://github.com/chimay/torus") (total-lines :source "MELPA" :recipe (:package "total-lines" :repo "hinrik/total-lines" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep track of a buffer's total number of lines" :date (23106 47184) :url "https://github.com/hinrik/total-lines") (totd :source "MELPA" :recipe (:package "totd" :fetcher gitlab :repo "egh/emacs-totd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display a random daily emacs command" :date (21850 21200) :url "https://gitlab.com/egh/emacs-totd") (totp :source "MELPA" :recipe (:package "totp" :fetcher github :repo "juergenhoetzel/emacs-totp" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Time-based One-time Password (TOTP)" :date (26003 10192) :url "https://github.com/juergenhoetzel/emacs-totp") (totp-auth :source "MELPA" :recipe (:package "totp-auth" :fetcher gitlab :files (:defaults (:exclude "base32.el")) :repo "fledermaus/totp.el") :description "RFC6238 TOTP" :date (26076 64464) :url "https://gitlab.com/fledermaus/totp.el") (tox :source "MELPA" :recipe (:package "tox" :fetcher github :repo "chmouel/tox.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Launch current python test with tox" :date (22754 47056) :url "https://github.com/chmouel/tox.el") (toxi-theme :source "MELPA" :recipe (:package "toxi-theme" :fetcher github :repo "postspectacular/toxi-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark color theme by toxi" :date (22299 57936) :url "https://github.com/postspectacular/toxi-theme") (tp :source "MELPA" :recipe (:package "tp" :fetcher codeberg :repo "martianh/tp.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for transient menus that POST to an API" :date (26402 40528) :url "https://codeberg.org/martianh/tp.el") (tql-mode :source "MELPA" :recipe (:package "tql-mode" :fetcher github :repo "tiros-dev/tql-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TQL mode" :date (22901 3664) :url "https://github.com/tiros-dev/tql-mode") (tr-ime :source "MELPA" :recipe (:package "tr-ime" :fetcher github :repo "trueroad/tr-emacs-ime-module" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emulator of IME patch for Windows" :date (25242 30288) :url "https://github.com/trueroad/tr-emacs-ime-module") (traad :source "MELPA" :recipe (:package "traad" :fetcher github :repo "abingham/emacs-traad" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs interface to the traad refactoring server" :date (23390 10960) :url "https://github.com/abingham/emacs-traad") (tracking :source "MELPA" :recipe (:package "tracking" :repo "emacs-circe/circe" :fetcher github :files ("tracking.el" "shorten.el")) :description "Buffer modification tracking" :date (26074 22736) :url "https://github.com/emacs-circe/circe") (tracwiki-mode :source "MELPA" :recipe (:package "tracwiki-mode" :fetcher github :repo "merickson/tracwiki-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Major mode for working with Trac" :date (21692 7888) :url "https://github.com/merickson/tracwiki-mode") (tramp-auto-auth :source "MELPA" :recipe (:package "tramp-auto-auth" :fetcher github :repo "oitofelix/tramp-auto-auth" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "TRAMP automatic authentication library" :date (23988 46032) :url "https://github.com/oitofelix/tramp-auto-auth") (tramp-hdfs :source "MELPA" :recipe (:package "tramp-hdfs" :fetcher github :repo "raghavgautam/tramp-hdfs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tramp extension to access hadoop/hdfs file system in Emacs" :date (24749 25936) :url "https://github.com/raghavgautam/tramp-hdfs") (tramp-term :source "MELPA" :recipe (:package "tramp-term" :fetcher github :repo "cuspymd/tramp-term.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic setup of directory tracking in ssh sessions" :date (25309 45776) :url "https://github.com/cuspymd/tramp-term.el") (transducers :source "MELPA" :recipe (:package "transducers" :fetcher github :repo "fosskers/transducers.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ergonomic, efficient data processing" :date (26406 37584) :url "https://github.com/fosskers/transducers.el") (transfer-sh :source "MELPA" :recipe (:package "transfer-sh" :fetcher gitlab :repo "tuedachu/transfer-sh.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple interface for sending buffer contents to transfer.sh" :date (24276 6864) :url "https://gitlab.com/tuedachu/transfer-sh.el") (transient :source "MELPA" :recipe (:package "transient" :fetcher github :repo "magit/transient" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transient commands" :date (26407 58448) :url "https://github.com/magit/transient") (transient-dwim :source "MELPA" :recipe (:package "transient-dwim" :fetcher github :repo "conao3/transient-dwim.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Useful preset transient commands" :date (25511 26704) :url "https://github.com/conao3/transient-dwim.el") (transient-extras :source "MELPA" :recipe (:package "transient-extras" :fetcher github :repo "haji-ali/transient-extras" :files ("transient-extras.el")) :description "Extra features for transient" :date (25785 41040) :url "https://github.com/haji-ali/transient-extras") (transient-extras-a2ps :source "MELPA" :recipe (:package "transient-extras-a2ps" :fetcher github :repo "haji-ali/transient-extras" :files ("transient-extras-a2ps.el")) :description "A transient interface to a2ps" :date (25601 3664) :url "https://github.com/haji-ali/transient-extras") (transient-extras-lp :source "MELPA" :recipe (:package "transient-extras-lp" :fetcher github :repo "haji-ali/transient-extras" :files ("transient-extras-lp.el")) :description "A transient interface to lp" :date (25661 45904) :url "https://github.com/haji-ali/transient-extras") (transient-posframe :source "MELPA" :recipe (:package "transient-posframe" :fetcher github :repo "yanghaoxie/transient-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Using posframe to show transient" :date (24559 36176) :url "https://github.com/yanghaoxie/transient-posframe") (translate-mode :source "MELPA" :recipe (:package "translate-mode" :repo "rayw000/translate-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paragraph-oriented side-by-side doc translation workflow" :date (25210 53840) :url "https://github.com/rayw000/translate-mode") (transmission :source "MELPA" :recipe (:package "transmission" :fetcher github :repo "holomorph/transmission" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface to a Transmission session" :date (25478 29392) :url "https://github.com/holomorph/transmission") (transpose-frame :source "MELPA" :recipe (:package "transpose-frame" :fetcher github :repo "emacsorphanage/transpose-frame" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transpose windows arrangement in a frame" :date (25450 50000) :url "https://github.com/emacsorphanage/transpose-frame") (transpose-mark :source "MELPA" :recipe (:package "transpose-mark" :repo "kwrooijen/transpose-mark" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Transpose data using the Emacs mark" :date (21792 20688) :url "https://github.com/kwrooijen/transpose-mark") (transwin :source "MELPA" :recipe (:package "transwin" :repo "jcs-elpa/transwin" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make window/frame transparent" :date (26034 52176) :url "https://github.com/jcs-elpa/transwin") (trashed :source "MELPA" :recipe (:package "trashed" :repo "shingo256/trashed" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Viewing/editing system trash can" :date (25813 20432) :url "https://github.com/shingo256/trashed") (travis :source "MELPA" :recipe (:package "travis" :fetcher github :repo "nlamirault/emacs-travis" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs client for Travis" :date (21979 34256) :url "https://github.com/nlamirault/emacs-travis") (tray :source "MELPA" :recipe (:package "tray" :fetcher github :repo "tarsius/tray" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Various transient menus" :date (26322 13008) :url "https://github.com/tarsius/tray") (tree-edit :source "MELPA" :recipe (:package "tree-edit" :fetcher github :repo "ethan-leba/tree-edit" :files (:defaults (:exclude "evil-tree-edit*.el"))) :description "A library for structural refactoring and editing" :date (25951 48464) :url "https://github.com/ethan-leba/tree-edit") (tree-mode :source "MELPA" :recipe (:package "tree-mode" :fetcher github :repo "emacsorphanage/tree-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A mode to manage tree widgets" :date (22073 8272) :url "https://github.com/emacsorphanage/tree-mode") (tree-sitter :source "MELPA" :recipe (:package "tree-sitter" :repo "emacs-tree-sitter/elisp-tree-sitter" :fetcher github :branch "release" :files (:defaults (:exclude "lisp/tree-sitter-tests.el"))) :description "Incremental parsing system" :date (25094 52816) :url "https://github.com/emacs-tree-sitter/elisp-tree-sitter") (tree-sitter-ess-r :source "MELPA" :recipe (:package "tree-sitter-ess-r" :repo "ShuguangSun/tree-sitter-ess-r" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "R with tree-sitter" :date (25413 55632) :url "https://github.com/ShuguangSun/tree-sitter-ess-r") (tree-sitter-indent :source "MELPA" :recipe (:package "tree-sitter-indent" :fetcher codeberg :repo "FelipeLema/tree-sitter-indent.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide indentation with a Tree-sitter backend" :date (25171 17744) :url "https://codeberg.org/FelipeLema/tree-sitter-indent.el") (tree-sitter-ispell :source "MELPA" :recipe (:package "tree-sitter-ispell" :fetcher github :repo "erickgnavar/tree-sitter-ispell.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run ispell on tree-sitter text nodes" :date (26214 6096) :url "https://github.com/erickgnavar/tree-sitter-ispell.el") (tree-sitter-langs :source "MELPA" :recipe (:package "tree-sitter-langs" :repo "emacs-tree-sitter/tree-sitter-langs" :fetcher github :branch "release" :files (:defaults "queries")) :description "Grammar bundle for tree-sitter" :date (26406 37584) :url "https://github.com/emacs-tree-sitter/tree-sitter-langs") (treebundel :source "MELPA" :recipe (:package "treebundel" :fetcher github :repo "purplg/treebundel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Bundle related git-worktrees together" :date (26200 59600) :url "https://github.com/purplg/treebundel") (treefactor :source "MELPA" :recipe (:package "treefactor" :fetcher github :repo "cyberthal/treefactor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Restructure your messy Org documents" :date (24255 720) :url "https://github.com/cyberthal/treefactor") (treemacs :source "MELPA" :recipe (:package "treemacs" :fetcher github :repo "Alexander-Miller/treemacs" :files (:defaults "Changelog.org" "icons" "src/elisp/treemacs*.el" "src/scripts/treemacs*.py" (:exclude "src/extra/*"))) :description "A tree style file explorer package" :date (26398 43472) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-all-the-icons :source "MELPA" :recipe (:package "treemacs-all-the-icons" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-all-the-icons.el")) :description "All-the-icons integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-evil :source "MELPA" :recipe (:package "treemacs-evil" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-evil.el")) :description "Evil mode integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-icons-dired :source "MELPA" :recipe (:package "treemacs-icons-dired" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-icons-dired.el")) :description "Treemacs icons for dired" :date (26384 10576) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-magit :source "MELPA" :recipe (:package "treemacs-magit" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-magit.el")) :description "Magit integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-nerd-icons :source "MELPA" :recipe (:package "treemacs-nerd-icons" :fetcher github :repo "rainstormstudio/treemacs-nerd-icons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Nerd Font Icons theme for treemacs" :date (25835 47440) :url "https://github.com/rainstormstudio/treemacs-nerd-icons") (treemacs-persp :source "MELPA" :recipe (:package "treemacs-persp" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-persp.el")) :description "Persp-mode integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-perspective :source "MELPA" :recipe (:package "treemacs-perspective" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-perspective.el")) :description "Perspective integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-projectile :source "MELPA" :recipe (:package "treemacs-projectile" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-projectile.el")) :description "Projectile integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treemacs-tab-bar :source "MELPA" :recipe (:package "treemacs-tab-bar" :fetcher github :repo "Alexander-Miller/treemacs" :files ("src/extra/treemacs-tab-bar.el")) :description "Tab bar integration for treemacs" :date (26041 25424) :url "https://github.com/Alexander-Miller/treemacs") (treepy :source "MELPA" :recipe (:package "treepy" :repo "volrath/treepy.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Generic tree traversal tools" :date (26361 49104) :url "https://github.com/volrath/treepy.el") (treesit-auto :source "MELPA" :recipe (:package "treesit-auto" :fetcher github :repo "renzmann/treesit-auto" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatically use tree-sitter enhanced major modes" :date (26174 35536) :url "https://github.com/renzmann/treesit-auto") (treesit-ispell :source "MELPA" :recipe (:package "treesit-ispell" :fetcher github :repo "erickgnavar/treesit-ispell.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run ispell on tree-sitter text nodes" :date (26407 58448) :url "https://github.com/erickgnavar/treesit-ispell.el") (treeview :source "MELPA" :recipe (:package "treeview" :repo "tilmanrassy/emacs-treeview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A generic tree navigation library" :date (26403 61392) :url "https://github.com/tilmanrassy/emacs-treeview") (trident-mode :source "MELPA" :recipe (:package "trident-mode" :fetcher github :repo "johnmastro/trident-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Live Parenscript interaction" :date (23725 2000) :url "https://github.com/johnmastro/trident-mode.el") (trimspace-mode :source "MELPA" :recipe (:package "trimspace-mode" :fetcher github :repo "bkhl/trimspace-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode to trim trailing whitespace and newlines" :date (26239 9296) :url "https://github.com/bkhl/trimspace-mode") (trinary :source "MELPA" :recipe (:package "trinary" :fetcher github :repo "emacs-elsa/trinary-logic" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Trinary logic" :date (25598 27472) :url "https://github.com/emacs-elsa/trinary-logic") (tron-legacy-theme :source "MELPA" :recipe (:package "tron-legacy-theme" :fetcher github :repo "ianyepan/tron-legacy-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An original retro-futuristic theme inspired by Tron: Legacy" :date (25685 28240) :url "https://github.com/ianyepan/tron-legacy-emacs-theme") (trr :source "MELPA" :recipe (:package "trr" :fetcher github :repo "kawabata/emacs-trr" :files (:defaults "record" "text" "CONTENTS")) :description "A type-writing training program on GNU Emacs" :date (23978 10192) :url "https://github.com/kawabata/emacs-trr") (truthy :source "MELPA" :recipe (:package "truthy" :repo "rolandwalker/truthy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Test the content of a value" :date (21354 37056) :url "https://github.com/rolandwalker/truthy") (try :source "MELPA" :recipe (:package "try" :fetcher github :repo "larstvei/Try" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Try out Emacs packages" :date (23557 39248) :url "https://github.com/larstvei/Try") (ts :source "MELPA" :recipe (:package "ts" :fetcher github :repo "alphapapa/ts.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Timestamp and date/time library" :date (25346 40144) :url "https://github.com/alphapapa/ts.el") (ts-comint :source "MELPA" :recipe (:package "ts-comint" :fetcher github :repo "emacs-typescript/ts-comint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a Typescript interpreter in an inferior process window" :date (23577 24528) :url "https://github.com/emacs-typescript/ts-comint") (tsc :source "MELPA" :recipe (:package "tsc" :fetcher github :repo "emacs-tree-sitter/elisp-tree-sitter" :branch "release" :files ("core/*.el" "core/Cargo.toml" "core/Cargo.lock" "core/src")) :description "Core Tree-sitter APIs" :date (25094 52816) :url "https://github.com/emacs-tree-sitter/elisp-tree-sitter") (tsort :source "MELPA" :recipe (:package "tsort" :repo "echawk/tsort.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Topological sort for Emacs Lisp" :date (26142 59088) :url "https://github.com/echawk/tsort.el") (tss :source "MELPA" :recipe (:package "tss" :repo "aki2o/emacs-tss" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide a interface for auto-complete.el/flymake.el on typescript-mode" :date (22004 37456) :url "https://github.com/aki2o/emacs-tss") (tt-mode :source "MELPA" :recipe (:package "tt-mode" :fetcher github :repo "davorg/tt-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs major mode for editing Template Toolkit files" :date (20989 24896) :url "https://github.com/davorg/tt-mode") (ttl-mode :source "MELPA" :recipe (:package "ttl-mode" :fetcher github :repo "nxg/ttl-mode" :files ((:rename "ttl-mode.el.in" "ttl-mode.el"))) :description "Mode for Turtle (and Notation 3)" :date (22977 34128) :url "https://github.com/nxg/ttl-mode") (tuareg :source "MELPA" :recipe (:package "tuareg" :fetcher github :repo "ocaml/tuareg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "OCaml mode" :date (25891 6224) :url "https://github.com/ocaml/tuareg") (tubestatus :source "MELPA" :recipe (:package "tubestatus" :repo "smallwat3r/tubestatus.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Get the London Tube service status" :date (26108 40912) :url "https://github.com/smallwat3r/tubestatus.el") (tumble :source "MELPA" :recipe (:package "tumble" :fetcher github :repo "febuiles/tumble" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Tumblr mode for Emacs" :date (22164 6096) :url "https://github.com/febuiles/tumble") (tumblesocks :source "MELPA" :recipe (:package "tumblesocks" :fetcher github :repo "gcr/tumblesocks" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An Emacs tumblr client" :date (23971 36944) :url "https://github.com/gcr/tumblesocks") (turing-machine :source "MELPA" :recipe (:package "turing-machine" :fetcher github :repo "dieggsy/turing-machine" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Single-tape Turing machine simulator" :date (23181 56784) :url "https://github.com/dieggsy/turing-machine") (turkish :source "MELPA" :recipe (:package "turkish" :fetcher github :repo "emres/turkish-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert to Turkish characters on-the-fly" :date (22964 22096) :url "https://github.com/emres/turkish-mode") (turnip :source "MELPA" :recipe (:package "turnip" :repo "kljohann/turnip.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interacting with tmux from Emacs" :date (21756 47184) :url "https://github.com/kljohann/turnip.el") (twig-mode :source "MELPA" :recipe (:package "twig-mode" :repo "moljac024/twig-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for twig" :date (20771 55744) :url "https://github.com/moljac024/twig-mode") (twilight-anti-bright-theme :source "MELPA" :recipe (:package "twilight-anti-bright-theme" :repo "jimeh/twilight-anti-bright-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A soothing Emacs 24 light-on-dark theme" :date (22377 43728) :url "https://github.com/jimeh/twilight-anti-bright-theme") (twilight-bright-theme :source "MELPA" :recipe (:package "twilight-bright-theme" :repo "jimeh/twilight-bright-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Emacs 24 faces port of the TextMate theme" :date (20910 18240) :url "https://github.com/jimeh/twilight-bright-theme.el") (twilight-theme :source "MELPA" :recipe (:package "twilight-theme" :repo "developernotes/twilight-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Twilight theme for GNU Emacs 24 (deftheme)" :date (20357 58048) :url "https://github.com/developernotes/twilight-theme") (twitch-api :source "MELPA" :recipe (:package "twitch-api" :repo "BenediktBroich/twitch-api" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elisp interface for the Twitch.tv API" :date (25183 8912) :url "https://github.com/BenediktBroich/twitch-api") (twittering-mode :source "MELPA" :recipe (:package "twittering-mode" :repo "hayamiz/twittering-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Twitter" :date (23540 30160) :url "https://github.com/hayamiz/twittering-mode") (twtxt :source "MELPA" :recipe (:package "twtxt" :fetcher codeberg :repo "deadblackclover/twtxt-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A twtxt client for Emacs" :date (26280 720) :url "https://codeberg.org/deadblackclover/twtxt-el") (txl :source "MELPA" :recipe (:package "txl" :fetcher github :repo "tmalsburg/txl.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides machine translation via DeepL's REST API" :date (26343 19152) :url "https://github.com/tmalsburg/txl.el") (typescript-mode :source "MELPA" :recipe (:package "typescript-mode" :fetcher github :repo "emacs-typescript/typescript.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing typescript" :date (26204 56656) :url "https://github.com/emacs-typescript/typescript.el") (typewriter-roll-mode :source "MELPA" :recipe (:package "typewriter-roll-mode" :fetcher github :repo "KeyWeeUsr/typewriter-roll-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Aid for distraction-free writing" :date (26303 48592) :url "https://github.com/KeyWeeUsr/typewriter-roll-mode") (typing :source "MELPA" :recipe (:package "typing" :fetcher github :repo "kensanata/typing" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The Typing Of Emacs" :date (23431 2384) :url "https://github.com/kensanata/typing") (typing-game :source "MELPA" :recipe (:package "typing-game" :fetcher github :repo "lujun9972/el-typing-game" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple typing game" :date (22302 34128) :url "https://github.com/lujun9972/el-typing-game") (typit :source "MELPA" :recipe (:package "typit" :repo "mrkkrp/typit" :fetcher github :files (:defaults "dict")) :description "Typing game similar to tests on 10 fast fingers" :date (25370 22480) :url "https://github.com/mrkkrp/typit") (typo :source "MELPA" :recipe (:package "typo" :fetcher github :repo "jorgenschaefer/typoel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for typographic editing" :date (24322 16208) :url "https://github.com/jorgenschaefer/typoel") (typo-suggest :source "MELPA" :recipe (:package "typo-suggest" :fetcher github :repo "kadircancetin/typo-suggest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Don't make typos with the help of helm and company" :date (24394 49616) :url "https://github.com/kadircancetin/typo-suggest") (tzc :source "MELPA" :recipe (:package "tzc" :fetcher github :repo "md-arif-shaikh/tzc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Converts time between different time zones" :date (26124 29136) :url "https://github.com/md-arif-shaikh/tzc") (ubuntu-theme :source "MELPA" :recipe (:package "ubuntu-theme" :fetcher github :repo "rocher/ubuntu-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A theme inspired by the default terminal colors in Ubuntu" :date (21953 10192) :url "https://github.com/rocher/ubuntu-theme") (uci-mode :source "MELPA" :recipe (:package "uci-mode" :fetcher github :repo "dwcoates/uci-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major-mode for chess engine interaction" :date (24790 17360) :url "https://github.com/dwcoates/uci-mode") (ucs-utils :source "MELPA" :recipe (:package "ucs-utils" :repo "rolandwalker/ucs-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for Unicode characters" :date (25544 24016) :url "https://github.com/rolandwalker/ucs-utils") (udev-mode :source "MELPA" :recipe (:package "udev-mode" :fetcher github :repo "benley/emacs-udev-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing udev rules files" :date (24316 63824) :url "https://github.com/benley/emacs-udev-mode") (ue :source "MELPA" :recipe (:package "ue" :repo "unrealemacs/ue.el" :fetcher gitlab :files (:defaults "snippets")) :description "Minor mode for Unreal Engine projects" :date (24915 33360) :url "https://gitlab.com/unrealemacs/ue.el") (uimage :source "MELPA" :recipe (:package "uimage" :fetcher github :repo "lujun9972/uimage" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An iimage like mode with the ability to display url images" :date (22471 17744) :url "https://github.com/lujun9972/uimage") (uiua-mode :source "MELPA" :recipe (:package "uiua-mode" :fetcher github :repo "crmsnbleyd/uiua-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Uiua integration" :date (26361 49104) :url "https://github.com/crmsnbleyd/uiua-mode") (uiua-ts-mode :source "MELPA" :recipe (:package "uiua-ts-mode" :fetcher github :repo "crmsnbleyd/uiua-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Uiua treesiter mode" :date (25979 27856) :url "https://github.com/crmsnbleyd/uiua-ts-mode") (ujelly-theme :source "MELPA" :recipe (:package "ujelly-theme" :repo "marktran/color-theme-ujelly" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ujelly theme for GNU Emacs 24 (deftheme)" :date (23171 20944) :url "https://github.com/marktran/color-theme-ujelly") (ukrainian-holidays :source "MELPA" :recipe (:package "ukrainian-holidays" :repo "abo-abo/ukrainian-holidays" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Ukrainian holidays for Emacs calendar" :date (20969 39616) :url "https://github.com/abo-abo/ukrainian-holidays") (ulisp-mode :source "MELPA" :recipe (:package "ulisp-mode" :fetcher codeberg :repo "deadblackclover/ulisp-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing and evaluate uLisp" :date (26290 36560) :url "https://codeberg.org/deadblackclover/ulisp-mode") (uml-mode :source "MELPA" :recipe (:package "uml-mode" :fetcher github :repo "ianxm/emacs-uml" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for ascii uml sequence diagrams" :date (24112 41168) :url "https://github.com/ianxm/emacs-uml") (uncrustify-mode :source "MELPA" :recipe (:package "uncrustify-mode" :repo "koko1000ban/emacs-uncrustify-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode to automatically uncrustify" :date (20952 30528) :url "https://github.com/koko1000ban/emacs-uncrustify-mode") (undercover :source "MELPA" :recipe (:package "undercover" :fetcher github :repo "undercover-el/undercover.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Test coverage library for Emacs Lisp" :date (24758 40912) :url "https://github.com/undercover-el/undercover.el") (underline-with-char :source "MELPA" :recipe (:package "underline-with-char" :fetcher gitlab :repo "marcowahl/underline-with-char" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Underline with a char" :date (24030 58320) :url "https://gitlab.com/marcowahl/underline-with-char") (undersea-theme :source "MELPA" :recipe (:package "undersea-theme" :repo "jcs-legacy/undersea-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme styled after undersea imagery" :date (26001 54864) :url "https://github.com/jcs-legacy/undersea-theme") (underwater-theme :source "MELPA" :recipe (:package "underwater-theme" :repo "jmdeldin/underwater-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A gentle, deep blue color theme" :date (21129 8256) :url "https://github.com/jmdeldin/underwater-theme.el") (undo-fu :source "MELPA" :recipe (:package "undo-fu" :fetcher codeberg :repo "ideasman42/emacs-undo-fu" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Undo helper with redo" :date (26249 45136) :url "https://codeberg.org/ideasman42/emacs-undo-fu") (undo-fu-session :source "MELPA" :recipe (:package "undo-fu-session" :fetcher codeberg :repo "ideasman42/emacs-undo-fu-session" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent undo, available between sessions" :date (26257 39248) :url "https://codeberg.org/ideasman42/emacs-undo-fu-session") (undo-propose :source "MELPA" :recipe (:package "undo-propose" :fetcher github :repo "jackkamm/undo-propose-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple and safe undo navigation" :date (24607 848) :url "https://github.com/jackkamm/undo-propose-el") (undohist :source "MELPA" :recipe (:package "undohist" :fetcher github :repo "emacsorphanage/undohist" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Persistent undo history for GNU Emacs" :date (26355 10320) :url "https://github.com/emacsorphanage/undohist") (unfill :source "MELPA" :recipe (:package "unfill" :fetcher github :repo "purcell/unfill" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Do the opposite of fill-paragraph or fill-region" :date (25595 51280) :url "https://github.com/purcell/unfill") (unicad :source "MELPA" :recipe (:package "unicad" :repo "ukari/unicad" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elisp port of Mozilla Universal Charset Auto Detector" :date (25843 41552) :url "https://github.com/ukari/unicad") (unicode-emoticons :source "MELPA" :recipe (:package "unicode-emoticons" :fetcher github :repo "hagleitn/unicode-emoticons" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shortcuts for common unicode emoticons" :date (21713 14032) :url "https://github.com/hagleitn/unicode-emoticons") (unicode-enbox :source "MELPA" :recipe (:package "unicode-enbox" :repo "rolandwalker/unicode-enbox" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Surround a string with box-drawing characters" :date (21354 37056) :url "https://github.com/rolandwalker/unicode-enbox") (unicode-escape :source "MELPA" :recipe (:package "unicode-escape" :fetcher github :repo "kosh04/unicode-escape.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Escape/Unescape unicode notations" :date (25531 11984) :url "https://github.com/kosh04/unicode-escape.el") (unicode-fonts :source "MELPA" :recipe (:package "unicode-fonts" :repo "rolandwalker/unicode-fonts" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Configure Unicode fonts" :date (25873 62672) :url "https://github.com/rolandwalker/unicode-fonts") (unicode-math-input :source "MELPA" :recipe (:package "unicode-math-input" :fetcher github :repo "astoff/unicode-math-input.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert Unicode math symbols using TeX notation" :date (25118 35152) :url "https://github.com/astoff/unicode-math-input.el") (unicode-progress-reporter :source "MELPA" :recipe (:package "unicode-progress-reporter" :repo "rolandwalker/unicode-progress-reporter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Progress-reporter with fancy characters" :date (21354 37056) :url "https://github.com/rolandwalker/unicode-progress-reporter") (unicode-troll-stopper :source "MELPA" :recipe (:package "unicode-troll-stopper" :fetcher github :repo "camsaul/emacs-unicode-troll-stopper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Highlighting Unicode homoglyphs" :date (23645 60880) :url "https://github.com/camsaul/emacs-unicode-troll-stopper") (unicode-whitespace :source "MELPA" :recipe (:package "unicode-whitespace" :repo "rolandwalker/unicode-whitespace" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Teach whitespace-mode about fancy characters" :date (21354 37056) :url "https://github.com/rolandwalker/unicode-whitespace") (unidecode :source "MELPA" :recipe (:package "unidecode" :fetcher github :repo "sindikat/unidecode" :files (:defaults "data")) :description "Transliterate Unicode to ASCII" :date (24533 12112) :url "https://github.com/sindikat/unidecode") (unifdef :source "MELPA" :recipe (:package "unifdef" :fetcher github :repo "Lindydancer/unifdef" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Delete code guarded by processor directives" :date (24256 21584) :url "https://github.com/Lindydancer/unifdef") (unify-opening :source "MELPA" :recipe (:package "unify-opening" :fetcher github :repo "DamienCassou/unify-opening" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unify the mechanism to open files" :date (25843 41552) :url "https://github.com/DamienCassou/unify-opening") (uniline :source "MELPA" :recipe (:package "uniline" :fetcher github :repo "tbanel/uniline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Draw UNICODE lines, boxes, arrows onto existing text" :date (26407 58448) :url "https://github.com/tbanel/uniline") (unipoint :source "MELPA" :recipe (:package "unipoint" :fetcher github :repo "apg/unipoint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple way to insert unicode characters by TeX name" :date (21202 62528) :url "https://github.com/apg/unipoint") (unison :source "MELPA" :recipe (:package "unison" :fetcher github :repo "unhammer/unison.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Sync with Unison" :date (22393 31952) :url "https://github.com/unhammer/unison.el") (unison-mode :source "MELPA" :recipe (:package "unison-mode" :fetcher github :repo "impaktor/unison-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighting for unison file synchronization program" :date (22324 61136) :url "https://github.com/impaktor/unison-mode") (unisonlang-mode :source "MELPA" :recipe (:package "unisonlang-mode" :repo "dariooddenino/unison-mode-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple major mode for editing Unison" :date (24359 10576) :url "https://github.com/dariooddenino/unison-mode-emacs") (units-mode :source "MELPA" :recipe (:package "units-mode" :repo "Atreyagaurav/units-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mode for conversion between different units" :date (25433 40912) :url "https://github.com/Atreyagaurav/units-mode") (universal-emotions-emoticons :source "MELPA" :recipe (:package "universal-emotions-emoticons" :repo "grettke/universal-emotions-emoticons" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emoticons For The Six Universal Expressions" :date (23388 55632) :url "https://github.com/grettke/universal-emotions-emoticons") (universal-sidecar :source "MELPA" :recipe (:package "universal-sidecar" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("universal-sidecar.el" "universal-sidecar-sections.el")) :description "A universal sidecar buffer" :date (26158 47312) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (universal-sidecar-citeproc :source "MELPA" :recipe (:package "universal-sidecar-citeproc" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("universal-sidecar-citeproc.el")) :description "Centralise Citeproc Support for Universal Sidecar" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (universal-sidecar-elfeed-related :source "MELPA" :recipe (:package "universal-sidecar-elfeed-related" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("universal-sidecar-elfeed-related.el")) :description "Related Papers Sidecar Section for Elfeed" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (universal-sidecar-elfeed-score :source "MELPA" :recipe (:package "universal-sidecar-elfeed-score" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("universal-sidecar-elfeed-score.el")) :description "Show Elfeed Score information in sidecar" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (universal-sidecar-roam :source "MELPA" :recipe (:package "universal-sidecar-roam" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("universal-sidecar-roam.el")) :description "Integrate universal-sidecar and org-roam" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (unkillable-scratch :source "MELPA" :recipe (:package "unkillable-scratch" :fetcher github :repo "EricCrosson/unkillable-scratch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Disallow the \\*scratch\\* buffer from being killed" :date (25417 52688) :url "https://github.com/EricCrosson/unkillable-scratch") (unmodified-buffer :source "MELPA" :recipe (:package "unmodified-buffer" :fetcher github :repo "arthurcgusmao/unmodified-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto revert modified buffer state" :date (25076 22864) :url "https://github.com/arthurcgusmao/unmodified-buffer") (unobtrusive-magit-theme :source "MELPA" :recipe (:package "unobtrusive-magit-theme" :fetcher github :repo "tee3/unobtrusive-magit-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An unobtrusive Magit theme" :date (24208 56912) :url "https://github.com/tee3/unobtrusive-magit-theme") (unspecified-theme :source "MELPA" :recipe (:package "unspecified-theme" :fetcher codeberg :repo "mekeor/unspecified-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme that unspecifies all attributes of all faces" :date (26227 18128) :url "https://codeberg.org/mekeor/unspecified-theme") (untappd :source "MELPA" :recipe (:package "untappd" :repo "smallwat3r/untappd.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display your latest Untappd feed" :date (26100 46800) :url "https://github.com/smallwat3r/untappd.el") (untitled-new-buffer :source "MELPA" :recipe (:package "untitled-new-buffer" :fetcher github :repo "emacs-jp/untitled-new-buffer.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Open untitled new buffer like other text editors" :date (22605 48720) :url "https://github.com/emacs-jp/untitled-new-buffer.el") (upbo :source "MELPA" :recipe (:package "upbo" :fetcher github :repo "shiren/upbo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Karma Test Runner Integration" :date (23259 42576) :url "https://github.com/shiren/upbo") (uptimes :source "MELPA" :recipe (:package "uptimes" :fetcher github :repo "davep/uptimes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Track and display session uptimes" :date (25899 336) :url "https://github.com/davep/uptimes.el") (url-shortener :source "MELPA" :recipe (:package "url-shortener" :repo "yuyang0/url-shortener" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Shorten long url and expand tinyurl" :date (22916 57424) :url "https://github.com/yuyang0/url-shortener") (urlenc :source "MELPA" :recipe (:package "urlenc" :fetcher github :repo "buzztaiki/urlenc-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "URL encoding/decoding utility for Emacs" :date (21206 59584) :url "https://github.com/buzztaiki/urlenc-el") (ursa-ts-mode :source "MELPA" :recipe (:package "ursa-ts-mode" :fetcher github :repo "ursalang/ursa-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Ursa, using tree-sitter" :date (26357 52048) :url "https://github.com/ursalang/ursa-ts-mode") (urscript-mode :source "MELPA" :recipe (:package "urscript-mode" :fetcher github :repo "guidoschmidt/urscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing URScript" :date (23659 7376) :url "https://github.com/guidoschmidt/urscript-mode") (usage-memo :source "MELPA" :recipe (:package "usage-memo" :fetcher github :repo "rubikitch/usage-memo" :files (:defaults (:exclude "test-usage-memo.el"))) :description "Integration of Emacs help system and memo" :date (22985 28240) :url "https://github.com/rubikitch/usage-memo") (use-package :source "MELPA" :recipe (:package "use-package" :fetcher github :repo "jwiegley/use-package" :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el"))) :description "A configuration macro for simplifying your .emacs" :date (25672 16208) :url "https://github.com/jwiegley/use-package") (use-package-chords :source "MELPA" :recipe (:package "use-package-chords" :repo "jwiegley/use-package" :fetcher github :files ("use-package-chords.el")) :description "Key-chord keyword for use-package" :date (25461 20304) :url "https://github.com/jwiegley/use-package") (use-package-ensure-system-package :source "MELPA" :recipe (:package "use-package-ensure-system-package" :repo "jwiegley/use-package" :fetcher github :files ("use-package-ensure-system-package.el")) :description "Auto install system packages" :date (25490 20560) :url "https://github.com/jwiegley/use-package") (use-package-hydra :source "MELPA" :recipe (:package "use-package-hydra" :repo "to1ne/use-package-hydra" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Adds :hydra keyword to use-package macro" :date (23589 15696) :url "https://gitlab.com/to1ne/use-package-hydra") (use-proxy :source "MELPA" :recipe (:package "use-proxy" :repo "rayw000/use-proxy" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enable/Disable proxies respecting your HTTP/HTTPS env" :date (24527 59728) :url "https://github.com/rayw000/use-proxy") (use-ttf :source "MELPA" :recipe (:package "use-ttf" :repo "jcs-elpa/use-ttf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Keep font consistency across different OSs" :date (26121 52944) :url "https://github.com/jcs-elpa/use-ttf") (ushin-shapes :source "MELPA" :recipe (:package "ushin-shapes" :fetcher sourcehut :repo "ushin/ushin-shapes.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "USHIN shapes in org-mode" :date (26390 49360) :url "https://git.sr.ht/~ushin/ushin-shapes.el") (utimeclock :source "MELPA" :recipe (:package "utimeclock" :fetcher codeberg :repo "ideasman42/emacs-utimeclock" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple utility for manual time tracking" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-utimeclock") (utop :source "MELPA" :recipe (:package "utop" :fetcher github :repo "diml/utop" :files ("src/top/utop.el")) :description "Universal toplevel for OCaml" :date (26075 43600) :url "https://github.com/diml/utop") (uuid :source "MELPA" :recipe (:package "uuid" :fetcher github :repo "nicferrier/emacs-uuid" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "UUID's for EmacsLisp" :date (20556 62784) :url "https://github.com/nicferrier/emacs-uuid") (uuidgen :source "MELPA" :recipe (:package "uuidgen" :fetcher github :repo "kanru/uuidgen-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides various UUID generating functions" :date (26042 46288) :url "https://github.com/kanru/uuidgen-el") (uwu-theme :source "MELPA" :recipe (:package "uwu-theme" :repo "kborling/uwu-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An awesome dark color scheme" :date (25924 3536) :url "https://github.com/kborling/uwu-theme") (uxntal-mode :source "MELPA" :recipe (:package "uxntal-mode" :fetcher github :repo "non/uxntal-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Uxntal assembly" :date (26115 14160) :url "https://github.com/non/uxntal-mode") (v-mode :source "MELPA" :recipe (:package "v-mode" :fetcher github :repo "damon-kwok/v-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the V programming language" :date (25407 16848) :url "https://github.com/damon-kwok/v-mode") (v2ex-mode :source "MELPA" :recipe (:package "v2ex-mode" :fetcher github :repo "aborn/v2ex-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for visit http://v2ex.com/ site" :date (22414 38096) :url "https://github.com/aborn/v2ex-mode") (vagrant :source "MELPA" :recipe (:package "vagrant" :fetcher github :repo "ottbot/vagrant.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage a vagrant box from emacs" :date (25316 19024) :url "https://github.com/ottbot/vagrant.el") (vagrant-tramp :source "MELPA" :recipe (:package "vagrant-tramp" :fetcher github :repo "dougm/vagrant-tramp" :files ("*.el" "bin")) :description "Vagrant method for TRAMP" :date (25206 56784) :url "https://github.com/dougm/vagrant-tramp") (vala-mode :source "MELPA" :recipe (:package "vala-mode" :fetcher github :repo "rrthomas/vala-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vala mode derived mode" :date (24539 50896) :url "https://github.com/rrthomas/vala-mode") (vala-snippets :source "MELPA" :recipe (:package "vala-snippets" :repo "gopar/vala-snippets" :fetcher github :files (:defaults "snippets")) :description "Yasnippets for Vala" :date (21823 62672) :url "https://github.com/gopar/vala-snippets") (vale-mode :source "MELPA" :recipe (:package "vale-mode" :fetcher github :repo "jaybosamiya/vale-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for writing Vale vaf files" :date (23864 50896) :url "https://github.com/jaybosamiya/vale-mode.el") (validate-html :source "MELPA" :recipe (:package "validate-html" :fetcher github :repo "arthurgleckler/validate-html" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compilation mode for W3C HTML Validator" :date (26392 4688) :url "https://github.com/arthurgleckler/validate-html") (vampyricdark-theme :source "MELPA" :recipe (:package "vampyricdark-theme" :fetcher github :repo "VampyricDark/emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VampyricDark Theme" :date (25163 23632) :url "https://github.com/VampyricDark/emacs") (varuga :source "MELPA" :recipe (:package "varuga" :fetcher git :url "https://git.systemreboot.net/varuga/" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Send ical calendar invites by email" :date (26369 43216) :url "https://git.systemreboot.net/varuga/") (vbasense :source "MELPA" :recipe (:package "vbasense" :fetcher github :repo "aki2o/emacs-vbasense" :files ("*.el" "*.vbs" "*.bat")) :description "Provide a environment like Visual Basic Editor" :date (21254 24256) :url "https://github.com/aki2o/emacs-vbasense") (vc-auto-commit :source "MELPA" :recipe (:package "vc-auto-commit" :fetcher github :repo "thisirs/vc-auto-commit" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Auto-committing feature for your repository" :date (24618 57552) :url "https://github.com/thisirs/vc-auto-commit") (vc-check-status :source "MELPA" :recipe (:package "vc-check-status" :fetcher github :repo "thisirs/vc-check-status" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Warn you when quitting emacs and leaving repo dirty" :date (24618 57552) :url "https://github.com/thisirs/vc-check-status") (vc-darcs :source "MELPA" :recipe (:package "vc-darcs" :fetcher github :repo "velkyel/vc-darcs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A VC backend for darcs" :date (25622 9808) :url "https://github.com/velkyel/vc-darcs") (vc-defer :source "MELPA" :recipe (:package "vc-defer" :repo "google/vc-defer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Defer non-essential vc.el work" :date (24497 38608) :url "https://github.com/google/vc-defer") (vc-fossil :source "MELPA" :recipe (:package "vc-fossil" :fetcher github :repo "venks1/emacs-fossil" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VC backend for the fossil sofware configuraiton management system" :date (25682 52048) :url "https://github.com/venks1/emacs-fossil") (vc-hgcmd :source "MELPA" :recipe (:package "vc-hgcmd" :fetcher github :repo "muffinmad/emacs-vc-hgcmd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VC mercurial backend that uses hg command server" :date (24944 33616) :url "https://github.com/muffinmad/emacs-vc-hgcmd") (vc-msg :source "MELPA" :recipe (:package "vc-msg" :fetcher github :repo "redguardtoo/vc-msg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show commit information of current line" :date (25404 40656) :url "https://github.com/redguardtoo/vc-msg") (vc-osc :source "MELPA" :recipe (:package "vc-osc" :fetcher github :repo "aspiers/vc-osc" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Non-resident support for osc version-control" :date (23714 31696) :url "https://github.com/aspiers/vc-osc") (vcomp :source "MELPA" :recipe (:package "vcomp" :repo "tarsius/vcomp" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Compare version strings" :date (26082 16848) :url "https://github.com/tarsius/vcomp") (vcsh :source "MELPA" :recipe (:package "vcsh" :fetcher git :url "https://git.smrk.net/vcsh.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vcsh integration" :date (25640 39760) :url "https://git.smrk.net/vcsh.el") (vdf-mode :source "MELPA" :recipe (:package "vdf-mode" :repo "plapadoo/vdf-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Valve VDF files" :date (24638 42832) :url "https://github.com/plapadoo/vdf-mode") (vdiff :source "MELPA" :recipe (:package "vdiff" :repo "justbur/emacs-vdiff" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A diff tool similar to  vimdiff" :date (25746 4944) :url "https://github.com/justbur/emacs-vdiff") (vdiff-magit :source "MELPA" :recipe (:package "vdiff-magit" :repo "justbur/emacs-vdiff-magit" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magit integration for vdiff" :date (25220 3280) :url "https://github.com/justbur/emacs-vdiff-magit") (vdirel :source "MELPA" :recipe (:package "vdirel" :fetcher github :repo "DamienCassou/vdirel" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manipulate vdir (i.e., vCard) repositories" :date (25847 38608) :url "https://github.com/DamienCassou/vdirel") (vdm-comint :source "MELPA" :recipe (:package "vdm-comint" :fetcher github :repo "peterwvj/vdm-mode" :files ("vdm-comint.el")) :description "REPL support for vdm-mode" :date (23548 24272) :url "https://github.com/peterwvj/vdm-mode") (vdm-mode :source "MELPA" :recipe (:package "vdm-mode" :fetcher github :repo "peterwvj/vdm-mode" :files ("vdm-mode*.el")) :description "Major mode for the Vienna Development Method" :date (23707 58448) :url "https://github.com/peterwvj/vdm-mode") (vdm-snippets :source "MELPA" :recipe (:package "vdm-snippets" :fetcher github :repo "peterwvj/vdm-mode" :files ("vdm-snippets.el" "snippets")) :description "YASnippets for VDM mode" :date (23688 7632) :url "https://github.com/peterwvj/vdm-mode") (vector-utils :source "MELPA" :recipe (:package "vector-utils" :repo "rolandwalker/vector-utils" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vector-manipulation utility functions" :date (21354 37056) :url "https://github.com/rolandwalker/vector-utils") (vega-view :source "MELPA" :recipe (:package "vega-view" :repo "applied-science/emacs-vega-view" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vega visualization viewer" :date (24676 58064) :url "https://github.com/applied-science/emacs-vega-view") (vegetative-theme :source "MELPA" :recipe (:package "vegetative-theme" :fetcher github :repo "emacsfodder/emacs-theme-vegetative" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A Theme based on green CRT terminals" :date (25346 40144) :url "https://github.com/emacsfodder/emacs-theme-vegetative") (verb :source "MELPA" :recipe (:package "verb" :repo "federicotdn/verb" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Organize and send HTTP requests" :date (26389 28496) :url "https://github.com/federicotdn/verb") (veri-kompass :source "MELPA" :recipe (:package "veri-kompass" :fetcher gitlab :repo "koral/veri-kompass" :version-regexp "none-since-rename" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Verilog codebase navigation facility" :date (24132 26448) :url "https://gitlab.com/koral/veri-kompass") (verify-url :source "MELPA" :recipe (:package "verify-url" :fetcher github :repo "lujun9972/verify-url" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find out invalid urls in the buffer or region" :date (22302 34128) :url "https://github.com/lujun9972/verify-url") (verilog-ext :source "MELPA" :recipe (:package "verilog-ext" :fetcher github :repo "gmlarumbe/verilog-ext" :files (:defaults "snippets" "langserver")) :description "SystemVerilog Extensions" :date (26344 40016) :url "https://github.com/gmlarumbe/verilog-ext") (verilog-ts-mode :source "MELPA" :recipe (:package "verilog-ts-mode" :repo "gmlarumbe/verilog-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Verilog Tree-sitter major mode" :date (26355 10320) :url "https://github.com/gmlarumbe/verilog-ts-mode") (verona-mode :source "MELPA" :recipe (:package "verona-mode" :fetcher github :repo "damon-kwok/verona-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Verona programming language" :date (24385 34640) :url "https://github.com/damon-kwok/verona-mode") (versuri :source "MELPA" :recipe (:package "versuri" :fetcher github :repo "mihaiolteanu/versuri" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The lyrics package" :date (24962 63568) :url "https://github.com/mihaiolteanu/versuri") (vertica :source "MELPA" :recipe (:package "vertica" :fetcher github :repo "r0man/vertica-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vertica SQL mode extension" :date (21167 23488) :url "https://github.com/r0man/vertica-el") (vertica-snippets :source "MELPA" :recipe (:package "vertica-snippets" :fetcher github :repo "baron42bba/vertica-snippets" :files ("*.el" "snippets")) :description "Yasnippets for Vertica" :date (26344 40016) :url "https://github.com/baron42bba/vertica-snippets") (vertico :source "MELPA" :recipe (:package "vertico" :repo "minad/vertico" :files (:defaults "extensions/vertico-*.el") :fetcher github) :description "VERTical Interactive COmpletion" :date (26367 1488) :url "https://github.com/minad/vertico") (vertico-prescient :source "MELPA" :recipe (:package "vertico-prescient" :fetcher github :repo "radian-software/prescient.el" :files ("vertico-prescient.el")) :description "Prescient.el + Vertico" :date (26285 18640) :url "https://github.com/radian-software/prescient.el") (vertigo :source "MELPA" :recipe (:package "vertigo" :fetcher github :repo "noctuid/vertigo.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump across lines using the home row" :date (25028 58192) :url "https://github.com/noctuid/vertigo.el") (vhdl-capf :source "MELPA" :recipe (:package "vhdl-capf" :fetcher github :repo "sh-ow/vhdl-capf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Completion at point function (capf) for vhdl-mode" :date (22216 54224) :url "https://github.com/sh-ow/vhdl-capf") (vhdl-ext :source "MELPA" :recipe (:package "vhdl-ext" :fetcher github :repo "gmlarumbe/vhdl-ext" :files (:defaults "snippets" "langserver")) :description "VHDL Extensions" :date (26382 55248) :url "https://github.com/gmlarumbe/vhdl-ext") (vhdl-tools :source "MELPA" :recipe (:package "vhdl-tools" :repo "emacs-elisp/vhdl-tools" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for navigating vhdl sources" :date (24193 3152) :url "https://gitlab.com/emacs-elisp/vhdl-tools") (vhdl-ts-mode :source "MELPA" :recipe (:package "vhdl-ts-mode" :repo "gmlarumbe/vhdl-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VHDL Tree-sitter major mode" :date (26344 40016) :url "https://github.com/gmlarumbe/vhdl-ts-mode") (vi-tilde-fringe :source "MELPA" :recipe (:package "vi-tilde-fringe" :repo "syl20bnr/vi-tilde-fringe" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Displays tildes in the fringe on empty lines a la Vi" :date (21582 45648) :url "https://github.com/syl20bnr/vi-tilde-fringe") (viewer :source "MELPA" :recipe (:package "viewer" :repo "rubikitch/viewer" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View-mode extension" :date (22640 1360) :url "https://github.com/rubikitch/viewer") (viking-mode :source "MELPA" :recipe (:package "viking-mode" :repo "TLINDEN/viking-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Kill first, ask later" :date (22394 52816) :url "https://github.com/TLINDEN/viking-mode") (vim-empty-lines-mode :source "MELPA" :recipe (:package "vim-empty-lines-mode" :fetcher github :repo "jmickelin/vim-empty-lines-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim-like empty line indicator at end of files" :date (21681 37584) :url "https://github.com/jmickelin/vim-empty-lines-mode") (vim-region :source "MELPA" :recipe (:package "vim-region" :repo "ongaeshi/emacs-vim-region" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select region as vim" :date (21301 54464) :url "https://github.com/ongaeshi/emacs-vim-region") (vim-tab-bar :source "MELPA" :recipe (:package "vim-tab-bar" :fetcher github :repo "jamescherti/vim-tab-bar.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim-like tab bar" :date (26320 57680) :url "https://github.com/jamescherti/vim-tab-bar.el") (vimgolf :source "MELPA" :recipe (:package "vimgolf" :repo "timvisher/vimgolf.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VimGolf interface for the One True Editor" :date (24121 56144) :url "https://github.com/timvisher/vimgolf.el") (vimish-fold :source "MELPA" :recipe (:package "vimish-fold" :repo "matsievskiysv/vimish-fold" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fold text like in Vim" :date (24522 41808) :url "https://github.com/matsievskiysv/vimish-fold") (vimrc-mode :source "MELPA" :recipe (:package "vimrc-mode" :fetcher github :repo "mcandre/vimrc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for vimrc files" :date (23533 56912) :url "https://github.com/mcandre/vimrc-mode") (vimscript-ts-mode :source "MELPA" :recipe (:package "vimscript-ts-mode" :repo "nverno/vimscript-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Vim-script major mode using tree-sitter" :date (26388 7632) :url "https://github.com/nverno/vimscript-ts-mode") (virtual-auto-fill :source "MELPA" :recipe (:package "virtual-auto-fill" :repo "luisgerhorst/virtual-auto-fill" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Readably display text without adding line breaks" :date (24403 64592) :url "https://github.com/luisgerhorst/virtual-auto-fill") (virtual-comment :source "MELPA" :recipe (:package "virtual-comment" :fetcher github :repo "thanhvg/emacs-virtual-comment" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Virtual Comments" :date (25386 10704) :url "https://github.com/thanhvg/emacs-virtual-comment") (virtualenv :source "MELPA" :recipe (:package "virtualenv" :fetcher github :repo "aculich/virtualenv.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Virtualenv for Python" :date (21253 3392) :url "https://github.com/aculich/virtualenv.el") (virtualenvwrapper :source "MELPA" :recipe (:package "virtualenvwrapper" :fetcher github :repo "porterjamesj/virtualenvwrapper.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A featureful virtualenv tool for Emacs" :date (23664 25296) :url "https://github.com/porterjamesj/virtualenvwrapper.el") (visible-mark :source "MELPA" :recipe (:package "visible-mark" :fetcher sourcehut :repo "iank/visible-mark" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Make marks visible" :date (21897 51408) :url "https://git.sr.ht/~iank/visible-mark") (visual-ascii-mode :source "MELPA" :recipe (:package "visual-ascii-mode" :fetcher github :repo "Dewdrops/visual-ascii-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visualize ascii code (small integer) on buffer" :date (21705 19920) :url "https://github.com/Dewdrops/visual-ascii-mode") (visual-fill-column :source "MELPA" :recipe (:package "visual-fill-column" :fetcher codeberg :repo "joostkremers/visual-fill-column" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fill-column for visual-line-mode" :date (26134 64976) :url "https://codeberg.org/joostkremers/visual-fill-column") (visual-regexp :source "MELPA" :recipe (:package "visual-regexp" :repo "benma/visual-regexp.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A regexp/replace command for Emacs with interactive visual feedback" :date (24717 49488) :url "https://github.com/benma/visual-regexp.el") (visual-regexp-steroids :source "MELPA" :recipe (:package "visual-regexp-steroids" :repo "benma/visual-regexp-steroids.el" :fetcher github :files ("visual-regexp-steroids.el" "regexp.py")) :description "Extends visual-regexp to support other regexp engines" :date (22700 43600) :url "https://github.com/benma/visual-regexp-steroids.el") (visual-replace :source "MELPA" :recipe (:package "visual-replace" :fetcher github :repo "szermatt/visual-replace" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A prompt for replace-string and query-replace" :date (26406 37584) :url "https://github.com/szermatt/visual-replace") (vlc :source "MELPA" :recipe (:package "vlc" :fetcher github :repo "xuchunyang/vlc.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VideoLAN VLC Media Player Control" :date (24190 26960) :url "https://github.com/xuchunyang/vlc.el") (vlf :source "MELPA" :recipe (:package "vlf" :repo "m00natic/vlfi" :fetcher github :old-names (vlfi) :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View Large Files" :date (24028 16592) :url "https://github.com/m00natic/vlfi") (vline :source "MELPA" :recipe (:package "vline" :fetcher github :repo "buzztaiki/vline" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Column highlighting (vertical line displaying) mode" :date (24842 65488) :url "https://github.com/buzztaiki/vline") (vmd-mode :source "MELPA" :recipe (:package "vmd-mode" :repo "blak3mill3r/vmd-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast Github-flavored Markdown preview using a vmd subprocess" :date (24746 49744) :url "https://github.com/blak3mill3r/vmd-mode") (voca-builder :source "MELPA" :recipe (:package "voca-builder" :fetcher github :repo "yitang/voca-builder" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helps you build up your vocabulary" :date (22551 45264) :url "https://github.com/yitang/voca-builder") (volatile-highlights :source "MELPA" :recipe (:package "volatile-highlights" :repo "k-talo/volatile-highlights.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for visual feedback on some operations" :date (26339 22096) :url "https://github.com/k-talo/volatile-highlights.el") (volume :source "MELPA" :recipe (:package "volume" :fetcher github :repo "dbrock/volume.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tweak your sound card volume from Emacs" :date (25363 49232) :url "https://github.com/dbrock/volume.el") (vs-dark-theme :source "MELPA" :recipe (:package "vs-dark-theme" :repo "emacs-vs/vs-dark-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual Studio IDE dark theme" :date (26278 45392) :url "https://github.com/emacs-vs/vs-dark-theme") (vs-light-theme :source "MELPA" :recipe (:package "vs-light-theme" :repo "emacs-vs/vs-light-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Visual Studio IDE light theme" :date (26278 45392) :url "https://github.com/emacs-vs/vs-light-theme") (vscdark-theme :source "MELPA" :recipe (:package "vscdark-theme" :repo "abelikoff/vscdark-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VS Code Dark+ like theme" :date (24049 22736) :url "https://github.com/abelikoff/vscdark-theme") (vscode-dark-plus-theme :source "MELPA" :recipe (:package "vscode-dark-plus-theme" :fetcher github :repo "ianyepan/vscode-dark-plus-emacs-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Default Visual Studio Code Dark+ theme" :date (25790 58960) :url "https://github.com/ianyepan/vscode-dark-plus-emacs-theme") (vscode-icon :source "MELPA" :recipe (:package "vscode-icon" :fetcher github :repo "jojojames/vscode-icon-emacs" :files (:defaults "icons")) :description "Utility package to provide Vscode style icons" :date (25636 42704) :url "https://github.com/jojojames/vscode-icon-emacs") (vsh-mode :source "MELPA" :recipe (:package "vsh-mode" :fetcher github :repo "hardenedapple/vsh" :files ("vsh-mode-1.0/vsh-mode.el" "vsh-mode-1.0/integration_with_gdb.py" "vsh-mode-1.0/vsh_tell_editor_bindings.py" "vsh-mode-1.0/vsh_man_pager" "vsh-mode-1.0/vsh_shell_start")) :description "Alternate PTY interface for complex terminal sessions" :date (26307 45648) :url "https://github.com/hardenedapple/vsh") (vterm :source "MELPA" :recipe (:package "vterm" :fetcher github :repo "akermu/emacs-libvterm" :files ("CMakeLists.txt" "elisp.c" "elisp.h" "emacs-module.h" "etc" "utf8.c" "utf8.h" "vterm.el" "vterm-module.c" "vterm-module.h")) :description "Fully-featured terminal emulator" :date (26314 18896) :url "https://github.com/akermu/emacs-libvterm") (vterm-hotkey :source "MELPA" :recipe (:package "vterm-hotkey" :repo "rootatpixel/vterm-hotkey" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Control vterm buffers with hotkeys" :date (26243 6352) :url "https://github.com/rootatpixel/vterm-hotkey") (vterm-toggle :source "MELPA" :recipe (:package "vterm-toggle" :fetcher github :repo "jixiuf/vterm-toggle" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Toggles between the vterm buffer and other buffers" :date (25855 32720) :url "https://github.com/jixiuf/vterm-toggle") (vtm :source "MELPA" :recipe (:package "vtm" :fetcher github :repo "laishulu/emacs-vterm-manager" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manages vterm buffers with configuration files" :date (24423 49872) :url "https://github.com/laishulu/emacs-vterm-manager") (vue-html-mode :source "MELPA" :recipe (:package "vue-html-mode" :fetcher github :repo "AdamNiederer/vue-html-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Vue.js templates" :date (23267 36688) :url "https://github.com/AdamNiederer/vue-html-mode") (vue-mode :source "MELPA" :recipe (:package "vue-mode" :fetcher github :repo "AdamNiederer/vue-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for vue component based on mmm-mode" :date (26001 54864) :url "https://github.com/AdamNiederer/vue-mode") (vuiet :source "MELPA" :recipe (:package "vuiet" :fetcher github :repo "mihaiolteanu/vuiet" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The music player and explorer for Emacs" :date (26000 34000) :url "https://github.com/mihaiolteanu/vuiet") (vulpea :source "MELPA" :recipe (:package "vulpea" :fetcher github :repo "d12frosted/vulpea" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A collection of org-roam note-taking functions" :date (26315 39760) :url "https://github.com/d12frosted/vulpea") (vunit-mode :source "MELPA" :recipe (:package "vunit-mode" :fetcher github :repo "embed-me/vunit-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "VUnit Runner Interface" :date (25856 53584) :url "https://github.com/embed-me/vunit-mode") (vyper-mode :source "MELPA" :recipe (:package "vyper-mode" :repo "ralexstokes/vyper-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Vyper programming language" :date (23359 55376) :url "https://github.com/ralexstokes/vyper-mode") (w32-browser :source "MELPA" :recipe (:package "w32-browser" :fetcher github :repo "emacsorphanage/w32-browser" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run Windows application associated with a file" :date (22632 7248) :url "https://github.com/emacsorphanage/w32-browser") (w32-ime :source "MELPA" :recipe (:package "w32-ime" :fetcher github :repo "trueroad/w32-ime.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Windows IME UI/UX controler" :date (24485 47440) :url "https://github.com/trueroad/w32-ime.el") (w3m :source "MELPA" :recipe (:package "w3m" :fetcher github :repo "emacs-w3m/emacs-w3m" :files (:defaults "icons" (:exclude "octet.el" "mew-w3m.el" "w3m-xmas.el" "doc/*.texi"))) :description "An Emacs interface to w3m" :date (26401 19664) :url "https://github.com/emacs-w3m/emacs-w3m") (wacspace :source "MELPA" :recipe (:package "wacspace" :fetcher github :repo "shosti/wacspace.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The WACky WorkSPACE manager for emACS" :date (23204 18256) :url "https://github.com/shosti/wacspace.el") (waf-mode :source "MELPA" :recipe (:package "waf-mode" :fetcher git :url "https://bitbucket.org/dvalchuk/waf-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Waf integration for Emacs" :date (22753 26192) :url "https://bitbucket.org/dvalchuk/waf-mode") (waher-theme :source "MELPA" :recipe (:package "waher-theme" :fetcher github :repo "emacsfodder/emacs-waher-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme based on waher for st2 by dduckster" :date (21606 27984) :url "https://github.com/emacsfodder/emacs-waher-theme") (wakatime-mode :source "MELPA" :recipe (:package "wakatime-mode" :fetcher github :repo "wakatime/wakatime-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Automatic time tracking extension for WakaTime" :date (26231 15184) :url "https://github.com/wakatime/wakatime-mode") (wakib-keys :source "MELPA" :recipe (:package "wakib-keys" :repo "darkstego/wakib-keys" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor Mode for Modern Keybindings" :date (25093 31952) :url "https://github.com/darkstego/wakib-keys") (wal-mode :source "MELPA" :recipe (:package "wal-mode" :repo "LucasKl/wal-major-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the WAL programming language" :date (25168 41552) :url "https://github.com/LucasKl/wal-major-mode") (walkclj :source "MELPA" :recipe (:package "walkclj" :repo "corgi-emacs/walkclj" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manipulate Clojure parse trees" :date (25301 51664) :url "https://github.com/corgi-emacs/walkclj") (walkman :source "MELPA" :recipe (:package "walkman" :repo "abrochard/walkman" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Write HTTP requests in Org mode" :date (25407 16848) :url "https://github.com/abrochard/walkman") (wallpaper :source "MELPA" :recipe (:package "wallpaper" :fetcher github :repo "farlado/emacs-wallpaper" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Setting the wallpaper" :date (24460 44240) :url "https://github.com/farlado/emacs-wallpaper") (wallpreview :source "MELPA" :recipe (:package "wallpreview" :repo "ryotaro612/wallpreview" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Set wallpapers with image-dired" :date (25280 45520) :url "https://github.com/ryotaro612/wallpreview") (wand :source "MELPA" :recipe (:package "wand" :fetcher github :repo "cmpitg/wand" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Magic wand for Emacs - Select and execute" :date (25221 24144) :url "https://github.com/cmpitg/wand") (wandbox :source "MELPA" :recipe (:package "wandbox" :fetcher github :repo "kosh04/emacs-wandbox" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wandbox client" :date (22833 53712) :url "https://github.com/kosh04/emacs-wandbox") (wanderlust :source "MELPA" :recipe (:package "wanderlust" :fetcher github :repo "wanderlust/wanderlust" :files ("doc/wl.texi" "doc/wl-ja.texi" "elmo/*.el" "wanderlust-pkg.el" "wl/*.el" "etc/icons" (:exclude "elmo/elmo-database.el" "elmo/utf7.el" "wl/wl-dnd.el" "wl/wl-mule.el" "wl/wl-xmas.el"))) :description "Yet Another Message Interface on Emacsen" :date (26339 22096) :url "https://github.com/wanderlust/wanderlust") (warm-night-theme :source "MELPA" :recipe (:package "warm-night-theme" :repo "mswift42/warm-night-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs 24 theme with a dark background" :date (22551 45264) :url "https://github.com/mswift42/warm-night-theme") (wasp-mode :source "MELPA" :recipe (:package "wasp-mode" :repo "thechampagne/wasp-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Wasp programming language" :date (25669 40016) :url "https://github.com/thechampagne/wasp-mode") (wat-ts-mode :source "MELPA" :recipe (:package "wat-ts-mode" :repo "nverno/wat-ts-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major modes for webassembly text formats using tree sitter" :date (25887 9168) :url "https://github.com/nverno/wat-ts-mode") (watch-buffer :source "MELPA" :recipe (:package "watch-buffer" :fetcher github :repo "mjsteger/watch-buffer" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Run a shell command when saving a buffer" :date (20342 4288) :url "https://github.com/mjsteger/watch-buffer") (wavedrom-mode :source "MELPA" :recipe (:package "wavedrom-mode" :fetcher github :repo "gmlarumbe/wavedrom-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "WaveDrom Integration" :date (26117 55888) :url "https://github.com/gmlarumbe/wavedrom-mode") (wavefront-obj-mode :source "MELPA" :recipe (:package "wavefront-obj-mode" :fetcher github :repo "abend/wavefront-obj-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Wavefront obj files" :date (22920 54480) :url "https://github.com/abend/wavefront-obj-mode") (wc-goal-mode :source "MELPA" :recipe (:package "wc-goal-mode" :repo "bnbeckwith/wc-goal-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running word count with goals (minor mode)" :date (21503 35392) :url "https://github.com/bnbeckwith/wc-goal-mode") (wc-mode :source "MELPA" :recipe (:package "wc-mode" :fetcher github :repo "bnbeckwith/wc-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Running word count with goals (minor mode)" :date (24699 19536) :url "https://github.com/bnbeckwith/wc-mode") (wdl-mode :source "MELPA" :recipe (:package "wdl-mode" :repo "zhanxw/wdl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "WDL (Workflow Definition Language) major mode" :date (23432 23248) :url "https://github.com/zhanxw/wdl-mode") (weak-ref :source "MELPA" :recipe (:package "weak-ref" :fetcher github :repo "skeeto/elisp-weak-ref" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weak references for Emacs Lisp" :date (24137 44368) :url "https://github.com/skeeto/elisp-weak-ref") (weather-metno :source "MELPA" :recipe (:package "weather-metno" :fetcher github :repo "ruediger/weather-metno-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weather data from met.no in Emacs" :date (25557 36048) :url "https://github.com/ruediger/weather-metno-el") (web :source "MELPA" :recipe (:package "web" :fetcher github :repo "nicferrier/emacs-web" :files ("web.el")) :description "Useful HTTP client" :date (21667 4688) :url "https://github.com/nicferrier/emacs-web") (web-beautify :source "MELPA" :recipe (:package "web-beautify" :repo "yasuyk/web-beautify" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Format HTML, CSS and JavaScript/JSON" :date (22570 9680) :url "https://github.com/yasuyk/web-beautify") (web-completion-data :source "MELPA" :recipe (:package "web-completion-data" :fetcher github :repo "osv/web-completion-data" :files ("*.el" "html-stuff")) :description "Shared completion data for ac-html and company-web" :date (22251 6864) :url "https://github.com/osv/web-completion-data") (web-mode :source "MELPA" :recipe (:package "web-mode" :repo "fxbois/web-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing web templates" :date (26286 39504) :url "https://github.com/fxbois/web-mode") (web-mode-edit-element :source "MELPA" :recipe (:package "web-mode-edit-element" :fetcher github :repo "jtkDvlp/web-mode-edit-element" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helper-functions for attribute- and element-handling" :date (23792 17488) :url "https://github.com/jtkDvlp/web-mode-edit-element") (web-narrow-mode :source "MELPA" :recipe (:package "web-narrow-mode" :repo "Qquanwei/web-narrow-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Quick narrow code block in web-mode" :date (22758 44112) :url "https://github.com/Qquanwei/web-narrow-mode") (web-search :source "MELPA" :recipe (:package "web-search" :fetcher github :repo "xuchunyang/web-search.el" :files (:defaults "web-search" "web-search-completion.bash")) :description "Open a web search" :date (23818 41552) :url "https://github.com/xuchunyang/web-search.el") (web-server :source "MELPA" :recipe (:package "web-server" :fetcher github :repo "eschulte/emacs-web-server" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Web Server" :date (24806 5584) :url "https://github.com/eschulte/emacs-web-server") (webdriver :source "MELPA" :recipe (:package "webdriver" :fetcher gitlab :repo "mauroaranda/emacs-webdriver" :files (:defaults (:exclude "doclicense.texi" "docstyle.texi"))) :description "WebDriver local end implementation" :date (25900 21200) :url "https://gitlab.com/mauroaranda/emacs-webdriver") (webkit-color-picker :source "MELPA" :recipe (:package "webkit-color-picker" :fetcher github :repo "ozanmakes/emacs-webkit-color-picker" :files (:defaults "color-picker.html")) :description "Insert and adjust colors using Webkit Widgets" :date (23222 48208) :url "https://github.com/ozanmakes/emacs-webkit-color-picker") (weblio :source "MELPA" :recipe (:package "weblio" :repo "pzel/weblio" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Look up Japanese words on Weblio.jp" :date (26178 32592) :url "https://github.com/pzel/weblio") (weblogger :source "MELPA" :recipe (:package "weblogger" :fetcher github :repo "hexmode/weblogger-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weblog maintenance via XML-RPC APIs" :date (20095 34880) :url "https://github.com/hexmode/weblogger-el") (weblorg :source "MELPA" :recipe (:package "weblorg" :fetcher github :repo "emacs-love/weblorg" :files (:defaults "themes")) :description "Static Site Generator for org-mode" :date (26254 63056) :url "https://github.com/emacs-love/weblorg") (webpaste :source "MELPA" :recipe (:package "webpaste" :repo "etu/webpaste.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste to pastebin-like services" :date (26364 25296) :url "https://github.com/etu/webpaste.el") (websearch :source "MELPA" :recipe (:package "websearch" :fetcher gitlab :repo "xgqt/emacs-websearch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query search engines" :date (25764 34896) :url "https://gitlab.com/xgqt/emacs-websearch") (websocket :source "MELPA" :recipe (:package "websocket" :repo "ahyatt/emacs-websocket" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs WebSocket client and server" :date (25810 44240) :url "https://github.com/ahyatt/emacs-websocket") (wedge-ws :source "MELPA" :recipe (:package "wedge-ws" :fetcher github :repo "aes/wedge-ws" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wedge whitespace between columns in text" :date (21442 58688) :url "https://github.com/aes/wedge-ws") (weechat :source "MELPA" :recipe (:package "weechat" :fetcher github :repo "the-kenny/weechat.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Chat via WeeChat's relay protocol in Emacs" :date (23777 50128) :url "https://github.com/the-kenny/weechat.el") (weechat-alert :source "MELPA" :recipe (:package "weechat-alert" :fetcher github :repo "Kungi/weechat-alert" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weechat notifier using alerts" :date (22289 22096) :url "https://github.com/Kungi/weechat-alert") (weibo :source "MELPA" :recipe (:package "weibo" :repo "austin-----/weibo.emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Weibo client for Emacs" :date (21754 5456) :url "https://github.com/austin-----/weibo.emacs") (weyland-yutani-theme :source "MELPA" :recipe (:package "weyland-yutani-theme" :repo "jstaursky/weyland-yutani-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs theme based off Alien movie franchise" :date (24839 2896) :url "https://github.com/jstaursky/weyland-yutani-theme") (wfnames :source "MELPA" :recipe (:package "wfnames" :fetcher github :repo "thierryvolpiatto/wfnames" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Edit filenames" :date (26307 45648) :url "https://github.com/thierryvolpiatto/wfnames") (wgrep :source "MELPA" :recipe (:package "wgrep" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep.el")) :description "Writable grep buffer" :date (25564 9296) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgrep-ack :source "MELPA" :recipe (:package "wgrep-ack" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep-ack.el") :version-regexp "ack-%v") :description "Writable ack-and-a-half buffer" :date (25569 27216) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgrep-ag :source "MELPA" :recipe (:package "wgrep-ag" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep-ag.el") :version-regexp "ag-%v") :description "Writable ag buffer" :date (25562 53968) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgrep-deadgrep :source "MELPA" :recipe (:package "wgrep-deadgrep" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep-deadgrep.el") :version-regexp "deadgrep-%v") :description "Writable deadgrep buffer and apply the changes to files" :date (25979 27856) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgrep-helm :source "MELPA" :recipe (:package "wgrep-helm" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep-helm.el") :version-regexp "helm-%v") :description "Writable helm-grep-mode buffer" :date (25562 53968) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgrep-pt :source "MELPA" :recipe (:package "wgrep-pt" :fetcher github :repo "mhayashi1120/Emacs-wgrep" :files ("wgrep-pt.el") :version-regexp "pt-%v") :description "Writable pt buffer" :date (25569 27216) :url "https://github.com/mhayashi1120/Emacs-wgrep") (wgsl-mode :source "MELPA" :recipe (:package "wgsl-mode" :repo "acowley/wgsl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighting for the WebGPU Shading Language" :date (25943 54352) :url "https://github.com/acowley/wgsl-mode") (whaler :source "MELPA" :recipe (:package "whaler" :fetcher github :repo "SalOrak/whaler.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic and customizable project manager" :date (26258 60112) :url "https://github.com/SalOrak/whaler.el") (what-the-commit :source "MELPA" :recipe (:package "what-the-commit" :fetcher github :repo "danbarbarito/what-the-commit.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Random commit message generator" :date (21988 49232) :url "https://github.com/danbarbarito/what-the-commit.el") (which-key :source "MELPA" :recipe (:package "which-key" :repo "justbur/emacs-which-key" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display available keybindings in popup" :date (26227 18128) :url "https://github.com/justbur/emacs-which-key") (which-key-posframe :source "MELPA" :recipe (:package "which-key-posframe" :fetcher github :repo "emacsorphanage/which-key-posframe" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Using posframe to show which-key" :date (25614 15696) :url "https://github.com/emacsorphanage/which-key-posframe") (whiley-mode :source "MELPA" :recipe (:package "whiley-mode" :repo "Whiley/WhileyEmacsMode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Whiley language" :date (25197 41808) :url "https://github.com/Whiley/WhileyEmacsMode") (whitaker :source "MELPA" :recipe (:package "whitaker" :fetcher github :repo "Fuco1/whitaker" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Comint interface for Whitaker's Words" :date (24601 48464) :url "https://github.com/Fuco1/whitaker") (white-sand-theme :source "MELPA" :recipe (:package "white-sand-theme" :repo "mswift42/white-sand-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs theme with a light background" :date (24597 51408) :url "https://github.com/mswift42/white-sand-theme") (white-theme :source "MELPA" :recipe (:package "white-theme" :repo "anler/white-theme.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minimalistic light color theme inspired by basic-theme" :date (22492 23888) :url "https://github.com/anler/white-theme.el") (whitespace-cleanup-mode :source "MELPA" :recipe (:package "whitespace-cleanup-mode" :fetcher github :repo "purcell/whitespace-cleanup-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Intelligently call whitespace-cleanup on save" :date (24728 19792) :url "https://github.com/purcell/whitespace-cleanup-mode") (whizzml-mode :source "MELPA" :recipe (:package "whizzml-mode" :fetcher github :repo "whizzml/whizzml-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Programming mode for editing WhizzML files" :date (24452 50128) :url "https://github.com/whizzml/whizzml-mode") (whois :source "MELPA" :recipe (:package "whois" :fetcher github :repo "lassik/emacs-whois" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax highlighted domain name queries using system whois" :date (26099 25936) :url "https://github.com/lassik/emacs-whois") (whole-line-or-region :source "MELPA" :recipe (:package "whole-line-or-region" :fetcher github :repo "purcell/whole-line-or-region" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Operate on current line if region undefined" :date (26240 30160) :url "https://github.com/purcell/whole-line-or-region") (why-this :source "MELPA" :recipe (:package "why-this" :fetcher codeberg :repo "akib/emacs-why-this" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Why is this line here?  Ask version control" :date (25477 8528) :url "https://codeberg.org/akib/emacs-why-this") (wide-column :source "MELPA" :recipe (:package "wide-column" :fetcher github :repo "phillord/wide-column" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Calls functions dependant on column position" :date (22984 7376) :url "https://github.com/phillord/wide-column") (widget-mvc :source "MELPA" :recipe (:package "widget-mvc" :repo "kiwanami/emacs-widget-mvc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "MVC framework for the emacs widgets" :date (21669 46416) :url "https://github.com/kiwanami/emacs-widget-mvc") (wiki-nav :source "MELPA" :recipe (:package "wiki-nav" :repo "rolandwalker/button-lock" :fetcher github :files ("wiki-nav.el")) :description "Simple file navigation using [[WikiStrings]]" :date (25602 24528) :url "https://github.com/rolandwalker/button-lock") (wiki-summary :source "MELPA" :recipe (:package "wiki-summary" :fetcher github :repo "jozefg/wiki-summary.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View Wikipedia summaries in Emacs easily" :date (23485 5840) :url "https://github.com/jozefg/wiki-summary.el") (wikinfo :source "MELPA" :recipe (:package "wikinfo" :repo "progfolio/wikinfo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scrape Wikipedia Infoboxes" :date (25366 25424) :url "https://github.com/progfolio/wikinfo") (wikinforg :source "MELPA" :recipe (:package "wikinforg" :repo "progfolio/wikinforg" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Org-mode wikinfo integration" :date (26005 51920) :url "https://github.com/progfolio/wikinforg") (wildcharm-light-theme :source "MELPA" :recipe (:package "wildcharm-light-theme" :repo "habamax/wildcharm-theme" :fetcher github :files ("wildcharm-light-theme.el")) :description "Port of vim-wildcharm (light) colorscheme" :date (25955 45520) :url "https://github.com/habamax/wildcharm-theme") (wildcharm-theme :source "MELPA" :recipe (:package "wildcharm-theme" :repo "habamax/wildcharm-theme" :fetcher github :files ("wildcharm-theme.el")) :description "Port of vim-wildcharm colorscheme" :date (25955 45520) :url "https://github.com/habamax/wildcharm-theme") (wilt :source "MELPA" :recipe (:package "wilt" :fetcher github :repo "sixty-north/emacs-wilt" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An extensions for calculating WILT in a buffer" :date (23179 15056) :url "https://github.com/sixty-north/emacs-wilt") (win-switch :source "MELPA" :recipe (:package "win-switch" :fetcher github :repo "genovese/win-switch" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fast, dynamic bindings for window-switching/resizing" :date (22521 24144) :url "https://github.com/genovese/win-switch") (windata :source "MELPA" :recipe (:package "windata" :fetcher github :repo "emacsorphanage/windata" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Convert window configuration to list" :date (19097 35008) :url "https://github.com/emacsorphanage/windata") (window-end-visible :source "MELPA" :recipe (:package "window-end-visible" :repo "rolandwalker/window-end-visible" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find the last visible point in a window" :date (21354 37056) :url "https://github.com/rolandwalker/window-end-visible") (window-jump :source "MELPA" :recipe (:package "window-jump" :repo "chumpage/chumpy-windows" :fetcher github :files ("window-jump.el")) :description "Move left/right/up/down through your windows" :date (22922 9808) :url "https://github.com/chumpage/chumpy-windows") (window-layout :source "MELPA" :recipe (:package "window-layout" :fetcher github :repo "kiwanami/emacs-window-layout" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Window layout manager" :date (26407 58448) :url "https://github.com/kiwanami/emacs-window-layout") (window-number :source "MELPA" :recipe (:package "window-number" :repo "nikolas/window-number" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select windows by numbers" :date (22911 39504) :url "https://github.com/nikolas/window-number") (window-numbering :source "MELPA" :recipe (:package "window-numbering" :fetcher github :repo "nschum/window-numbering.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Numbered window shortcuts" :date (22440 62160) :url "https://github.com/nschum/window-numbering.el") (window-purpose :source "MELPA" :recipe (:package "window-purpose" :repo "bmag/emacs-purpose" :fetcher github :files (:defaults "layouts") :old-names (purpose)) :description "Purpose-based window management for Emacs" :date (26165 20560) :url "https://github.com/bmag/emacs-purpose") (winds :source "MELPA" :recipe (:package "winds" :fetcher github :repo "Javyre/winds.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Window configuration switcher grouped by workspaces" :date (24504 11856) :url "https://github.com/Javyre/winds.el") (windsize :source "MELPA" :recipe (:package "windsize" :fetcher github :repo "grammati/windsize" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple, intuitive window resizing" :date (23510 9040) :url "https://github.com/grammati/windsize") (windswap :source "MELPA" :recipe (:package "windswap" :fetcher github :repo "purcell/windswap" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Like windmove, but swaps buffers while moving point" :date (24343 22352) :url "https://github.com/purcell/windswap") (windwow :source "MELPA" :recipe (:package "windwow" :repo "vijumathew/windwow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple workspace management" :date (22931 24784) :url "https://github.com/vijumathew/windwow") (winnow :source "MELPA" :recipe (:package "winnow" :fetcher github :repo "dgtized/winnow.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Winnow ag/grep results by matching/excluding lines" :date (24563 33232) :url "https://github.com/dgtized/winnow.el") (winpoint :source "MELPA" :recipe (:package "winpoint" :fetcher github :repo "jorgenschaefer/winpoint" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Remember buffer positions per-window, not per buffer" :date (21094 55616) :url "https://github.com/jorgenschaefer/winpoint") (winring :source "MELPA" :recipe (:package "winring" :fetcher gitlab :repo "warsaw/winring" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Window configuration rings" :date (26328 51792) :url "https://gitlab.com/warsaw/winring") (winum :source "MELPA" :recipe (:package "winum" :fetcher github :repo "deb0ch/emacs-winum" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Navigate windows and frames using numbers" :date (23928 3792) :url "https://github.com/deb0ch/emacs-winum") (wispjs-mode :source "MELPA" :recipe (:package "wispjs-mode" :fetcher github :repo "krisajenkins/wispjs-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for Wisp code" :date (22895 51280) :url "https://github.com/krisajenkins/wispjs-mode") (with-editor :source "MELPA" :recipe (:package "with-editor" :fetcher github :repo "magit/with-editor" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use the Emacsclient as $EDITOR" :date (26322 13008) :url "https://github.com/magit/with-editor") (with-emacs :source "MELPA" :recipe (:package "with-emacs" :fetcher github :repo "twlz0ne/with-emacs.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluate Emacs Lisp expressions in a separate Emacs process" :date (25336 4304) :url "https://github.com/twlz0ne/with-emacs.el") (with-namespace :source "MELPA" :recipe (:package "with-namespace" :repo "Wilfred/with-namespace.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interoperable elisp namespaces" :date (20832 32448) :url "https://github.com/Wilfred/with-namespace.el") (with-proxy :source "MELPA" :recipe (:package "with-proxy" :fetcher github :repo "twlz0ne/with-proxy.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Evaluate expressions with proxy" :date (24247 6608) :url "https://github.com/twlz0ne/with-proxy.el") (with-shell-interpreter :source "MELPA" :recipe (:package "with-shell-interpreter" :repo "p3r7/with-shell-interpreter" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Helper for shell command APIs" :date (25860 50640) :url "https://github.com/p3r7/with-shell-interpreter") (with-simulated-input :source "MELPA" :recipe (:package "with-simulated-input" :repo "DarwinAwardWinner/with-simulated-input" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A macro to simulate user input non-interactively" :date (24750 46800) :url "https://github.com/DarwinAwardWinner/with-simulated-input") (with-venv :source "MELPA" :recipe (:package "with-venv" :repo "10sr/with-venv-el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Execute with Python virtual environment activated" :date (24910 15440) :url "https://github.com/10sr/with-venv-el") (wiz :source "MELPA" :recipe (:package "wiz" :fetcher github :repo "zonuexe/emacs-wiz" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Macros to simplify startup initialization" :date (26239 9296) :url "https://github.com/zonuexe/emacs-wiz") (wn-mode :source "MELPA" :recipe (:package "wn-mode" :repo "luismbo/wn-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Numeric window switching shortcuts" :date (22081 2384) :url "https://github.com/luismbo/wn-mode") (wolfram :source "MELPA" :recipe (:package "wolfram" :fetcher github :repo "hsjunnesson/wolfram.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wolfram Alpha Integration" :date (25986 1104) :url "https://github.com/hsjunnesson/wolfram.el") (wolfram-mode :source "MELPA" :recipe (:package "wolfram-mode" :fetcher github :repo "kawabata/wolfram-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Mathematica editing and inferior mode" :date (23199 336) :url "https://github.com/kawabata/wolfram-mode") (wollok-mode :source "MELPA" :recipe (:package "wollok-mode" :fetcher github :repo "tralph3/wollok-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the Wollok programming language" :date (26377 37328) :url "https://github.com/tralph3/wollok-mode") (wonderland :source "MELPA" :recipe (:package "wonderland" :fetcher github :repo "kurisuwhyte/emacs-wonderland" :files ("source/*.el")) :description "Declarative configuration for Emacsen" :date (21042 7488) :url "https://github.com/kurisuwhyte/emacs-wonderland") (wordcount-section :source "MELPA" :recipe (:package "wordcount-section" :fetcher sourcehut :repo "swflint/emacs-universal-sidecar" :files ("wordcount-section.el")) :description "Universal Sidecar Section to show Word Counts" :date (26157 26448) :url "https://git.sr.ht/~swflint/emacs-universal-sidecar") (wordel :source "MELPA" :recipe (:package "wordel" :repo "progfolio/wordel" :fetcher github :files (:defaults "words")) :description "An Elisp implementation of \"Wordle\" (aka \"Lingo\")" :date (26005 51920) :url "https://github.com/progfolio/wordel") (wordgen :source "MELPA" :recipe (:package "wordgen" :fetcher github :repo "Fanael/wordgen.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Random word generator" :date (22914 15696) :url "https://github.com/Fanael/wordgen.el") (wordnut :source "MELPA" :recipe (:package "wordnut" :repo "gromnitsky/wordnut" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode interface to WordNet" :date (23206 59984) :url "https://github.com/gromnitsky/wordnut") (wordreference :source "MELPA" :recipe (:package "wordreference" :fetcher codeberg :repo "martianh/wordreference.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Interface for wordreference.com" :date (26388 7632) :url "https://codeberg.org/martianh/wordreference.el") (wordsmith-mode :source "MELPA" :recipe (:package "wordsmith-mode" :repo "istib/wordsmith-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Syntax analysis and NLP text-processing in Emacs (OSX-only)" :date (24815 20560) :url "https://github.com/istib/wordsmith-mode") (worf :source "MELPA" :recipe (:package "worf" :repo "abo-abo/worf" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A warrior does not press so many keys! (in org-mode)" :date (25040 49360) :url "https://github.com/abo-abo/worf") (workgroups :source "MELPA" :recipe (:package "workgroups" :repo "tlh/workgroups.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Workgroups for windows (for Emacs)" :date (20013 52032) :url "https://github.com/tlh/workgroups.el") (workgroups2 :source "MELPA" :recipe (:package "workgroups2" :fetcher github :repo "pashinin/workgroups2" :files ("src/*.el")) :description "Save&load multiple named workspaces (or \"workgroups\")" :date (25634 976) :url "https://github.com/pashinin/workgroups2") (workroom :source "MELPA" :recipe (:package "workroom" :fetcher codeberg :repo "akib/emacs-workroom" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Named rooms for work without irrelevant distracting buffers" :date (25873 62672) :url "https://codeberg.org/akib/emacs-workroom") (world-time-mode :source "MELPA" :recipe (:package "world-time-mode" :fetcher github :repo "nicferrier/emacs-world-time-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Show whole days of world-time diffs" :date (21420 31680) :url "https://github.com/nicferrier/emacs-world-time-mode") (wotd :source "MELPA" :recipe (:package "wotd" :repo "cute-jumper/emacs-word-of-the-day" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fetch word-of-the-day from multiple online sources" :date (22745 32080) :url "https://github.com/cute-jumper/emacs-word-of-the-day") (wrap-region :source "MELPA" :recipe (:package "wrap-region" :repo "rejeep/wrap-region.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Wrap text with punctation or tag" :date (21208 14912) :url "https://github.com/rejeep/wrap-region.el") (wren-mode :source "MELPA" :recipe (:package "wren-mode" :repo "thechampagne/wren-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Wren programming language" :date (25514 2896) :url "https://github.com/thechampagne/wren-mode") (writefreely :source "MELPA" :recipe (:package "writefreely" :repo "dangom/writefreely.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Push your Org files as markdown to a writefreely instance" :date (25506 8784) :url "https://github.com/dangom/writefreely.el") (writegood-mode :source "MELPA" :recipe (:package "writegood-mode" :repo "bnbeckwith/writegood-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Polish up poor writing on the fly" :date (25210 53840) :url "https://github.com/bnbeckwith/writegood-mode") (writeroom-mode :source "MELPA" :recipe (:package "writeroom-mode" :fetcher github :repo "joostkremers/writeroom-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for distraction-free writing" :date (25924 3536) :url "https://github.com/joostkremers/writeroom-mode") (ws-butler :source "MELPA" :recipe (:package "ws-butler" :fetcher github :repo "lewang/ws-butler" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unobtrusively remove trailing whitespace" :date (24498 59472) :url "https://github.com/lewang/ws-butler") (wsd-mode :source "MELPA" :recipe (:package "wsd-mode" :fetcher github :repo "josteink/wsd-mode" :version-regexp "v\\.%v" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs major-mode for www.websequencediagrams.com" :date (23993 63952) :url "https://github.com/josteink/wsd-mode") (wttrin :source "MELPA" :recipe (:package "wttrin" :fetcher github :repo "cjennings/emacs-wttrin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Frontend for Service wttr.in" :date (26187 47568) :url "https://github.com/cjennings/emacs-wttrin") (wucuo :source "MELPA" :recipe (:package "wucuo" :fetcher github :repo "redguardtoo/wucuo" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fastest solution to spell check camel case code or plain text" :date (26360 28240) :url "https://github.com/redguardtoo/wucuo") (wwg :source "MELPA" :recipe (:package "wwg" :repo "ag91/writer-word-goals" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Writer word goals" :date (24774 29136) :url "https://github.com/ag91/writer-word-goals") (wwtime :source "MELPA" :recipe (:package "wwtime" :fetcher github :repo "ndw/wwtime" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert a time of day with appropriate world-wide localization" :date (22096 56144) :url "https://github.com/ndw/wwtime") (www-synonyms :source "MELPA" :recipe (:package "www-synonyms" :fetcher github :repo "spebern/www-synonyms" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert synonym for a word" :date (22667 46288) :url "https://github.com/spebern/www-synonyms") (x-path-walker :source "MELPA" :recipe (:package "x-path-walker" :fetcher github :repo "Lompik/x-path-walker" :files (:defaults "xpathwalker")) :description "Navigation feature for JSON/XML/HTML based on path (imenu like)" :date (25295 12880) :url "https://github.com/Lompik/x-path-walker") (x509-mode :source "MELPA" :recipe (:package "x509-mode" :fetcher github :repo "jobbflykt/x509-mode" :files (:defaults "*.txt")) :description "View certificates, CRLs and keys using OpenSSL" :date (26282 42448) :url "https://github.com/jobbflykt/x509-mode") (x86-lookup :source "MELPA" :recipe (:package "x86-lookup" :repo "skeeto/x86-lookup" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to x86 instruction documentation" :date (26311 42704) :url "https://github.com/skeeto/x86-lookup") (xbm-life :source "MELPA" :recipe (:package "xbm-life" :fetcher git :url "https://depp.brause.cc/xbm-life.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A XBM version of Conway's Game of Life" :date (24725 43600) :url "https://depp.brause.cc/xbm-life.git") (xcode-mode :source "MELPA" :recipe (:package "xcode-mode" :fetcher github :repo "nicklanasa/xcode-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for emacs to perform Xcode like actions" :date (22479 11856) :url "https://github.com/nicklanasa/xcode-mode") (xcode-project :source "MELPA" :recipe (:package "xcode-project" :fetcher github :repo "nhojb/xcode-project" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A package for reading Xcode project files" :date (24368 25552) :url "https://github.com/nhojb/xcode-project") (xcscope :source "MELPA" :recipe (:package "xcscope" :fetcher github :repo "dkogan/xcscope.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Cscope interface for (X)Emacs" :date (25752 43728) :url "https://github.com/dkogan/xcscope.el") (xenops :source "MELPA" :recipe (:package "xenops" :fetcher github :repo "dandavison/xenops" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A LaTeX editing environment for mathematical documents" :date (25345 19280) :url "https://github.com/dandavison/xenops") (xhair :source "MELPA" :recipe (:package "xhair" :fetcher github :repo "Boruch-Baum/emacs-xhair" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Highlight the current line and column" :date (24837 47568) :url "https://github.com/Boruch-Baum/emacs-xhair") (xkb-mode :source "MELPA" :recipe (:package "xkb-mode" :fetcher github :repo "captainflasmr/xkb-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing X Keyboard Extension (XKB) files" :date (26167 62288) :url "https://github.com/captainflasmr/xkb-mode") (xkcd :source "MELPA" :recipe (:package "xkcd" :fetcher github :repo "vibhavp/emacs-xkcd" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "View xkcd from Emacs" :date (25200 18000) :url "https://github.com/vibhavp/emacs-xkcd") (xmind-org :source "MELPA" :recipe (:package "xmind-org" :fetcher github :repo "akirak/xmind-org-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import XMind mindmaps into Org" :date (26270 51280) :url "https://github.com/akirak/xmind-org-el") (xml+ :source "MELPA" :recipe (:package "xml+" :fetcher github :repo "bddean/xml-plus" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Utilities for xml and html trees" :date (22905 720) :url "https://github.com/bddean/xml-plus") (xml-format :source "MELPA" :recipe (:package "xml-format" :fetcher github :repo "wbolster/emacs-xml-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "XML reformatter using xmllint" :date (23967 39888) :url "https://github.com/wbolster/emacs-xml-format") (xml-quotes :source "MELPA" :recipe (:package "xml-quotes" :fetcher github :repo "ndw/xml-quotes" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Read quotations from an XML document" :date (24154 53456) :url "https://github.com/ndw/xml-quotes") (xml-rpc :source "MELPA" :recipe (:package "xml-rpc" :fetcher github :repo "xml-rpc-el/xml-rpc-el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "An elisp implementation of clientside XML-RPC" :date (25891 6224) :url "https://github.com/xml-rpc-el/xml-rpc-el") (xmlgen :source "MELPA" :recipe (:package "xmlgen" :fetcher github :repo "philjackson/xmlgen" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A DSL for generating XML" :date (22763 62032) :url "https://github.com/philjackson/xmlgen") (xmlunicode :source "MELPA" :recipe (:package "xmlunicode" :fetcher github :repo "ndw/xmlunicode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unicode support for XML" :date (25825 11600) :url "https://github.com/ndw/xmlunicode") (xo :source "MELPA" :recipe (:package "xo" :fetcher github :repo "j-em/xo-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "XO linter integration with compilation mode" :date (22272 13008) :url "https://github.com/j-em/xo-emacs") (xonsh-mode :source "MELPA" :recipe (:package "xonsh-mode" :repo "seanfarley/xonsh-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing xonshrc files" :date (24461 65104) :url "https://github.com/seanfarley/xonsh-mode") (xquery-mode :source "MELPA" :recipe (:package "xquery-mode" :fetcher github :repo "xquery-mode/xquery-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple mode for editing xquery programs" :date (22690 7760) :url "https://github.com/xquery-mode/xquery-mode") (xquery-tool :source "MELPA" :recipe (:package "xquery-tool" :fetcher github :repo "paddymcall/xquery-tool.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A simple interface to saxonb's xquery" :date (24405 19920) :url "https://github.com/paddymcall/xquery-tool.el") (xref-js2 :source "MELPA" :recipe (:package "xref-js2" :fetcher github :repo "js-emacs/xref-js2" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Jump to references/definitions using ag & js2-mode's AST" :date (26165 20560) :url "https://github.com/js-emacs/xref-js2") (xref-rst :source "MELPA" :recipe (:package "xref-rst" :fetcher codeberg :repo "ideasman42/emacs-xref-rst" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Lookup reStructuredText symbols" :date (26148 11472) :url "https://codeberg.org/ideasman42/emacs-xref-rst") (xresources-theme :source "MELPA" :recipe (:package "xresources-theme" :fetcher github :repo "martenlienen/xresources-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Use your .Xresources as your emacs theme" :date (25488 65232) :url "https://github.com/martenlienen/xresources-theme") (xterm-color :source "MELPA" :recipe (:package "xterm-color" :repo "atomontage/xterm-color" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ANSI, XTERM 256 and Truecolor support" :date (25624 51536) :url "https://github.com/atomontage/xterm-color") (xterm-keybinder :source "MELPA" :recipe (:package "xterm-keybinder" :fetcher github :repo "yuutayamada/xterm-keybinder-el" :files ("*.el" "xterm-option" "emacs-urxvt-client")) :description "Let you extra keybinds in xterm/urxvt" :date (22338 7632) :url "https://github.com/yuutayamada/xterm-keybinder-el") (xtest :source "MELPA" :recipe (:package "xtest" :fetcher github :repo "promethial/xtest" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple Testing with Emacs & ERT" :date (21644 43216) :url "https://github.com/promethial/xtest") (xwidgete :source "MELPA" :recipe (:package "xwidgete" :fetcher github :repo "tuhdo/xwidgete" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Enhances usability of current xwidget browser" :date (23055 19920) :url "https://github.com/tuhdo/xwidgete") (xwidgets-reuse :source "MELPA" :recipe (:package "xwidgets-reuse" :fetcher github :repo "lordpretzel/xwidgets-reuse" :files ("xwidgets-reuse.el")) :description "Reuse xwidgets sessions to reduce resource consumption" :date (26120 32080) :url "https://github.com/lordpretzel/xwidgets-reuse") (xwiki-mode :source "MELPA" :recipe (:package "xwiki-mode" :fetcher github :repo "ackerleytng/xwiki-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for xwiki-formatted text" :date (24973 33872) :url "https://github.com/ackerleytng/xwiki-mode") (xwwp :source "MELPA" :recipe (:package "xwwp" :fetcher github :repo "canatella/xwwp" :files ("xwwp.el" "xwwp-follow-link.el" "xwwp-follow-link-ido.el")) :description "Enhance xwidget webkit browser" :date (26241 51024) :url "https://github.com/canatella/xwwp") (xwwp-follow-link-helm :source "MELPA" :recipe (:package "xwwp-follow-link-helm" :fetcher github :repo "canatella/xwwp" :files ("xwwp-follow-link-helm.el")) :description "Link navigation in `xwidget-webkit' sessions using `helm'" :date (24418 31952) :url "https://github.com/canatella/xwwp") (xwwp-follow-link-ivy :source "MELPA" :recipe (:package "xwwp-follow-link-ivy" :fetcher github :repo "canatella/xwwp" :files ("xwwp-follow-link-ivy.el")) :description "Link navigation in `xwidget-webkit' sessions using `ivy'" :date (24418 31952) :url "https://github.com/canatella/xwwp") (yabaki-theme :source "MELPA" :recipe (:package "yabaki-theme" :repo "seahorse/yabaki-theme" :fetcher codeberg :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yabaki, the cast shadow" :date (25884 32976) :url "https://codeberg.org/seahorse/yabaki-theme") (yabin :source "MELPA" :recipe (:package "yabin" :fetcher github :repo "d5884/yabin" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet Another Bignum package (A thin wrapper of calc.el)" :date (21234 38976) :url "https://github.com/d5884/yabin") (yafolding :source "MELPA" :recipe (:package "yafolding" :fetcher github :repo "emacsorphanage/yafolding" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Folding code blocks based on indentation" :date (24099 29136) :url "https://github.com/emacsorphanage/yafolding") (yagist :source "MELPA" :recipe (:package "yagist" :repo "mhayashi1120/yagist.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet Another Emacs integration for gist.github.com" :date (22291 63824) :url "https://github.com/mhayashi1120/yagist.el") (yahtzee :source "MELPA" :recipe (:package "yahtzee" :repo "drdv/yahtzee" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "The yahtzee game" :date (25106 43984) :url "https://github.com/drdv/yahtzee") (yalinum :source "MELPA" :recipe (:package "yalinum" :repo "tm8st/emacs-yalinum" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet another display line numbers" :date (20767 58688) :url "https://github.com/tm8st/emacs-yalinum") (yaml :source "MELPA" :recipe (:package "yaml" :repo "zkry/yaml.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "YAML parser for Elisp" :date (25974 9936) :url "https://github.com/zkry/yaml.el") (yaml-imenu :source "MELPA" :recipe (:package "yaml-imenu" :fetcher github :repo "knu/yaml-imenu.el" :files (:defaults "*.rb")) :description "Enhancement of the imenu support in yaml-mode" :date (25164 44496) :url "https://github.com/knu/yaml-imenu.el") (yaml-mode :source "MELPA" :recipe (:package "yaml-mode" :repo "yoshiki/yaml-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing YAML files" :date (26365 46160) :url "https://github.com/yoshiki/yaml-mode") (yaml-pro :source "MELPA" :recipe (:package "yaml-pro" :repo "zkry/yaml-pro" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Parser-aided YAML editing features" :date (26231 15184) :url "https://github.com/zkry/yaml-pro") (yaml-tomato :source "MELPA" :recipe (:package "yaml-tomato" :repo "RadekMolenda/yaml-tomato" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Copy or show the yaml path currently under cursor" :date (22098 11472) :url "https://github.com/RadekMolenda/yaml-tomato") (yang-mode :source "MELPA" :recipe (:package "yang-mode" :fetcher github :repo "mbj4668/yang-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing YANG files" :date (23760 41040) :url "https://github.com/mbj4668/yang-mode") (yankpad :source "MELPA" :recipe (:package "yankpad" :repo "Kungsgeten/yankpad" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Paste snippets from an org-mode file" :date (26356 31184) :url "https://github.com/Kungsgeten/yankpad") (yapfify :source "MELPA" :recipe (:package "yapfify" :repo "JorisE/yapfify" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "(automatically) format python buffers using YAPF" :date (24895 48080) :url "https://github.com/JorisE/yapfify") (yara-mode :source "MELPA" :recipe (:package "yara-mode" :fetcher github :repo "binjo/yara-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing yara rule file" :date (25138 20432) :url "https://github.com/binjo/yara-mode") (yard-mode :source "MELPA" :recipe (:package "yard-mode" :fetcher github :repo "pd/yard-mode.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Minor mode for Ruby YARD comments" :date (25684 7376) :url "https://github.com/pd/yard-mode.el") (yari :source "MELPA" :recipe (:package "yari" :repo "hron/yari.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet Another RI interface for Emacs" :date (22104 50256) :url "https://github.com/hron/yari.el") (yarn-mode :source "MELPA" :recipe (:package "yarn-mode" :fetcher github :repo "anachronic/yarn-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for yarn.lock files" :date (24125 53200) :url "https://github.com/anachronic/yarn-mode") (yascroll :source "MELPA" :recipe (:package "yascroll" :fetcher github :repo "emacsorphanage/yascroll" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yet Another Scroll Bar Mode" :date (26355 10320) :url "https://github.com/emacsorphanage/yascroll") (yasnippet :source "MELPA" :recipe (:package "yasnippet" :repo "joaotavora/yasnippet" :fetcher github :files ("yasnippet.el" "snippets")) :description "Yet another snippet extension for Emacs" :date (26378 58192) :url "https://github.com/joaotavora/yasnippet") (yasnippet-capf :source "MELPA" :recipe (:package "yasnippet-capf" :fetcher github :repo "elken/yasnippet-capf" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Yasnippet Completion At Point Function" :date (26261 36304) :url "https://github.com/elken/yasnippet-capf") (yasnippet-snippets :source "MELPA" :recipe (:package "yasnippet-snippets" :repo "AndreaCrotti/yasnippet-snippets" :fetcher github :files ("*.el" "snippets" ".nosearch")) :description "Collection of yasnippet snippets" :date (26380 13520) :url "https://github.com/AndreaCrotti/yasnippet-snippets") (yatemplate :source "MELPA" :recipe (:package "yatemplate" :fetcher github :repo "mineo/yatemplate" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "File templates with yasnippet" :date (24977 30928) :url "https://github.com/mineo/yatemplate") (yaxception :source "MELPA" :recipe (:package "yaxception" :repo "aki2o/yaxception" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provide framework about exception like Java for Elisp" :date (26009 48976) :url "https://github.com/aki2o/yaxception") (ycm :source "MELPA" :recipe (:package "ycm" :fetcher github :repo "neuromage/ycm.el" :files ("ycm.el")) :description "Emacs client for the YouCompleteMe auto-completion server" :date (21975 37200) :url "https://github.com/neuromage/ycm.el") (ycmd :source "MELPA" :recipe (:package "ycmd" :fetcher github :repo "abingham/emacs-ycmd" :files ("ycmd.el" "ycmd-eldoc.el" "contrib/*.el")) :description "Emacs bindings to the ycmd completion server" :date (23732 61648) :url "https://github.com/abingham/emacs-ycmd") (ydk-mode :source "MELPA" :recipe (:package "ydk-mode" :fetcher github :repo "jacksonrayhamilton/ydk-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Language support for Yu-Gi-Oh! deck files" :date (22649 16336) :url "https://github.com/jacksonrayhamilton/ydk-mode") (yeetube :source "MELPA" :recipe (:package "yeetube" :fetcher git :url "https://git.thanosapollo.org/yeetube" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Scrape YouTube, Play with mpv & Download with yt-dlp" :date (26390 49360) :url "https://git.thanosapollo.org/yeetube") (yequake :source "MELPA" :recipe (:package "yequake" :fetcher github :repo "alphapapa/yequake" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Drop-down frames, like Yakuake" :date (24140 20560) :url "https://github.com/alphapapa/yequake") (yesql-ghosts :source "MELPA" :recipe (:package "yesql-ghosts" :repo "magnars/yesql-ghosts" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Display ghostly yesql defqueries inline" :date (21734 20176) :url "https://github.com/magnars/yesql-ghosts") (yesterbox :source "MELPA" :recipe (:package "yesterbox" :repo "sje30/yesterbox" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Count number of inbox messages by day" :date (24189 6096) :url "https://github.com/sje30/yesterbox") (ynab :source "MELPA" :recipe (:package "ynab" :repo "thoreinstein/ynab.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for YNAB (you need a budget)" :date (24284 976) :url "https://github.com/thoreinstein/ynab.el") (yoficator :source "MELPA" :recipe (:package "yoficator" :fetcher gitlab :repo "alx.k/yoficator" :files (:defaults "yo.txt")) :description "Interactively yoficate Russian texts" :date (23763 17232) :url "https://gitlab.com/alx.k/yoficator") (yoshi-theme :source "MELPA" :recipe (:package "yoshi-theme" :fetcher github :repo "ryuslash/yoshi-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Theme named after my cat" :date (25800 8400) :url "https://github.com/ryuslash/yoshi-theme") (youdao-dictionary :source "MELPA" :recipe (:package "youdao-dictionary" :repo "xuchunyang/youdao-dictionary.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Youdao Dictionary interface for Emacs" :date (25885 53840) :url "https://github.com/xuchunyang/youdao-dictionary.el") (youdotcom :source "MELPA" :recipe (:package "youdotcom" :repo "SamuelVanie/youdotcom.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "You.com search package" :date (26050 40400) :url "https://github.com/SamuelVanie/youdotcom.el") (youtube-sub-extractor :source "MELPA" :recipe (:package "youtube-sub-extractor" :repo "agzam/youtube-sub-extractor.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Extract YouTube video subtitles" :date (25459 64976) :url "https://github.com/agzam/youtube-sub-extractor.el") (ytdious :source "MELPA" :recipe (:package "ytdious" :repo "spiderbit/ytdious" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query / Preview YouTube via Invidious" :date (24634 45776) :url "https://github.com/spiderbit/ytdious") (ytdl :source "MELPA" :recipe (:package "ytdl" :repo "tuedachu/ytdl" :fetcher gitlab :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Emacs Interface for youtube-dl" :date (26394 46416) :url "https://gitlab.com/tuedachu/ytdl") (ytel :source "MELPA" :recipe (:package "ytel" :repo "grastello/ytel" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Query YouTube via Invidious" :date (24347 19408) :url "https://github.com/grastello/ytel") (yuck-mode :source "MELPA" :recipe (:package "yuck-mode" :fetcher github :repo "mmcjimsey26/yuck-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for the yuck configuration language" :date (25536 29904) :url "https://github.com/mmcjimsey26/yuck-mode") (yul-mode :source "MELPA" :recipe (:package "yul-mode" :repo "taquangtrung/emacs-yul-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Ethereum Yul intermediate code" :date (25394 4816) :url "https://github.com/taquangtrung/emacs-yul-mode") (z3-mode :source "MELPA" :recipe (:package "z3-mode" :fetcher github :repo "zv/z3-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A z3/SMTLIBv2 interactive development environment" :date (24978 51792) :url "https://github.com/zv/z3-mode") (zeal-at-point :source "MELPA" :recipe (:package "zeal-at-point" :fetcher github :repo "jinzhu/zeal-at-point" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Search the word at point with Zeal" :date (23152 56528) :url "https://github.com/jinzhu/zeal-at-point") (zen-and-art-theme :source "MELPA" :recipe (:package "zen-and-art-theme" :repo "developernotes/zen-and-art-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zen and art color theme for GNU Emacs 24" :date (20451 32064) :url "https://github.com/developernotes/zen-and-art-theme") (zen-mode :source "MELPA" :recipe (:package "zen-mode" :repo "zenlang/zen-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Zen programming language" :date (24286 42704) :url "https://github.com/zenlang/zen-mode") (zenburn-theme :source "MELPA" :recipe (:package "zenburn-theme" :repo "bbatsov/zenburn-emacs" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A low contrast color theme for Emacs" :date (26356 31184) :url "https://github.com/bbatsov/zenburn-emacs") (zencoding-mode :source "MELPA" :recipe (:package "zencoding-mode" :repo "rooney/zencoding" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Unfold CSS-selector-like expressions to markup" :date (21243 53952) :url "https://github.com/rooney/zencoding") (zenity-color-picker :source "MELPA" :recipe (:package "zenity-color-picker" :fetcher git :url "https://bitbucket.org/Soft/zenity-color-picker.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Insert and adjust colors using Zenity" :date (22230 720) :url "https://bitbucket.org/Soft/zenity-color-picker.el") (zeno-theme :source "MELPA" :recipe (:package "zeno-theme" :repo "zenobht/zeno-theme" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark theme using different shades of blue" :date (25003 54992) :url "https://github.com/zenobht/zeno-theme") (zenscript-mode :source "MELPA" :recipe (:package "zenscript-mode" :fetcher github :repo "eutro/zenscript-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for ZenScript" :date (24559 36176) :url "https://github.com/eutro/zenscript-mode") (zephir-mode :source "MELPA" :recipe (:package "zephir-mode" :repo "zephir-lang/zephir-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing Zephir code" :date (24216 51024) :url "https://github.com/zephir-lang/zephir-mode") (zero-input :source "MELPA" :recipe (:package "zero-input" :fetcher git :url "https://gitlab.emacsos.com/sylecn/zero-el" :branch "pkg" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zero Chinese input method framework" :date (26195 41680) :url "https://gitlab.emacsos.com/sylecn/zero-el") (zero-input-panel-posframe :source "MELPA" :recipe (:package "zero-input-panel-posframe" :fetcher git :url "https://gitlab.emacsos.com/sylecn/zero-input-panel-posframe.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Posframe based zero-input panel implementation" :date (26194 20816) :url "https://gitlab.emacsos.com/sylecn/zero-input-panel-posframe.git") (zerodark-theme :source "MELPA" :recipe (:package "zerodark-theme" :fetcher github :repo "NicolasPetton/zerodark-theme" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A dark, medium contrast theme for Emacs" :date (24977 30928) :url "https://github.com/NicolasPetton/zerodark-theme") (zetteldeft :source "MELPA" :recipe (:package "zetteldeft" :fetcher github :repo "EFLS/zetteldeft" :files (:defaults "zetteldeft.org")) :description "Turn deft into a zettelkasten system" :date (25405 61520) :url "https://github.com/EFLS/zetteldeft") (zetteldesk :source "MELPA" :recipe (:package "zetteldesk" :fetcher github :repo "Vidianos-Giannitsis/zetteldesk.el" :files ("zetteldesk.el")) :description "A revision and outlining tool for org-roam" :date (25699 61136) :url "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (zetteldesk-info :source "MELPA" :recipe (:package "zetteldesk-info" :fetcher github :repo "Vidianos-Giannitsis/zetteldesk.el" :files ("zetteldesk-info.el")) :description "A zetteldesk extension for interacting with the info program" :date (25699 61136) :url "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (zetteldesk-kb :source "MELPA" :recipe (:package "zetteldesk-kb" :fetcher github :repo "Vidianos-Giannitsis/zetteldesk.el" :files ("zetteldesk-kb.el")) :description "Keybindings for zetteldesk.el" :date (25699 61136) :url "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (zetteldesk-ref :source "MELPA" :recipe (:package "zetteldesk-ref" :fetcher github :repo "Vidianos-Giannitsis/zetteldesk.el" :files ("zetteldesk-ref.el")) :description "A zetteldesk extension for interfacing with literature nodes" :date (25699 61136) :url "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (zetteldesk-remark :source "MELPA" :recipe (:package "zetteldesk-remark" :fetcher github :repo "Vidianos-Giannitsis/zetteldesk.el" :files ("zetteldesk-remark.el")) :description "Org-Remark integration for zetteldesk.el" :date (25699 61136) :url "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (zettelkasten :source "MELPA" :recipe (:package "zettelkasten" :repo "ymherklotz/emacs-zettelkasten" :fetcher github :files ("zettelkasten.el")) :description "Helper functions to organise notes in a Zettelkasten style" :date (26182 29648) :url "https://github.com/ymherklotz/emacs-zettelkasten") (zetz-mode :source "MELPA" :recipe (:package "zetz-mode" :fetcher github :repo "damon-kwok/zetz-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the ZetZ programming language" :date (24385 34640) :url "https://github.com/damon-kwok/zetz-mode") (zig-mode :source "MELPA" :recipe (:package "zig-mode" :repo "ziglang/zig-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A major mode for the Zig programming language" :date (26407 58448) :url "https://github.com/ziglang/zig-mode") (zig-ts-mode :source "MELPA" :recipe (:package "zig-ts-mode" :fetcher codeberg :repo "meow_king/zig-ts-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tree Sitter support for Zig" :date (26396 1744) :url "https://codeberg.org/meow_king/zig-ts-mode") (zim-wiki-mode :source "MELPA" :recipe (:package "zim-wiki-mode" :fetcher github :repo "WillForan/zim-wiki-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zim Desktop Wiki edit mode" :date (26388 7632) :url "https://github.com/WillForan/zim-wiki-mode") (zimports :source "MELPA" :recipe (:package "zimports" :repo "schmir/zimports.el" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat python imports with zimports" :date (24931 21584) :url "https://github.com/schmir/zimports.el") (zk :source "MELPA" :recipe (:package "zk" :repo "localauthor/zk" :fetcher github :files ("zk.el")) :description "Functions for working with Zettelkasten-style linked notes" :date (26356 31184) :url "https://github.com/localauthor/zk") (zk-desktop :source "MELPA" :recipe (:package "zk-desktop" :repo "localauthor/zk" :fetcher github :files ("zk-desktop.el")) :description "Desktop environment for zk" :date (26369 43216) :url "https://github.com/localauthor/zk") (zk-index :source "MELPA" :recipe (:package "zk-index" :repo "localauthor/zk" :fetcher github :files ("zk-index.el")) :description "Index for zk" :date (26369 43216) :url "https://github.com/localauthor/zk") (zk-luhmann :source "MELPA" :recipe (:package "zk-luhmann" :repo "localauthor/zk-luhmann" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Support for Luhmann-style IDs in zk" :date (26356 31184) :url "https://github.com/localauthor/zk-luhmann") (zlc :source "MELPA" :recipe (:package "zlc" :repo "mooz/emacs-zlc" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Provides zsh like completion system to Emacs" :date (22041 31824) :url "https://github.com/mooz/emacs-zlc") (zmq :source "MELPA" :recipe (:package "zmq" :fetcher github :repo "nnicandro/emacs-zmq" :files (:defaults "Makefile" "src")) :description "ZMQ bindings in Emacs-Lisp" :date (26369 43216) :url "https://github.com/nnicandro/emacs-zmq") (znc :source "MELPA" :recipe (:package "znc" :fetcher github :repo "sshirokov/ZNC.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ZNC + ERC" :date (24840 23760) :url "https://github.com/sshirokov/ZNC.el") (zombie :source "MELPA" :recipe (:package "zombie" :fetcher github :repo "zk-phi/zombie" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Major mode for editing ZOMBIE programs" :date (21655 13520) :url "https://github.com/zk-phi/zombie") (zombie-trellys-mode :source "MELPA" :recipe (:package "zombie-trellys-mode" :fetcher github :repo "david-christiansen/zombie-trellys-mode" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A minor mode for interaction with Zombie Trellys" :date (21750 8400) :url "https://github.com/david-christiansen/zombie-trellys-mode") (zone-nyan :source "MELPA" :recipe (:package "zone-nyan" :fetcher git :url "https://depp.brause.cc/zone-nyan.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zone out with nyan cat" :date (24725 43600) :url "https://depp.brause.cc/zone-nyan.git") (zone-rainbow :source "MELPA" :recipe (:package "zone-rainbow" :repo "kawabata/zone-rainbow" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zone out with rainbow" :date (22174 41936) :url "https://github.com/kawabata/zone-rainbow") (zone-select :source "MELPA" :recipe (:package "zone-select" :repo "kawabata/zone-select" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Select zone programs" :date (22172 208) :url "https://github.com/kawabata/zone-select") (zone-sl :source "MELPA" :recipe (:package "zone-sl" :repo "kawabata/zone-sl" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zone out with steam locomotives" :date (22190 30160) :url "https://github.com/kawabata/zone-sl") (zone-tmux-clock :source "MELPA" :recipe (:package "zone-tmux-clock" :fetcher git :url "https://depp.brause.cc/zone-tmux-clock.git" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zone out with a tmux style clock" :date (25686 49104) :url "https://depp.brause.cc/zone-tmux-clock.git") (zoom :source "MELPA" :recipe (:package "zoom" :repo "cyrus-and/zoom" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fixed and automatic balanced window layout" :date (26386 52304) :url "https://github.com/cyrus-and/zoom") (zoom-window :source "MELPA" :recipe (:package "zoom-window" :fetcher github :repo "emacsorphanage/zoom-window" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Zoom window like tmux" :date (26355 10320) :url "https://github.com/emacsorphanage/zoom-window") (zop-to-char :source "MELPA" :recipe (:package "zop-to-char" :fetcher github :repo "thierryvolpiatto/zop-to-char" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "A replacement of zap-to-char" :date (22204 63056) :url "https://github.com/thierryvolpiatto/zop-to-char") (zotelo :source "MELPA" :recipe (:package "zotelo" :repo "vspinu/zotelo" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Manage Zotero collections from emacs" :date (22351 19664) :url "https://github.com/vspinu/zotelo") (zotero :source "MELPA" :recipe (:package "zotero" :fetcher gitlab :repo "fvdbeek/emacs-zotero" :files (:defaults "img")) :description "Library for the Zotero API" :date (26016 22224) :url "https://gitlab.com/fvdbeek/emacs-zotero") (zotra :source "MELPA" :recipe (:package "zotra" :fetcher github :repo "mpedramfar/zotra" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Import bibliographic data from (almost) everywhere" :date (25897 45008) :url "https://github.com/mpedramfar/zotra") (zotxt :source "MELPA" :recipe (:package "zotxt" :fetcher gitlab :repo "egh/zotxt-emacs" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Tools to integrate emacs with Zotero via the zotxt plugin" :date (26045 22480) :url "https://gitlab.com/egh/zotxt-emacs") (zoutline :source "MELPA" :recipe (:package "zoutline" :repo "abo-abo/zoutline" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Simple outline library" :date (25040 49360) :url "https://github.com/abo-abo/zoutline") (zoxide :source "MELPA" :recipe (:package "zoxide" :fetcher sourcehut :repo "vonfry/zoxide.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Find file by zoxide" :date (26365 46160) :url "https://git.sr.ht/~vonfry/zoxide.el") (zpl-mode :source "MELPA" :recipe (:package "zpl-mode" :repo "ax487/zpl-mode" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "ZIMPL major mode" :date (23440 17360) :url "https://github.com/ax487/zpl-mode") (zprint-format :source "MELPA" :recipe (:package "zprint-format" :fetcher github :repo "dpassen/zprint-format" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reformat Clojure code using zprint" :date (24758 40912) :url "https://github.com/dpassen/zprint-format") (zprint-mode :source "MELPA" :recipe (:package "zprint-mode" :repo "pesterhazy/zprint-mode.el" :fetcher github :files (:defaults "bin")) :description "Reformat Clojure(Script) code using zprint" :date (26225 62800) :url "https://github.com/pesterhazy/zprint-mode.el") (ztree :source "MELPA" :recipe (:package "ztree" :fetcher codeberg :repo "fourier/ztree" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Text mode directory tree" :date (24695 22480) :url "https://codeberg.org/fourier/ztree") (zygospore :source "MELPA" :recipe (:package "zygospore" :fetcher github :repo "LouisKottmann/zygospore.el" :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Reversible C-x 1 (delete-other-windows)" :date (21428 25792) :url "https://github.com/LouisKottmann/zygospore.el") (zzz-to-char :source "MELPA" :recipe (:package "zzz-to-char" :repo "mrkkrp/zzz-to-char" :fetcher github :files ("*.el" "*.el.in" "dir" "*.info" "*.texi" "*.texinfo" "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo" "lisp/*.el" "docs/dir" "docs/*.info" "docs/*.texi" "docs/*.texinfo" (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el" "LICENSE" "README*" "*-pkg.el"))) :description "Fancy version of `zap-to-char' command" :date (25763 14032) :url "https://github.com/mrkkrp/zzz-to-char")) (elpaca-menu-non-gnu-devel-elpa (adoc-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/adoc-mode.html" :description "a major-mode for editing AsciiDoc files" :recipe (:package "adoc-mode" :repo ("https://github.com/bbatsov/adoc-mode" . "adoc-mode") :files ("*" (:exclude ".git")))) (afternoon-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/afternoon-theme.html" :description "Dark color theme with a deep blue background" :recipe (:package "afternoon-theme" :repo ("https://github.com/osener/emacs-afternoon-theme" . "afternoon-theme") :files ("*" (:exclude ".git" "*.png")))) (alect-themes :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/alect-themes.html" :description "Configurable light, dark and black themes for Emacs 24 or later" :recipe (:package "alect-themes" :repo ("https://github.com/alezost/alect-themes" . "alect-themes") :files ("*" (:exclude ".git" "LICENSE" "tests" "Makefile" "colors")))) (ample-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/ample-theme.html" :description "Calm Dark Theme for Emacs" :recipe (:package "ample-theme" :repo ("https://github.com/jordonbiondo/ample-theme" . "ample-theme") :files ("*" (:exclude ".git")))) (annotate :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/annotate.html" :description "annotate files without changing them" :recipe (:package "annotate" :repo ("https://github.com/bastibe/annotate.el" . "annotate") :files ("*" (:exclude ".git")))) (anti-zenburn-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/anti-zenburn-theme.html" :description "Low-contrast Zenburn-inverted theme" :recipe (:package "anti-zenburn-theme" :repo ("https://github.com/m00natic/anti-zenburn-theme" . "anti-zenburn-theme") :files ("*" (:exclude ".git" "anti-zenburn-snapshot.jpeg")))) (anzu :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/anzu.html" :description "Show number of matches in mode-line while searching" :recipe (:package "anzu" :repo ("https://github.com/emacsorphanage/anzu.git" . "anzu") :files ("*" (:exclude ".git" ".github" "image" "Cask" "Makefile")))) (apache-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/apache-mode.html" :description "Major mode for editing Apache httpd configuration files" :recipe (:package "apache-mode" :repo ("https://github.com/emacs-php/apache-mode" . "apache-mode") :files ("*" (:exclude ".git" "LICENSE")))) (apropospriate-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/apropospriate-theme.html" :description "A light & dark theme set for Emacs." :recipe (:package "apropospriate-theme" :repo ("https://github.com/waymondo/apropospriate-theme" . "apropospriate-theme") :files ("*" (:exclude ".git" "*.png")))) (arduino-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/arduino-mode.html" :description "Major mode for editing Arduino code" :recipe (:package "arduino-mode" :repo ("https://repo.or.cz/arduino-mode.git" . "arduino-mode") :files ("*" (:exclude ".git" "Cask")))) (auto-dim-other-buffers :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/auto-dim-other-buffers.html" :description "Makes windows without focus less prominent" :recipe (:package "auto-dim-other-buffers" :repo ("https://github.com/mina86/auto-dim-other-buffers.el" . "auto-dim-other-buffers") :files ("*" (:exclude ".git" "LICENSE" "screenshot.gif")))) (autothemer :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/autothemer.html" :description "Conveniently define themes" :recipe (:package "autothemer" :repo ("https://github.com/jasonm23/autothemer.git" . "autothemer") :files ("*" (:exclude ".git")))) (base32 :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/base32.html" :description "Base32 support" :recipe (:package "base32" :repo ("https://gitlab.com/fledermaus/totp.el" . "base32") :files ("*" (:exclude ".git" "totp-auth*.el" "Makefile" "*.md" "*.html" "tests" "README")))) (bash-completion :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/bash-completion.html" :description "Bash completion for the shell buffer" :recipe (:package "bash-completion" :repo ("https://github.com/szermatt/emacs-bash-completion" . "bash-completion") :files ("*" (:exclude ".git")))) (beancount :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/beancount.html" :description "A major mode to edit Beancount input files." :recipe (:package "beancount" :repo ("https://github.com/beancount/beancount-mode" . "beancount") :files ("*" (:exclude ".git")))) (better-jumper :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/better-jumper.html" :description "configurable jump list" :recipe (:package "better-jumper" :repo ("https://github.com/gilbertw1/better-jumper.git" . "better-jumper") :files ("*" (:exclude ".git" "LICENSE")))) (bind-map :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/bind-map.html" :description "Bind personal keymaps in multiple locations" :recipe (:package "bind-map" :repo ("https://github.com/justbur/emacs-bind-map.git" . "bind-map") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "LICENSE")))) (bison-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/bison-mode.html" :description "Major mode for editing bison, yacc and lex files." :recipe (:package "bison-mode" :repo ("https://github.com/Wilfred/bison-mode" . "bison-mode") :files ("*" (:exclude ".git")))) (blow :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/blow.html" :description "Blow away mode lighters" :recipe (:package "blow" :repo ("https://codeberg.org/akib/emacs-blow" . "blow") :files ("*" (:exclude ".git")))) (blueprint-ts-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/blueprint-ts-mode.html" :description "tree-sitter support for Blueprint files" :recipe (:package "blueprint-ts-mode" :repo ("https://github.com/huanie/blueprint-ts-mode.git" . "blueprint-ts-mode") :files ("*" (:exclude ".git" "LICENSE")))) (boxquote :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/boxquote.html" :description "Quote text with a semi-box." :recipe (:package "boxquote" :repo ("https://github.com/davep/boxquote.el.git" . "boxquote") :files ("*" (:exclude ".git" "COPYING")))) (buttercup :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/buttercup.html" :description "Behavior-Driven Emacs Lisp Testing" :recipe (:package "buttercup" :repo ("https://github.com/jorgenschaefer/emacs-buttercup" . "buttercup") :files ("*" (:exclude ".git" "LICENSE")))) (camera :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/camera.html" :description "Take picture with your camera" :recipe (:package "camera" :repo ("https://codeberg.org/akib/emacs-camera" . "camera") :files ("*" (:exclude ".git")))) (caml :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/caml.html" :description "Caml mode for GNU Emacs" :recipe (:package "caml" :repo ("https://github.com/ocaml/caml-mode" . "caml") :files ("*" (:exclude ".git" "COPYING")))) (cdlatex :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/cdlatex.html" :description "Fast input methods for LaTeX environments and math" :recipe (:package "cdlatex" :repo ("https://github.com/cdominik/cdlatex" . "cdlatex") :files ("*" (:exclude ".git")))) (cider :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/cider.html" :description "Clojure Interactive Development Environment that Rocks" :recipe (:package "cider" :repo ("https://github.com/clojure-emacs/cider" . "cider") :files ("*" (:exclude ".git" "LICENSE" "doc" "logo" "refcard" "test")))) (clojure-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/clojure-mode.html" :description "Major mode for Clojure code" :recipe (:package "clojure-mode" :repo ("https://github.com/clojure-emacs/clojure-mode" . "clojure-mode") :files ("*" (:exclude ".git" "clojure-mode-extra-font-locking.el" "doc" "test" "test.clj")))) (clojure-ts-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/clojure-ts-mode.html" :description "Major mode for Clojure code" :recipe (:package "clojure-ts-mode" :repo ("https://github.com/clojure-emacs/clojure-ts-mode" . "clojure-ts-mode") :files ("*" (:exclude ".git")))) (coffee-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/coffee-mode.html" :description "Major mode for CoffeeScript code" :recipe (:package "coffee-mode" :repo ("https://github.com/defunkt/coffee-mode" . "coffee-mode") :files ("*" (:exclude ".git")))) (consult-flycheck :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/consult-flycheck.html" :description "Provides the command `consult-flycheck'" :recipe (:package "consult-flycheck" :repo ("https://github.com/minad/consult-flycheck" . "consult-flycheck") :files ("*" (:exclude ".git")))) (corfu-terminal :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/corfu-terminal.html" :description "Corfu popup on terminal" :recipe (:package "corfu-terminal" :repo ("https://codeberg.org/akib/emacs-corfu-terminal" . "corfu-terminal") :files ("*" (:exclude ".git")))) (crux :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/crux.html" :description "A Collection of Ridiculously Useful eXtensions" :recipe (:package "crux" :repo ("https://github.com/bbatsov/crux" . "crux") :files ("*" (:exclude ".git")))) (csv2ledger :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/csv2ledger.html" :description "Convert csv files to ledger entries" :recipe (:package "csv2ledger" :repo ("https://codeberg.org/joostkremers/csv2ledger" . "csv2ledger") :files ("*" (:exclude ".git")))) (cyberpunk-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/cyberpunk-theme.html" :description "Cyberpunk Color Theme" :recipe (:package "cyberpunk-theme" :repo ("https://github.com/n3mo/cyberpunk-theme.el" . "cyberpunk-theme") :files ("*" (:exclude ".git" "cyberpunk-theme.png" "example-org-file.org")))) (cycle-at-point :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/cycle-at-point.html" :description "Cycle (rotate) the thing under the cursor" :recipe (:package "cycle-at-point" :repo ("https://codeberg.org/ideasman42/emacs-cycle-at-point" . "cycle-at-point") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE" "tests")))) (d-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/d-mode.html" :description "D Programming Language major mode for (X)Emacs" :recipe (:package "d-mode" :repo ("https://github.com/Emacs-D-Mode-Maintainers/Emacs-D-Mode" . "d-mode") :files ("*" (:exclude ".git")))) (dart-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/dart-mode.html" :description "Major mode for editing Dart files" :recipe (:package "dart-mode" :repo ("https://github.com/bradyt/dart-mode" . "dart-mode") :files ("*" (:exclude ".git" "LICENSE" "test" "Cask" "Makefile")))) (denote-refs :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/denote-refs.html" :description "Show links and backlinks in Denote notes" :recipe (:package "denote-refs" :repo ("https://codeberg.org/akib/emacs-denote-refs" . "denote-refs") :files ("*" (:exclude ".git")))) (devhelp :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/devhelp.html" :description "Browse documentation in Devhelp format" :recipe (:package "devhelp" :repo ("https://codeberg.org/akib/emacs-devhelp" . "devhelp") :files ("*" (:exclude ".git")))) (devil :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/devil.html" :description "Minor mode for translating key sequences" :recipe (:package "devil" :repo ("https://github.com/susam/devil" . "devil") :files ("*" (:exclude ".git")))) (diff-ansi :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/diff-ansi.html" :description "Display diff's using alternative diffing tools" :recipe (:package "diff-ansi" :repo ("https://codeberg.org/ideasman42/emacs-diff-ansi" . "diff-ansi") :files ("*" (:exclude ".git" "LICENSE")))) (doc-show-inline :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/doc-show-inline.html" :description "Show doc-strings found in external files" :recipe (:package "doc-show-inline" :repo ("https://codeberg.org/ideasman42/emacs-doc-show-inline" . "doc-show-inline") :files ("*" (:exclude ".git")))) (dockerfile-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/dockerfile-mode.html" :description "Major mode for editing Docker's Dockerfiles" :recipe (:package "dockerfile-mode" :repo ("https://github.com/spotify/dockerfile-mode" . "dockerfile-mode") :files ("*" (:exclude ".git")))) (dracula-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/dracula-theme.html" :description "Dracula Theme" :recipe (:package "dracula-theme" :repo ("https://github.com/dracula/emacs" . "dracula-theme") :files ("*" (:exclude ".git" "INSTALL.md" "screenshot.png" "start_emacs_test.sh" "test-profile.el")))) (drupal-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/drupal-mode.html" :description "Advanced minor mode for Drupal development" :recipe (:package "drupal-mode" :repo ("https://github.com/arnested/drupal-mode.git" . "drupal-mode") :files ("*" (:exclude ".git" ".travis.yml" "COPYING" "Cask")))) (dslide :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/dslide.html" :description "Domain Specific sLIDEs. A presentation framework" :recipe (:package "dslide" :repo ("https://github.com/positron-solutions/dslide" . "dslide") :files ("*" (:exclude ".git")))) (eat :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/eat.html" :description "Emulate A Terminal, in a region, in a buffer and in Eshell" :recipe (:package "eat" :repo ("https://codeberg.org/akib/emacs-eat" . "eat") :files ("*" (:exclude ".git")))) (edit-indirect :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/edit-indirect.html" :description "Edit regions in separate buffers" :recipe (:package "edit-indirect" :repo ("https://github.com/Fanael/edit-indirect" . "edit-indirect") :files ("*" (:exclude ".git")))) (editorconfig :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/editorconfig.html" :description "EditorConfig Emacs Plugin" :recipe (:package "editorconfig" :repo ("https://github.com/editorconfig/editorconfig-emacs" . "editorconfig") :files ("*" (:exclude ".git" "LICENSE" "bin" "ert-tests")))) (elixir-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/elixir-mode.html" :description "Major mode for editing Elixir files" :recipe (:package "elixir-mode" :repo ("https://github.com/elixir-editors/emacs-elixir" . "elixir-mode") :files ("*" (:exclude ".git" "tests" "Eldev")))) (elpher :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/elpher.html" :description "A friendly gopher and gemini client" :recipe (:package "elpher" :repo ("https://thelambdalab.xyz/git/elpher.git" . "elpher") :files ("*" (:exclude ".git" "Makefile" "ISSUES.org" "RELEASE" "config.mk")))) (emacsql :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/emacsql.html" :description "High-level SQL database front-end" :recipe (:package "emacsql" :repo ("https://github.com/magit/emacsql" . "emacsql") :files ("*" (:exclude ".git" ".github" "Makefile" "tests")))) (engine-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/engine-mode.html" :description "Define and query search engines" :recipe (:package "engine-mode" :repo ("https://github.com/hrs/engine-mode" . "engine-mode") :files ("*" (:exclude ".git" "doc/demo.gif")))) (evil :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil.html" :description "extensible vi layer" :recipe (:package "evil" :repo ("https://github.com/emacs-evil/evil" . "evil") :files ("*" (:exclude ".git" "COPYING" "lib" "scripts")))) (evil-anzu :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-anzu.html" :description "anzu for evil-mode" :recipe (:package "evil-anzu" :repo ("https://github.com/emacsorphanage/evil-anzu.git" . "evil-anzu") :files ("*" (:exclude ".git" "image" "Cask")))) (evil-args :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-args.html" :description "Motions and text objects for delimited arguments in Evil." :recipe (:package "evil-args" :repo ("https://github.com/wcsmith/evil-args.git" . "evil-args") :files ("*" (:exclude ".git")))) (evil-escape :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-escape.html" :description "Escape from anything with a customizable key sequence" :recipe (:package "evil-escape" :repo ("https://github.com/emacsorphanage/evil-escape.git" . "evil-escape") :files ("*" (:exclude ".git" "LICENSE")))) (evil-exchange :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-exchange.html" :description "Exchange text more easily within Evil" :recipe (:package "evil-exchange" :repo ("https://github.com/Dewdrops/evil-exchange.git" . "evil-exchange") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "test" "Makefile")))) (evil-goggles :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-goggles.html" :description "Add a visual hint to evil operations" :recipe (:package "evil-goggles" :repo ("https://github.com/edkolev/evil-goggles.git" . "evil-goggles") :files ("*" (:exclude ".git" ".travis.yml" "test" "Makefile")))) (evil-iedit-state :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-iedit-state.html" :description "Evil states to interface iedit mode." :recipe (:package "evil-iedit-state" :repo ("https://github.com/syl20bnr/evil-iedit-state" . "evil-iedit-state") :files ("*" (:exclude ".git" "LICENSE")))) (evil-indent-plus :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-indent-plus.html" :description "Evil textobjects based on indentation" :recipe (:package "evil-indent-plus" :repo ("https://github.com/TheBB/evil-indent-plus.git" . "evil-indent-plus") :files ("*" (:exclude ".git")))) (evil-lisp-state :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-lisp-state.html" :description "An evil state to edit Lisp code" :recipe (:package "evil-lisp-state" :repo ("https://github.com/syl20bnr/evil-lisp-state.git" . "evil-lisp-state") :files ("*" (:exclude ".git" "LICENSE")))) (evil-matchit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-matchit.html" :description "Vim matchit ported to Evil" :recipe (:package "evil-matchit" :repo ("https://github.com/redguardtoo/evil-matchit.git" . "evil-matchit") :files ("*" (:exclude ".git" "tests" "Makefile" "screencast.gif")))) (evil-nerd-commenter :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-nerd-commenter.html" :description "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" :recipe (:package "evil-nerd-commenter" :repo ("https://github.com/redguardtoo/evil-nerd-commenter" . "evil-nerd-commenter") :files ("*" (:exclude ".git" "tests" "Makefile" "evil-nerd-commenter-demo.gif" "pkg.sh")))) (evil-numbers :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-numbers.html" :description "Increment/decrement numbers like in VIM" :recipe (:package "evil-numbers" :repo ("https://github.com/juliapath/evil-numbers.git" . "evil-numbers") :files ("*" (:exclude ".git" "COPYING")))) (evil-surround :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-surround.html" :description "emulate surround.vim from Vim" :recipe (:package "evil-surround" :repo ("https://github.com/emacs-evil/evil-surround.git" . "evil-surround") :files ("*" (:exclude ".git" "license.md" "test")))) (evil-visual-mark-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-visual-mark-mode.html" :description "Display evil marks on buffer" :recipe (:package "evil-visual-mark-mode" :repo ("https://github.com/roman/evil-visual-mark-mode.git" . "evil-visual-mark-mode") :files ("*" (:exclude ".git" "LICENSE")))) (evil-visualstar :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/evil-visualstar.html" :description "Starts a * or # search from the visual selection" :recipe (:package "evil-visualstar" :repo ("https://github.com/bling/evil-visualstar.git" . "evil-visualstar") :files ("*" (:exclude ".git")))) (exec-path-from-shell :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/exec-path-from-shell.html" :description "Get environment variables such as $PATH from the shell" :recipe (:package "exec-path-from-shell" :repo ("https://github.com/purcell/exec-path-from-shell.git" . "exec-path-from-shell") :files ("*" (:exclude ".git" ".github" "Makefile")))) (flx :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flx.html" :description "fuzzy matching with good sorting" :recipe (:package "flx" :repo ("https://github.com/lewang/flx" . "flx") :files ("*" (:exclude ".git" ".travis.yml" "LICENSE" "flx-ido.el" "misc/flx-ido-demo.el" "misc/flx-test-list.el")))) (flx-ido :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flx-ido.html" :description "flx integration for ido" :recipe (:package "flx-ido" :repo ("https://github.com/lewang/flx" . "flx-ido") :files ("*" (:exclude ".git" ".travis.yml" "Cask" "LICENSE" "tests" "Makefile" "flx.el" "misc/flx-helm-demo.el" "misc/flx-test-list.el")))) (flycheck :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flycheck.html" :description "On-the-fly syntax checking" :recipe (:package "flycheck" :repo ("https://github.com/flycheck/flycheck" . "flycheck") :files ("*" (:exclude ".git" ".github" "maint" "test" "Makefile" "doc")))) (flymake-guile :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-guile.html" :description "Guile flymake backend" :recipe (:package "flymake-guile" :repo ("https://framagit.org/flymake-backends/flymake-guile.git" . "flymake-guile") :files ("*" (:exclude ".git")))) (flymake-kondor :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-kondor.html" :description "Linter with clj-kondo" :recipe (:package "flymake-kondor" :repo ("https://github.com/turbo-cafe/flymake-kondor" . "flymake-kondor") :files ("*" (:exclude ".git" "COPYING.txt")))) (flymake-popon :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/flymake-popon.html" :description "Flymake diagnostics on cursor hover" :recipe (:package "flymake-popon" :repo ("https://codeberg.org/akib/emacs-flymake-popon" . "flymake-popon") :files ("*" (:exclude ".git")))) (focus :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/focus.html" :description "Dim the font color of text in surrounding sections" :recipe (:package "focus" :repo ("https://github.com/larstvei/Focus" . "focus") :files ("*" (:exclude ".git" "*.gif")))) (forth-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/forth-mode.html" :description "Programming language mode for Forth" :recipe (:package "forth-mode" :repo ("https://github.com/larsbrinkhoff/forth-mode" . "forth-mode") :files ("*" (:exclude ".git" "test" "Makefile" "compile.el")))) (free-keys :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/free-keys.html" :description "Show free keybindings for modkeys or prefixes" :recipe (:package "free-keys" :repo ("https://github.com/Fuco1/free-keys" . "free-keys") :files ("*" (:exclude ".git")))) (gc-buffers :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gc-buffers.html" :description "Kill garbage buffers automatically" :recipe (:package "gc-buffers" :repo ("https://codeberg.org/akib/emacs-gc-buffers" . "gc-buffers") :files ("*" (:exclude ".git")))) (geiser :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser.html" :description "GNU Emacs and Scheme talk to each other" :recipe (:package "geiser" :repo ("https://gitlab.com/emacs-geiser/geiser.git" . "geiser") :files ("*" (:exclude ".git")))) (geiser-chez :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chez.html" :description "Chez and Geiser talk to each other" :recipe (:package "geiser-chez" :repo ("https://gitlab.com/emacs-geiser/chez.git" . "geiser-chez") :files ("*" (:exclude ".git")))) (geiser-chibi :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chibi.html" :description "Chibi Scheme's implementation of the geiser protocols" :recipe (:package "geiser-chibi" :repo ("https://gitlab.com/emacs-geiser/chibi.git" . "geiser-chibi") :files ("*" (:exclude ".git")))) (geiser-chicken :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-chicken.html" :description "Chicken's implementation of the geiser protocols" :recipe (:package "geiser-chicken" :repo ("https://gitlab.com/emacs-geiser/chicken.git" . "geiser-chicken") :files ("*" (:exclude ".git")))) (geiser-gambit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-gambit.html" :description "Gambit's implementation of the geiser protocols" :recipe (:package "geiser-gambit" :repo ("https://gitlab.com/emacs-geiser/gambit.git" . "geiser-gambit") :files ("*" (:exclude ".git")))) (geiser-gauche :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-gauche.html" :description "Gauche scheme support for Geiser" :recipe (:package "geiser-gauche" :repo ("https://gitlab.com/emacs-geiser/gauche.git" . "geiser-gauche") :files ("*" (:exclude ".git")))) (geiser-guile :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-guile.html" :description "Guile and Geiser talk to each other" :recipe (:package "geiser-guile" :repo ("https://gitlab.com/emacs-geiser/guile.git" . "geiser-guile") :files ("*" (:exclude ".git")))) (geiser-kawa :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-kawa.html" :description "Kawa scheme support for Geiser" :recipe (:package "geiser-kawa" :repo ("https://gitlab.com/emacs-geiser/kawa.git" . "geiser-kawa") :files ("*" (:exclude ".git" "elisp/tests")))) (geiser-mit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-mit.html" :description "MIT/GNU Scheme's implementation of the geiser protocols" :recipe (:package "geiser-mit" :repo ("https://gitlab.com/emacs-geiser/mit.git" . "geiser-mit") :files ("*" (:exclude ".git")))) (geiser-racket :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-racket.html" :description "Support for Racket in Geiser" :recipe (:package "geiser-racket" :repo ("https://gitlab.com/emacs-geiser/racket.git" . "geiser-racket") :files ("*" (:exclude ".git")))) (geiser-stklos :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/geiser-stklos.html" :description "STklos Scheme implementation of the geiser protocols" :recipe (:package "geiser-stklos" :repo ("https://gitlab.com/emacs-geiser/stklos.git" . "geiser-stklos") :files ("*" (:exclude ".git")))) (git-modes :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/git-modes.html" :description "Major modes for editing Git configuration files" :recipe (:package "git-modes" :repo ("https://github.com/magit/git-modes" . "git-modes") :files ("*" (:exclude ".git" "LICENSE" ".mailmap")))) (gnosis :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gnosis.html" :description "Spaced Repetition System" :recipe (:package "gnosis" :repo ("https://git.thanosapollo.org/gnosis" . "gnosis") :files ("*" (:exclude ".git")))) (gnu-apl-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gnu-apl-mode.html" :description "Emacs mode for GNU APL" :recipe (:package "gnu-apl-mode" :repo ("https://github.com/lokedhs/gnu-apl-mode" . "gnu-apl-mode") :files ("*" (:exclude ".git" "Makefile")))) (gnu-indent :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gnu-indent.html" :description "Indent your code with GNU Indent" :recipe (:package "gnu-indent" :repo ("https://codeberg.org/akib/emacs-gnu-indent" . "gnu-indent") :files ("*" (:exclude ".git")))) (gnuplot :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gnuplot.html" :description "Major-mode and interactive frontend for gnuplot" :recipe (:package "gnuplot" :repo ("https://github.com/emacs-gnuplot/gnuplot" . "gnuplot") :files ("*" (:exclude ".git" "LICENSE" "Makefile" "gpelcard.tex")))) (go-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/go-mode.html" :description "Major mode for the Go programming language" :recipe (:package "go-mode" :repo ("https://github.com/dominikh/go-mode.el" . "go-mode") :files ("*" (:exclude ".git" "generate_authors.sh")))) (golden-ratio :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/golden-ratio.html" :description "Automatic resizing of Emacs windows to the golden ratio" :recipe (:package "golden-ratio" :repo ("https://github.com/roman/golden-ratio.el.git" . "golden-ratio") :files ("*" (:exclude ".git" "LICENSE")))) (gotham-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gotham-theme.html" :description "A very dark Emacs color theme" :recipe (:package "gotham-theme" :repo ("https://depp.brause.cc/gotham-theme.git" . "gotham-theme") :files ("*" (:exclude ".git" "img" "LICENSE")))) (goto-chg :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/goto-chg.html" :description "Go to last change" :recipe (:package "goto-chg" :repo ("https://github.com/emacs-evil/goto-chg" . "goto-chg") :files ("*" (:exclude ".git" "LICENSE")))) (gptel :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gptel.html" :description "Interact with ChatGPT or other LLMs" :recipe (:package "gptel" :repo ("https://github.com/karthink/gptel" . "gptel") :files ("*" (:exclude ".git")))) (graphql-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/graphql-mode.html" :description "Major mode for editing GraphQL schemas" :recipe (:package "graphql-mode" :repo ("https://github.com/davazp/graphql-mode" . "graphql-mode") :files ("*" (:exclude ".git" "test")))) (gruber-darker-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gruber-darker-theme.html" :description "Gruber Darker color theme for Emacs 24." :recipe (:package "gruber-darker-theme" :repo ("https://github.com/rexim/gruber-darker-theme" . "gruber-darker-theme") :files ("*" (:exclude ".git")))) (gruvbox-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/gruvbox-theme.html" :description "A retro-groove colour theme for Emacs" :recipe (:package "gruvbox-theme" :repo ("https://github.com/greduan/emacs-theme-gruvbox.git" . "gruvbox-theme") :files ("*" (:exclude ".git" "images" "palette")))) (guru-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/guru-mode.html" :description "Become an Emacs guru" :recipe (:package "guru-mode" :repo ("https://github.com/bbatsov/guru-mode" . "guru-mode") :files ("*" (:exclude ".git")))) (haml-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/haml-mode.html" :description "Major mode for editing Haml files" :recipe (:package "haml-mode" :repo ("https://github.com/nex3/haml-mode" . "haml-mode") :files ("*" (:exclude ".git")))) (haskell-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-mode.html" :description "A Haskell editing mode" :recipe (:package "haskell-mode" :repo ("https://github.com/haskell/haskell-mode" . "haskell-mode") :files ("*" (:exclude ".git" "images" "tests" "logo.svg")))) (haskell-tng-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-tng-mode.html" :description "Major mode for editing Haskell" :recipe (:package "haskell-tng-mode" :repo ("https://gitlab.com/tseenshe/haskell-tng.el" . "haskell-tng-mode") :files ("*" (:exclude ".git" "COPYING")))) (haskell-ts-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/haskell-ts-mode.html" :description "A treesit based major mode for haskell" :recipe (:package "haskell-ts-mode" :repo ("https://codeberg.org/pranshu/haskell-ts-mode" . "haskell-ts-mode") :files ("*" (:exclude ".git")))) (helm :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/helm.html" :description "Helm is an Emacs incremental and narrowing framework" :recipe (:package "helm" :repo ("https://github.com/emacs-helm/helm" . "helm") :files ("*" (:exclude ".git" "images" "Cask" "Makefile" "emacs-helm.sh" "helm-core.el" "helm.el" "helm-lib.el" "helm-source.el" "helm-multi-match.el")))) (helm-core :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/helm-core.html" :description "Development files for Helm" :recipe (:package "helm-core" :repo ("https://github.com/emacs-helm/helm" . "helm-core") :files ("*" (:exclude ".git" "images" "Cask" "Makefile" "emacs-helm.sh" "helm-adaptive.el" "helm-bookmark.el" "helm-buffers.el" "helm-color.el" "helm-comint.el" "helm-command.el" "helm-config.el" "helm-dabbrev.el" "helm-easymenu.el" "helm-elisp.el" "helm-elisp-package.el" "helm-epa.el" "helm-eshell.el" "helm-eval.el" "helm-external.el" "helm-fd.el" "helm-files.el" "helm-find.el" "helm-font.el" "helm-for-files.el" "helm-global-bindings.el" "helm-grep.el" "helm-help.el" "helm-id-utils.el" "helm-imenu.el" "helm-info.el" "helm-locate.el" "helm-man.el" "helm-misc.el" "helm-mode.el" "helm-net.el" "helm-occur.el" "helm-pkg.el" "helm-regexp.el" "helm-ring.el" "helm-semantic.el" "helm-shell.el" "helm-sys.el" "helm-tags.el" "helm-types.el" "helm-utils.el" "helm-x-files.el")))) (hideshowvis :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/hideshowvis.html" :description "Fringe markers for regions foldable by hideshow.el" :recipe (:package "hideshowvis" :repo ("https://github.com/sheijk/hideshowvis" . "hideshowvis") :files ("*" (:exclude ".git")))) (highlight-parentheses :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/highlight-parentheses.html" :description "Highlight surrounding parentheses" :recipe (:package "highlight-parentheses" :repo ("https://git.sr.ht/~tsdh/highlight-parentheses.el" . "highlight-parentheses") :branch "main" :files ("*" (:exclude ".git" "LICENSE")))) (hl-block-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/hl-block-mode.html" :description "Highlighting nested blocks" :recipe (:package "hl-block-mode" :repo ("https://codeberg.org/ideasman42/emacs-hl-block-mode" . "hl-block-mode") :files ("*" (:exclude ".git")))) (hl-column :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/hl-column.html" :description "Highlight the current column" :recipe (:package "hl-column" :repo ("https://codeberg.org/akib/emacs-hl-column" . "hl-column") :files ("*" (:exclude ".git")))) (htmlize :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/htmlize.html" :description "Convert buffer text and decorations to HTML." :recipe (:package "htmlize" :repo ("https://github.com/hniksic/emacs-htmlize" . "htmlize") :files ("*" (:exclude ".git" "htmlize.el.html")))) (hyperdrive :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/hyperdrive.html" :description "P2P filesystem" :recipe (:package "hyperdrive" :repo ("https://git.sr.ht/~ushin/hyperdrive.el" . "hyperdrive") :files ("*" (:exclude ".git")))) (hyperdrive-org-transclusion :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/hyperdrive-org-transclusion.html" :description "Tranclude hyperdrive content" :recipe (:package "hyperdrive-org-transclusion" :repo ("https://git.sr.ht/~ushin/hyperdrive-org-transclusion" . "hyperdrive-org-transclusion") :files ("*" (:exclude ".git")))) (idle-highlight-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/idle-highlight-mode.html" :description "Highlight the word the point is on" :recipe (:package "idle-highlight-mode" :repo ("https://codeberg.org/ideasman42/emacs-idle-highlight-mode" . "idle-highlight-mode") :files ("*" (:exclude ".git" ".elisp-autofmt")))) (idris-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/idris-mode.html" :description "Major mode for editing Idris code" :recipe (:package "idris-mode" :repo ("https://github.com/idris-hackers/idris-mode" . "idris-mode") :files ("*" (:exclude ".git" "COPYING" "test-data" "Makefile" "documentation.tex" "logo-small.png" "idris-tests*.el")))) (iedit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/iedit.html" :description "Edit multiple regions in the same way simultaneously." :recipe (:package "iedit" :repo ("https://github.com/victorhge/iedit.git" . "iedit") :files ("*" (:exclude ".git" "COPYING" "iedit-demo.gif" "release.sh")))) (inf-clojure :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/inf-clojure.html" :description "Run an external Clojure process in an Emacs buffer" :recipe (:package "inf-clojure" :repo ("https://github.com/clojure-emacs/inf-clojure" . "inf-clojure") :files ("*" (:exclude ".git" "test")))) (inf-ruby :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/inf-ruby.html" :description "Run a Ruby process in a buffer" :recipe (:package "inf-ruby" :repo ("https://github.com/nonsequitur/inf-ruby" . "inf-ruby") :files ("*" (:exclude ".git")))) (inkpot-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/inkpot-theme.html" :description "A port of vim's inkpot theme" :recipe (:package "inkpot-theme" :repo ("https://codeberg.org/ideasman42/emacs-theme-inkpot" . "inkpot-theme") :files ("*" (:exclude ".git")))) (iwindow :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/iwindow.html" :description "Interactively manipulate windows" :recipe (:package "iwindow" :repo ("https://codeberg.org/akib/emacs-iwindow" . "iwindow") :files ("*" (:exclude ".git")))) (j-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/j-mode.html" :description "Major mode for editing J programs" :recipe (:package "j-mode" :repo ("https://github.com/zellio/j-mode" . "j-mode") :files ("*" (:exclude ".git" "LICENSE")))) (jade-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/jade-mode.html" :description "Major mode for editing .jade files" :recipe (:package "jade-mode" :repo ("https://github.com/brianc/jade-mode" . "jade-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "example.jade" "example.json" "stylus-mode.el")))) (jinja2-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/jinja2-mode.html" :description "A major mode for jinja2" :recipe (:package "jinja2-mode" :repo ("https://github.com/paradoxxxzero/jinja2-mode.git" . "jinja2-mode") :files ("*" (:exclude ".git")))) (julia-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/julia-mode.html" :description "Major mode for editing Julia source code" :recipe (:package "julia-mode" :repo ("https://github.com/JuliaEditorSupport/julia-emacs" . "julia-mode") :files ("*" (:exclude ".git" "julia-mode-tests.el" "logo.png")))) (keycast :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/keycast.html" :description "Show current command and its binding" :recipe (:package "keycast" :repo ("https://github.com/tarsius/keycast" . "keycast") :files ("*" (:exclude ".git" "Makefile")))) (kotlin-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/kotlin-mode.html" :description "Major mode for kotlin" :recipe (:package "kotlin-mode" :repo ("https://github.com/Emacs-Kotlin-Mode-Maintainers/kotlin-mode" . "kotlin-mode") :files ("*" (:exclude ".git" "doc" "test" "Cask" "Makefile")))) (lorem-ipsum :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/lorem-ipsum.html" :description "Insert dummy pseudo Latin text" :recipe (:package "lorem-ipsum" :repo ("https://github.com/jschaf/emacs-lorem-ipsum" . "lorem-ipsum") :files ("*" (:exclude ".git")))) (lua-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/lua-mode.html" :description "a major-mode for editing Lua scripts" :recipe (:package "lua-mode" :repo ("https://github.com/immerrr/lua-mode/" . "lua-mode") :files ("*" (:exclude ".git" "COPYING" "test" "travis" "init-tryout.el")))) (macrostep :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/macrostep.html" :description "Interactive macro expander" :recipe (:package "macrostep" :repo ("https://github.com/emacsorphanage/macrostep" . "macrostep") :files ("*" (:exclude ".git" "macrostep-test.el")))) (magit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/magit.html" :description "A Git porcelain inside Emacs" :recipe (:package "magit" :repo ("git://git.sv.gnu.org/emacs/nongnu" . "magit") :branch "elpa/magit" :files ("*" (:exclude ".git" "docs" "test" ".github" ".mailmap" "LICENSE" "default.mk" "Makefile" "lisp/Makefile" "lisp/magit-section.el")))) (magit-section :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/magit-section.html" :description "Sections for read-only buffers" :recipe (:package "magit-section" :repo ("git://git.sv.gnu.org/emacs/nongnu" . "magit-section") :branch "elpa/magit-section" :files ("*" (:exclude ".git" "docs" "test" ".github" ".mailmap" "LICENSE" "README.md" "CHANGELOG" "default.mk" "Makefile" "lisp/Makefile" "lisp/git-commit.el" "lisp/git-rebase.el" "lisp/magit-apply.el" "lisp/magit-base.el" "lisp/magit-bisect.el" "lisp/magit-blame.el" "lisp/magit-bookmark.el" "lisp/magit-branch.el" "lisp/magit-bundle.el" "lisp/magit-clone.el" "lisp/magit-commit.el" "lisp/magit-core.el" "lisp/magit-diff.el" "lisp/magit-ediff.el" "lisp/magit-extras.el" "lisp/magit-fetch.el" "lisp/magit-files.el" "lisp/magit-git.el" "lisp/magit-gitignore.el" "lisp/magit-log.el" "lisp/magit-margin.el" "lisp/magit-merge.el" "lisp/magit-mode.el" "lisp/magit-notes.el" "lisp/magit-patch.el" "lisp/magit-process.el" "lisp/magit-pull.el" "lisp/magit-push.el" "lisp/magit-reflog.el" "lisp/magit-refs.el" "lisp/magit-remote.el" "lisp/magit-repos.el" "lisp/magit-reset.el" "lisp/magit-sequence.el" "lisp/magit-sparse-checkout.el" "lisp/magit-stash.el" "lisp/magit-status.el" "lisp/magit-submodule.el" "lisp/magit-subtree.el" "lisp/magit-tag.el" "lisp/magit-transient.el" "lisp/magit-wip.el" "lisp/magit-worktree.el" "lisp/magit.el")))) (markdown-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/markdown-mode.html" :description "Major mode for Markdown-formatted text" :recipe (:package "markdown-mode" :repo ("https://github.com/jrblevin/markdown-mode" . "markdown-mode") :files ("*" (:exclude ".git" "scripts" "tests" "Makefile" "webpage.sh")))) (mastodon :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/mastodon.html" :description "Client for fediverse services using the Mastodon API" :recipe (:package "mastodon" :repo ("https://codeberg.org/martianh/mastodon.el" . "mastodon") :branch "main" :files ("*" (:exclude ".git")))) (material-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/material-theme.html" :description "A Theme based on the colors of the Google Material Design" :recipe (:package "material-theme" :repo ("https://github.com/cpaulik/emacs-material-theme" . "material-theme") :files ("*" (:exclude ".git" "*.png")))) (mentor :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/mentor.html" :description "Frontend for the rTorrent bittorrent client" :recipe (:package "mentor" :repo ("https://github.com/skangas/mentor.git" . "mentor") :files ("*" (:exclude ".git")))) (meow :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/meow.html" :description "Yet Another modal editing" :recipe (:package "meow" :repo ("https://github.com/meow-edit/meow" . "meow") :files ("*" (:exclude ".git")))) (minibar :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/minibar.html" :description "Modular status bar in minibuffer" :recipe (:package "minibar" :repo ("https://codeberg.org/akib/emacs-minibar" . "minibar") :files ("*" (:exclude ".git")))) (moe-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/moe-theme.html" :description "A colorful eye-candy theme. Moe, moe, kyun!" :recipe (:package "moe-theme" :repo ("https://github.com/kuanyui/moe-theme.el.git" . "moe-theme") :files ("*" (:exclude ".git" "pics" "LICENSE")))) (monokai-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/monokai-theme.html" :description "A fruity color theme for Emacs." :recipe (:package "monokai-theme" :repo ("https://github.com/oneKelvinSmith/monokai-emacs" . "monokai-theme") :files ("*" (:exclude ".git" "LICENSE.md" "assets")))) (mpv :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/mpv.html" :description "control mpv for easy note-taking" :recipe (:package "mpv" :repo ("https://github.com/kljohann/mpv.el" . "mpv") :files ("*" (:exclude ".git" "COPYING")))) (multiple-cursors :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/multiple-cursors.html" :description "Multiple cursors for emacs." :recipe (:package "multiple-cursors" :repo ("https://github.com/magnars/multiple-cursors.el" . "multiple-cursors") :files ("*" (:exclude ".git" "features")))) (nasm-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/nasm-mode.html" :description "NASM x86 assembly major mode" :recipe (:package "nasm-mode" :repo ("https://github.com/skeeto/nasm-mode" . "nasm-mode") :files ("*" (:exclude ".git" "Makefile")))) (nginx-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/nginx-mode.html" :description "major mode for editing nginx config files" :recipe (:package "nginx-mode" :repo ("https://github.com/ajc/nginx-mode" . "nginx-mode") :files ("*" (:exclude ".git")))) (nix-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/nix-mode.html" :description "Major mode for editing .nix files" :recipe (:package "nix-mode" :repo ("https://github.com/NixOS/nix-mode" . "nix-mode") :files ("*" (:exclude ".git" ".github" "tests" "Cask" "*.nix" "*.lock")))) (oblivion-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/oblivion-theme.html" :description "A port of GEdit oblivion theme" :recipe (:package "oblivion-theme" :repo ("https://codeberg.org/ideasman42/emacs-theme-oblivion" . "oblivion-theme") :files ("*" (:exclude ".git")))) (opam-switch-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/opam-switch-mode.html" :description "Select OCaml opam switches via a menu" :recipe (:package "opam-switch-mode" :repo ("https://github.com/ProofGeneral/opam-switch-mode" . "opam-switch-mode") :files ("*" (:exclude ".git" "LICENSE")))) (org-auto-tangle :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-auto-tangle.html" :description "Automatically and Asynchronously tangles org files on save" :recipe (:package "org-auto-tangle" :repo ("https://github.com/yilkalargaw/org-auto-tangle" . "org-auto-tangle") :files ("*" (:exclude ".git" "License.org")))) (org-contrib :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-contrib.html" :description "Unmaintained add-ons for Org-mode" :recipe (:package "org-contrib" :repo ("https://git.sr.ht/~bzg/org-contrib" . "org-contrib") :files ("*" (:exclude ".git" "COPYING" "README.md")))) (org-drill :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-drill.html" :description "Self-testing using spaced repetition" :recipe (:package "org-drill" :repo ("https://gitlab.com/phillord/org-drill.git" . "org-drill") :files ("*" (:exclude ".git" ".gitlab-ci.yml" "Cask")))) (org-journal :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-journal.html" :description "a simple org-mode based journaling mode" :recipe (:package "org-journal" :repo ("https://github.com/bastibe/org-journal.git" . "org-journal") :files ("*" (:exclude ".git" ".github" ".travis.yml" "Makefile" "org-journal.svg" "tests")))) (org-mime :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-mime.html" :description "org html export for text/html MIME emails" :recipe (:package "org-mime" :repo ("https://github.com/org-mime/org-mime.git" . "org-mime") :files ("*" (:exclude ".git" ".travis.yml" "Makefile" "screenshot.png" "test")))) (org-present :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-present.html" :description "Minimalist presentation minor-mode for Emacs org-mode." :recipe (:package "org-present" :repo ("https://github.com/rlister/org-present.git" . "org-present") :files ("*" (:exclude ".git")))) (org-superstar :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-superstar.html" :description "Prettify headings and plain lists in Org mode" :recipe (:package "org-superstar" :repo ("https://github.com/integral-dw/org-superstar-mode.git" . "org-superstar") :files ("*" (:exclude ".git" "LICENSE" ".github" "demos" "tests" "DEMO.org" "sample_image.png")))) (org-transclusion-http :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-transclusion-http.html" :description "Transclude over HTTP" :recipe (:package "org-transclusion-http" :repo ("https://git.sr.ht/~ushin/org-transclusion-http" . "org-transclusion-http") :files ("*" (:exclude ".git")))) (org-tree-slide :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/org-tree-slide.html" :description "A presentation tool for org-mode" :recipe (:package "org-tree-slide" :repo ("https://github.com/takaxp/org-tree-slide.git" . "org-tree-slide") :files ("*" (:exclude ".git" "LICENSE" ".github")))) (orgit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/orgit.html" :description "Support for Org links to Magit buffers" :recipe (:package "orgit" :repo ("https://github.com/magit/orgit.git" . "orgit") :files ("*" (:exclude ".git")))) (p4-16-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/p4-16-mode.html" :description "Support for the P4_16 programming language" :recipe (:package "p4-16-mode" :repo ("https://github.com/SohamG/p4_16-mode.el" . "p4-16-mode") :files ("*" (:exclude ".git")))) (package-lint :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/package-lint.html" :description "A linting library for elisp package authors" :recipe (:package "package-lint" :repo ("https://github.com/purcell/package-lint" . "package-lint") :files ("*" (:exclude ".git" ".github" "batch-tests" "tools" "package-lint-test.el" "run-tests.sh")))) (pacmacs :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/pacmacs.html" :description "Pacman for Emacs" :recipe (:package "pacmacs" :repo ("https://github.com/codingteam/pacmacs.el.git" . "pacmacs") :files ("*" (:exclude ".git" "it-cases" "sprites/src" "test-data" "test" "tools" ".travis.yml" "Cask")))) (page-break-lines :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/page-break-lines.html" :description "Display ^L page breaks as tidy horizontal lines" :recipe (:package "page-break-lines" :repo ("https://github.com/purcell/page-break-lines" . "page-break-lines") :files ("*" (:exclude ".git" ".github" "Makefile" "*.png")))) (paredit :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/paredit.html" :description "minor mode for editing parentheses" :recipe (:package "paredit" :repo ("https://mumble.net/~campbell/git/paredit.git" . "paredit") :files ("*" (:exclude ".git" "COPYING" "check.sh" "genhtml.sh" "test.el")))) (parseclj :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/parseclj.html" :description "Clojure/EDN parser" :recipe (:package "parseclj" :repo ("https://github.com/clojure-emacs/parseclj" . "parseclj") :files ("*" (:exclude ".git" "LICENSE" "test")))) (parseedn :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/parseedn.html" :description "Clojure/EDN parser" :recipe (:package "parseedn" :repo ("https://github.com/clojure-emacs/parseedn" . "parseedn") :files ("*" (:exclude ".git" "test")))) (pcmpl-args :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/pcmpl-args.html" :description "Enhanced shell command completion" :recipe (:package "pcmpl-args" :repo ("https://github.com/JonWaltman/pcmpl-args.el" . "pcmpl-args") :files ("*" (:exclude ".git")))) (pcre2el :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/pcre2el.html" :description "regexp syntax converter" :recipe (:package "pcre2el" :repo ("https://github.com/joddie/pcre2el" . "pcre2el") :files ("*" (:exclude ".git" ".travis.yml" "pcre2el-tests.el")))) (pdf-tools :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/pdf-tools.html" :description "Support library for PDF documents" :recipe (:package "pdf-tools" :repo ("https://github.com/vedang/pdf-tools" . "pdf-tools") :files ("*" (:exclude ".git" "COPYING")))) (php-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/php-mode.html" :description "Major mode for editing PHP code" :recipe (:package "php-mode" :repo ("https://github.com/emacs-php/php-mode" . "php-mode") :files ("*" (:exclude ".git" "LICENSE")))) (popon :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/popon.html" :description "\"Pop\" floating text \"on\" a window" :recipe (:package "popon" :repo ("https://codeberg.org/akib/emacs-popon" . "popon") :files ("*" (:exclude ".git")))) (popup :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/popup.html" :description "Visual Popup User Interface" :recipe (:package "popup" :repo ("https://github.com/auto-complete/popup-el" . "popup") :files ("*" (:exclude ".git" "LICENSE")))) (projectile :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/projectile.html" :description "Manage and navigate projects in Emacs easily" :recipe (:package "projectile" :repo ("https://github.com/bbatsov/projectile" . "projectile") :files ("*" (:exclude ".git" "LICENSE" "doc" "test")))) (proof-general :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/proof-general.html" :description "A generic Emacs interface for proof assistants" :recipe (:package "proof-general" :repo ("https://github.com/ProofGeneral/PG" . "proof-general") :files ("*" (:exclude ".git" "COPYING" "ci")))) (prop-menu :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/prop-menu.html" :description "Create and display a context menu based on text and overlay properties" :recipe (:package "prop-menu" :repo ("https://github.com/david-christiansen/prop-menu-el" . "prop-menu") :files ("*" (:exclude ".git" "Makefile" "prop-menu-tests.el")))) (racket-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/racket-mode.html" :description "Racket editing, REPL, and more" :recipe (:package "racket-mode" :repo ("https://github.com/greghendershott/racket-mode" . "racket-mode") :files ("*" (:exclude ".git")))) (rainbow-delimiters :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/rainbow-delimiters.html" :description "Highlight brackets according to their depth" :recipe (:package "rainbow-delimiters" :repo ("https://github.com/Fanael/rainbow-delimiters.git" . "rainbow-delimiters") :files ("*" (:exclude ".git" "COPYING" ".github" "rainbow-delimiters-test.el" "run-tests.sh")))) (raku-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/raku-mode.html" :description "Major mode for editing Raku code" :recipe (:package "raku-mode" :repo ("https://github.com/Raku/raku-mode" . "raku-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "npq-mode.el")))) (recomplete :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/recomplete.html" :description "Immediately (re)complete actions" :recipe (:package "recomplete" :repo ("https://codeberg.org/ideasman42/emacs-recomplete" . "recomplete") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (reformatter :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/reformatter.html" :description "Define commands which run reformatters on the current buffer" :recipe (:package "reformatter" :repo ("https://github.com/purcell/emacs-reformatter" . "reformatter") :files ("*" (:exclude ".git" ".github" "Makefile" "*-tests.el")))) (request :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/request.html" :description "Compatible layer for URL request in Emacs" :recipe (:package "request" :repo ("https://github.com/tkf/emacs-request" . "request") :files ("*" (:exclude ".git" "tests" "doc" "COPYING")))) (rfc-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/rfc-mode.html" :description "RFC document browser and viewer" :recipe (:package "rfc-mode" :repo ("https://github.com/galdor/rfc-mode" . "rfc-mode") :files ("*" (:exclude ".git")))) (rubocop :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/rubocop.html" :description "An Emacs interface for RuboCop" :recipe (:package "rubocop" :repo ("https://github.com/rubocop/rubocop-emacs" . "rubocop") :files ("*" (:exclude ".git")))) (rust-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/rust-mode.html" :description "A major-mode for editing Rust source code" :recipe (:package "rust-mode" :repo ("https://github.com/rust-lang/rust-mode" . "rust-mode") :files ("*" (:exclude ".git" "test-*" "triagebot.toml" "*.sh")))) (sass-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/sass-mode.html" :description "Major mode for editing Sass files" :recipe (:package "sass-mode" :repo ("https://github.com/nex3/sass-mode" . "sass-mode") :files ("*" (:exclude ".git")))) (scad-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/scad-mode.html" :description "A major mode for editing OpenSCAD code" :recipe (:package "scad-mode" :repo ("https://github.com/openscad/emacs-scad-mode" . "scad-mode") :files ("*" (:exclude ".git" "LICENSE")))) (scala-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/scala-mode.html" :description "Major mode for editing Scala" :recipe (:package "scala-mode" :repo ("https://github.com/hvesalai/emacs-scala-mode" . "scala-mode") :files ("*" (:exclude ".git" "LICENSE" "test" "Cask" "Makefile")))) (scroll-on-drag :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/scroll-on-drag.html" :description "Interactive scrolling." :recipe (:package "scroll-on-drag" :repo ("https://codeberg.org/ideasman42/emacs-scroll-on-drag" . "scroll-on-drag") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (scroll-on-jump :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/scroll-on-jump.html" :description "Scroll when jumping to a new point" :recipe (:package "scroll-on-jump" :repo ("https://codeberg.org/ideasman42/emacs-scroll-on-jump" . "scroll-on-jump") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (sesman :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/sesman.html" :description "Generic Session Manager" :recipe (:package "sesman" :repo ("https://github.com/vspinu/sesman" . "sesman") :files ("*" (:exclude ".git" "targets")))) (shellcop :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/shellcop.html" :description "Analyze info&error in shell-mode" :recipe (:package "shellcop" :repo ("https://github.com/redguardtoo/shellcop.git" . "shellcop") :files ("*" (:exclude ".git" "LICENSE" "demo.png")))) (slime :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/slime.html" :description "Superior Lisp Interaction Mode for Emacs" :recipe (:package "slime" :repo ("https://github.com/slime/slime" . "slime") :files ("*" (:exclude ".git")))) (sly :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/sly.html" :description "Sylvester the Cat's Common Lisp IDE" :recipe (:package "sly" :repo ("https://github.com/joaotavora/sly" . "sly") :files ("*" (:exclude ".git")))) (smartparens :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/smartparens.html" :description "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." :recipe (:package "smartparens" :repo ("https://github.com/Fuco1/smartparens" . "smartparens") :files ("*" (:exclude ".git" "LICENSE" "dev" "doc" "images" "test")))) (solarized-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/solarized-theme.html" :description "The Solarized color theme" :recipe (:package "solarized-theme" :repo ("https://github.com/bbatsov/solarized-emacs" . "solarized-theme") :files ("*" (:exclude ".git" "child-theme-example" "colorlab" "dev-emacs.d" "Cask" "Makefile")))) (spacemacs-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/spacemacs-theme.html" :description "Color theme with a dark and light versions." :recipe (:package "spacemacs-theme" :repo ("https://github.com/nashamri/spacemacs-theme.git" . "spacemacs-theme") :files ("*" (:exclude ".git" "LICENSE" "img")))) (spell-fu :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/spell-fu.html" :description "Fast & light spelling highlighter" :recipe (:package "spell-fu" :repo ("https://codeberg.org/ideasman42/emacs-spell-fu" . "spell-fu") :files ("*" (:exclude ".git" "LICENSE" ".elisp-autofmt")))) (sqlite3 :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/sqlite3.html" :description "Direct access to the core SQLite3 API" :recipe (:package "sqlite3" :repo ("https://github.com/pekingduck/emacs-sqlite3-api" . "sqlite3") :files ("*" (:exclude ".git" "LICENSE" "tests" "tools")))) (stylus-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/stylus-mode.html" :description "Major mode for editing .styl files" :recipe (:package "stylus-mode" :repo ("https://github.com/brianc/jade-mode" . "stylus-mode") :files ("*" (:exclude ".git" "test" "Cask" "Makefile" "example.jade" "example.json" "jade-mode.el")))) (subatomic-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/subatomic-theme.html" :description "Low contrast bluish color theme" :recipe (:package "subatomic-theme" :repo ("https://github.com/cryon/subatomic-theme" . "subatomic-theme") :files ("*" (:exclude ".git" "readme-files")))) (subed :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/subed.html" :description "A major mode for editing subtitles" :recipe (:package "subed" :repo ("https://github.com/sachac/subed" . "subed") :files ("*" (:exclude ".git" "LICENSES/GPL-3.0-or-later.txt")))) (sweeprolog :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/sweeprolog.html" :description "Embedded SWI-Prolog" :recipe (:package "sweeprolog" :repo ("https://github.com/SWI-Prolog/packages-sweep" . "sweeprolog") :files ("*" (:exclude ".git" "LICENSE")))) (swift-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/swift-mode.html" :description "Major-mode for Apple's Swift programming language" :recipe (:package "swift-mode" :repo ("https://github.com/swift-emacs/swift-mode" . "swift-mode") :files ("*" (:exclude ".git" "COPYING" "scripts" "test" "Eldev" "Makefile")))) (symbol-overlay :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/symbol-overlay.html" :description "Highlight symbols with keymap-enabled overlays" :recipe (:package "symbol-overlay" :repo ("https://github.com/wolray/symbol-overlay" . "symbol-overlay") :files ("*" (:exclude ".git" "*.png")))) (systemd :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/systemd.html" :description "Major mode for editing systemd units" :recipe (:package "systemd" :repo ("https://github.com/holomorph/systemd-mode" . "systemd") :files ("*" (:exclude ".git" "LICENSE" "test" "Makefile")))) (tablist :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/tablist.html" :description "Extended tabulated-list-mode" :recipe (:package "tablist" :repo ("https://github.com/politza/tablist" . "tablist") :files ("*" (:exclude ".git" "COPYING")))) (tangotango-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/tangotango-theme.html" :description "Tango Palette color theme for Emacs 24." :recipe (:package "tangotango-theme" :repo ("https://github.com/juba/color-theme-tangotango.git" . "tangotango-theme") :files ("*" (:exclude ".git" "color-theme-tangotango.el" "screenshots")))) (telephone-line :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/telephone-line.html" :description "Rewrite of Powerline" :recipe (:package "telephone-line" :repo ("https://github.com/dbordak/telephone-line.git" . "telephone-line") :files ("*" (:exclude ".git" "COPYING" "screenshots")))) (testcover-mark-line :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/testcover-mark-line.html" :description "Mark whole line with Testcover" :recipe (:package "testcover-mark-line" :repo ("https://codeberg.org/akib/emacs-testcover-mark-line" . "testcover-mark-line") :files ("*" (:exclude ".git")))) (textile-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/textile-mode.html" :description "Textile markup editing major mode" :recipe (:package "textile-mode" :repo ("https://github.com/juba/textile-mode" . "textile-mode") :files ("*" (:exclude ".git")))) (toc-org :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/toc-org.html" :description "add table of contents to org-mode files (formerly, org-toc)" :recipe (:package "toc-org" :repo ("https://github.com/snosov1/toc-org.git" . "toc-org") :files ("*" (:exclude ".git" "COPYING" ".travis.yml" "toc-org-test.el")))) (totp-auth :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/totp-auth.html" :description "RFC6238 TOTP" :recipe (:package "totp-auth" :repo ("https://gitlab.com/fledermaus/totp.el" . "totp-auth") :files ("*" (:exclude ".git" "base32.el" "Makefile" "*.md" "*.html" "tests")))) (tp :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/tp.html" :description "Utilities for transient menus that POST to an API" :recipe (:package "tp" :repo ("https://codeberg.org/martianh/tp.el" . "tp") :files ("*" (:exclude ".git" "LICENSE")))) (treesit-fold :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/treesit-fold.html" :description "n/a" :recipe (:package "treesit-fold" :repo ("https://github.com/emacs-tree-sitter/treesit-fold" . "treesit-fold") :files ("*" (:exclude ".git")))) (treeview :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/treeview.html" :description "A generic tree navigation library" :recipe (:package "treeview" :repo ("https://github.com/tilmanrassy/emacs-treeview" . "treeview") :files ("*" (:exclude ".git" "LICENSE")))) (tuareg :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/tuareg.html" :description "OCaml mode" :recipe (:package "tuareg" :repo ("https://github.com/ocaml/tuareg.git" . "tuareg") :files ("*" (:exclude ".git" "COPYING")))) (typescript-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/typescript-mode.html" :description "Major mode for editing typescript" :recipe (:package "typescript-mode" :repo ("https://github.com/emacs-typescript/typescript.el" . "typescript-mode") :files ("*" (:exclude ".git" ".github" "Cask" "Dockerfile" "Makefile" "*test*")))) (ujelly-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/ujelly-theme.html" :description "Ujelly theme for GNU Emacs 24 (deftheme)" :recipe (:package "ujelly-theme" :repo ("https://github.com/marktran/color-theme-ujelly" . "ujelly-theme") :files ("*" (:exclude ".git")))) (undo-fu :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/undo-fu.html" :description "Undo helper with redo" :recipe (:package "undo-fu" :repo ("https://codeberg.org/ideasman42/emacs-undo-fu" . "undo-fu") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE")))) (undo-fu-session :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/undo-fu-session.html" :description "Persistent undo, available between sessions" :recipe (:package "undo-fu-session" :repo ("https://codeberg.org/ideasman42/emacs-undo-fu-session" . "undo-fu-session") :files ("*" (:exclude ".git" ".elisp-autofmt" "LICENSE")))) (vc-fossil :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/vc-fossil.html" :description "VC backend for the fossil sofware configuraiton management system" :recipe (:package "vc-fossil" :repo ("https://github.com/venks1/emacs-fossil" . "vc-fossil") :files ("*" (:exclude ".git")))) (vcomplete :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/vcomplete.html" :description "Visual completions" :recipe (:package "vcomplete" :repo ("https://git.sr.ht/~dsemy/vcomplete" . "vcomplete") :files ("*" (:exclude ".git")))) (visual-fill-column :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/visual-fill-column.html" :description "fill-column for visual-line-mode" :recipe (:package "visual-fill-column" :repo ("https://codeberg.org/joostkremers/visual-fill-column.git" . "visual-fill-column") :files ("*" (:exclude ".git" "Cask" "LICENSE" "adaptive-wrap.png" "after.png" "before.png" "centered.png" "no-adaptive-wrap.png" "test")))) (vm :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/vm.html" :description "n/a" :recipe (:package "vm" :repo ("https://gitlab.com/emacs-vm/vm" . "vm") :files ("*" (:exclude ".git")))) (web-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/web-mode.html" :description "major mode for editing web templates" :recipe (:package "web-mode" :repo ("https://github.com/fxbois/web-mode" . "web-mode") :files ("*" (:exclude ".git" "LICENSE" "issues" "tests" "run.sh")))) (webpaste :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/webpaste.html" :description "Paste to pastebin-like services" :recipe (:package "webpaste" :repo ("https://github.com/etu/webpaste.el" . "webpaste") :files ("*" (:exclude ".git" "LICENSE")))) (wfnames :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/wfnames.html" :description "Edit filenames" :recipe (:package "wfnames" :repo ("https://github.com/thierryvolpiatto/wfnames" . "wfnames") :files ("*" (:exclude ".git")))) (wgrep :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/wgrep.html" :description "Writable grep buffer and apply the changes to files" :recipe (:package "wgrep" :repo ("https://github.com/mhayashi1120/Emacs-wgrep" . "wgrep") :files ("*" (:exclude ".git" "COPYING")))) (why-this :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/why-this.html" :description "Why is this line here? Ask version control" :recipe (:package "why-this" :repo ("https://codeberg.org/akib/emacs-why-this" . "why-this") :files ("*" (:exclude ".git")))) (with-editor :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/with-editor.html" :description "Use the Emacsclient as $EDITOR" :recipe (:package "with-editor" :repo ("https://github.com/magit/with-editor" . "with-editor") :files ("*" (:exclude ".git" "LICENSE" "htmlxref.cnf" ".travis.yml" ".mailmap" "Makefile")))) (with-simulated-input :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/with-simulated-input.html" :description "A macro to simulate user input non-interactively" :recipe (:package "with-simulated-input" :repo ("https://github.com/DarwinAwardWinner/with-simulated-input" . "with-simulated-input") :files ("*" (:exclude ".git")))) (workroom :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/workroom.html" :description "Named rooms for work without irrelevant distracting buffers" :recipe (:package "workroom" :repo ("https://codeberg.org/akib/emacs-workroom" . "workroom") :files ("*" (:exclude ".git")))) (writegood-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/writegood-mode.html" :description "Polish up poor writing on the fly" :recipe (:package "writegood-mode" :repo ("https://github.com/bnbeckwith/writegood-mode" . "writegood-mode") :files ("*" (:exclude ".git")))) (ws-butler :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/ws-butler.html" :description "Unobtrusively remove trailing whitespace." :recipe (:package "ws-butler" :repo ("https://github.com/lewang/ws-butler" . "ws-butler") :files ("*" (:exclude ".git" "COPYING" "tests" "Makefile" ".travis.yml")))) (xah-fly-keys :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/xah-fly-keys.html" :description "ergonomic modal keybinding minor mode." :recipe (:package "xah-fly-keys" :repo ("https://github.com/xahlee/xah-fly-keys" . "xah-fly-keys") :files ("*" (:exclude ".git" "*.png")))) (xkcd :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/xkcd.html" :description "View xkcd from Emacs" :recipe (:package "xkcd" :repo ("https://github.com/vibhavp/emacs-xkcd" . "xkcd") :files ("*" (:exclude ".git" "LICENSE" ".travis.yml" "images")))) (xml-rpc :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/xml-rpc.html" :description "An elisp implementation of clientside XML-RPC" :recipe (:package "xml-rpc" :repo ("https://github.com/xml-rpc-el/xml-rpc-el.git" . "xml-rpc") :files ("*" (:exclude ".git")))) (yaml-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/yaml-mode.html" :description "Major mode for editing YAML files" :recipe (:package "yaml-mode" :repo ("https://github.com/yoshiki/yaml-mode" . "yaml-mode") :files ("*" (:exclude ".git" "LICENSE.txt" "test-files" "Makefile")))) (yasnippet-snippets :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/yasnippet-snippets.html" :description "Collection of yasnippet snippets" :recipe (:package "yasnippet-snippets" :repo ("https://github.com/AndreaCrotti/yasnippet-snippets" . "yasnippet-snippets") :files ("*" (:exclude ".git" "LICENSE" "report" "snippets.html")))) (zenburn-theme :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/zenburn-theme.html" :description "A low contrast color theme for Emacs." :recipe (:package "zenburn-theme" :repo ("https://github.com/bbatsov/zenburn-emacs" . "zenburn-theme") :files ("*" (:exclude ".git" "LICENSE" "screenshots")))) (zig-mode :source "NonGNU-devel ELPA" :url "https://elpa.nongnu.org/nongnu/zig-mode.html" :description "A major mode for the Zig programming language" :recipe (:package "zig-mode" :repo ("https://github.com/ziglang/zig-mode" . "zig-mode") :files ("*" (:exclude ".git" "LICENSE" "appveyor.yml" "run_tests.sh" "tests.el"))))) (elpaca-menu-gnu-devel-elpa (ace-window :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ace-window.html" :description "Quickly switch windows." :recipe (:package "ace-window" :repo ("https://github.com/abo-abo/ace-window" . "ace-window") :files ("*" (:exclude ".git")))) (ack :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ack.html" :description "interface to ack-like tools" :recipe (:package "ack" :repo ("https://github.com/leoliu/ack-el" . "ack") :files ("*" (:exclude ".git")))) (activities :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/activities.html" :description "Save/restore sets of windows, tabs/frames, and their buffers" :recipe (:package "activities" :repo ("https://github.com/alphapapa/activities.el.git" . "activities") :files ("*" (:exclude ".git")))) (ada-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ada-mode.html" :description "major-mode for editing Ada sources" :recipe (:package "ada-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ada-mode") :branch "externals/ada-mode" :files ("*" (:exclude ".git")))) (ada-ref-man :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ada-ref-man.html" :description "Ada Reference Manual 2012" :recipe (:package "ada-ref-man" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ada-ref-man") :branch "externals/ada-ref-man" :files ("*" (:exclude ".git")))) (adaptive-wrap :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/adaptive-wrap.html" :description "Smart line-wrapping with wrap-prefix" :recipe (:package "adaptive-wrap" :repo ("git://git.sv.gnu.org/emacs/elpa" . "adaptive-wrap") :branch "externals/adaptive-wrap" :files ("*" (:exclude ".git")))) (adjust-parens :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/adjust-parens.html" :description "Indent and dedent Lisp code, automatically adjust close parens" :recipe (:package "adjust-parens" :repo ("git://git.sv.gnu.org/emacs/elpa" . "adjust-parens") :branch "externals/adjust-parens" :files ("*" (:exclude ".git")))) (advice-patch :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/advice-patch.html" :description "Use patches to advise the inside of functions" :recipe (:package "advice-patch" :repo ("git://git.sv.gnu.org/emacs/elpa" . "advice-patch") :branch "externals/advice-patch" :files ("*" (:exclude ".git")))) (aggressive-completion :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/aggressive-completion.html" :description "Automatic minibuffer completion" :recipe (:package "aggressive-completion" :repo ("git://git.sv.gnu.org/emacs/elpa" . "aggressive-completion") :branch "externals/aggressive-completion" :files ("*" (:exclude ".git")))) (aggressive-indent :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/aggressive-indent.html" :description "Minor mode to aggressively keep your code always indented" :recipe (:package "aggressive-indent" :repo ("https://github.com/Malabarba/aggressive-indent-mode" . "aggressive-indent") :files ("*" (:exclude ".git")))) (agitate :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/agitate.html" :description "n/a" :recipe (:package "agitate" :repo ("https://github.com/protesilaos/agitate" . "agitate") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (ahungry-theme :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ahungry-theme.html" :description "Ahungry color theme for Emacs. Make sure to (load-theme 'ahungry)." :recipe (:package "ahungry-theme" :repo ("https://github.com/ahungry/color-theme-ahungry" . "ahungry-theme") :files ("*" (:exclude ".git")))) (aircon-theme :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/aircon-theme.html" :description "Cool and legible light theme" :recipe (:package "aircon-theme" :repo ("https://git.sr.ht/~chambln/aircon-theme.el" . "aircon-theme") :files ("*" (:exclude ".git" "README" "COPYING")))) (all :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/all.html" :description "Edit all lines matching a given regexp" :recipe (:package "all" :repo ("git://git.sv.gnu.org/emacs/elpa" . "all") :branch "externals/all" :files ("*" (:exclude ".git")))) (altcaps :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/altcaps.html" :description "Apply alternating letter casing to convey sarcasm or mockery" :recipe (:package "altcaps" :repo ("https://github.com/protesilaos/altcaps" . "altcaps") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (ampc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ampc.html" :description "Asynchronous Music Player Controller" :recipe (:package "ampc" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ampc") :branch "externals/ampc" :files ("*" (:exclude ".git")))) (arbitools :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/arbitools.html" :description "Package for chess tournaments administration" :recipe (:package "arbitools" :repo ("git://git.sv.gnu.org/emacs/elpa" . "arbitools") :branch "externals/arbitools" :files ("*" (:exclude ".git")))) (ascii-art-to-unicode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ascii-art-to-unicode.html" :description "a small artist adjunct" :recipe (:package "ascii-art-to-unicode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ascii-art-to-unicode") :branch "externals/ascii-art-to-unicode" :files ("*" (:exclude ".git")))) (assess :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/assess.html" :description "Test support functions" :recipe (:package "assess" :repo ("https://github.com/phillord/assess" . "assess") :files ("*" (:exclude ".git")))) (async :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/async.html" :description "Asynchronous processing in Emacs" :recipe (:package "async" :repo ("https://github.com/jwiegley/emacs-async" . "async") :files ("*" (:exclude ".git" "COPYING")))) (auctex :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auctex.html" :description "Integrated environment for *TeX*" :recipe (:package "auctex" :repo ("https://git.savannah.gnu.org/git/auctex.git" . "auctex") :branch "main" :files ("*" (:exclude ".git")))) (auctex-cont-latexmk :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auctex-cont-latexmk.html" :description "run latexmk continuously, report errors via Flymake" :recipe (:package "auctex-cont-latexmk" :repo ("https://github.com/ultronozm/auctex-cont-latexmk.el" . "auctex-cont-latexmk") :files ("*" (:exclude ".git")))) (auctex-label-numbers :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auctex-label-numbers.html" :description "Numbering for LaTeX previews and folds" :recipe (:package "auctex-label-numbers" :repo ("https://github.com/ultronozm/auctex-label-numbers.el" . "auctex-label-numbers") :files ("*" (:exclude ".git")))) (aumix-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/aumix-mode.html" :description "run the aumix program in a buffer" :recipe (:package "aumix-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "aumix-mode") :branch "externals/aumix-mode" :files ("*" (:exclude ".git")))) (auto-correct :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auto-correct.html" :description "Remembers and automatically fixes past corrections" :recipe (:package "auto-correct" :repo ("git://git.sv.gnu.org/emacs/elpa" . "auto-correct") :branch "externals/auto-correct" :files ("*" (:exclude ".git")))) (auto-header :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auto-header.html" :description "Automatically find the right C headers" :recipe (:package "auto-header" :repo ("https://git.sr.ht/~pkal/auto-header" . "auto-header") :files ("*" (:exclude ".git")))) (auto-overlays :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/auto-overlays.html" :description "Automatic regexp-delimited overlays" :recipe (:package "auto-overlays" :repo ("git://git.sv.gnu.org/emacs/elpa" . "auto-overlays") :branch "externals/auto-overlays" :files ("*" (:exclude ".git")))) (autocrypt :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/autocrypt.html" :description "Autocrypt implementation" :recipe (:package "autocrypt" :repo ("https://git.sr.ht/~pkal/autocrypt" . "autocrypt") :files ("*" (:exclude ".git")))) (avy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/avy.html" :description "Jump to arbitrary positions in visible text and select text quickly." :recipe (:package "avy" :repo ("https://github.com/abo-abo/avy" . "avy") :files ("*" (:exclude ".git")))) (bbdb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bbdb.html" :description "Big Brother DataBase" :recipe (:package "bbdb" :repo ("git://git.sv.gnu.org/emacs/elpa" . "bbdb") :branch "externals/bbdb" :files ("*" (:exclude ".git")))) (beacon :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/beacon.html" :description "Highlight the cursor whenever the window scrolls" :recipe (:package "beacon" :repo ("https://github.com/Malabarba/beacon" . "beacon") :files ("*" (:exclude ".git")))) (beardbolt :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/beardbolt.html" :description "n/a" :recipe (:package "beardbolt" :repo ("https://github.com/joaotavora/beardbolt" . "beardbolt") :files ("*" (:exclude ".git")))) (beframe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/beframe.html" :description "Isolate buffers per frame" :recipe (:package "beframe" :repo ("https://github.com/protesilaos/beframe" . "beframe") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (bicep-ts-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bicep-ts-mode.html" :description "tree-sitter support for Bicep" :recipe (:package "bicep-ts-mode" :repo ("https://github.com/josteink/bicep-ts-mode" . "bicep-ts-mode") :files ("*" (:exclude ".git" "LICENSE")))) (bind-key :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bind-key.html" :description "A simple way to manage personal keybindings" :recipe (:package "bind-key" :repo ("https://github.com/emacs-mirror/emacs" . "bind-key") :branch "master" :files ("lisp/bind-key.el" (:exclude ".git")))) (blist :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/blist.html" :description "Display bookmarks in an ibuffer way" :recipe (:package "blist" :repo ("https://gitlab.com/mmemmew/blist" . "blist") :files ("*" (:exclude ".git")))) (bluetooth :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bluetooth.html" :description "A mode for interacting with Bluetooth devices" :recipe (:package "bluetooth" :repo ("https://codeberg.org/rstocker/emacs-bluetooth" . "bluetooth") :files ("*" (:exclude ".git")))) (bnf-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bnf-mode.html" :description "Major mode for editing BNF grammars." :recipe (:package "bnf-mode" :repo ("https://github.com/sergeyklay/bnf-mode" . "bnf-mode") :files ("*" (:exclude ".git")))) (boxy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/boxy.html" :description "A boxy layout framework" :recipe (:package "boxy" :repo ("https://gitlab.com/grinn.amy/boxy.git" . "boxy") :files ("*" (:exclude ".git")))) (boxy-headings :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/boxy-headings.html" :description "View org files in a boxy diagram" :recipe (:package "boxy-headings" :repo ("https://gitlab.com/grinn.amy/boxy-headings" . "boxy-headings") :files ("*" (:exclude ".git")))) (breadcrumb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/breadcrumb.html" :description "project and imenu-based breadcrumb paths" :recipe (:package "breadcrumb" :repo ("https://github.com/joaotavora/breadcrumb" . "breadcrumb") :files ("*" (:exclude ".git")))) (brief :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/brief.html" :description "Brief Editor Emulator (Brief Mode)" :recipe (:package "brief" :repo ("git://git.sv.gnu.org/emacs/elpa" . "brief") :branch "externals/brief" :files ("*" (:exclude ".git")))) (buffer-env :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/buffer-env.html" :description "Buffer-local process environments" :recipe (:package "buffer-env" :repo ("https://github.com/astoff/buffer-env" . "buffer-env") :files ("*" (:exclude ".git")))) (buffer-expose :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/buffer-expose.html" :description "Visual buffer switching using a window grid" :recipe (:package "buffer-expose" :repo ("https://github.com/clemera/buffer-expose" . "buffer-expose") :files ("*" (:exclude ".git")))) (bufferlo :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bufferlo.html" :description "Manage frame/tab-local buffer lists" :recipe (:package "bufferlo" :repo ("https://github.com/florommel/bufferlo" . "bufferlo") :files ("*" (:exclude ".git")))) (bug-hunter :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/bug-hunter.html" :description "Hunt down errors by bisecting elisp files" :recipe (:package "bug-hunter" :repo ("https://github.com/Malabarba/elisp-bug-hunter" . "bug-hunter") :files ("*" (:exclude ".git")))) (buildbot :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/buildbot.html" :description "A Buildbot client for emacs" :recipe (:package "buildbot" :repo ("https://g.ypei.me/buildbot.el.git" . "buildbot") :files ("*" (:exclude ".git")))) (calibre :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/calibre.html" :description "Interact with Calibre libraries from Emacs" :recipe (:package "calibre" :repo ("https://git.disroot.org/kjartanoli/calibre.el" . "calibre") :files ("*" (:exclude ".git")))) (cape :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cape.html" :description "Completion At Point Extensions" :recipe (:package "cape" :repo ("https://github.com/minad/cape" . "cape") :files ("*" (:exclude ".git" "LICENSE")))) (capf-autosuggest :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/capf-autosuggest.html" :description "History autosuggestions for comint and eshell" :recipe (:package "capf-autosuggest" :repo ("https://repo.or.cz/emacs-capf-autosuggest.git" . "capf-autosuggest") :files ("*" (:exclude ".git")))) (caps-lock :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/caps-lock.html" :description "Caps-lock as a minor mode" :recipe (:package "caps-lock" :repo ("git://git.sv.gnu.org/emacs/elpa" . "caps-lock") :branch "externals/caps-lock" :files ("*" (:exclude ".git")))) (captain :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/captain.html" :description "CAPiTalization is Automatic IN emacs" :recipe (:package "captain" :repo ("git://git.sv.gnu.org/emacs/elpa" . "captain") :branch "externals/captain" :files ("*" (:exclude ".git")))) (chess :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/chess.html" :description "Play chess in GNU Emacs" :recipe (:package "chess" :repo ("git://git.sv.gnu.org/emacs/elpa" . "chess") :branch "externals/chess" :files ("*" (:exclude ".git")))) (cl-generic :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cl-generic.html" :description "Forward cl-generic compatibility for Emacs<25" :recipe (:package "cl-generic" :repo ("git://git.sv.gnu.org/emacs/elpa" . "cl-generic") :branch "externals/cl-generic" :files ("*" (:exclude ".git")))) (cl-lib :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cl-lib.html" :description "Forward cl-lib compatibility library for Emacs<24.3" :recipe (:package "cl-lib" :repo ("git://git.sv.gnu.org/emacs/elpa" . "cl-lib") :branch "externals/cl-lib" :files ("*" (:exclude ".git")))) (clipboard-collector :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/clipboard-collector.html" :description "Collect clipboard entries according to regex rules" :recipe (:package "clipboard-collector" :repo ("https://github.com/clemera/clipboard-collector" . "clipboard-collector") :files ("*" (:exclude ".git")))) (cobol-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cobol-mode.html" :description "Mode for editing COBOL code" :recipe (:package "cobol-mode" :repo ("https://git.sr.ht/~hjelmtech/cobol-mode" . "cobol-mode") :files ("*" (:exclude ".git")))) (code-cells :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/code-cells.html" :description "Lightweight notebooks with support for ipynb files" :recipe (:package "code-cells" :repo ("https://github.com/astoff/code-cells.el" . "code-cells") :files ("*" (:exclude ".git" "LICENSE")))) (colorful-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/colorful-mode.html" :description "Preview any color in your buffer in real time" :recipe (:package "colorful-mode" :repo ("https://github.com/DevelopmentCool2449/colorful-mode" . "colorful-mode") :files ("*" (:exclude ".git")))) (comint-mime :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/comint-mime.html" :description "Display content of various MIME types in comint buffers" :recipe (:package "comint-mime" :repo ("https://github.com/astoff/comint-mime" . "comint-mime") :files ("*" (:exclude ".git")))) (compact-docstrings :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/compact-docstrings.html" :description "Shrink blank lines in docstrings and doc comments" :recipe (:package "compact-docstrings" :repo ("https://github.com/cpitclaudel/compact-docstrings" . "compact-docstrings") :files ("*" (:exclude ".git")))) (company :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/company.html" :description "Modular text completion framework" :recipe (:package "company" :repo ("https://github.com/company-mode/company-mode.git" . "company") :files ("*" (:exclude ".git" "doc")))) (company-ebdb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/company-ebdb.html" :description "company-mode completion backend for EBDB in message-mode" :recipe (:package "company-ebdb" :repo ("git://git.sv.gnu.org/emacs/elpa" . "company-ebdb") :branch "externals/company-ebdb" :files ("*" (:exclude ".git")))) (company-math :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/company-math.html" :description "Completion backends for unicode math symbols and latex tags" :recipe (:package "company-math" :repo ("https://github.com/vspinu/company-math.git" . "company-math") :files ("*" (:exclude ".git")))) (company-statistics :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/company-statistics.html" :description "Sort candidates using completion history" :recipe (:package "company-statistics" :repo ("https://github.com/company-mode/company-statistics" . "company-statistics") :files ("*" (:exclude ".git")))) (compat :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/compat.html" :description "Emacs Lisp Compatibility Library" :recipe (:package "compat" :repo ("https://github.com/emacs-compat/compat" . "compat") :files ("*" (:exclude ".git")))) (constants :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/constants.html" :description "Enter definition of constants into source code" :recipe (:package "constants" :repo ("https://github.com/cdominik/constants-for-Emacs" . "constants") :files ("*" (:exclude ".git")))) (consult :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/consult.html" :description "Consulting completing-read" :recipe (:package "consult" :repo ("https://github.com/minad/consult" . "consult") :files ("*" (:exclude ".git" "LICENSE")))) (consult-denote :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/consult-denote.html" :description "Use Consult in tandem with Denote" :recipe (:package "consult-denote" :repo ("https://github.com/protesilaos/consult-denote" . "consult-denote") :files ("*" (:exclude ".git")))) (consult-hoogle :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/consult-hoogle.html" :description "Hoogle frontend using consult" :recipe (:package "consult-hoogle" :repo ("https://codeberg.org/rahguzar/consult-hoogle" . "consult-hoogle") :files ("*" (:exclude ".git" "LICENSE")))) (consult-recoll :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/consult-recoll.html" :description "Recoll queries using consult" :recipe (:package "consult-recoll" :repo ("https://codeberg.org/jao/consult-recoll" . "consult-recoll") :files ("*" (:exclude ".git" "license")))) (context-coloring :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/context-coloring.html" :description "Highlight by scope" :recipe (:package "context-coloring" :repo ("https://github.com/jacksonrayhamilton/context-coloring.git" . "context-coloring") :files ("*" (:exclude ".git")))) (corfu :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/corfu.html" :description "COmpletion in Region FUnction" :recipe (:package "corfu" :repo ("https://github.com/minad/corfu" . "corfu") :files ("*" (:exclude ".git" "LICENSE")))) (coterm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/coterm.html" :description "Terminal emulation for comint" :recipe (:package "coterm" :repo ("https://repo.or.cz/emacs-coterm.git" . "coterm") :files ("*" (:exclude ".git")))) (counsel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/counsel.html" :description "Various completion functions using Ivy" :recipe (:package "counsel" :repo ("git://git.sv.gnu.org/emacs/elpa" . "counsel") :branch "externals/counsel" :files ("*" (:exclude ".git")))) (cpio-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cpio-mode.html" :description "Handle cpio archives in the style of dired." :recipe (:package "cpio-mode" :repo ("https://github.com/dlewan/cpio-mode" . "cpio-mode") :files ("*" (:exclude ".git")))) (cpupower :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cpupower.html" :description "cpupower command interface" :recipe (:package "cpupower" :repo ("https://gitlab.com/steve-emacs-stuff/cpupower-el" . "cpupower") :files ("*" (:exclude ".git")))) (crdt :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/crdt.html" :description "Collaborative editing using Conflict-free Replicated Data Types" :recipe (:package "crdt" :repo ("https://code.librehq.com/qhong/crdt.el" . "crdt") :files ("*" (:exclude ".git")))) (crisp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/crisp.html" :description "CRiSP/Brief Emacs emulator" :recipe (:package "crisp" :repo ("git://git.sv.gnu.org/emacs/elpa" . "crisp") :branch "externals/crisp" :files ("*" (:exclude ".git")))) (csharp-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/csharp-mode.html" :description "C# mode derived mode" :recipe (:package "csharp-mode" :repo ("https://github.com/emacs-csharp/csharp-mode" . "csharp-mode") :files ("*" (:exclude ".git")))) (csv-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/csv-mode.html" :description "Major mode for editing comma/char separated values" :recipe (:package "csv-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "csv-mode") :branch "externals/csv-mode" :files ("*" (:exclude ".git")))) (cursor-undo :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cursor-undo.html" :description "Undo Cursor Movement" :recipe (:package "cursor-undo" :repo ("git://git.sv.gnu.org/emacs/elpa" . "cursor-undo") :branch "externals/cursor-undo" :files ("*" (:exclude ".git")))) (cursory :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cursory.html" :description "Manage cursor styles using presets" :recipe (:package "cursory" :repo ("https://github.com/protesilaos/cursory" . "cursory") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (cycle-quotes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/cycle-quotes.html" :description "Cycle between quote styles" :recipe (:package "cycle-quotes" :repo ("git://git.sv.gnu.org/emacs/elpa" . "cycle-quotes") :branch "externals/cycle-quotes" :files ("*" (:exclude ".git")))) (dape :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dape.html" :description "Debug Adapter Protocol for Emacs" :recipe (:package "dape" :repo ("https://github.com/svaante/dape" . "dape") :files ("*" (:exclude ".git")))) (darkroom :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/darkroom.html" :description "Remove visual distractions and focus on writing" :recipe (:package "darkroom" :repo ("https://github.com/capitaomorte/darkroom.git" . "darkroom") :files ("*" (:exclude ".git")))) (dash :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dash.html" :description "A modern list library for Emacs" :recipe (:package "dash" :repo ("https://github.com/magnars/dash.el.git" . "dash") :files ("*" (:exclude ".git")))) (dbus-codegen :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dbus-codegen.html" :description "Lisp code generation for D-Bus." :recipe (:package "dbus-codegen" :repo ("https://github.com/ueno/dbus-codegen-el.git" . "dbus-codegen") :files ("*" (:exclude ".git" "COPYING")))) (debbugs :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/debbugs.html" :description "SOAP library to access debbugs servers" :recipe (:package "debbugs" :repo ("git://git.sv.gnu.org/emacs/elpa" . "debbugs") :branch "externals/debbugs" :files ("*" (:exclude ".git")))) (delight :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/delight.html" :description "A dimmer switch for your lighter text" :recipe (:package "delight" :repo ("https://git.savannah.gnu.org/git/delight.git" . "delight") :files ("*" (:exclude ".git")))) (denote :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/denote.html" :description "Simple notes with an efficient file-naming scheme" :recipe (:package "denote" :repo ("https://github.com/protesilaos/denote" . "denote") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (denote-menu :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/denote-menu.html" :description "View denote files in a tabulated list." :recipe (:package "denote-menu" :repo ("https://github.com/namilus/denote-menu" . "denote-menu") :files ("*" (:exclude ".git" "COPYING")))) (detached :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/detached.html" :description "A package to launch, and manage, detached processes" :recipe (:package "detached" :repo ("https://git.sr.ht/~niklaseklund/detached.el" . "detached") :files ("*" (:exclude ".git")))) (devdocs :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/devdocs.html" :description "Emacs viewer for DevDocs" :recipe (:package "devdocs" :repo ("https://github.com/astoff/devdocs.el" . "devdocs") :files ("*" (:exclude ".git")))) (devicetree-ts-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/devicetree-ts-mode.html" :description "Tree-sitter support for DTS" :recipe (:package "devicetree-ts-mode" :repo ("https://git.sr.ht/~akagi/devicetree-ts-mode" . "devicetree-ts-mode") :files ("*" (:exclude ".git" "LICENSE")))) (dict-tree :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dict-tree.html" :description "Dictionary data structure" :recipe (:package "dict-tree" :repo ("git://git.sv.gnu.org/emacs/elpa" . "dict-tree") :branch "externals/dict-tree" :files ("*" (:exclude ".git")))) (diff-hl :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/diff-hl.html" :description "Highlight uncommitted changes using VC" :recipe (:package "diff-hl" :repo ("https://github.com/dgutov/diff-hl.git" . "diff-hl") :files ("*" (:exclude ".git")))) (diffview :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/diffview.html" :description "View diffs in side-by-side format" :recipe (:package "diffview" :repo ("https://github.com/mgalgs/diffview-mode.git" . "diffview") :files ("*" (:exclude ".git")))) (diminish :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/diminish.html" :description "Diminished modes are minor modes with no modeline display" :recipe (:package "diminish" :repo ("https://github.com/myrjola/diminish.el.git" . "diminish") :files ("*" (:exclude ".git" "LICENSE")))) (dired-du :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dired-du.html" :description "Dired with recursive directory sizes" :recipe (:package "dired-du" :repo ("git://git.sv.gnu.org/emacs/elpa" . "dired-du") :branch "externals/dired-du" :files ("*" (:exclude ".git")))) (dired-duplicates :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dired-duplicates.html" :description "Find duplicate files locally and remotely" :recipe (:package "dired-duplicates" :repo ("https://codeberg.org/hjudt/dired-duplicates" . "dired-duplicates") :files ("*" (:exclude ".git")))) (dired-git-info :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dired-git-info.html" :description "Show git info in dired" :recipe (:package "dired-git-info" :repo ("https://github.com/clemera/dired-git-info" . "dired-git-info") :files ("*" (:exclude ".git")))) (dired-preview :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dired-preview.html" :description "Automatically preview file at point in Dired" :recipe (:package "dired-preview" :repo ("https://github.com/protesilaos/dired-preview" . "dired-preview") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (disk-usage :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/disk-usage.html" :description "Sort and browse disk usage listings" :recipe (:package "disk-usage" :repo ("https://gitlab.com/ambrevar/emacs-disk-usage" . "disk-usage") :files ("*" (:exclude ".git")))) (dismal :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dismal.html" :description "Dis Mode Ain't Lotus: Spreadsheet program Emacs" :recipe (:package "dismal" :repo ("git://git.sv.gnu.org/emacs/elpa" . "dismal") :branch "externals/dismal" :files ("*" (:exclude ".git")))) (djvu :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/djvu.html" :description "Edit and view Djvu files via djvused" :recipe (:package "djvu" :repo ("git://git.sv.gnu.org/emacs/elpa" . "djvu") :branch "externals/djvu" :files ("*" (:exclude ".git")))) (do-at-point :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/do-at-point.html" :description "Generic context-sensitive action dispatcher." :recipe (:package "do-at-point" :repo ("https://git.sr.ht/~pkal/do-at-point" . "do-at-point") :files ("*" (:exclude ".git")))) (doc-toc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/doc-toc.html" :description "Manage outlines/table of contents of pdf and djvu documents" :recipe (:package "doc-toc" :repo ("https://github.com/dalanicolai/doc-tools-toc" . "doc-toc") :files ("*" (:exclude ".git" "LICENSE")))) (docbook :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/docbook.html" :description "Info-like viewer for DocBook" :recipe (:package "docbook" :repo ("git://git.sv.gnu.org/emacs/elpa" . "docbook") :branch "externals/docbook" :files ("*" (:exclude ".git")))) (drepl :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/drepl.html" :description "REPL protocol for the dumb terminal" :recipe (:package "drepl" :repo ("https://github.com/astoff/drepl" . "drepl") :files ("*" (:exclude ".git")))) (dts-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/dts-mode.html" :description "Major mode for Device Tree source files" :recipe (:package "dts-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "dts-mode") :branch "externals/dts-mode" :files ("*" (:exclude ".git")))) (easy-escape :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/easy-escape.html" :description "Improve readability of escape characters in regular expressions" :recipe (:package "easy-escape" :repo ("https://github.com/cpitclaudel/easy-escape" . "easy-escape") :files ("*" (:exclude ".git")))) (easy-kill :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/easy-kill.html" :description "kill & mark things easily" :recipe (:package "easy-kill" :repo ("https://github.com/leoliu/easy-kill" . "easy-kill") :files ("*" (:exclude ".git")))) (ebdb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ebdb.html" :description "Contact management package" :recipe (:package "ebdb" :repo ("https://github.com/girzel/ebdb.git" . "ebdb") :files ("*" (:exclude ".git")))) (ebdb-gnorb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ebdb-gnorb.html" :description "Utilities for connecting EBDB to Gnorb" :recipe (:package "ebdb-gnorb" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ebdb-gnorb") :branch "externals/ebdb-gnorb" :files ("*" (:exclude ".git")))) (ebdb-i18n-chn :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ebdb-i18n-chn.html" :description "China-specific internationalization support for EBDB" :recipe (:package "ebdb-i18n-chn" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ebdb-i18n-chn") :branch "externals/ebdb-i18n-chn" :files ("*" (:exclude ".git")))) (ediprolog :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ediprolog.html" :description "Emacs Does Interactive Prolog" :recipe (:package "ediprolog" :repo ("https://github.com/triska/ediprolog" . "ediprolog") :files ("*" (:exclude ".git")))) (eev :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/eev.html" :description "Support for e-scripts (eepitch blocks, elisp hyperlinks, etc)" :recipe (:package "eev" :repo ("https://github.com/edrx/eev.git" . "eev") :branch "UTF-8" :files ("*" (:exclude ".git")))) (ef-themes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ef-themes.html" :description "Colorful and legible themes" :recipe (:package "ef-themes" :repo ("https://github.com/protesilaos/ef-themes" . "ef-themes") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi" "contrast-ratios.org")))) (eglot :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/eglot.html" :description "The Emacs Client for LSP servers" :recipe (:package "eglot" :repo ("https://github.com/emacs-mirror/emacs" . "eglot") :branch "master" :files ("lisp/progmodes/eglot.el" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/eglot.texi" "etc/EGLOT-NEWS" (:exclude ".git")))) (el-search :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/el-search.html" :description "Expression based interactive search for Emacs Lisp" :recipe (:package "el-search" :repo ("git://git.sv.gnu.org/emacs/elpa" . "el-search") :branch "externals/el-search" :files ("*" (:exclude ".git")))) (eldoc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/eldoc.html" :description "Show function arglist or variable docstring in echo area" :recipe (:package "eldoc" :repo ("https://github.com/emacs-mirror/emacs" . "eldoc") :branch "master" :files ("lisp/emacs-lisp/eldoc.el" (:exclude ".git")))) (electric-spacing :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/electric-spacing.html" :description "Insert operators with surrounding spaces smartly" :recipe (:package "electric-spacing" :repo ("git://git.sv.gnu.org/emacs/elpa" . "electric-spacing") :branch "externals/electric-spacing" :files ("*" (:exclude ".git")))) (elisa :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/elisa.html" :description "Emacs Lisp Information System Assistant" :recipe (:package "elisa" :repo ("https://github.com/s-kostyaev/elisa" . "elisa") :files ("*" (:exclude ".git")))) (elisp-benchmarks :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/elisp-benchmarks.html" :description "elisp benchmarks collection" :recipe (:package "elisp-benchmarks" :repo ("git://git.sv.gnu.org/emacs/elpa" . "elisp-benchmarks") :branch "externals/elisp-benchmarks" :files ("*" (:exclude ".git")))) (ellama :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ellama.html" :description "Tool for interacting with LLMs" :recipe (:package "ellama" :repo ("https://github.com/s-kostyaev/ellama" . "ellama") :files ("*" (:exclude ".git")))) (emacs-gc-stats :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/emacs-gc-stats.html" :description "Collect Emacs GC statistics" :recipe (:package "emacs-gc-stats" :repo ("https://git.sr.ht/~yantar92/emacs-gc-stats" . "emacs-gc-stats") :files ("*" (:exclude ".git" "COPYING")))) (embark :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/embark.html" :description "Conveniently act on minibuffer completions" :recipe (:package "embark" :repo ("https://github.com/oantolin/embark" . "embark") :files ("*" (:exclude ".git" "embark-consult.el" "avy-embark-collect.el")))) (embark-consult :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/embark-consult.html" :description "Consult integration for Embark" :recipe (:package "embark-consult" :repo ("https://github.com/oantolin/embark" . "embark-consult") :files ("*" (:exclude ".git" "embark.el" "embark.texi" "avy-embark-collect.el" "embark-org.el")))) (ement :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ement.html" :description "Matrix client" :recipe (:package "ement" :repo ("https://github.com/alphapapa/ement.el.git" . "ement") :files ("*" (:exclude ".git")))) (emms :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/emms.html" :description "The Emacs Multimedia System" :recipe (:package "emms" :repo ("https://git.savannah.gnu.org/git/emms.git" . "emms") :files ("*" (:exclude ".git")))) (engrave-faces :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/engrave-faces.html" :description "Convert font-lock faces to other formats" :recipe (:package "engrave-faces" :repo ("https://github.com/tecosaur/engrave-faces.git" . "engrave-faces") :files ("*" (:exclude ".git")))) (enwc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/enwc.html" :description "The Emacs Network Client" :recipe (:package "enwc" :repo ("git://git.sv.gnu.org/emacs/elpa" . "enwc") :branch "externals/enwc" :files ("*" (:exclude ".git")))) (epoch-view :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/epoch-view.html" :description "Minor mode to visualize epoch timestamps" :recipe (:package "epoch-view" :repo ("git://git.sv.gnu.org/emacs/elpa" . "epoch-view") :branch "externals/epoch-view" :files ("*" (:exclude ".git")))) (erc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/erc.html" :description "An Emacs Internet Relay Chat client" :recipe (:package "erc" :repo ("https://github.com/emacs-mirror/emacs" . "erc") :branch "master" :files ("lisp/erc/*" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/erc.texi" "etc/ERC-NEWS" "COPYING" (:exclude ".git")))) (ergoemacs-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ergoemacs-mode.html" :description "Emacs mode based on common modern interface and ergonomics." :recipe (:package "ergoemacs-mode" :repo ("https://github.com/ergoemacs/ergoemacs-mode.git" . "ergoemacs-mode") :files ("*" (:exclude ".git")))) (ess :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ess.html" :description "Emacs Speaks Statistics" :recipe (:package "ess" :repo ("https://github.com/emacs-ess/ESS" . "ess") :files ("*" (:exclude ".git")))) (excorporate :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/excorporate.html" :description "Exchange Web Services (EWS) integration" :recipe (:package "excorporate" :repo ("git://git.sv.gnu.org/emacs/elpa" . "excorporate") :branch "externals/excorporate" :files ("*" (:exclude ".git")))) (expand-region :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/expand-region.html" :description "Increase selected region by semantic units." :recipe (:package "expand-region" :repo ("https://github.com/magnars/expand-region.el" . "expand-region") :files ("*" (:exclude ".git")))) (expreg :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/expreg.html" :description "Simple expand region" :recipe (:package "expreg" :repo ("https://github.com/casouri/expreg.git" . "expreg") :files ("*" (:exclude ".git")))) (external-completion :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/external-completion.html" :description "Let external tools control completion style" :recipe (:package "external-completion" :repo ("https://github.com/emacs-mirror/emacs" . "external-completion") :branch "master" :files ("lisp/external-completion.el" (:exclude ".git")))) (exwm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/exwm.html" :description "Emacs X Window Manager" :recipe (:package "exwm" :repo ("https://github.com/emacs-exwm/exwm.git" . "exwm") :files ("*" (:exclude ".git")))) (f90-interface-browser :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/f90-interface-browser.html" :description "Parse and browse f90 interfaces" :recipe (:package "f90-interface-browser" :repo ("git://git.sv.gnu.org/emacs/elpa" . "f90-interface-browser") :branch "externals/f90-interface-browser" :files ("*" (:exclude ".git")))) (face-shift :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/face-shift.html" :description "Shift the colour of certain faces" :recipe (:package "face-shift" :repo ("https://git.sr.ht/~pkal/face-shift" . "face-shift") :files ("*" (:exclude ".git")))) (filechooser :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/filechooser.html" :description "An xdg-desktop-portal filechooser" :recipe (:package "filechooser" :repo ("https://codeberg.org/rahguzar/filechooser" . "filechooser") :files ("*" (:exclude ".git" "LICENSE")))) (filladapt :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/filladapt.html" :description "Adaptive fill" :recipe (:package "filladapt" :repo ("git://git.sv.gnu.org/emacs/elpa" . "filladapt") :branch "externals/filladapt" :files ("*" (:exclude ".git")))) (firefox-javascript-repl :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/firefox-javascript-repl.html" :description "Jack into Firefox" :recipe (:package "firefox-javascript-repl" :repo ("https://git.sr.ht/~fitzsim/firefox-javascript-repl" . "firefox-javascript-repl") :files ("*" (:exclude ".git")))) (flylisp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/flylisp.html" :description "Color unbalanced parentheses and parentheses inconsistent with indentation" :recipe (:package "flylisp" :repo ("git://git.sv.gnu.org/emacs/elpa" . "flylisp") :branch "externals/flylisp" :files ("*" (:exclude ".git")))) (flymake :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/flymake.html" :description "A universal on-the-fly syntax checker" :recipe (:package "flymake" :repo ("https://github.com/emacs-mirror/emacs" . "flymake") :branch "master" :files ("lisp/progmodes/flymake.el" (:exclude ".git")))) (flymake-codespell :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/flymake-codespell.html" :description "Flymake backend for codespell" :recipe (:package "flymake-codespell" :repo ("https://github.com/skangas/flymake-codespell" . "flymake-codespell") :files ("*" (:exclude ".git")))) (flymake-proselint :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/flymake-proselint.html" :description "Flymake backend for proselint" :recipe (:package "flymake-proselint" :repo ("https://git.sr.ht/~manuel-uberti/flymake-proselint" . "flymake-proselint") :files ("*" (:exclude ".git")))) (fontaine :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/fontaine.html" :description "Set font configurations using presets" :recipe (:package "fontaine" :repo ("https://github.com/protesilaos/fontaine" . "fontaine") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (frame-tabs :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/frame-tabs.html" :description "show buffer tabs in side window" :recipe (:package "frame-tabs" :repo ("git://git.sv.gnu.org/emacs/elpa" . "frame-tabs") :branch "externals/frame-tabs" :files ("*" (:exclude ".git")))) (frog-menu :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/frog-menu.html" :description "Quickly pick items from ad hoc menus" :recipe (:package "frog-menu" :repo ("https://github.com/clemera/frog-menu" . "frog-menu") :files ("*" (:exclude ".git")))) (fsm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/fsm.html" :description "state machine library" :recipe (:package "fsm" :repo ("git://git.sv.gnu.org/emacs/elpa" . "fsm") :branch "externals/fsm" :files ("*" (:exclude ".git")))) (ftable :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ftable.html" :description "Fill a table to fit in n columns" :recipe (:package "ftable" :repo ("https://github.com/casouri/ftable" . "ftable") :files ("*" (:exclude ".git")))) (gcmh :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gcmh.html" :description "the Garbage Collector Magic Hack" :recipe (:package "gcmh" :repo ("https://gitlab.com/koral/gcmh" . "gcmh") :files ("*" (:exclude ".git")))) (ggtags :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ggtags.html" :description "emacs frontend to GNU Global source code tagging system" :recipe (:package "ggtags" :repo ("https://github.com/leoliu/ggtags" . "ggtags") :files ("*" (:exclude ".git")))) (gited :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gited.html" :description "Operate on Git branches like dired" :recipe (:package "gited" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gited") :branch "externals/gited" :files ("*" (:exclude ".git")))) (gle-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gle-mode.html" :description "Major mode to edit Graphics Layout Engine files" :recipe (:package "gle-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gle-mode") :branch "externals/gle-mode" :files ("*" (:exclude ".git")))) (gnat-compiler :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnat-compiler.html" :description "Support for running GNAT tools" :recipe (:package "gnat-compiler" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnat-compiler") :branch "externals/gnat-compiler" :files ("*" (:exclude ".git")))) (gnome-c-style :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnome-c-style.html" :description "minor mode for editing GNOME-style C source code" :recipe (:package "gnome-c-style" :repo ("https://github.com/ueno/gnome-c-style.git" . "gnome-c-style") :files ("*" (:exclude ".git")))) (gnorb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnorb.html" :description "Glue code between Gnus, Org, and BBDB" :recipe (:package "gnorb" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnorb") :branch "externals/gnorb" :files ("*" (:exclude ".git")))) (gnu-elpa :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnu-elpa.html" :description "Advertize GNU ELPA packages" :recipe (:package "gnu-elpa" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnu-elpa") :branch "externals/gnu-elpa" :files ("*" (:exclude ".git")))) (gnu-elpa-keyring-update :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html" :description "Update Emacs's GPG keyring for GNU ELPA" :recipe (:package "gnu-elpa-keyring-update" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnu-elpa-keyring-update") :branch "externals/gnu-elpa-keyring-update" :files ("*" (:exclude ".git")))) (gnugo :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnugo.html" :description "play GNU Go in a buffer" :recipe (:package "gnugo" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnugo") :branch "externals/gnugo" :files ("*" (:exclude ".git")))) (gnus-mock :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gnus-mock.html" :description "Mock Gnus installation for testing" :recipe (:package "gnus-mock" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnus-mock") :branch "externals/gnus-mock" :files ("*" (:exclude ".git")))) (gpastel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gpastel.html" :description "Integrates GPaste with the kill-ring" :recipe (:package "gpastel" :repo ("https://github.com/DamienCassou/gpastel" . "gpastel") :files ("*" (:exclude ".git")))) (gpr-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gpr-mode.html" :description "Major mode for editing GNAT project files" :recipe (:package "gpr-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gpr-mode") :branch "externals/gpr-mode" :files ("*" (:exclude ".git")))) (gpr-query :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gpr-query.html" :description "Minor mode for navigating sources using gpr_query" :recipe (:package "gpr-query" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gpr-query") :branch "externals/gpr-query" :files ("*" (:exclude ".git")))) (graphql :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/graphql.html" :description "GraphQL utilities" :recipe (:package "graphql" :repo ("https://github.com/vermiculus/graphql.el" . "graphql") :files ("*" (:exclude ".git")))) (greader :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/greader.html" :description "Gnamù reader, send buffer contents to a speech engine" :recipe (:package "greader" :repo ("https://gitlab.com/michelangelo-rodriguez/greader" . "greader") :files ("*" (:exclude ".git")))) (greenbar :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/greenbar.html" :description "Mark comint output with \"greenbar\" background" :recipe (:package "greenbar" :repo ("git://git.sv.gnu.org/emacs/elpa" . "greenbar") :branch "externals/greenbar" :files ("*" (:exclude ".git")))) (gtags-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/gtags-mode.html" :description "GNU Global integration with xref, project and imenu." :recipe (:package "gtags-mode" :repo ("https://github.com/Ergus/gtags-mode" . "gtags-mode") :files ("*" (:exclude ".git")))) (guess-language :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/guess-language.html" :description "Robust automatic language detection" :recipe (:package "guess-language" :repo ("https://github.com/tmalsburg/guess-language.el" . "guess-language") :files ("*" (:exclude ".git")))) (hcel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/hcel.html" :description "Haskell codebase explorer / cross referencer" :recipe (:package "hcel" :repo ("https://g.ypei.me/hc.el.git" . "hcel") :files ("*" (:exclude ".git")))) (heap :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/heap.html" :description "Heap (a.k.a. priority queue) data structure" :recipe (:package "heap" :repo ("git://git.sv.gnu.org/emacs/elpa" . "heap") :branch "externals/heap" :files ("*" (:exclude ".git")))) (hiddenquote :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/hiddenquote.html" :description "Major mode for doing hidden quote puzzles" :recipe (:package "hiddenquote" :repo ("https://gitlab.com/mauroaranda/hiddenquote/hiddenquote" . "hiddenquote") :files ("*" (:exclude ".git")))) (highlight-escape-sequences :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/highlight-escape-sequences.html" :description "Highlight escape sequences" :recipe (:package "highlight-escape-sequences" :repo ("https://github.com/dgutov/highlight-escape-sequences/" . "highlight-escape-sequences") :files ("*" (:exclude ".git")))) (hook-helpers :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/hook-helpers.html" :description "Anonymous, modifiable hook functions" :recipe (:package "hook-helpers" :repo ("https://git.savannah.nongnu.org/git/hook-helpers-el.git" . "hook-helpers") :files ("*" (:exclude ".git")))) (html5-schema :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/html5-schema.html" :description "Add HTML5 schemas for use by nXML" :recipe (:package "html5-schema" :repo ("git://git.sv.gnu.org/emacs/elpa" . "html5-schema") :branch "externals/html5-schema" :files ("*" (:exclude ".git")))) (hydra :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/hydra.html" :description "Make bindings that stick around." :recipe (:package "hydra" :repo ("https://github.com/abo-abo/hydra" . "hydra") :files ("*" (:exclude ".git" "lv.el")))) (hyperbole :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/hyperbole.html" :description "GNU Hyperbole: The Everyday Hypertextual Information Manager" :recipe (:package "hyperbole" :repo ("https://git.savannah.gnu.org/git/hyperbole.git" . "hyperbole") :files ("*" (:exclude ".git")))) (idlwave :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/idlwave.html" :description "IDL editing mode for GNU Emacs" :recipe (:package "idlwave" :repo ("https://github.com/jdtsmith/idlwave" . "idlwave") :files ("*" (:exclude ".git")))) (ilist :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ilist.html" :description "Display a list in an ibuffer way." :recipe (:package "ilist" :repo ("https://gitlab.com/mmemmew/ilist" . "ilist") :files ("*" (:exclude ".git")))) (indent-bars :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/indent-bars.html" :description "Highlight indentation with bars" :recipe (:package "indent-bars" :repo ("https://github.com/jdtsmith/indent-bars" . "indent-bars") :files ("*" (:exclude ".git" "LICENSE")))) (inspector :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/inspector.html" :description "Tool for inspection of Emacs Lisp objects" :recipe (:package "inspector" :repo ("https://github.com/mmontone/emacs-inspector" . "inspector") :files ("*" (:exclude ".git" "LICENSE")))) (ioccur :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ioccur.html" :description "Incremental occur" :recipe (:package "ioccur" :repo ("https://github.com/thierryvolpiatto/ioccur.git" . "ioccur") :files ("*" (:exclude ".git")))) (isearch-mb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/isearch-mb.html" :description "Control isearch from the minibuffer" :recipe (:package "isearch-mb" :repo ("https://github.com/astoff/isearch-mb" . "isearch-mb") :files ("*" (:exclude ".git")))) (iterators :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/iterators.html" :description "Functions for working with iterators" :recipe (:package "iterators" :repo ("git://git.sv.gnu.org/emacs/elpa" . "iterators") :branch "externals/iterators" :files ("*" (:exclude ".git")))) (ivy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ivy.html" :description "Incremental Vertical completYon" :recipe (:package "ivy" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ivy") :branch "externals/ivy" :files ("*" (:exclude ".git")))) (ivy-avy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ivy-avy.html" :description "Avy integration for Ivy" :recipe (:package "ivy-avy" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ivy-avy") :branch "externals/ivy-avy" :files ("*" (:exclude ".git")))) (ivy-explorer :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ivy-explorer.html" :description "Dynamic file browsing grid using ivy" :recipe (:package "ivy-explorer" :repo ("https://github.com/clemera/ivy-explorer" . "ivy-explorer") :files ("*" (:exclude ".git")))) (ivy-hydra :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ivy-hydra.html" :description "Additional key bindings for Ivy" :recipe (:package "ivy-hydra" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ivy-hydra") :branch "externals/ivy-hydra" :files ("*" (:exclude ".git")))) (ivy-posframe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ivy-posframe.html" :description "Using posframe to show Ivy" :recipe (:package "ivy-posframe" :repo ("https://github.com/tumashu/ivy-posframe" . "ivy-posframe") :files ("*" (:exclude ".git")))) (jami-bot :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jami-bot.html" :description "An extendable chat bot for the private messenger GNU Jami" :recipe (:package "jami-bot" :repo ("https://gitlab.com/hperrey/jami-bot" . "jami-bot") :files ("*" (:exclude ".git" "LICENSE")))) (jarchive :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jarchive.html" :description "Open project dependencies in jar archives" :recipe (:package "jarchive" :repo ("https://git.sr.ht/~dannyfreeman/jarchive" . "jarchive") :files ("*" (:exclude ".git" "LICENSE")))) (javaimp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/javaimp.html" :description "Add and reorder Java import statements in Maven/Gradle projects" :recipe (:package "javaimp" :repo ("git://git.sv.gnu.org/emacs/elpa" . "javaimp") :branch "externals/javaimp" :files ("*" (:exclude ".git")))) (jgraph-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jgraph-mode.html" :description "Major mode for Jgraph files" :recipe (:package "jgraph-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "jgraph-mode") :branch "externals/jgraph-mode" :files ("*" (:exclude ".git")))) (jinx :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jinx.html" :description "Enchanted Spell Checker" :recipe (:package "jinx" :repo ("https://github.com/minad/jinx" . "jinx") :files ("*" (:exclude ".git" "LICENSE")))) (jit-spell :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jit-spell.html" :description "Just-in-time spell checking" :recipe (:package "jit-spell" :repo ("https://github.com/astoff/jit-spell" . "jit-spell") :files ("*" (:exclude ".git")))) (js2-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/js2-mode.html" :description "Improved JavaScript editing mode" :recipe (:package "js2-mode" :repo ("https://github.com/mooz/js2-mode.git" . "js2-mode") :files ("*" (:exclude ".git")))) (json-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/json-mode.html" :description "Major mode for editing JSON files" :recipe (:package "json-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "json-mode") :branch "externals/json-mode" :files ("*" (:exclude ".git")))) (jsonrpc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jsonrpc.html" :description "JSON-RPC library" :recipe (:package "jsonrpc" :repo ("https://github.com/emacs-mirror/emacs" . "jsonrpc") :branch "master" :files ("lisp/jsonrpc.el" (:exclude ".git")))) (jumpc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/jumpc.html" :description "jump to previous insertion points" :recipe (:package "jumpc" :repo ("git://git.sv.gnu.org/emacs/elpa" . "jumpc") :branch "externals/jumpc" :files ("*" (:exclude ".git")))) (kind-icon :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/kind-icon.html" :description "Completion kind icons" :recipe (:package "kind-icon" :repo ("https://github.com/jdtsmith/kind-icon" . "kind-icon") :files ("*" (:exclude ".git")))) (kiwix :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/kiwix.html" :description "Searching offline Wikipedia through Kiwix." :recipe (:package "kiwix" :repo ("https://repo.or.cz/kiwix.el.git" . "kiwix") :files ("*" (:exclude ".git" "*.png" "LICENSE")))) (kmb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/kmb.html" :description "Kill buffers matching a regexp w/o confirmation" :recipe (:package "kmb" :repo ("git://git.sv.gnu.org/emacs/elpa" . "kmb") :branch "externals/kmb" :files ("*" (:exclude ".git")))) (kubed :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/kubed.html" :description "Kubernetes, Emacs, done!" :recipe (:package "kubed" :repo ("https://git.sr.ht/~eshel/kubed" . "kubed") :files ("*" (:exclude ".git")))) (landmark :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/landmark.html" :description "Neural-network robot that learns landmarks" :recipe (:package "landmark" :repo ("git://git.sv.gnu.org/emacs/elpa" . "landmark") :branch "externals/landmark" :files ("*" (:exclude ".git")))) (latex-table-wizard :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/latex-table-wizard.html" :description "Magic editing of LaTeX tables" :recipe (:package "latex-table-wizard" :repo ("https://github.com/enricoflor/latex-table-wizard" . "latex-table-wizard") :files ("*" (:exclude ".git")))) (leaf :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/leaf.html" :description "Simplify your init.el configuration, extended use-package" :recipe (:package "leaf" :repo ("https://github.com/conao3/leaf.el" . "leaf") :files ("*" (:exclude ".git")))) (lentic :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lentic.html" :description "One buffer as a view of another" :recipe (:package "lentic" :repo ("https://github.com/phillord/lentic" . "lentic") :files ("*" (:exclude ".git")))) (lentic-server :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lentic-server.html" :description "Web Server for Emacs Literate Source" :recipe (:package "lentic-server" :repo ("https://github.com/phillord/lentic-server" . "lentic-server") :files ("*" (:exclude ".git")))) (let-alist :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/let-alist.html" :description "Easily let-bind values of an assoc-list by their names" :recipe (:package "let-alist" :repo ("https://github.com/emacs-mirror/emacs" . "let-alist") :branch "master" :files ("lisp/emacs-lisp/let-alist.el" (:exclude ".git")))) (lex :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lex.html" :description "Lexical analyser construction" :recipe (:package "lex" :repo ("git://git.sv.gnu.org/emacs/elpa" . "lex") :branch "externals/lex" :files ("*" (:exclude ".git")))) (lin :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lin.html" :description "Make `hl-line-mode' more suitable for selection UIs" :recipe (:package "lin" :repo ("https://github.com/protesilaos/lin" . "lin") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (listen :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/listen.html" :description "Audio/Music player" :recipe (:package "listen" :repo ("https://github.com/alphapapa/listen.el" . "listen") :files ("*" (:exclude ".git")))) (literate-scratch :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/literate-scratch.html" :description "Lisp Interaction w/ text paragraphs" :recipe (:package "literate-scratch" :repo ("git://git.sv.gnu.org/emacs/elpa" . "literate-scratch") :branch "externals/literate-scratch" :files ("*" (:exclude ".git")))) (llm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/llm.html" :description "Interface to pluggable llm backends" :recipe (:package "llm" :repo ("https://github.com/ahyatt/llm" . "llm") :files ("*" (:exclude ".git")))) (lmc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lmc.html" :description "Little Man Computer in Elisp" :recipe (:package "lmc" :repo ("git://git.sv.gnu.org/emacs/elpa" . "lmc") :branch "externals/lmc" :files ("*" (:exclude ".git")))) (load-dir :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/load-dir.html" :description "Load all Emacs Lisp files in a given directory" :recipe (:package "load-dir" :repo ("git://git.sv.gnu.org/emacs/elpa" . "load-dir") :branch "externals/load-dir" :files ("*" (:exclude ".git")))) (load-relative :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/load-relative.html" :description "Relative file load (within a multi-file Emacs package)" :recipe (:package "load-relative" :repo ("https://github.com/rocky/emacs-load-relative" . "load-relative") :files ("*" (:exclude ".git")))) (loc-changes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/loc-changes.html" :description "keep track of positions even after buffer changes" :recipe (:package "loc-changes" :repo ("https://github.com/rocky/emacs-loc-changes" . "loc-changes") :files ("*" (:exclude ".git")))) (loccur :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/loccur.html" :description "Perform an occur-like folding in current buffer" :recipe (:package "loccur" :repo ("https://codeberg.org/fourier/loccur.git" . "loccur") :files ("*" (:exclude ".git")))) (logos :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/logos.html" :description "Simple focus mode and extras" :recipe (:package "logos" :repo ("https://github.com/protesilaos/logos" . "logos") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (luwak :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/luwak.html" :description "Web browser based on lynx -dump." :recipe (:package "luwak" :repo ("https://g.ypei.me/luwak.git" . "luwak") :files ("*" (:exclude ".git")))) (lv :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/lv.html" :description "Other echo area" :recipe (:package "lv" :repo ("https://github.com/abo-abo/hydra" . "lv") :files ("*" (:exclude ".git" "hydra*" "README.md" "doc" "targets")))) (m-buffer :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/m-buffer.html" :description "List-Oriented, Functional Buffer Manipulation" :recipe (:package "m-buffer" :repo ("https://github.com/phillord/m-buffer-el" . "m-buffer") :files ("*" (:exclude ".git")))) (map :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/map.html" :description "Map manipulation functions" :recipe (:package "map" :repo ("https://github.com/emacs-mirror/emacs" . "map") :branch "master" :files ("lisp/emacs-lisp/map.el" (:exclude ".git")))) (marginalia :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/marginalia.html" :description "Enrich existing commands with completion annotations" :recipe (:package "marginalia" :repo ("https://github.com/minad/marginalia" . "marginalia") :files ("*" (:exclude ".git" "LICENSE")))) (markchars :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/markchars.html" :description "Mark chars fitting certain characteristics" :recipe (:package "markchars" :repo ("git://git.sv.gnu.org/emacs/elpa" . "markchars") :branch "externals/markchars" :files ("*" (:exclude ".git")))) (math-symbol-lists :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/math-symbol-lists.html" :description "Lists of Unicode math symbols and latex commands" :recipe (:package "math-symbol-lists" :repo ("https://github.com/vspinu/math-symbol-lists.git" . "math-symbol-lists") :files ("*" (:exclude ".git")))) (mathjax :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/mathjax.html" :description "n/a" :recipe (:package "mathjax" :repo ("https://github.com/astoff/mathjax.el" . "mathjax") :files ("*" (:exclude ".git")))) (mct :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/mct.html" :description "Minibuffer Confines Transcended" :recipe (:package "mct" :repo ("https://gitlab.com/protesilaos/mct" . "mct") :files ("*" (:exclude ".git")))) (memory-usage :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/memory-usage.html" :description "Analyze the memory usage of Emacs in various ways" :recipe (:package "memory-usage" :repo ("git://git.sv.gnu.org/emacs/elpa" . "memory-usage") :branch "externals/memory-usage" :files ("*" (:exclude ".git")))) (metar :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/metar.html" :description "Retrieve and decode METAR weather information" :recipe (:package "metar" :repo ("git://git.sv.gnu.org/emacs/elpa" . "metar") :branch "externals/metar" :files ("*" (:exclude ".git")))) (midi-kbd :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/midi-kbd.html" :description "Create keyboard events from Midi input" :recipe (:package "midi-kbd" :repo ("git://git.sv.gnu.org/emacs/elpa" . "midi-kbd") :branch "externals/midi-kbd" :files ("*" (:exclude ".git")))) (mines :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/mines.html" :description "Minesweeper game" :recipe (:package "mines" :repo ("https://github.com/calancha/Minesweeper" . "mines") :files ("*" (:exclude ".git")))) (minibuffer-header :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/minibuffer-header.html" :description "Minibuffer header line" :recipe (:package "minibuffer-header" :repo ("https://github.com/rougier/minibuffer-header" . "minibuffer-header") :files ("*" (:exclude ".git" "LICENSE.txt")))) (minibuffer-line :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/minibuffer-line.html" :description "Display status info in the minibuffer window" :recipe (:package "minibuffer-line" :repo ("git://git.sv.gnu.org/emacs/elpa" . "minibuffer-line") :branch "externals/minibuffer-line" :files ("*" (:exclude ".git")))) (minimap :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/minimap.html" :description "Sidebar showing a \"mini-map\" of a buffer" :recipe (:package "minimap" :repo ("git://git.sv.gnu.org/emacs/elpa" . "minimap") :branch "externals/minimap" :files ("*" (:exclude ".git")))) (mmm-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/mmm-mode.html" :description "Allow Multiple Major Modes in a buffer" :recipe (:package "mmm-mode" :repo ("https://github.com/purcell/mmm-mode.git" . "mmm-mode") :files ("*" (:exclude ".git")))) (modus-themes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/modus-themes.html" :description "Elegant, highly legible and customizable themes" :recipe (:package "modus-themes" :repo ("https://github.com/protesilaos/modus-themes" . "modus-themes") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (mpdired :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/mpdired.html" :description "A dired-like client for Music Player Daemon" :recipe (:package "mpdired" :repo ("https://ledu-giraud.fr/mpdired.git" . "mpdired") :files ("*" (:exclude ".git")))) (multi-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/multi-mode.html" :description "support for multiple major modes" :recipe (:package "multi-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "multi-mode") :branch "externals/multi-mode" :files ("*" (:exclude ".git")))) (multishell :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/multishell.html" :description "Organize use of multiple shell buffers, local and remote" :recipe (:package "multishell" :repo ("https://github.com/kenmanheimer/EmacsMultishell" . "multishell") :files ("*" (:exclude ".git")))) (muse :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/muse.html" :description "Authoring and publishing tool for Emacs" :recipe (:package "muse" :repo ("https://github.com/alexott/muse" . "muse") :files ("*" (:exclude ".git")))) (myers :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/myers.html" :description "Random-access singly-linked lists" :recipe (:package "myers" :repo ("git://git.sv.gnu.org/emacs/elpa" . "myers") :branch "externals/myers" :files ("*" (:exclude ".git")))) (nadvice :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nadvice.html" :description "Forward compatibility for Emacs-24.4's nadvice" :recipe (:package "nadvice" :repo ("git://git.sv.gnu.org/emacs/elpa" . "nadvice") :branch "externals/nadvice" :files ("*" (:exclude ".git")))) (nameless :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nameless.html" :description "Hide package namespace in your emacs-lisp code" :recipe (:package "nameless" :repo ("https://github.com/Malabarba/Nameless" . "nameless") :files ("*" (:exclude ".git")))) (names :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/names.html" :description "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." :recipe (:package "names" :repo ("https://github.com/Malabarba/names" . "names") :files ("*" (:exclude ".git")))) (nano-agenda :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nano-agenda.html" :description "N Λ N O agenda" :recipe (:package "nano-agenda" :repo ("https://github.com/rougier/nano-agenda" . "nano-agenda") :files ("*" (:exclude ".git")))) (nano-modeline :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nano-modeline.html" :description "N Λ N O modeline" :recipe (:package "nano-modeline" :repo ("https://github.com/rougier/nano-modeline" . "nano-modeline") :files ("*" (:exclude ".git")))) (nano-theme :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nano-theme.html" :description "N Λ N O theme" :recipe (:package "nano-theme" :repo ("https://github.com/rougier/nano-theme" . "nano-theme") :files ("*" (:exclude ".git")))) (nftables-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nftables-mode.html" :description "Major mode for editing nftables" :recipe (:package "nftables-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "nftables-mode") :branch "externals/nftables-mode" :files ("*" (:exclude ".git")))) (nhexl-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nhexl-mode.html" :description "Minor mode to edit files via hex-dump format" :recipe (:package "nhexl-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "nhexl-mode") :branch "externals/nhexl-mode" :files ("*" (:exclude ".git")))) (nlinum :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/nlinum.html" :description "Show line numbers in the margin" :recipe (:package "nlinum" :repo ("git://git.sv.gnu.org/emacs/elpa" . "nlinum") :branch "externals/nlinum" :files ("*" (:exclude ".git")))) (notes-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/notes-mode.html" :description "Indexing system for on-line note-taking" :recipe (:package "notes-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "notes-mode") :branch "externals/notes-mode" :files ("*" (:exclude ".git")))) (notmuch-indicator :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/notmuch-indicator.html" :description "Display mode line indicator with notmuch-count(1) output" :recipe (:package "notmuch-indicator" :repo ("https://github.com/protesilaos/notmuch-indicator" . "notmuch-indicator") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (ntlm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ntlm.html" :description "NTLM (NT LanManager) authentication support" :recipe (:package "ntlm" :repo ("https://github.com/emacs-mirror/emacs" . "ntlm") :branch "master" :files ("lisp/net/ntlm.el" (:exclude ".git")))) (num3-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/num3-mode.html" :description "highlight groups of digits in long numbers" :recipe (:package "num3-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "num3-mode") :branch "externals/num3-mode" :files ("*" (:exclude ".git")))) (oauth2 :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/oauth2.html" :description "OAuth 2.0 Authorization Protocol" :recipe (:package "oauth2" :repo ("git://git.sv.gnu.org/emacs/elpa" . "oauth2") :branch "externals/oauth2" :files ("*" (:exclude ".git")))) (ob-asymptote :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ob-asymptote.html" :description "Babel Functions for Asymptote" :recipe (:package "ob-asymptote" :repo ("https://github.com/hurrja/ob-asymptote" . "ob-asymptote") :files ("*" (:exclude ".git" "LICENSE")))) (ob-haxe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ob-haxe.html" :description "org-babel functions for haxe evaluation" :recipe (:package "ob-haxe" :repo ("https://github.com/ianxm/ob-haxe.el" . "ob-haxe") :files ("*" (:exclude ".git")))) (objed :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/objed.html" :description "Navigate and edit text objects." :recipe (:package "objed" :repo ("https://github.com/clemera/objed" . "objed") :files ("*" (:exclude ".git")))) (omn-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/omn-mode.html" :description "Support for OWL Manchester Notation" :recipe (:package "omn-mode" :repo ("https://github.com/phillord/omn-mode" . "omn-mode") :files ("*" (:exclude ".git")))) (on-screen :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/on-screen.html" :description "guide your eyes while scrolling" :recipe (:package "on-screen" :repo ("https://github.com/michael-heerdegen/on-screen.el.git" . "on-screen") :files ("*" (:exclude ".git")))) (openpgp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/openpgp.html" :description "Client for keys.openpgp.org" :recipe (:package "openpgp" :repo ("https://git.sr.ht/~pkal/openpgp" . "openpgp") :files ("*" (:exclude ".git")))) (orderless :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/orderless.html" :description "Completion style for matching regexps in any order" :recipe (:package "orderless" :repo ("https://github.com/oantolin/orderless" . "orderless") :files ("*" (:exclude ".git")))) (org :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org.html" :description "Outline-based notes management and organizer" :recipe (:package "org" :repo ("https://git.savannah.gnu.org/git/emacs/org-mode.git" . "org") :files ("*" (:exclude ".git" "etc/schema" "contrib" "mk" "testing" "lisp/org-install.el")))) (org-contacts :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-contacts.html" :description "Contacts management system for Org Mode" :recipe (:package "org-contacts" :repo ("https://repo.or.cz/org-contacts.git" . "org-contacts") :files ("*" (:exclude ".git")))) (org-edna :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-edna.html" :description "Extensible Dependencies 'N' Actions" :recipe (:package "org-edna" :repo ("git://git.sv.gnu.org/emacs/elpa" . "org-edna") :branch "externals/org-edna" :files ("*" (:exclude ".git")))) (org-jami-bot :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-jami-bot.html" :description "Capture GNU Jami messages as notes and todos in Org mode" :recipe (:package "org-jami-bot" :repo ("https://gitlab.com/hperrey/org-jami-bot" . "org-jami-bot") :files ("*" (:exclude ".git" "LICENSE")))) (org-modern :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-modern.html" :description "Modern looks for Org" :recipe (:package "org-modern" :repo ("https://github.com/minad/org-modern" . "org-modern") :files ("*" (:exclude ".git" "LICENSE")))) (org-notify :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-notify.html" :description "Notifications for Org-mode" :recipe (:package "org-notify" :repo ("https://github.com/p-m/org-notify" . "org-notify") :files ("*" (:exclude ".git")))) (org-real :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-real.html" :description "Keep track of real things as org-mode links" :recipe (:package "org-real" :repo ("https://gitlab.com/grinn.amy/org-real" . "org-real") :files ("*" (:exclude ".git" "LICENSE")))) (org-remark :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-remark.html" :description "Highlight & annotate text, Info, EPUB, EWW" :recipe (:package "org-remark" :repo ("https://github.com/nobiot/org-remark" . "org-remark") :files ("*" (:exclude ".git")))) (org-transclusion :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-transclusion.html" :description "Transclude text content via links" :recipe (:package "org-transclusion" :repo ("https://github.com/nobiot/org-transclusion" . "org-transclusion") :files ("*" (:exclude ".git")))) (org-translate :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/org-translate.html" :description "Org-based translation environment" :recipe (:package "org-translate" :repo ("git://git.sv.gnu.org/emacs/elpa" . "org-translate") :branch "externals/org-translate" :files ("*" (:exclude ".git")))) (orgalist :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/orgalist.html" :description "Manage Org-like lists in non-Org buffers" :recipe (:package "orgalist" :repo ("git://git.sv.gnu.org/emacs/elpa" . "orgalist") :branch "externals/orgalist" :files ("*" (:exclude ".git")))) (osc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/osc.html" :description "Open Sound Control protocol library" :recipe (:package "osc" :repo ("git://git.sv.gnu.org/emacs/elpa" . "osc") :branch "externals/osc" :files ("*" (:exclude ".git")))) (osm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/osm.html" :description "OpenStreetMap viewer" :recipe (:package "osm" :repo ("https://github.com/minad/osm" . "osm") :files ("*" (:exclude ".git" "LICENSE")))) (other-frame-window :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/other-frame-window.html" :description "Minor mode to enable global prefix keys for other frame/window buffer placement" :recipe (:package "other-frame-window" :repo ("git://git.sv.gnu.org/emacs/elpa" . "other-frame-window") :branch "externals/other-frame-window" :files ("*" (:exclude ".git")))) (pabbrev :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pabbrev.html" :description "Predictive abbreviation expansion" :recipe (:package "pabbrev" :repo ("https://github.com/phillord/pabbrev.git" . "pabbrev") :files ("*" (:exclude ".git")))) (paced :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/paced.html" :description "Predictive Abbreviation Completion and Expansion using Dictionaries" :recipe (:package "paced" :repo ("git://git.sv.gnu.org/emacs/elpa" . "paced") :branch "externals/paced" :files ("*" (:exclude ".git")))) (parsec :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/parsec.html" :description "Parser combinator library" :recipe (:package "parsec" :repo ("https://github.com/cute-jumper/parsec.el.git" . "parsec") :files ("*" (:exclude ".git")))) (parser-generator :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/parser-generator.html" :description "Parser Generator library" :recipe (:package "parser-generator" :repo ("https://github.com/cjohansson/emacs-parser-generator" . "parser-generator") :files ("*" (:exclude ".git")))) (path-iterator :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/path-iterator.html" :description "An iterator for traversing a directory path." :recipe (:package "path-iterator" :repo ("git://git.sv.gnu.org/emacs/elpa" . "path-iterator") :branch "externals/path-iterator" :files ("*" (:exclude ".git")))) (peg :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/peg.html" :description "Parsing Expression Grammars in Emacs Lisp" :recipe (:package "peg" :repo ("git://git.sv.gnu.org/emacs/elpa" . "peg") :branch "externals/peg" :files ("*" (:exclude ".git" "COPYING")))) (perl-doc :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/perl-doc.html" :description "Read Perl documentation" :recipe (:package "perl-doc" :repo ("https://github.com/HaraldJoerg/emacs-perl-doc" . "perl-doc") :files ("*" (:exclude ".git" "LICENSE")))) (persist :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/persist.html" :description "Persist Variables between Emacs Sessions" :recipe (:package "persist" :repo ("git://git.sv.gnu.org/emacs/elpa" . "persist") :branch "externals/persist" :files ("*" (:exclude ".git")))) (phpinspect :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/phpinspect.html" :description "PHP parsing and code intelligence package" :recipe (:package "phpinspect" :repo ("https://github.com/hugot/phpinspect.el" . "phpinspect") :files ("*" (:exclude ".git")))) (phps-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/phps-mode.html" :description "Major mode for PHP with code intelligence" :recipe (:package "phps-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "phps-mode") :branch "externals/phps-mode" :files ("*" (:exclude ".git")))) (pinentry :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pinentry.html" :description "GnuPG Pinentry server implementation" :recipe (:package "pinentry" :repo ("https://github.com/ueno/pinentry-el.git" . "pinentry") :files ("*" (:exclude ".git")))) (plz :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/plz.html" :description "HTTP library" :recipe (:package "plz" :repo ("https://github.com/alphapapa/plz.el.git" . "plz") :files ("*" (:exclude ".git" "LICENSE")))) (plz-event-source :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/plz-event-source.html" :description "Plz Event Source" :recipe (:package "plz-event-source" :repo ("https://github.com/r0man/plz-event-source" . "plz-event-source") :files ("*" (:exclude ".git")))) (plz-media-type :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/plz-media-type.html" :description "Plz Media Types" :recipe (:package "plz-media-type" :repo ("https://github.com/r0man/plz-media-type" . "plz-media-type") :files ("*" (:exclude ".git")))) (plz-see :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/plz-see.html" :description "Interactive HTTP client" :recipe (:package "plz-see" :repo ("https://github.com/astoff/plz-see.el" . "plz-see") :files ("*" (:exclude ".git")))) (poke :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/poke.html" :description "Emacs meets GNU poke!" :recipe (:package "poke" :repo ("https://git.savannah.gnu.org/git/poke/poke-el.git" . "poke") :files ("*" (:exclude ".git" "COPYING")))) (poke-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/poke-mode.html" :description "Major mode for editing Poke programs" :recipe (:package "poke-mode" :repo ("https://git.savannah.gnu.org/git/poke/poke-mode.git" . "poke-mode") :files ("*" (:exclude ".git")))) (poker :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/poker.html" :description "Texas hold 'em poker" :recipe (:package "poker" :repo ("git://git.sv.gnu.org/emacs/elpa" . "poker") :branch "externals/poker" :files ("*" (:exclude ".git")))) (polymode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/polymode.html" :description "n/a" :recipe (:package "polymode" :repo ("https://github.com/polymode/polymode" . "polymode") :files ("*" (:exclude ".git" "targets" "template" "tests")))) (popper :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/popper.html" :description "Summon and dismiss buffers as popups" :recipe (:package "popper" :repo ("https://github.com/karthink/popper" . "popper") :files ("*" (:exclude ".git")))) (posframe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/posframe.html" :description "Pop a posframe (just a frame) at point" :recipe (:package "posframe" :repo ("https://github.com/tumashu/posframe" . "posframe") :files ("*" (:exclude ".git")))) (pq :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pq.html" :description "libpq binding" :recipe (:package "pq" :repo ("https://github.com/anse1/emacs-libpq" . "pq") :files ("*" (:exclude ".git")))) (prefixed-core :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/prefixed-core.html" :description "n/a" :recipe (:package "prefixed-core" :repo ("git://git.sv.gnu.org/emacs/elpa" . "prefixed-core") :branch "externals/prefixed-core" :files ("*" (:exclude ".git")))) (preview-auto :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/preview-auto.html" :description "Automatic previews in AUCTeX" :recipe (:package "preview-auto" :repo ("https://github.com/ultronozm/preview-auto.el" . "preview-auto") :files ("*" (:exclude ".git")))) (preview-tailor :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/preview-tailor.html" :description "Tailor AUCTeX preview scale to monitor/text scale" :recipe (:package "preview-tailor" :repo ("https://github.com/ultronozm/preview-tailor.el" . "preview-tailor") :files ("*" (:exclude ".git")))) (project :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/project.html" :description "Operations on the current project" :recipe (:package "project" :repo ("https://github.com/emacs-mirror/emacs" . "project") :branch "master" :files ("lisp/progmodes/project.el" (:exclude ".git")))) (psgml :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/psgml.html" :description "SGML-editing mode with parsing support" :recipe (:package "psgml" :repo ("git://git.sv.gnu.org/emacs/elpa" . "psgml") :branch "externals/psgml" :files ("*" (:exclude ".git")))) (pspp-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pspp-mode.html" :description "Major mode for editing PSPP files" :recipe (:package "pspp-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "pspp-mode") :branch "externals/pspp-mode" :files ("*" (:exclude ".git")))) (pulsar :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pulsar.html" :description "Pulse highlight on demand or after select functions" :recipe (:package "pulsar" :repo ("https://github.com/protesilaos/pulsar" . "pulsar") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (pyim :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pyim.html" :description "A Chinese input method support quanpin, shuangpin, wubi, cangjie and rime." :recipe (:package "pyim" :repo ("https://github.com/tumashu/pyim.git" . "pyim") :files ("*" (:exclude ".git")))) (pyim-basedict :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/pyim-basedict.html" :description "The default pinyin dict of pyim" :recipe (:package "pyim-basedict" :repo ("https://github.com/tumashu/pyim-basedict.git" . "pyim-basedict") :files ("*" (:exclude ".git")))) (python :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/python.html" :description "Python's flying circus support for Emacs" :recipe (:package "python" :repo ("https://github.com/emacs-mirror/emacs" . "python") :branch "master" :files ("lisp/progmodes/python.el" (:exclude ".git")))) (quarter-plane :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/quarter-plane.html" :description "editing using quarter-plane screen model" :recipe (:package "quarter-plane" :repo ("git://git.sv.gnu.org/emacs/elpa" . "quarter-plane") :branch "externals/quarter-plane" :files ("*" (:exclude ".git")))) (queue :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/queue.html" :description "Queue data structure" :recipe (:package "queue" :repo ("git://git.sv.gnu.org/emacs/elpa" . "queue") :branch "externals/queue" :files ("*" (:exclude ".git")))) (rainbow-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rainbow-mode.html" :description "Colorize color names in buffers" :recipe (:package "rainbow-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rainbow-mode") :branch "externals/rainbow-mode" :files ("*" (:exclude ".git")))) (rbit :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rbit.html" :description "Red-black persistent interval trees" :recipe (:package "rbit" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rbit") :branch "externals/rbit" :files ("*" (:exclude ".git")))) (rcirc-color :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rcirc-color.html" :description "color nicks" :recipe (:package "rcirc-color" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rcirc-color") :branch "externals/rcirc-color" :files ("*" (:exclude ".git")))) (rcirc-menu :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rcirc-menu.html" :description "A menu of all your rcirc connections" :recipe (:package "rcirc-menu" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rcirc-menu") :branch "externals/rcirc-menu" :files ("*" (:exclude ".git")))) (rcirc-sqlite :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rcirc-sqlite.html" :description "rcirc logging in SQLite" :recipe (:package "rcirc-sqlite" :repo ("https://codeberg.org/mattof/rcirc-sqlite" . "rcirc-sqlite") :files ("*" (:exclude ".git" "LICENSE")))) (realgud :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud.html" :description "A modular front-end for interacting with external debuggers" :recipe (:package "realgud" :repo ("https://github.com/realgud/realgud" . "realgud") :files ("*" (:exclude ".git")))) (realgud-ipdb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-ipdb.html" :description "realgud front-end to ipdb" :recipe (:package "realgud-ipdb" :repo ("https://github.com/realgud/realgud-ipdb" . "realgud-ipdb") :files ("*" (:exclude ".git")))) (realgud-jdb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-jdb.html" :description "Realgud front-end to Java's jdb debugger\"" :recipe (:package "realgud-jdb" :repo ("https://github.com/realgud/realgud-jdb" . "realgud-jdb") :files ("*" (:exclude ".git")))) (realgud-lldb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-lldb.html" :description "Realgud front-end to lldb" :recipe (:package "realgud-lldb" :repo ("https://github.com/realgud/realgud-lldb" . "realgud-lldb") :files ("*" (:exclude ".git")))) (realgud-node-debug :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-node-debug.html" :description "Realgud front-end to older \"node debug\"" :recipe (:package "realgud-node-debug" :repo ("https://github.com/realgud/realgud-node-debug" . "realgud-node-debug") :files ("*" (:exclude ".git")))) (realgud-node-inspect :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-node-inspect.html" :description "Realgud front-end to newer \"node inspect\"" :recipe (:package "realgud-node-inspect" :repo ("https://github.com/realgud/realgud-node-inspect" . "realgud-node-inspect") :files ("*" (:exclude ".git")))) (realgud-pdbpp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-pdbpp.html" :description "n/a" :recipe (:package "realgud-pdbpp" :repo ("https://github.com/realgud/realgud-pdbpp" . "realgud-pdbpp") :files ("*" (:exclude ".git")))) (realgud-trepan-ni :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-trepan-ni.html" :description "Realgud front-end to trepan-ni" :recipe (:package "realgud-trepan-ni" :repo ("https://github.com/realgud/realgud-trepan-ni" . "realgud-trepan-ni") :files ("*" (:exclude ".git")))) (realgud-trepan-xpy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/realgud-trepan-xpy.html" :description "Realgud front-end to trepan-xpy" :recipe (:package "realgud-trepan-xpy" :repo ("https://github.com/realgud/realgud-trepan-xpy" . "realgud-trepan-xpy") :files ("*" (:exclude ".git")))) (rec-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rec-mode.html" :description "Major mode for viewing/editing rec files" :recipe (:package "rec-mode" :repo ("https://git.savannah.gnu.org/git/recutils/rec-mode.git" . "rec-mode") :files ("*" (:exclude ".git")))) (register-list :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/register-list.html" :description "Interactively list/edit registers" :recipe (:package "register-list" :repo ("git://git.sv.gnu.org/emacs/elpa" . "register-list") :branch "externals/register-list" :files ("*" (:exclude ".git")))) (relint :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/relint.html" :description "Elisp regexp mistake finder" :recipe (:package "relint" :repo ("https://github.com/mattiase/relint" . "relint") :files ("*" (:exclude ".git" "Makefile" ".github" "*-test.el*" "test")))) (repology :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/repology.html" :description "Repology API access via Elisp" :recipe (:package "repology" :repo ("git://git.sv.gnu.org/emacs/elpa" . "repology") :branch "externals/repology" :files ("*" (:exclude ".git")))) (rich-minority :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rich-minority.html" :description "Clean-up and Beautify the list of minor-modes." :recipe (:package "rich-minority" :repo ("https://github.com/Malabarba/rich-minority" . "rich-minority") :files ("*" (:exclude ".git")))) (rnc-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rnc-mode.html" :description "Emacs mode to edit Relax-NG Compact files" :recipe (:package "rnc-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rnc-mode") :branch "externals/rnc-mode" :files ("*" (:exclude ".git")))) (rt-liberation :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rt-liberation.html" :description "Emacs interface to RT" :recipe (:package "rt-liberation" :repo ("https://git.savannah.nongnu.org/git/rtliber" . "rt-liberation") :files ("*" (:exclude ".git")))) (ruby-end :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ruby-end.html" :description "Automatic insertion of end blocks for Ruby" :recipe (:package "ruby-end" :repo ("https://github.com/rejeep/ruby-end.el" . "ruby-end") :files ("*" (:exclude ".git" "Makefile" "Cask" ".travis.yml" ".gitignore" "features")))) (rudel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/rudel.html" :description "A collaborative editing framework for Emacs" :recipe (:package "rudel" :repo ("git://git.sv.gnu.org/emacs/elpa" . "rudel") :branch "externals/rudel" :files ("*" (:exclude ".git")))) (satchel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/satchel.html" :description "A bag for your files, separated by git branches" :recipe (:package "satchel" :repo ("https://git.sr.ht/~theo/satchel" . "satchel") :files ("*" (:exclude ".git" "LICENSE")))) (scanner :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/scanner.html" :description "Scan documents and images" :recipe (:package "scanner" :repo ("https://gitlab.com/rstocker/scanner.git" . "scanner") :files ("*" (:exclude ".git")))) (scroll-restore :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/scroll-restore.html" :description "restore original position after scrolling" :recipe (:package "scroll-restore" :repo ("git://git.sv.gnu.org/emacs/elpa" . "scroll-restore") :branch "externals/scroll-restore" :files ("*" (:exclude ".git")))) (sed-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sed-mode.html" :description "Major mode to edit sed scripts" :recipe (:package "sed-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sed-mode") :branch "externals/sed-mode" :files ("*" (:exclude ".git")))) (seq :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/seq.html" :description "Sequence manipulation functions" :recipe (:package "seq" :repo ("git://git.sv.gnu.org/emacs/elpa" . "seq") :branch "externals/seq" :files ("*" (:exclude ".git")))) (setup :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/setup.html" :description "Helpful Configuration Macro" :recipe (:package "setup" :repo ("https://git.sr.ht/~pkal/setup" . "setup") :files ("*" (:exclude ".git")))) (shelisp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/shelisp.html" :description "execute elisp in shell" :recipe (:package "shelisp" :repo ("git://git.sv.gnu.org/emacs/elpa" . "shelisp") :branch "externals/shelisp" :files ("*" (:exclude ".git")))) (shell-command+ :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/shell-command+.html" :description "An extended shell-command" :recipe (:package "shell-command+" :repo ("https://git.sr.ht/~pkal/shell-command-plus" . "shell-command+") :files ("*" (:exclude ".git")))) (shell-quasiquote :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/shell-quasiquote.html" :description "n/a" :recipe (:package "shell-quasiquote" :repo ("git://git.sv.gnu.org/emacs/elpa" . "shell-quasiquote") :branch "externals/shell-quasiquote" :files ("*" (:exclude ".git")))) (shen-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/shen-mode.html" :description "A major mode for editing shen source code" :recipe (:package "shen-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "shen-mode") :branch "externals/shen-mode" :files ("*" (:exclude ".git")))) (show-font :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/show-font.html" :description "Show font features in a buffer" :recipe (:package "show-font" :repo ("https://github.com/protesilaos/show-font" . "show-font") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (sisu-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sisu-mode.html" :description "Major mode for SiSU markup text" :recipe (:package "sisu-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sisu-mode") :branch "externals/sisu-mode" :files ("*" (:exclude ".git")))) (site-lisp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/site-lisp.html" :description "Manage site-lisp directories" :recipe (:package "site-lisp" :repo ("https://git.sr.ht/~pkal/site-lisp" . "site-lisp") :files ("*" (:exclude ".git")))) (sketch-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sketch-mode.html" :description "Quickly create svg sketches using keyboard and mouse" :recipe (:package "sketch-mode" :repo ("https://github.com/dalanicolai/sketch-mode" . "sketch-mode") :files ("*" (:exclude ".git")))) (slime-volleyball :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/slime-volleyball.html" :description "An SVG Slime Volleyball Game" :recipe (:package "slime-volleyball" :repo ("git://git.sv.gnu.org/emacs/elpa" . "slime-volleyball") :branch "externals/slime-volleyball" :files ("*" (:exclude ".git")))) (sm-c-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sm-c-mode.html" :description "C major mode based on SMIE" :recipe (:package "sm-c-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sm-c-mode") :branch "externals/sm-c-mode" :files ("*" (:exclude ".git")))) (smalltalk-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/smalltalk-mode.html" :description "Major mode for the GNU Smalltalk programming language" :recipe (:package "smalltalk-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "smalltalk-mode") :branch "externals/smalltalk-mode" :files ("*" (:exclude ".git")))) (smart-yank :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/smart-yank.html" :description "A different approach of yank pointer handling" :recipe (:package "smart-yank" :repo ("git://git.sv.gnu.org/emacs/elpa" . "smart-yank") :branch "externals/smart-yank" :files ("*" (:exclude ".git")))) (sml-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sml-mode.html" :description "Major mode for editing (Standard) ML" :recipe (:package "sml-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sml-mode") :branch "externals/sml-mode" :files ("*" (:exclude ".git")))) (so-long :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/so-long.html" :description "Say farewell to performance problems with minified code." :recipe (:package "so-long" :repo ("https://github.com/emacs-mirror/emacs" . "so-long") :branch "master" :files ("lisp/so-long.el" (:exclude ".git")))) (soap-client :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/soap-client.html" :description "Access SOAP web services" :recipe (:package "soap-client" :repo ("https://github.com/emacs-mirror/emacs" . "soap-client") :branch "master" :files ("lisp/net/soap-client.el" "lisp/net/soap-inspect.el" (:exclude ".git")))) (sokoban :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sokoban.html" :description "Implementation of Sokoban for Emacs." :recipe (:package "sokoban" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sokoban") :branch "externals/sokoban" :files ("*" (:exclude ".git")))) (sotlisp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sotlisp.html" :description "Write lisp at the speed of thought." :recipe (:package "sotlisp" :repo ("https://github.com/Malabarba/speed-of-thought-lisp" . "sotlisp") :files ("*" (:exclude ".git")))) (spacious-padding :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/spacious-padding.html" :description "Increase the padding/spacing of frames and windows" :recipe (:package "spacious-padding" :repo ("https://github.com/protesilaos/spacious-padding" . "spacious-padding") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (spinner :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/spinner.html" :description "Add spinners and progress-bars to the mode-line for ongoing operations" :recipe (:package "spinner" :repo ("https://github.com/Malabarba/spinner.el" . "spinner") :files ("*" (:exclude ".git")))) (sql-beeline :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sql-beeline.html" :description "Beeline support for sql.el" :recipe (:package "sql-beeline" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sql-beeline") :branch "externals/sql-beeline" :files ("*" (:exclude ".git")))) (sql-cassandra :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sql-cassandra.html" :description "Cassandra support for sql.el" :recipe (:package "sql-cassandra" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sql-cassandra") :branch "externals/sql-cassandra" :files ("*" (:exclude ".git")))) (sql-indent :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sql-indent.html" :description "Support for indenting code in SQL files." :recipe (:package "sql-indent" :repo ("https://github.com/alex-hhh/emacs-sql-indent" . "sql-indent") :files ("*" (:exclude ".git")))) (sql-smie :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sql-smie.html" :description "n/a" :recipe (:package "sql-smie" :repo ("git://git.sv.gnu.org/emacs/elpa" . "sql-smie") :branch "externals/sql-smie" :files ("*" (:exclude ".git")))) (srht :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/srht.html" :description "Sourcehut" :recipe (:package "srht" :repo ("https://git.sr.ht/~akagi/srht.el" . "srht") :files ("*" (:exclude ".git" "LICENSE")))) (ssh-deploy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ssh-deploy.html" :description "Deployment via Tramp, global or per directory." :recipe (:package "ssh-deploy" :repo ("https://github.com/cjohansson/emacs-ssh-deploy" . "ssh-deploy") :files ("*" (:exclude ".git")))) (standard-themes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/standard-themes.html" :description "Like the default theme but more consistent" :recipe (:package "standard-themes" :repo ("https://github.com/protesilaos/standard-themes" . "standard-themes") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (stream :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/stream.html" :description "Implementation of streams" :recipe (:package "stream" :repo ("git://git.sv.gnu.org/emacs/elpa" . "stream") :branch "externals/stream" :files ("*" (:exclude ".git")))) (substitute :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/substitute.html" :description "Efficiently replace targets in the buffer or context" :recipe (:package "substitute" :repo ("https://github.com/protesilaos/substitute" . "substitute") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi")))) (svg :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/svg.html" :description "SVG image creation functions" :recipe (:package "svg" :repo ("https://github.com/emacs-mirror/emacs" . "svg") :branch "master" :files ("lisp/svg.el" (:exclude ".git")))) (svg-clock :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/svg-clock.html" :description "Analog clock using Scalable Vector Graphics" :recipe (:package "svg-clock" :repo ("git://git.sv.gnu.org/emacs/elpa" . "svg-clock") :branch "externals/svg-clock" :files ("*" (:exclude ".git")))) (svg-lib :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/svg-lib.html" :description "SVG tags, progress bars & icons" :recipe (:package "svg-lib" :repo ("https://github.com/rougier/svg-lib" . "svg-lib") :files ("*" (:exclude ".git")))) (svg-tag-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/svg-tag-mode.html" :description "Replace keywords with SVG tags" :recipe (:package "svg-tag-mode" :repo ("https://github.com/rougier/svg-tag-mode" . "svg-tag-mode") :files ("*" (:exclude ".git")))) (swiper :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/swiper.html" :description "Isearch with an overview. Oh, man!" :recipe (:package "swiper" :repo ("git://git.sv.gnu.org/emacs/elpa" . "swiper") :branch "externals/swiper" :files ("*" (:exclude ".git")))) (switchy-window :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/switchy-window.html" :description "A most-recently-used window switcher" :recipe (:package "switchy-window" :repo ("https://git.sr.ht/~tsdh/switchy-window" . "switchy-window") :files ("*" (:exclude ".git")))) (sxhkdrc-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/sxhkdrc-mode.html" :description "Major mode for sxhkdrc files (Simple X Hot Key Daemon)" :recipe (:package "sxhkdrc-mode" :repo ("https://github.com/protesilaos/sxhkdrc-mode" . "sxhkdrc-mode") :files ("*" (:exclude ".git" "COPYING")))) (system-packages :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/system-packages.html" :description "functions to manage system packages" :recipe (:package "system-packages" :repo ("https://gitlab.com/jabranham/system-packages" . "system-packages") :files ("*" (:exclude ".git")))) (systemd :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/systemd.html" :description "n/a" :recipe (:package "systemd" :repo ("git://git.sv.gnu.org/emacs/elpa" . "systemd") :branch "externals/systemd" :files ("*" (:exclude ".git")))) (tNFA :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tNFA.html" :description "Tagged non-deterministic finite-state automata" :recipe (:package "tNFA" :repo ("git://git.sv.gnu.org/emacs/elpa" . "tNFA") :branch "externals/tNFA" :files ("*" (:exclude ".git")))) (tam :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tam.html" :description "Manage use of slots in a fixed size table" :recipe (:package "tam" :repo ("https://github.com/owinebar/emacs-table-allocation-manager" . "tam") :files ("*" (:exclude ".git")))) (taxy :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/taxy.html" :description "Programmable taxonomical grouping for arbitrary objects" :recipe (:package "taxy" :repo ("https://github.com/alphapapa/taxy.el.git" . "taxy") :files ("*" (:exclude ".git" "images")))) (taxy-magit-section :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/taxy-magit-section.html" :description "View Taxy structs in a Magit Section buffer" :recipe (:package "taxy-magit-section" :repo ("https://github.com/alphapapa/taxy.el.git" . "taxy-magit-section") :branch "package/taxy-magit-section" :files ("*" (:exclude ".git")))) (temp-buffer-browse :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/temp-buffer-browse.html" :description "temp buffer browse mode" :recipe (:package "temp-buffer-browse" :repo ("https://github.com/leoliu/temp-buffer-browse" . "temp-buffer-browse") :files ("*" (:exclude ".git")))) (tempel :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tempel.html" :description "Tempo templates/snippets with in-buffer field editing" :recipe (:package "tempel" :repo ("https://github.com/minad/tempel" . "tempel") :files ("*" (:exclude ".git" "LICENSE")))) (test-simple :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/test-simple.html" :description "Simple Unit Test Framework for Emacs Lisp" :recipe (:package "test-simple" :repo ("https://github.com/rocky/emacs-test-simple" . "test-simple") :files ("*" (:exclude ".git")))) (tex-item :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tex-item.html" :description "Commands for working with tex items" :recipe (:package "tex-item" :repo ("https://github.com/ultronozm/tex-item.el" . "tex-item") :files ("*" (:exclude ".git")))) (tex-parens :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tex-parens.html" :description "like lisp.el but for tex" :recipe (:package "tex-parens" :repo ("https://github.com/ultronozm/tex-parens.el" . "tex-parens") :files ("*" (:exclude ".git")))) (theme-buffet :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/theme-buffet.html" :description "Time based theme switcher" :recipe (:package "theme-buffet" :repo ("https://git.sr.ht/~bboal/theme-buffet" . "theme-buffet") :files ("*" (:exclude ".git")))) (timerfunctions :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/timerfunctions.html" :description "Enhanced versions of some timer.el functions" :recipe (:package "timerfunctions" :repo ("git://git.sv.gnu.org/emacs/elpa" . "timerfunctions") :branch "externals/timerfunctions" :files ("*" (:exclude ".git")))) (tiny :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tiny.html" :description "Quickly generate linear ranges in Emacs" :recipe (:package "tiny" :repo ("https://github.com/abo-abo/tiny" . "tiny") :files ("*" (:exclude ".git")))) (tmr :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tmr.html" :description "Set timers using a convenient notation" :recipe (:package "tmr" :repo ("https://github.com/protesilaos/tmr" . "tmr") :files ("*" (:exclude ".git" "COPYING" "doclicense.texi" "Makefile")))) (tomelr :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tomelr.html" :description "Convert S-expressions to TOML" :recipe (:package "tomelr" :repo ("https://github.com/kaushalmodi/tomelr" . "tomelr") :files ("*" (:exclude ".git" "LICENSE")))) (topspace :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/topspace.html" :description "Recenter line 1 with scrollable upper margin/padding" :recipe (:package "topspace" :repo ("https://github.com/trevorpogue/topspace" . "topspace") :files ("*" (:exclude ".git" "LICENSE")))) (track-changes :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/track-changes.html" :description "API to react to buffer modifications" :recipe (:package "track-changes" :repo ("https://github.com/emacs-mirror/emacs" . "track-changes") :branch "master" :files ("lisp/emacs-lisp/track-changes.el" (:exclude ".git")))) (tramp :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tramp.html" :description "Transparent Remote Access, Multiple Protocol" :recipe (:package "tramp" :repo ("https://git.savannah.gnu.org/git/tramp.git" . "tramp") :branch "externals/tramp" :files ("*" (:exclude ".git")))) (tramp-nspawn :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tramp-nspawn.html" :description "Tramp integration for systemd-nspawn containers" :recipe (:package "tramp-nspawn" :repo ("https://github.com/bjc/tramp-nspawn" . "tramp-nspawn") :files ("*" (:exclude ".git" "COPYING")))) (tramp-theme :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tramp-theme.html" :description "Custom theme for remote buffers" :recipe (:package "tramp-theme" :repo ("git://git.sv.gnu.org/emacs/elpa" . "tramp-theme") :branch "externals/tramp-theme" :files ("*" (:exclude ".git")))) (transcribe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/transcribe.html" :description "Package for audio transcriptions" :recipe (:package "transcribe" :repo ("git://git.sv.gnu.org/emacs/elpa" . "transcribe") :branch "externals/transcribe" :files ("*" (:exclude ".git")))) (transient :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/transient.html" :description "Transient commands" :recipe (:package "transient" :repo ("git://git.sv.gnu.org/emacs/elpa" . "transient") :branch "externals/transient" :files ("*" (:exclude ".git")))) (transient-cycles :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/transient-cycles.html" :description "Define command variants with transient cycling" :recipe (:package "transient-cycles" :repo ("git://git.sv.gnu.org/emacs/elpa" . "transient-cycles") :branch "externals/transient-cycles" :files ("*" (:exclude ".git")))) (tree-inspector :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/tree-inspector.html" :description "Inspector tool for Emacs Lisp object that uses a treeview" :recipe (:package "tree-inspector" :repo ("https://github.com/mmontone/emacs-tree-inspector" . "tree-inspector") :files ("*" (:exclude ".git")))) (trie :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/trie.html" :description "Trie data structure" :recipe (:package "trie" :repo ("git://git.sv.gnu.org/emacs/elpa" . "trie") :branch "externals/trie" :files ("*" (:exclude ".git")))) (trinary :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/trinary.html" :description "n/a" :recipe (:package "trinary" :repo ("https://github.com/emacs-elsa/trinary-logic" . "trinary") :files ("*" (:exclude ".git")))) (triples :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/triples.html" :description "A flexible triple-based database for use in apps" :recipe (:package "triples" :repo ("https://github.com/ahyatt/triples" . "triples") :files ("*" (:exclude ".git")))) (typo :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/typo.html" :description "Completion style using typo analysis" :recipe (:package "typo" :repo ("https://git.sr.ht/~pkal/typo" . "typo") :files ("*" (:exclude ".git")))) (ulisp-repl :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ulisp-repl.html" :description "uLisp REPL" :recipe (:package "ulisp-repl" :repo ("https://git.sr.ht/~fitzsim/ulisp-repl" . "ulisp-repl") :files ("*" (:exclude ".git")))) (undo-tree :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/undo-tree.html" :description "Treat undo history as a tree" :recipe (:package "undo-tree" :repo ("https://gitlab.com/tsc25/undo-tree" . "undo-tree") :files ("*" (:exclude ".git")))) (uni-confusables :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/uni-confusables.html" :description "Unicode confusables table" :recipe (:package "uni-confusables" :repo ("git://git.sv.gnu.org/emacs/elpa" . "uni-confusables") :branch "externals/uni-confusables" :files ("*" (:exclude ".git")))) (uniquify-files :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/uniquify-files.html" :description "Completion style for files, minimizing directories" :recipe (:package "uniquify-files" :repo ("git://git.sv.gnu.org/emacs/elpa" . "uniquify-files") :branch "externals/uniquify-files" :files ("*" (:exclude ".git")))) (urgrep :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/urgrep.html" :description "Universal recursive grep" :recipe (:package "urgrep" :repo ("https://github.com/jimporter/urgrep" . "urgrep") :files ("*" (:exclude ".git")))) (url-http-ntlm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/url-http-ntlm.html" :description "NTLM authentication for the url library" :recipe (:package "url-http-ntlm" :repo ("git://git.sv.gnu.org/emacs/elpa" . "url-http-ntlm") :branch "externals/url-http-ntlm" :files ("*" (:exclude ".git")))) (url-http-oauth :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/url-http-oauth.html" :description "OAuth 2.0 for URL library" :recipe (:package "url-http-oauth" :repo ("https://git.sr.ht/~fitzsim/url-http-oauth" . "url-http-oauth") :files ("*" (:exclude ".git")))) (url-scgi :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/url-scgi.html" :description "SCGI support for url.el" :recipe (:package "url-scgi" :repo ("https://github.com/skangas/url-scgi" . "url-scgi") :files ("*" (:exclude ".git")))) (use-package :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/use-package.html" :description "A configuration macro for simplifying your .emacs" :recipe (:package "use-package" :repo ("https://github.com/emacs-mirror/emacs" . "use-package") :branch "master" :files ("lisp/use-package/*" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/use-package.texi" (:exclude ".git")))) (validate :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/validate.html" :description "Schema validation for Emacs-lisp" :recipe (:package "validate" :repo ("https://github.com/Malabarba/validate.el" . "validate") :files ("*" (:exclude ".git")))) (valign :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/valign.html" :description "Visually align tables" :recipe (:package "valign" :repo ("https://github.com/casouri/valign" . "valign") :files ("*" (:exclude ".git")))) (vc-backup :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vc-backup.html" :description "VC backend for versioned backups" :recipe (:package "vc-backup" :repo ("https://git.sr.ht/~pkal/vc-backup" . "vc-backup") :files ("*" (:exclude ".git")))) (vc-got :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vc-got.html" :description "VC backend for Game of Trees VCS" :recipe (:package "vc-got" :repo ("https://git.omarpolo.com/vc-got.git" . "vc-got") :files ("*" (:exclude ".git" "targets" "LICENSE")))) (vc-hgcmd :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vc-hgcmd.html" :description "VC mercurial backend that uses hg command server" :recipe (:package "vc-hgcmd" :repo ("https://github.com/muffinmad/emacs-vc-hgcmd" . "vc-hgcmd") :files ("*" (:exclude ".git")))) (vcard :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vcard.html" :description "Package for handling vCard files" :recipe (:package "vcard" :repo ("git://git.sv.gnu.org/emacs/elpa" . "vcard") :branch "externals/vcard" :files ("*" (:exclude ".git")))) (vcl-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vcl-mode.html" :description "Major mode for Varnish Configuration Language" :recipe (:package "vcl-mode" :repo ("https://git.gnu.org.ua/vcl-mode.git" . "vcl-mode") :files ("*" (:exclude ".git")))) (vdiff :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vdiff.html" :description "A diff tool similar to vimdiff" :recipe (:package "vdiff" :repo ("https://github.com/justbur/emacs-vdiff" . "vdiff") :files ("*" (:exclude ".git")))) (verilog-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/verilog-mode.html" :description "major mode for editing verilog source in Emacs" :recipe (:package "verilog-mode" :repo ("https://github.com/emacs-mirror/emacs" . "verilog-mode") :branch "master" :files ("lisp/progmodes/verilog-mode.el" (:exclude ".git")))) (vertico :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vertico.html" :description "VERTical Interactive COmpletion" :recipe (:package "vertico" :repo ("https://github.com/minad/vertico" . "vertico") :files ("*" (:exclude ".git" "LICENSE")))) (vertico-posframe :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vertico-posframe.html" :description "Using posframe to show Vertico" :recipe (:package "vertico-posframe" :repo ("https://github.com/tumashu/vertico-posframe" . "vertico-posframe") :files ("*" (:exclude ".git")))) (vigenere :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vigenere.html" :description "Run a vigenere cipher on a block of text ;" :recipe (:package "vigenere" :repo ("git://git.sv.gnu.org/emacs/elpa" . "vigenere") :branch "externals/vigenere" :files ("*" (:exclude ".git")))) (visual-filename-abbrev :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/visual-filename-abbrev.html" :description "Visually abbreviate filenames" :recipe (:package "visual-filename-abbrev" :repo ("git://git.sv.gnu.org/emacs/elpa" . "visual-filename-abbrev") :branch "externals/visual-filename-abbrev" :files ("*" (:exclude ".git")))) (visual-fill :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/visual-fill.html" :description "Auto-refill paragraphs without modifying the buffer" :recipe (:package "visual-fill" :repo ("git://git.sv.gnu.org/emacs/elpa" . "visual-fill") :branch "externals/visual-fill" :files ("*" (:exclude ".git")))) (vlf :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vlf.html" :description "View Large Files" :recipe (:package "vlf" :repo ("https://github.com/m00natic/vlfi" . "vlf") :files ("*" (:exclude ".git")))) (vundo :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/vundo.html" :description "Visual undo tree" :recipe (:package "vundo" :repo ("https://github.com/casouri/vundo" . "vundo") :files ("*" (:exclude ".git" "test")))) (wcheck-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wcheck-mode.html" :description "General interface for text checkers" :recipe (:package "wcheck-mode" :repo ("https://github.com/tlikonen/wcheck-mode" . "wcheck-mode") :files ("*" (:exclude ".git")))) (wconf :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wconf.html" :description "Minimal window layout manager" :recipe (:package "wconf" :repo ("https://github.com/ilohmar/wconf" . "wconf") :files ("*" (:exclude ".git")))) (web-server :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/web-server.html" :description "Emacs Web Server" :recipe (:package "web-server" :repo ("https://github.com/eschulte/emacs-web-server.git" . "web-server") :files ("*" (:exclude ".git")))) (webfeeder :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/webfeeder.html" :description "Build RSS and Atom webfeeds from HTML files" :recipe (:package "webfeeder" :repo ("https://gitlab.com/ambrevar/emacs-webfeeder.git" . "webfeeder") :files ("*" (:exclude ".git")))) (websocket :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/websocket.html" :description "Emacs WebSocket client and server" :recipe (:package "websocket" :repo ("https://github.com/ahyatt/emacs-websocket.git" . "websocket") :files ("*" (:exclude ".git")))) (which-key :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/which-key.html" :description "Display available keybindings in popup" :recipe (:package "which-key" :repo ("https://github.com/emacs-mirror/emacs" . "which-key") :branch "master" :files ("lisp/which-key.el" (:exclude ".git")))) (window-commander :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/window-commander.html" :description "Simply execute commands on windows" :recipe (:package "window-commander" :repo ("https://git.sr.ht/~dsemy/window-commander" . "window-commander") :files ("*" (:exclude ".git")))) (window-tool-bar :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/window-tool-bar.html" :description "Add tool bars inside windows" :recipe (:package "window-tool-bar" :repo ("https://github.com/emacs-mirror/emacs" . "window-tool-bar") :branch "master" :files ("lisp/window-tool-bar.el" (:exclude ".git")))) (windower :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/windower.html" :description "Helper functions for window manipulation." :recipe (:package "windower" :repo ("https://gitlab.com/ambrevar/emacs-windower" . "windower") :files ("*" (:exclude ".git")))) (windresize :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/windresize.html" :description "Resize windows interactively" :recipe (:package "windresize" :repo ("git://git.sv.gnu.org/emacs/elpa" . "windresize") :branch "externals/windresize" :files ("*" (:exclude ".git")))) (wisi :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wisi.html" :description "Utilities for implementing an indentation/navigation engine using a generalized LR parser" :recipe (:package "wisi" :repo ("git://git.sv.gnu.org/emacs/elpa" . "wisi") :branch "externals/wisi" :files ("*" (:exclude ".git")))) (wisitoken-grammar-mode :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wisitoken-grammar-mode.html" :description "Major mode for editing WisiToken grammar files" :recipe (:package "wisitoken-grammar-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "wisitoken-grammar-mode") :branch "externals/wisitoken-grammar-mode" :files ("*" (:exclude ".git")))) (wpuzzle :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wpuzzle.html" :description "find as many word in a given time" :recipe (:package "wpuzzle" :repo ("git://git.sv.gnu.org/emacs/elpa" . "wpuzzle") :branch "externals/wpuzzle" :files ("*" (:exclude ".git")))) (wrap-search :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/wrap-search.html" :description "wrapped, non-incremental search" :recipe (:package "wrap-search" :repo ("https://dataswamp.org/~incal/wrap-search.git" . "wrap-search") :files ("*" (:exclude ".git")))) (xclip :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xclip.html" :description "Copy&paste GUI clipboard from text terminal" :recipe (:package "xclip" :repo ("git://git.sv.gnu.org/emacs/elpa" . "xclip") :branch "externals/xclip" :files ("*" (:exclude ".git")))) (xeft :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xeft.html" :description "Deft feat. Xapian" :recipe (:package "xeft" :repo ("https://git.sr.ht/~casouri/xeft" . "xeft") :files ("*" (:exclude ".git" "*.gif")))) (xelb :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xelb.html" :description "X protocol Emacs Lisp Binding" :recipe (:package "xelb" :repo ("https://github.com/emacs-exwm/xelb.git" . "xelb") :files ("*" (:exclude ".git")))) (xpm :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xpm.html" :description "edit XPM images" :recipe (:package "xpm" :repo ("git://git.sv.gnu.org/emacs/elpa" . "xpm") :branch "externals/xpm" :files ("*" (:exclude ".git")))) (xr :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xr.html" :description "Convert string regexp to rx notation" :recipe (:package "xr" :repo ("https://github.com/mattiase/xr" . "xr") :files ("*" (:exclude ".git" "Makefile" ".github" "*-test.el*")))) (xref :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xref.html" :description "Cross-referencing commands" :recipe (:package "xref" :repo ("https://github.com/emacs-mirror/emacs" . "xref") :branch "master" :files ("lisp/progmodes/xref.el" (:exclude ".git")))) (xref-union :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/xref-union.html" :description "Combine multiple Xref backends" :recipe (:package "xref-union" :repo ("https://git.sr.ht/~pkal/xref-union" . "xref-union") :files ("*" (:exclude ".git")))) (yasnippet :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/yasnippet.html" :description "Yet another snippet extension for Emacs" :recipe (:package "yasnippet" :repo ("https://github.com/capitaomorte/yasnippet.git" . "yasnippet") :files ("*" (:exclude ".git")))) (yasnippet-classic-snippets :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/yasnippet-classic-snippets.html" :description "\"Classic\" yasnippet snippets" :recipe (:package "yasnippet-classic-snippets" :repo ("git://git.sv.gnu.org/emacs/elpa" . "yasnippet-classic-snippets") :branch "externals/yasnippet-classic-snippets" :files ("*" (:exclude ".git")))) (zones :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/zones.html" :description "Zones of text - like multiple regions" :recipe (:package "zones" :repo ("git://git.sv.gnu.org/emacs/elpa" . "zones") :branch "externals/zones" :files ("*" (:exclude ".git")))) (ztree :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/ztree.html" :description "Text mode directory tree" :recipe (:package "ztree" :repo ("https://github.com/fourier/ztree" . "ztree") :files ("*" (:exclude ".git")))) (zuul :source "GNU-devel ELPA" :url "https://elpa.gnu.org/packages/zuul.html" :description "Interface to Zuul" :recipe (:package "zuul" :repo ("https://git.sr.ht/~niklaseklund/zuul.el" . "zuul") :files ("*" (:exclude ".git"))))) (elpaca-menu-non-gnu-elpa (htmlize :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/htmlize.html" :description "Convert buffer text and decorations to HTML." :recipe (:package "htmlize" :repo ("git://git.sv.gnu.org/emacs/nongnu" . "htmlize") :branch "elpa-release/htmlize" :files ("*" (:exclude ".git" "htmlize.el.html")))) (hyperdrive :source "NonGNU ELPA" :url "https://elpa.nongnu.org/nongnu/hyperdrive.html" :description "P2P filesystem" :recipe (:package "hyperdrive" :repo ("git://git.sv.gnu.org/emacs/nongnu" . "hyperdrive") :branch "elpa-release/hyperdrive" :files ("*" (:exclude ".git"))))) (elpaca-menu-gnu-elpa (activities :source "GNU ELPA" :url "https://elpa.gnu.org/packages/activities.html" :description "Save/restore sets of windows, tabs/frames, and their buffers" :recipe (:package "activities" :repo ("git://git.sv.gnu.org/emacs/elpa" . "activities") :branch "externals-release/activities" :files ("*" (:exclude ".git")))) (ada-mode :source "GNU ELPA" :url "https://elpa.gnu.org/packages/ada-mode.html" :description "major-mode for editing Ada sources" :recipe (:package "ada-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ada-mode") :branch "externals-release/ada-mode" :files ("*" (:exclude ".git")))) (bind-key :source "GNU ELPA" :url "https://elpa.gnu.org/packages/bind-key.html" :description "A simple way to manage personal keybindings" :recipe (:package "bind-key" :repo ("https://github.com/emacs-mirror/emacs" . "bind-key") :branch "master" :files ("lisp/bind-key.el" (:exclude ".git")))) (eglot :source "GNU ELPA" :url "https://elpa.gnu.org/packages/eglot.html" :description "The Emacs Client for LSP servers" :recipe (:package "eglot" :repo ("https://github.com/emacs-mirror/emacs" . "eglot") :branch "master" :files ("lisp/progmodes/eglot.el" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/eglot.texi" "etc/EGLOT-NEWS" (:exclude ".git")))) (eldoc :source "GNU ELPA" :url "https://elpa.gnu.org/packages/eldoc.html" :description "Show function arglist or variable docstring in echo area" :recipe (:package "eldoc" :repo ("https://github.com/emacs-mirror/emacs" . "eldoc") :branch "master" :files ("lisp/emacs-lisp/eldoc.el" (:exclude ".git")))) (ement :source "GNU ELPA" :url "https://elpa.gnu.org/packages/ement.html" :description "Matrix client" :recipe (:package "ement" :repo ("git://git.sv.gnu.org/emacs/elpa" . "ement") :branch "externals-release/ement" :files ("*" (:exclude ".git")))) (erc :source "GNU ELPA" :url "https://elpa.gnu.org/packages/erc.html" :description "An Emacs Internet Relay Chat client" :recipe (:package "erc" :repo ("https://github.com/emacs-mirror/emacs" . "erc") :branch "master" :files ("lisp/erc/*" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/erc.texi" "etc/ERC-NEWS" "COPYING" (:exclude ".git")))) (external-completion :source "GNU ELPA" :url "https://elpa.gnu.org/packages/external-completion.html" :description "Let external tools control completion style" :recipe (:package "external-completion" :repo ("https://github.com/emacs-mirror/emacs" . "external-completion") :branch "master" :files ("lisp/external-completion.el" (:exclude ".git")))) (flymake :source "GNU ELPA" :url "https://elpa.gnu.org/packages/flymake.html" :description "A universal on-the-fly syntax checker" :recipe (:package "flymake" :repo ("https://github.com/emacs-mirror/emacs" . "flymake") :branch "master" :files ("lisp/progmodes/flymake.el" (:exclude ".git")))) (gnat-compiler :source "GNU ELPA" :url "https://elpa.gnu.org/packages/gnat-compiler.html" :description "Support for running GNAT tools" :recipe (:package "gnat-compiler" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gnat-compiler") :branch "externals-release/gnat-compiler" :files ("*" (:exclude ".git")))) (gpr-mode :source "GNU ELPA" :url "https://elpa.gnu.org/packages/gpr-mode.html" :description "Major mode for editing GNAT project files" :recipe (:package "gpr-mode" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gpr-mode") :branch "externals-release/gpr-mode" :files ("*" (:exclude ".git")))) (gpr-query :source "GNU ELPA" :url "https://elpa.gnu.org/packages/gpr-query.html" :description "Minor mode for navigating sources using gpr_query" :recipe (:package "gpr-query" :repo ("git://git.sv.gnu.org/emacs/elpa" . "gpr-query") :branch "externals-release/gpr-query" :files ("*" (:exclude ".git")))) (jsonrpc :source "GNU ELPA" :url "https://elpa.gnu.org/packages/jsonrpc.html" :description "JSON-RPC library" :recipe (:package "jsonrpc" :repo ("https://github.com/emacs-mirror/emacs" . "jsonrpc") :branch "master" :files ("lisp/jsonrpc.el" (:exclude ".git")))) (let-alist :source "GNU ELPA" :url "https://elpa.gnu.org/packages/let-alist.html" :description "Easily let-bind values of an assoc-list by their names" :recipe (:package "let-alist" :repo ("https://github.com/emacs-mirror/emacs" . "let-alist") :branch "master" :files ("lisp/emacs-lisp/let-alist.el" (:exclude ".git")))) (listen :source "GNU ELPA" :url "https://elpa.gnu.org/packages/listen.html" :description "Audio/Music player" :recipe (:package "listen" :repo ("git://git.sv.gnu.org/emacs/elpa" . "listen") :branch "externals-release/listen" :files ("*" (:exclude ".git")))) (map :source "GNU ELPA" :url "https://elpa.gnu.org/packages/map.html" :description "Map manipulation functions" :recipe (:package "map" :repo ("https://github.com/emacs-mirror/emacs" . "map") :branch "master" :files ("lisp/emacs-lisp/map.el" (:exclude ".git")))) (ntlm :source "GNU ELPA" :url "https://elpa.gnu.org/packages/ntlm.html" :description "NTLM (NT LanManager) authentication support" :recipe (:package "ntlm" :repo ("https://github.com/emacs-mirror/emacs" . "ntlm") :branch "master" :files ("lisp/net/ntlm.el" (:exclude ".git")))) (org :source "GNU ELPA" :url "https://elpa.gnu.org/packages/org.html" :description "Outline-based notes management and organizer" :recipe (:package "org" :repo ("git://git.sv.gnu.org/emacs/elpa" . "org") :branch "externals-release/org" :files ("*" (:exclude ".git" "etc/schema" "contrib" "mk" "testing" "lisp/org-install.el")))) (plz :source "GNU ELPA" :url "https://elpa.gnu.org/packages/plz.html" :description "HTTP library" :recipe (:package "plz" :repo ("git://git.sv.gnu.org/emacs/elpa" . "plz") :branch "externals-release/plz" :files ("*" (:exclude ".git" "LICENSE")))) (project :source "GNU ELPA" :url "https://elpa.gnu.org/packages/project.html" :description "Operations on the current project" :recipe (:package "project" :repo ("https://github.com/emacs-mirror/emacs" . "project") :branch "master" :files ("lisp/progmodes/project.el" (:exclude ".git")))) (python :source "GNU ELPA" :url "https://elpa.gnu.org/packages/python.html" :description "Python's flying circus support for Emacs" :recipe (:package "python" :repo ("https://github.com/emacs-mirror/emacs" . "python") :branch "master" :files ("lisp/progmodes/python.el" (:exclude ".git")))) (so-long :source "GNU ELPA" :url "https://elpa.gnu.org/packages/so-long.html" :description "Say farewell to performance problems with minified code." :recipe (:package "so-long" :repo ("https://github.com/emacs-mirror/emacs" . "so-long") :branch "master" :files ("lisp/so-long.el" (:exclude ".git")))) (soap-client :source "GNU ELPA" :url "https://elpa.gnu.org/packages/soap-client.html" :description "Access SOAP web services" :recipe (:package "soap-client" :repo ("https://github.com/emacs-mirror/emacs" . "soap-client") :branch "master" :files ("lisp/net/soap-client.el" "lisp/net/soap-inspect.el" (:exclude ".git")))) (svg :source "GNU ELPA" :url "https://elpa.gnu.org/packages/svg.html" :description "SVG image creation functions" :recipe (:package "svg" :repo ("https://github.com/emacs-mirror/emacs" . "svg") :branch "master" :files ("lisp/svg.el" (:exclude ".git")))) (taxy :source "GNU ELPA" :url "https://elpa.gnu.org/packages/taxy.html" :description "Programmable taxonomical grouping for arbitrary objects" :recipe (:package "taxy" :repo ("git://git.sv.gnu.org/emacs/elpa" . "taxy") :branch "externals-release/taxy" :files ("*" (:exclude ".git" "images")))) (track-changes :source "GNU ELPA" :url "https://elpa.gnu.org/packages/track-changes.html" :description "API to react to buffer modifications" :recipe (:package "track-changes" :repo ("https://github.com/emacs-mirror/emacs" . "track-changes") :branch "master" :files ("lisp/emacs-lisp/track-changes.el" (:exclude ".git")))) (use-package :source "GNU ELPA" :url "https://elpa.gnu.org/packages/use-package.html" :description "A configuration macro for simplifying your .emacs" :recipe (:package "use-package" :repo ("https://github.com/emacs-mirror/emacs" . "use-package") :branch "master" :files ("lisp/use-package/*" "doc/emacs/doclicense.texi" "doc/emacs/docstyle.texi" "doc/misc/use-package.texi" (:exclude ".git")))) (verilog-mode :source "GNU ELPA" :url "https://elpa.gnu.org/packages/verilog-mode.html" :description "major mode for editing verilog source in Emacs" :recipe (:package "verilog-mode" :repo ("https://github.com/emacs-mirror/emacs" . "verilog-mode") :branch "master" :files ("lisp/progmodes/verilog-mode.el" (:exclude ".git")))) (which-key :source "GNU ELPA" :url "https://elpa.gnu.org/packages/which-key.html" :description "Display available keybindings in popup" :recipe (:package "which-key" :repo ("https://github.com/emacs-mirror/emacs" . "which-key") :branch "master" :files ("lisp/which-key.el" (:exclude ".git")))) (window-tool-bar :source "GNU ELPA" :url "https://elpa.gnu.org/packages/window-tool-bar.html" :description "Add tool bars inside windows" :recipe (:package "window-tool-bar" :repo ("https://github.com/emacs-mirror/emacs" . "window-tool-bar") :branch "master" :files ("lisp/window-tool-bar.el" (:exclude ".git")))) (wisi :source "GNU ELPA" :url "https://elpa.gnu.org/packages/wisi.html" :description "Utilities for implementing an indentation/navigation engine using a generalized LR parser" :recipe (:package "wisi" :repo ("git://git.sv.gnu.org/emacs/elpa" . "wisi") :branch "externals-release/wisi" :files ("*" (:exclude ".git")))) (xref :source "GNU ELPA" :url "https://elpa.gnu.org/packages/xref.html" :description "Cross-referencing commands" :recipe (:package "xref" :repo ("https://github.com/emacs-mirror/emacs" . "xref") :branch "master" :files ("lisp/progmodes/xref.el" (:exclude ".git"))))))